is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,27,import com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,242,factories.add(new JsonAdapterAnnotationTypeAdapterFactory(constructorConstructor));
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,2,* Copyright (C) 2014 Google Inc.
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,17,package com.google.gson.annotations;
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,19,import java.lang.annotation.ElementType;
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,20,import java.lang.annotation.Retention;
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,21,import java.lang.annotation.RetentionPolicy;
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,22,import java.lang.annotation.Target;
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,24,import com.google.gson.TypeAdapter;
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,27,* An annotation that indicates the Gson {@link TypeAdapter} to use with a class or a field.
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,28,* Any type adapters registered in {@link com.google.gson.GsonBuilder} supersede the adapter
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,29,* specified in this annotation.
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,31,* <p>Here is an example of how this annotation is used:</p>
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,32,* <pre>
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,33,* &#64JsonAdapter(UserJsonAdapter.class)
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,34,* public class User {
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,35,"*   public final String firstName, lastName;"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,36,"*   private User(String firstName, String lastName) {"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,37,*     this.firstName = firstName;
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,38,*     this.lastName = lastName;
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,41,* public class UserJsonAdapter extends TypeAdapter&lt;User&gt; {
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,42,"*   &#64Override public void write(JsonWriter out, User user) throws IOException {"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,43,*     // implement write: combine firstName and lastName into name
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,44,*     out.beginObject();
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,45,"*     out.name(""name"");"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,46,"*     out.value(user.firstName + "" "" + user.lastName);"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,47,*     out.endObject();
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,48,*     // implement the write method
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,50,*   &#64Override public User read(JsonReader in) throws IOException {
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,51,*     // implement read: split name into firstName and lastName
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,52,*     in.beginObject();
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,53,*     in.nextName();
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,54,"*     String[] nameParts = in.nextString().split("" "");"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,55,*     in.endObject();
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,56,"*     return new User(nameParts[0], nameParts[1]);"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,59,* </pre>
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,61,"* Since User class specified UserJsonAdapter.class in &#64JsonAdapter annotation, it"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,62,* will automatically be invoked to serialize/deserialize User instances.
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,64,"* If the UserJsonAdapter needs a constructor other than a no-args constructor, you must register"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,65,* an {@link com.google.gson.InstanceCreator} for it.
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,67,* @since 2.3
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,69,* @author Inderjeet Singh
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,70,* @author Joel Leitch
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,71,* @author Jesse Leitch
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,73,// Note that the above example is taken from JsonAdapterANnotationTest.
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,74,@Retention(RetentionPolicy.RUNTIME)
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,75,@Target(ElementType.TYPE)
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,76,public @interface JsonAdapter {
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,78,Class<? extends TypeAdapter<?>> value();
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,2,* Copyright (C) 2014 Google Inc.
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,17,package com.google.gson.internal.bind;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,19,import com.google.gson.Gson;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,20,import com.google.gson.TypeAdapter;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,21,import com.google.gson.TypeAdapterFactory;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,22,import com.google.gson.annotations.JsonAdapter;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,23,import com.google.gson.internal.ConstructorConstructor;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,24,import com.google.gson.internal.ObjectConstructor;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,25,import com.google.gson.reflect.TypeToken;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,28,"* Given a type T, looks for the annotation {@link JsonAdapter} and uses an instance of the"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,29,* specified class as the default type adapter.
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,31,* @since 2.3
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,33,public final class JsonAdapterAnnotationTypeAdapterFactory implements TypeAdapterFactory {
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,35,private final ConstructorConstructor constructorConstructor;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,37,public JsonAdapterAnnotationTypeAdapterFactory(ConstructorConstructor constructorConstructor) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,38,this.constructorConstructor = constructorConstructor;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,41,"@SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,42,"public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> targetType) {"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,43,Class<? super T> clazz = targetType.getRawType();
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,44,JsonAdapter annotation = clazz.getAnnotation(JsonAdapter.class);
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,45,if (annotation == null) return null;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,46,Class<? extends TypeAdapter<?>> adapterClass = annotation.value();
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,47,ObjectConstructor<? extends TypeAdapter<?>> constructor = constructorConstructor.get(TypeToken.get(adapterClass));
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,48,TypeAdapter adapter = constructor.construct();
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,49,return adapter;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,2,* Copyright (C) 2014 Google Inc.
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,17,package com.google.gson.functional;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,19,import java.io.IOException;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,20,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,22,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,24,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,25,import com.google.gson.GsonBuilder;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,26,import com.google.gson.JsonDeserializationContext;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,27,import com.google.gson.JsonDeserializer;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,28,import com.google.gson.JsonElement;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,29,import com.google.gson.JsonParseException;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,30,import com.google.gson.JsonPrimitive;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,31,import com.google.gson.JsonSerializationContext;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,32,import com.google.gson.JsonSerializer;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,33,import com.google.gson.TypeAdapter;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,34,import com.google.gson.annotations.JsonAdapter;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,35,import com.google.gson.stream.JsonReader;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,36,import com.google.gson.stream.JsonWriter;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,39,* Functional tests for the {@link com.google.gson.annotations.JsonAdapter} annotation.
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,41,public final class JsonAdapterAnnotationTest extends TestCase {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,43,public void testJsonAdapterInvoked() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,44,Gson gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,45,"String json = gson.toJson(new A(""bar""));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,46,"assertEquals(""\""jsonAdapter\"""", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,48,// Also invoke the JsonAdapter javadoc sample
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,49,"json = gson.toJson(new User(""Inderjeet"", ""Singh""));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,50,"assertEquals(""{\""name\"":\""Inderjeet Singh\""}"", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,51,"User user = gson.fromJson(""{'name':'Joel Leitch'}"", User.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,52,"assertEquals(""Joel"", user.firstName);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,53,"assertEquals(""Leitch"", user.lastName);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,56,public void testRegisteredAdapterOverridesJsonAdapter() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,57,TypeAdapter<A> typeAdapter = new TypeAdapter<A>() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,58,"@Override public void write(JsonWriter out, A value) throws IOException {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,59,"out.value(""registeredAdapter"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,61,@Override public A read(JsonReader in) throws IOException {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,62,return new A(in.nextString());
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,65,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,66,".registerTypeAdapter(A.class, typeAdapter)"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,67,.create();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,68,"String json = gson.toJson(new A(""abcd""));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,69,"assertEquals(""\""registeredAdapter\"""", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,73,"* The serializer overrides field adapter, but for deserializer the fieldAdapter is used."
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,75,public void testRegisteredSerializerOverridesJsonAdapter() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,76,JsonSerializer<A> serializer = new JsonSerializer<A>() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,77,"public JsonElement serialize(A src, Type typeOfSrc,"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,78,JsonSerializationContext context) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,79,"return new JsonPrimitive(""registeredSerializer"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,82,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,83,".registerTypeAdapter(A.class, serializer)"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,84,.create();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,85,"String json = gson.toJson(new A(""abcd""));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,86,"assertEquals(""\""registeredSerializer\"""", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,87,"A target = gson.fromJson(""abcd"", A.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,88,"assertEquals(""jsonAdapter"", target.value);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,92,"* The deserializer overrides Json adapter, but for serializer the jsonAdapter is used."
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,94,public void testRegisteredDeserializerOverridesJsonAdapter() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,95,JsonDeserializer<A> deserializer = new JsonDeserializer<A>() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,96,"public A deserialize(JsonElement json, Type typeOfT,"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,97,JsonDeserializationContext context) throws JsonParseException {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,98,"return new A(""registeredDeserializer"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,101,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,102,".registerTypeAdapter(A.class, deserializer)"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,103,.create();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,104,"String json = gson.toJson(new A(""abcd""));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,105,"assertEquals(""\""jsonAdapter\"""", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,106,"A target = gson.fromJson(""abcd"", A.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,107,"assertEquals(""registeredDeserializer"", target.value);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,110,public void testIncorrectTypeAdapterFails() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,111,try {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,112,"String json = new Gson().toJson(new ClassWithIncorrectJsonAdapter(""bar""));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,113,fail(json);
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,114,} catch (ClassCastException expected) {}
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,117,public void testSuperclassTypeAdapterNotInvoked() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,118,"String json = new Gson().toJson(new B(""bar""));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,119,"assertFalse(json.contains(""jsonAdapter""));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,122,@JsonAdapter(A.JsonAdapter.class)
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,123,private static class A {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,124,final String value;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,125,A(String value) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,126,this.value = value;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,128,private static final class JsonAdapter extends TypeAdapter<A> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,129,"@Override public void write(JsonWriter out, A value) throws IOException {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,130,"out.value(""jsonAdapter"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,132,@Override public A read(JsonReader in) throws IOException {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,133,in.nextString();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,134,"return new A(""jsonAdapter"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,139,private static final class B extends A {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,140,B(String value) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,141,super(value);
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,144,// Note that the type is NOT TypeAdapter<ClassWithIncorrectJsonAdapter> so this
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,145,// should cause error
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,146,@JsonAdapter(A.JsonAdapter.class)
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,147,private static final class ClassWithIncorrectJsonAdapter {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,148,"@SuppressWarnings(""unused"") final String value;"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,149,ClassWithIncorrectJsonAdapter(String value) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,150,this.value = value;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,154,// This class is used in JsonAdapter Javadoc as an example
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,155,@JsonAdapter(UserJsonAdapter.class)
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,156,private static class User {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,157,"public final String firstName, lastName;"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,158,"private User(String firstName, String lastName) {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,159,this.firstName = firstName;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,160,this.lastName = lastName;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,163,private static class UserJsonAdapter extends TypeAdapter<User> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,164,"@Override public void write(JsonWriter out, User user) throws IOException {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,165,// implement write: combine firstName and lastName into name
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,166,out.beginObject();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,167,"out.name(""name"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,168,"out.value(user.firstName + "" "" + user.lastName);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,169,out.endObject();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,170,// implement the write method
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,172,@Override public User read(JsonReader in) throws IOException {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,173,// implement read: split name into firstName and lastName
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,174,in.beginObject();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,175,in.nextName();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,176,"String[] nameParts = in.nextString().split("" "");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,177,in.endObject();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationTest.java,178,"return new User(nameParts[0], nameParts[1]);"
