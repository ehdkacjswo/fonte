is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,2,* Copyright (C) 2008 Google Inc.
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,17,package com.google.gson;
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,19,import java.lang.reflect.Field;
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,22,* Strategy for excluding anonymous and local classes.
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,24,* @author Joel Leitch
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,26,final class AnonymousAndLocalClassExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,28,public boolean shouldSkipField(Field f) {
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,29,return isAnonymousOrLocal(f.getType());
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,32,public boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,33,return isAnonymousOrLocal(clazz);
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,36,private boolean isAnonymousOrLocal(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,37,return clazz.isAnonymousClass() || clazz.isLocalClass();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,185,trategies.add(new InnerClassExclusionStrategy());
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,185,strategies.add(new AnonymousAndLocalClassExclusionStrategy());
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,56,private boolean serializeInnerClasses;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,57,private final AnonymousAndLocalClassExclusionStrategy anonAndLocalClassExclusionStrategy;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,80,serializeInnerClasses = true;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,81,anonAndLocalClassExclusionStrategy = new AnonymousAndLocalClassExclusionStrategy();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,149,* Configures Gson to include or exclude inner classes
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,151,* @param modifiers the field modifiers. You must use the modifiers specified in the
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,152,"* {@link java.lang.reflect.Modifier} class. For example,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,153,"* {@link java.lang.reflect.Modifier#TRANSIENT},"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,154,* {@link java.lang.reflect.Modifier#STATIC}.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,155,"* @return a reference to this {@code GsonBuilder} object to fulfill the ""Builder"" pattern"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,157,public GsonBuilder serializeInnerClasses(boolean value) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,158,serializeInnerClasses = value;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,159,return this;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,360,trategies.add(innerClassExclusionStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,380,strategies.add(anonAndLocalClassExclusionStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,382,if (!serializeInnerClasses) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,383,strategies.add(innerClassExclusionStrategy);
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,20,import java.lang.reflect.Modifier;
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,26,inal class InnerClassExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,27,public class InnerClassExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,29,eturn isAnonymousOrLocal(f.getType());
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,30,return isInnerClass(f.getType());
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,33,eturn isAnonymousOrLocal(clazz);
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,34,return isInnerClass(clazz);
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,36,rivate boolean isAnonymousOrLocal(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,37,eturn clazz.isAnonymousClass() || clazz.isLocalClass();
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,37,private boolean isInnerClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,38,return clazz.isMemberClass() && !isStatic(clazz);
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,41,private boolean isStatic(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,42,return (clazz.getModifiers() & Modifier.STATIC) != 0;
False,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,46,"ew JsonSerializationVisitor(factory, serializeNulls, serializers, this);"
True,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,46,"new JsonSerializationVisitor(factory, serializeNulls, serializers, this);"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,2,* Copyright (C) 2008 Google Inc.
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,17,package com.google.gson;
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,19,import java.lang.reflect.Field;
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,21,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,24,* Unit test for the {@link InnerClassExclusionStrategy} class.
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,26,* @author Joel Leitch
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,28,public class InnerClassExclusionStrategyTest extends TestCase {
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,29,public InnerClass innerClass;
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,30,public StaticNestedClass staticNestedClass;
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,32,private InnerClassExclusionStrategy strategy;
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,34,@Override
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,35,protected void setUp() throws Exception {
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,36,super.setUp();
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,37,innerClass = new InnerClass();
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,38,staticNestedClass = new StaticNestedClass();
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,39,strategy = new InnerClassExclusionStrategy();
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,42,public void testExcludeInnerClassObject() throws Exception {
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,43,Class<?> clazz = innerClass.getClass();
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,44,assertTrue(strategy.shouldSkipClass(clazz));
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,47,public void testExcludeInnerClassField() throws Exception {
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,48,"Field f = getClass().getField(""innerClass"");"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,49,assertTrue(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,52,public void testIncludeStaticNestedClassObject() throws Exception {
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,53,Class<?> clazz = staticNestedClass.getClass();
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,54,assertFalse(strategy.shouldSkipClass(clazz));
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,57,public void testIncludeStaticNestedClassField() throws Exception {
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,58,"Field f = getClass().getField(""staticNestedClass"");"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,59,assertFalse(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,62,class InnerClass {
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,65,static class StaticNestedClass {
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,2,* Copyright (C) 2008 Google Inc.
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,17,package com.google.gson.functional;
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,19,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,20,import com.google.gson.GsonBuilder;
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,22,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,25,* Performs some functional testing to ensure GSON infrastructure properly serializes/deserializes
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,26,* fields that either should or should not be included in the output based on the GSON
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,27,* configuration.
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,29,* @author Joel Leitch
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,31,public class FieldExclusionTest extends TestCase {
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,32,"private static final String VALUE = ""blah_1234"";"
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,34,public void testDefaultInnerClassExclusion() throws Exception {
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,35,Gson gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,36,TestInnerClass target = new TestInnerClass(VALUE);
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,37,String result = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,38,"assertEquals(target.toJson(), result);"
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,40,gson = new GsonBuilder().create();
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,41,target = new TestInnerClass(VALUE);
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,42,result = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,43,"assertEquals(target.toJson(), result);"
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,46,public void testInnerClassExclusion() throws Exception {
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,47,Gson gson = new GsonBuilder().serializeInnerClasses(false).create();
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,48,TestInnerClass target = new TestInnerClass(VALUE);
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,49,String result = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,50,"assertEquals("""", result);"
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,53,public void testDefaultNestedStaticClassIncluded() throws Exception {
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,54,Gson gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,55,TestInnerClass target = new TestInnerClass(VALUE);
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,56,String result = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,57,"assertEquals(target.toJson(), result);"
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,59,gson = new GsonBuilder().create();
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,60,target = new TestInnerClass(VALUE);
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,61,result = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,62,"assertEquals(target.toJson(), result);"
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,65,private class TestInnerClass extends TestStaticNestedClass {
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,66,public TestInnerClass(String value) {
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,67,super(value);
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,71,private static class TestStaticNestedClass {
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,72,private final String value;
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,73,public TestStaticNestedClass(String value) {
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,74,this.value = value;
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,77,public String toJson() {
True,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java,78,"return ""{\""value\"":\"""" + value + ""\""}"";"
