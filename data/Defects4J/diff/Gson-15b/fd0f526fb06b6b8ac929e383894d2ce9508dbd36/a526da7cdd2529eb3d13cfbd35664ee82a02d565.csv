is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,17,package com.google.gson.functional;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,19,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,20,import com.google.gson.GsonBuilder;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,21,import com.google.gson.JsonDeserializationContext;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,22,import com.google.gson.JsonDeserializer;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,23,import com.google.gson.JsonElement;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,24,import com.google.gson.JsonObject;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,25,import com.google.gson.JsonParseException;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,26,import com.google.gson.JsonSerializationContext;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,27,import com.google.gson.JsonSerializer;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,28,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,29,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,32,* Test that the hierarchy adapter works when subtypes are used.
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,34,public final class TypeHierarchyAdapterTest extends TestCase {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,36,public void testTypeHierarchy() {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,37,Manager andy = new Manager();
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,38,"andy.userid = ""andy"";"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,39,andy.startDate = 2005;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,40,andy.minions = new Employee[] {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,41,"new Employee(""inder"", 2007),"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,42,"new Employee(""joel"", 2006),"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,43,"new Employee(""jesse"", 2006),"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,46,CEO eric = new CEO();
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,47,"eric.userid = ""eric"";"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,48,eric.startDate = 2001;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,49,"eric.assistant = new Employee(""jerome"", 2006);"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,51,eric.minions = new Employee[] {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,52,"new Employee(""larry"", 1998),"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,53,"new Employee(""sergey"", 1998),"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,54,"andy,"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,57,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,58,".registerTypeHierarchyAdapter(Employee.class, new EmployeeAdapter())"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,59,.setPrettyPrinting()
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,60,.create();
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,62,Company company = new Company();
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,63,company.ceo = eric;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,65,"String json = gson.toJson(company, Company.class);"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,66,"assertEquals(""{\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,67,"""  \""ceo\"": {\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,68,"""    \""userid\"": \""eric\"",\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,69,"""    \""startDate\"": 2001,\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,70,"""    \""minions\"": [\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,71,"""      {\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,72,"""        \""userid\"": \""larry\"",\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,73,"""        \""startDate\"": 1998\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,74,"""      },\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,75,"""      {\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,76,"""        \""userid\"": \""sergey\"",\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,77,"""        \""startDate\"": 1998\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,78,"""      },\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,79,"""      {\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,80,"""        \""userid\"": \""andy\"",\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,81,"""        \""startDate\"": 2005,\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,82,"""        \""minions\"": [\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,83,"""          {\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,84,"""            \""userid\"": \""inder\"",\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,85,"""            \""startDate\"": 2007\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,86,"""          },\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,87,"""          {\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,88,"""            \""userid\"": \""joel\"",\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,89,"""            \""startDate\"": 2006\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,90,"""          },\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,91,"""          {\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,92,"""            \""userid\"": \""jesse\"",\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,93,"""            \""startDate\"": 2006\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,94,"""          }\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,95,"""        ]\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,96,"""      }\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,97,"""    ],\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,98,"""    \""assistant\"": {\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,99,"""      \""userid\"": \""jerome\"",\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,100,"""      \""startDate\"": 2006\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,101,"""    }\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,102,"""  }\n"" +"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,103,"""}"", json);"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,105,"Company copied = gson.fromJson(json, Company.class);"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,106,"assertEquals(json, gson.toJson(copied, Company.class));"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,107,"assertEquals(copied.ceo.userid, company.ceo.userid);"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,108,"assertEquals(copied.ceo.assistant.userid, company.ceo.assistant.userid);"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,109,"assertEquals(copied.ceo.minions[0].userid, company.ceo.minions[0].userid);"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,110,"assertEquals(copied.ceo.minions[1].userid, company.ceo.minions[1].userid);"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,111,"assertEquals(copied.ceo.minions[2].userid, company.ceo.minions[2].userid);"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,112,"assertEquals(((Manager) copied.ceo.minions[2]).minions[0].userid,"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,113,((Manager) company.ceo.minions[2]).minions[0].userid);
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,114,"assertEquals(((Manager) copied.ceo.minions[2]).minions[1].userid,"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,115,((Manager) company.ceo.minions[2]).minions[1].userid);
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,118,"static class EmployeeAdapter implements JsonSerializer<Employee>, JsonDeserializer<Employee> {"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,119,"public JsonElement serialize(Employee employee, Type typeOfSrc,"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,120,JsonSerializationContext context) {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,121,JsonObject result = new JsonObject();
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,122,"result.add(""userid"", context.serialize(employee.userid, String.class));"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,123,"result.add(""startDate"", context.serialize(employee.startDate, long.class));"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,124,if (employee instanceof Manager) {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,125,"result.add(""minions"", context.serialize(((Manager) employee).minions, Employee[].class));"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,126,if (employee instanceof CEO) {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,127,"result.add(""assistant"", context.serialize(((CEO) employee).assistant, Employee.class));"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,130,return result;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,133,"public Employee deserialize(JsonElement json, Type typeOfT,"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,134,JsonDeserializationContext context) throws JsonParseException {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,135,JsonObject object = json.getAsJsonObject();
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,136,Employee result = null;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,138,"// if the employee has an assistant, she must be the CEO"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,139,"JsonElement assistant = object.get(""assistant"");"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,140,if (assistant != null) {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,141,result = new CEO();
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,142,"((CEO) result).assistant = context.deserialize(assistant, Employee.class);"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,145,// only managers have minions
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,146,"JsonElement minons = object.get(""minions"");"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,147,if (minons != null) {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,148,if (result == null) {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,149,result = new Manager();
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,151,"((Manager) result).minions = context.deserialize(minons, Employee[].class);"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,154,if (result == null) {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,155,result = new Employee();
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,157,"result.userid = context.deserialize(object.get(""userid""), String.class);"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,158,"result.startDate = context.<Long>deserialize(object.get(""startDate""), long.class);"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,159,return result;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,163,static class Employee {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,164,String userid;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,165,long startDate;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,167,"Employee(String userid, long startDate) {"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,168,this.userid = userid;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,169,this.startDate = startDate;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,172,Employee() {}
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,175,static class Manager extends Employee {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,176,Employee[] minions;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,179,static class CEO extends Manager {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,180,Employee assistant;
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,183,static class Company {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,184,CEO ceo;
