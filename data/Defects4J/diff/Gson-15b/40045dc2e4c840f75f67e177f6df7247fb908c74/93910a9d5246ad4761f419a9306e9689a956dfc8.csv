is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,17,package com.google.gson.functional;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,19,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,20,import com.google.gson.JsonObject;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,22,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,24,import java.util.ArrayList;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,25,import java.util.Collection;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,26,import java.util.HashMap;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,27,import java.util.Map;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,30,* Tests for Gson serialization of a sub-class object while encountering a base-class type
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,32,* @author Inderjeet Singh
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,34,"@SuppressWarnings(""unused"")"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,35,public class MoreSpecificTypeSerializationTest extends TestCase {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,36,private Gson gson;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,38,@Override
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,39,protected void setUp() throws Exception {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,40,super.setUp();
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,41,gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,44,public void testSubclassFields() {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,45,"ClassWithBaseFields target = new ClassWithBaseFields(new Sub(1, 2));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,46,String json = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,47,"assertTrue(json.contains(""\""b\"":1""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,48,"assertTrue(json.contains(""\""s\"":2""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,51,public void disabled_testListOfSubclassFields() {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,52,Collection<Base> list = new ArrayList<Base>();
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,53,list.add(new Base(1));
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,54,"list.add(new Sub(2, 3));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,55,"ClassWithContainersOfBaseFields target = new ClassWithContainersOfBaseFields(list, null);"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,56,String json = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,57,"assertTrue(json, json.contains(""{\""b\"":1}""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,58,"assertTrue(json, json.contains(""{\""b\"":2,\""s\"":3}""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,61,public void testMapOfSubclassFields() {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,62,"Map<String, Base> map = new HashMap<String, Base>();"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,63,"map.put(""base"", new Base(1));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,64,"map.put(""sub"", new Sub(2, 3));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,65,"ClassWithContainersOfBaseFields target = new ClassWithContainersOfBaseFields(null, map);"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,66,"JsonObject json = gson.toJsonTree(target).getAsJsonObject().get(""map"").getAsJsonObject();"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,67,"assertEquals(1, json.get(""base"").getAsJsonObject().get(""b"").getAsInt());"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,68,"JsonObject sub = json.get(""sub"").getAsJsonObject();"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,69,"assertEquals(2, sub.get(""b"").getAsInt());"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,70,"assertEquals(3, sub.get(""s"").getAsInt());"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,73,private static class Base {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,74,int b;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,75,Base(int b) {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,76,this.b = b;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,80,private static class Sub extends Base {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,81,int s;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,82,"Sub(int b, int s) {"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,83,super(b);
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,84,this.s = s;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,88,private static class ClassWithBaseFields {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,89,Base b;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,90,ClassWithBaseFields(Base b) {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,91,this.b = b;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,95,private static class ClassWithContainersOfBaseFields {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,96,Collection<Base> collection;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,97,"Map<String, Base> map;"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,98,"ClassWithContainersOfBaseFields(Collection<Base> collection, Map<String, Base> map) {"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,99,this.collection = collection;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,100,this.map = map;
