is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,191,private final StringPool stringPool = new StringPool();
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,945,"eturn new String(buffer, start, pos - start - 1);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,947,"return stringPool.get(buffer, start, pos - start - 1);"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1005,"eturn new String(buffer, start, pos - start);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1007,"return stringPool.get(buffer, start, pos - start);"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1046,"tring hex = new String(buffer, pos, 4);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1048,"String hex = stringPool.get(buffer, pos, 4);"
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,17,package com.google.gson.stream;
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,20,* A pool of string instances. Unlike the {@link String#intern() VM's
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,21,"* interned strings}, this pool provides no guarantee of reference equality."
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,22,* It is intended only to save allocations. This class is not thread safe.
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,24,final class StringPool {
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,26,private final String[] pool = new String[512];
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,29,"* Returns a string equal to {@code new String(array, start, length)}."
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,31,"public String get(char[] array, int start, int length) {"
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,32,// Compute an arbitrary hash of the content
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,33,int hashCode = 0;
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,34,for (int i = start; i < start + length; i++) {
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,35,hashCode = (hashCode * 31) + array[i];
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,38,// Pick a bucket using Doug Lea's supplemental secondaryHash function (from HashMap)
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,39,hashCode ^= (hashCode >>> 20) ^ (hashCode >>> 12);
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,40,hashCode ^= (hashCode >>> 7) ^ (hashCode >>> 4);
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,41,int index = hashCode & (pool.length - 1);
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,43,String pooled = pool[index];
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,44,if (pooled == null || pooled.length() != length) {
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,45,"String result = new String(array, start, length);"
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,46,pool[index] = result;
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,47,return result;
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,50,for (int i = 0; i < length; i++) {
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,51,if (pooled.charAt(i) != array[start + i]) {
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,52,"String result = new String(array, start, length);"
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,53,pool[index] = result;
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,54,return result;
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,58,return pooled;
