is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/internal/$Cache.java,gson/src/main/java/com/google/gson/Cache.java,17,ackage com.google.gson.internal;
True,gson/src/main/java/com/google/gson/internal/$Cache.java,gson/src/main/java/com/google/gson/Cache.java,17,package com.google.gson;
False,gson/src/main/java/com/google/gson/internal/$Cache.java,gson/src/main/java/com/google/gson/Cache.java,25,"ublic interface $Cache<K, V> {"
True,gson/src/main/java/com/google/gson/internal/$Cache.java,gson/src/main/java/com/google/gson/Cache.java,25,"interface Cache<K, V> {"
False,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,19,mport com.google.gson.internal.$Cache;
False,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,20,mport com.google.gson.internal.$LruCache;
False,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,33,"inal $Cache<Class<?>, Constructor<?>> constructorCache;"
True,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,31,"final Cache<Class<?>, Constructor<?>> constructorCache;"
False,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,40,"onstructorCache = new $LruCache<Class<?>, Constructor<?>>(cacheSize);"
True,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,38,"constructorCache = new LruCache<Class<?>, Constructor<?>>(cacheSize);"
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,19,mport com.google.gson.internal.$Cache;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,20,mport com.google.gson.internal.$LruCache;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,21,mport com.google.gson.internal.$Pair;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,45,"rivate static final $Cache<$Pair<Class<?>, String>, Collection<Annotation>> ANNOTATION_CACHE ="
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,46,"ew $LruCache<$Pair<Class<?>,String>, Collection<Annotation>>(getMaxCacheSize());"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,42,"private static final Cache<Pair<Class<?>, String>, Collection<Annotation>> ANNOTATION_CACHE ="
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,43,"new LruCache<Pair<Class<?>,String>, Collection<Annotation>>(getMaxCacheSize());"
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,160,"Pair<Class<?>, String> key = new $Pair<Class<?>, String>(declaringClazz, name);"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,157,"Pair<Class<?>, String> key = new Pair<Class<?>, String>(declaringClazz, name);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,19,mport com.google.gson.internal.$Primitives;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,391,eturn $Primitives.wrap(classOfT).cast(object);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,390,return Primitives.wrap(classOfT).cast(object);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,444,eturn $Primitives.wrap(classOfT).cast(object);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,443,return Primitives.wrap(classOfT).cast(object);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,523,eturn $Primitives.wrap(classOfT).cast(object);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,522,return Primitives.wrap(classOfT).cast(object);
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,19,mport com.google.gson.internal.$Pair;
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,77,"Pair<JsonDeserializer<?>, ObjectTypePair> pair = objTypePair.getMatchingHandler(deserializers);"
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,76,"Pair<JsonDeserializer<?>, ObjectTypePair> pair = objTypePair.getMatchingHandler(deserializers);"
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,88,"Pair<JsonDeserializer<?>, ObjectTypePair> pair) {"
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,87,"Pair<JsonDeserializer<?>, ObjectTypePair> pair) {"
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,19,mport com.google.gson.internal.$Pair;
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,20,mport com.google.gson.internal.$Primitives;
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,105,oolean isPrimitive = $Primitives.isPrimitive(declaredTypeOfField);
True,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,103,boolean isPrimitive = Primitives.isPrimitive(declaredTypeOfField);
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,115,"Pair<JsonDeserializer<?>, ObjectTypePair> pair = objTypePair.getMatchingHandler(deserializers);"
True,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,113,"Pair<JsonDeserializer<?>, ObjectTypePair> pair = objTypePair.getMatchingHandler(deserializers);"
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,19,mport com.google.gson.internal.$Pair;
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,177,"Pair<JsonSerializer<?>,ObjectTypePair> pair = objTypePair.getMatchingHandler(serializers);"
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,176,"Pair<JsonSerializer<?>,ObjectTypePair> pair = objTypePair.getMatchingHandler(serializers);"
False,gson/src/main/java/com/google/gson/internal/$LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,17,ackage com.google.gson.internal;
True,gson/src/main/java/com/google/gson/internal/$LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,17,package com.google.gson;
False,gson/src/main/java/com/google/gson/internal/$LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,24, An implementation of the {@link $Cache} interface that evict objects from the cache using an
True,gson/src/main/java/com/google/gson/internal/$LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,24,* An implementation of the {@link Cache} interface that evict objects from the cache using an
False,gson/src/main/java/com/google/gson/internal/$LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,31,"ublic final class $LruCache<K, V> extends LinkedHashMap<K, V> implements $Cache<K, V> {"
True,gson/src/main/java/com/google/gson/internal/$LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,31,"final class LruCache<K, V> extends LinkedHashMap<K, V> implements Cache<K, V> {"
False,gson/src/main/java/com/google/gson/internal/$LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,36,ublic $LruCache(int maxCapacity) {
True,gson/src/main/java/com/google/gson/internal/$LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,36,public LruCache(int maxCapacity) {
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,20,mport com.google.gson.internal.$UnsafeAllocator;
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,36,rivate static final $UnsafeAllocator unsafeAllocator = $UnsafeAllocator.create();
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,35,private static final UnsafeAllocator unsafeAllocator = UnsafeAllocator.create();
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,20,mport com.google.gson.internal.$Primitives;
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,132,| $Primitives.unwrap(realClazz).isPrimitive();
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,131,|| Primitives.unwrap(realClazz).isPrimitive();
False,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,18,mport com.google.gson.internal.$Pair;
False,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,55,"HANDLER> $Pair<HANDLER, ObjectTypePair> getMatchingHandler("
True,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,54,"<HANDLER> Pair<HANDLER, ObjectTypePair> getMatchingHandler("
False,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,63,"eturn new $Pair<HANDLER, ObjectTypePair>(handler, moreSpecificType);"
True,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,62,"return new Pair<HANDLER, ObjectTypePair>(handler, moreSpecificType);"
False,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,68,"eturn handler == null ? null : new $Pair<HANDLER, ObjectTypePair>(handler, this);"
True,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,67,"return handler == null ? null : new Pair<HANDLER, ObjectTypePair>(handler, this);"
False,gson/src/main/java/com/google/gson/internal/$Pair.java,gson/src/main/java/com/google/gson/Pair.java,17,ackage com.google.gson.internal;
True,gson/src/main/java/com/google/gson/internal/$Pair.java,gson/src/main/java/com/google/gson/Pair.java,17,package com.google.gson;
False,gson/src/main/java/com/google/gson/internal/$Pair.java,gson/src/main/java/com/google/gson/Pair.java,28,"ublic final class $Pair<FIRST, SECOND> {"
True,gson/src/main/java/com/google/gson/internal/$Pair.java,gson/src/main/java/com/google/gson/Pair.java,28,"final class Pair<FIRST, SECOND> {"
False,gson/src/main/java/com/google/gson/internal/$Pair.java,gson/src/main/java/com/google/gson/Pair.java,32,"ublic $Pair(FIRST first, SECOND second) {"
True,gson/src/main/java/com/google/gson/internal/$Pair.java,gson/src/main/java/com/google/gson/Pair.java,32,"public Pair(FIRST first, SECOND second) {"
False,gson/src/main/java/com/google/gson/internal/$Pair.java,gson/src/main/java/com/google/gson/Pair.java,45,"f (!(o instanceof $Pair<?, ?>)) {"
True,gson/src/main/java/com/google/gson/internal/$Pair.java,gson/src/main/java/com/google/gson/Pair.java,45,"if (!(o instanceof Pair<?, ?>)) {"
False,gson/src/main/java/com/google/gson/internal/$Pair.java,gson/src/main/java/com/google/gson/Pair.java,49,"Pair<?, ?> that = ($Pair<?, ?>) o;"
True,gson/src/main/java/com/google/gson/internal/$Pair.java,gson/src/main/java/com/google/gson/Pair.java,49,"Pair<?, ?> that = (Pair<?, ?>) o;"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,19,mport com.google.gson.internal.$Pair;
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,43,"rivate final List<$Pair<Class<?>, T>> typeHierarchyList = new ArrayList<$Pair<Class<?>, T>>();"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,42,"private final List<Pair<Class<?>, T>> typeHierarchyList = new ArrayList<Pair<Class<?>, T>>();"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,47,"Pair<Class<?>, T> pair = new $Pair<Class<?>, T>(typeOfT, value);"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,46,"Pair<Class<?>, T> pair = new Pair<Class<?>, T>(typeOfT, value);"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,51,"ublic synchronized void registerForTypeHierarchy($Pair<Class<?>, T> pair) {"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,50,"public synchronized void registerForTypeHierarchy(Pair<Class<?>, T> pair) {"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,73,"Pair<Class<?>, T> entry = typeHierarchyList.get(i);"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,72,"Pair<Class<?>, T> entry = typeHierarchyList.get(i);"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,103,"Pair<Class<?>, T> entry = other.typeHierarchyList.get(i);"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,102,"Pair<Class<?>, T> entry = other.typeHierarchyList.get(i);"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,121,"Pair<Class<?>, T> entry = other.typeHierarchyList.get(i);"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,120,"Pair<Class<?>, T> entry = other.typeHierarchyList.get(i);"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,155,"or ($Pair<Class<?>, T> entry : typeHierarchyList) {"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,154,"for (Pair<Class<?>, T> entry : typeHierarchyList) {"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,189,"or ($Pair<Class<?>, T> entry : typeHierarchyList) {"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,188,"for (Pair<Class<?>, T> entry : typeHierarchyList) {"
False,gson/src/main/java/com/google/gson/internal/$Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,17,ackage com.google.gson.internal;
True,gson/src/main/java/com/google/gson/internal/$Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,17,package com.google.gson;
True,gson/src/main/java/com/google/gson/internal/$Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,25,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/internal/$Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,31,ublic final class $Primitives {
False,gson/src/main/java/com/google/gson/internal/$Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,32,rivate $Primitives() {}
True,gson/src/main/java/com/google/gson/internal/$Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,33,final class Primitives {
True,gson/src/main/java/com/google/gson/internal/$Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,34,private Primitives() {}
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,19,mport com.google.gson.internal.$LruCache;
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,37,"rivate static final $LruCache<Type, List<Class<?>>> classCache ="
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,38,"ew $LruCache<Type, List<Class<?>>>(500);"
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,39,"rivate static final $LruCache<Class<?>, Field[]> fieldsCache ="
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,40,"ew $LruCache<Class<?>, Field[]>(500);"
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,36,"private static final LruCache<Type, List<Class<?>>> classCache ="
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,37,"new LruCache<Type, List<Class<?>>>(500);"
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,38,"private static final LruCache<Class<?>, Field[]> fieldsCache ="
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,39,"new LruCache<Class<?>, Field[]>(500);"
False,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,17,ackage com.google.gson.internal;
True,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,17,package com.google.gson;
False,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,30,ublic abstract class $UnsafeAllocator {
True,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,30,abstract class UnsafeAllocator {
False,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,33,ublic static $UnsafeAllocator create() {
True,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,33,public static UnsafeAllocator create() {
False,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,44,eturn new $UnsafeAllocator() {
True,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,44,return new UnsafeAllocator() {
False,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,63,eturn new $UnsafeAllocator() {
True,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,63,return new UnsafeAllocator() {
False,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,86,eturn new $UnsafeAllocator() {
True,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,86,return new UnsafeAllocator() {
False,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,97,eturn new $UnsafeAllocator() {
True,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,gson/src/main/java/com/google/gson/UnsafeAllocator.java,97,return new UnsafeAllocator() {
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,19,mport com.google.gson.internal.$Cache;
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,20,mport com.google.gson.internal.$LruCache;
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,25, Unit test for the {@link $LruCache} class.
True,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,23,* Unit test for the {@link LruCache} class.
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,33,"Cache<String, Integer> cache = new $LruCache<String, Integer>(3);"
True,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,31,"Cache<String, Integer> cache = new LruCache<String, Integer>(3);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,47,"Cache<String, Integer> cache = new $LruCache<String, Integer>(3);"
True,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,45,"Cache<String, Integer> cache = new LruCache<String, Integer>(3);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,59,"Cache<String, Integer> cache = new $LruCache<String, Integer>(5);"
True,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,57,"Cache<String, Integer> cache = new LruCache<String, Integer>(5);"
False,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,19,mport com.google.gson.internal.$Primitives;
False,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,54,f ($Primitives.isWrapperType($Primitives.wrap(clazz))) {
True,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,53,if (Primitives.isWrapperType(Primitives.wrap(clazz))) {
False,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,130,oolean addQuotes = !clazz.isArray() && !$Primitives.unwrap(clazz).isPrimitive();
True,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,129,boolean addQuotes = !clazz.isArray() && !Primitives.unwrap(clazz).isPrimitive();
False,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,159,f ($Primitives.isPrimitive(genericClass)) {
True,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,158,if (Primitives.isPrimitive(genericClass)) {
False,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,19,mport com.google.gson.internal.$Primitives;
False,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,34,lass<?> aClass = $Primitives.wrap(to);
False,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,35,f ($Primitives.isWrapperType(aClass)) {
True,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,33,Class<?> aClass = Primitives.wrap(to);
True,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,34,if (Primitives.isWrapperType(aClass)) {
