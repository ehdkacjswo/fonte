is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,321,* {@inheritDoc}
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,323,@Override
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,324,public boolean isOptionalParameter(Node parameter) {
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,325,return false;
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,329,* {@inheritDoc}
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,331,@Override
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,332,public boolean isVarArgsParameter(Node parameter) {
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,333,return false;
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,337,* {@inheritDoc}
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,339,@Override
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,340,public boolean isPrivate(String name) {
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,341,return false;
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,42,"odeGenerator(CodeConsumer consumer, Charset outputCharset) {"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,42,/** Whether to perform basic checks for obviously incorrect AST structure. */
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,43,// NOTE: This exists to support a few extern legacy parsers that don't
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,44,// properly normalize the AST (JsMinimizer).
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,45,private final boolean validation;
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,47,CodeGenerator(
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,48,"CodeConsumer consumer, Charset outputCharset, boolean validation) {"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,49,this.validation = validation;
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,62,"CodeGenerator(CodeConsumer consumer, Charset outputCharset) {"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,63,"this(consumer, outputCharset, true);"
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,56,"his(consumer, null);"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,67,"this(consumer, null, false);"
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,484,/ TODO(johnlenz): Enable this exception once the external users of
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,485,/     CodePrinter have been corrected.
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,486,"/ throw new Error(""EXPR_VOID should not be used in this codebase."");"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,496,if (type == Token.EXPR_VOID && validation) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,497,"throw new Error(""Unexpected EXPR_VOID. Should be EXPR_RESULT."");"
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,613,/ TODO(johnlenz) : Enable this when the JsMinifier is corrected.
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,614,"/ throw new Error(""Missing BLOCK child."");"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,624,if (validation) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,625,"throw new Error(""Missing BLOCK child."");"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,488,private boolean validation = true;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,548,* Set the charset to use when determining what characters need to be
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,549,* escaped in the output.
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,557,"* Whether the input AST guaranteed to be properly formed, fail if it isn't."
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,559,Builder setValidation(boolean validation) {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,560,this.validation = validation;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,561,return this;
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,567,"ourceMap, outputCharset);"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,580,"sourceMap, outputCharset, validation);"
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,583,harset outputCharset) {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,596,"Charset outputCharset,"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,597,boolean validation) {
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,593," new CodeGenerator(cp, outputCharset);"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,607,": new CodeGenerator(cp, outputCharset, validation);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1331,/ TODO(johnlenz): Move the Node type normalizer into the general
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1332,/ Normalization pass once we force everybody to turn it on. It's
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1333,/ confusing to have a mandatory normalization pass and an optional
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1334,/ one.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1331,// TODO(johnlenz): Merge the NodeTypeNormalizer into the AST creator
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1332,// it doesn't need to be done separately.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,341,/** Reserve property names on the global this object. */
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,342,public boolean reserveRawExports;
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,112,options.setCodingConvention(new ClosureCodingConvention());
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,446,"// Reserve global names added to the ""windows"" object."
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,447,if (options.reserveRawExports) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,448,passes.add(gatherRawExports);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,679,/** Raw exports processing pass. */
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,680,final PassFactory gatherRawExports =
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,681,"new PassFactory(""gatherRawExports"", false) {"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,682,@Override
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,683,protected CompilerPass createInternal(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,684,final GatherRawExports pass = new GatherRawExports(
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,685,compiler);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,687,return new CompilerPass() {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,688,@Override
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,689,"public void process(Node externs, Node root) {"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,690,"pass.process(externs, root);"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,691,if (exportedNames == null) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,692,exportedNames = Sets.newHashSet();
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,694,exportedNames.addAll(pass.getExportedVariableNames());
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,2,* Copyright 2009 Google Inc.
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,20,import com.google.common.collect.Sets;
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,21,import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,22,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,23,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,25,import java.util.Set;
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,28,"* External references of the form: ""window['xx']"" indicate names that must"
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,29,* be reserved when variable renaming to avoid conflicts.
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,33,class GatherRawExports extends AbstractPostOrderCallback
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,34,implements CompilerPass {
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,36,private final AbstractCompiler compiler;
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,38,"private static final String GLOBAL_THIS_NAME = ""window"";"
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,40,private final Set<String> exportedVariables = Sets.newHashSet();
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,42,GatherRawExports(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,43,this.compiler = compiler;
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,46,@Override
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,47,"public void process(Node externs, Node root) {"
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,48,Preconditions.checkState(compiler.isNormalized());
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,49,"NodeTraversal.traverse(compiler, root, this);"
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,52,@Override
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,53,"public void visit(NodeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,54,Node sibling = n.getNext();
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,55,if (sibling != null
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,56,&& sibling.getType() == Token.STRING
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,57,&& NodeUtil.isGet(parent)) {
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,58,// TODO(johnlenz): Should we warn if we see a property name that
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,59,// hasn't been exported?
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,60,"if (isGlobalThisObject(t, n)) {"
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,61,exportedVariables.add(sibling.getString());
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,66,"private boolean isGlobalThisObject(NodeTraversal t, Node n) {"
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,67,if (n.getType() == Token.THIS) {
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,68,return t.inGlobalScope();
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,69,} else if (n.getType() == Token.NAME && !NodeUtil.isLabelName(n)) {
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,70,String varName = n.getString();
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,71,if (varName.equals(GLOBAL_THIS_NAME)) {
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,72,return true;
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,75,return false;
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,78,public Set<String> getExportedVariableNames() {
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,79,return exportedVariables;
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,97,f (root == null) {
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,97,if (root == null || compiler.hasHaltingErrors()) {
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,93,"odeTraversal.traverse(compiler, root, renamer);"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,93,"NodeTraversal t = new NodeTraversal(compiler, renamer);"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,94,"t.traverseRoots(externs, root);"
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,278, Limit the number of special cases where LABELs need to be handled. Only
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,279, BLOCK and loops are allowed to be labeled.  Loop labels must remain in
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,279,* Limit the number of special cases where LABELs need to be handled. Only
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,280,* BLOCK and loops are allowed to be labeled.  Loop labels must remain in
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,35,"uper(consumer, outputCharset);"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,35,"super(consumer, outputCharset, true);"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,1432,if (token == JsDocToken.RC) {
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,1433,// EMPTY represents the UNKNOWN type in the Type AST.
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,1434,"return wrapNode(Token.ELLIPSIS, new Node(Token.EMPTY));"
False,src/com/google/javascript/rhino/jstype/AllType.java,src/com/google/javascript/rhino/jstype/AllType.java,74,/ TODO(user): Change this to false once UnionType's implementation is
False,src/com/google/javascript/rhino/jstype/AllType.java,src/com/google/javascript/rhino/jstype/AllType.java,75,/ correct instead of generous.
True,src/com/google/javascript/rhino/jstype/AllType.java,src/com/google/javascript/rhino/jstype/AllType.java,74,// Be lenient.
True,src/com/google/javascript/rhino/jstype/AllType.java,src/com/google/javascript/rhino/jstype/AllType.java,75,return true;
True,src/com/google/javascript/rhino/jstype/AllType.java,src/com/google/javascript/rhino/jstype/AllType.java,78,@Override
True,src/com/google/javascript/rhino/jstype/AllType.java,src/com/google/javascript/rhino/jstype/AllType.java,79,public boolean matchesObjectContext() {
True,src/com/google/javascript/rhino/jstype/AllType.java,src/com/google/javascript/rhino/jstype/AllType.java,80,// Be lenient.
False,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,40,ssertTrue(conv.isVarArgsParameter(args.getLastChild()));
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,40,assertFalse(conv.isVarArgsParameter(args.getLastChild()));
False,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,42,ssertTrue(conv.isVarArgsParameter(optArgs.getLastChild()));
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,42,assertFalse(conv.isVarArgsParameter(optArgs.getLastChild()));
False,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,44,ssertTrue(conv.isOptionalParameter(args.getFirstChild()));
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,44,assertFalse(conv.isOptionalParameter(args.getFirstChild()));
False,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,46,ssertTrue(conv.isOptionalParameter(optArgs.getFirstChild()));
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,46,assertFalse(conv.isOptionalParameter(optArgs.getFirstChild()));
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,120,// Integration tests
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,122,public void testIssue70() {
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,123,"test(""function foo({}) {}"", RhinoErrorReporter.PARSE_ERROR);"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,617,ode mainRootClone = mainRoot.cloneTree();
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,618,// Save the tree for later comparison.
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,619,Node rootClone = root.cloneTree();
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,620,Node externsRootClone = rootClone.getFirstChild();
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,621,Node mainRootClone = rootClone.getLastChild();
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,722,"ormalize.process(externsRoot, mainRootClone);"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,726,"normalize.process(externsRootClone, mainRootClone);"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,2,* Copyright 2009 Google Inc.
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,17,package com.google.javascript.jscomp;
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,19,import com.google.javascript.rhino.Node;
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,20,import com.google.javascript.rhino.Token;
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,22,import junit.framework.TestCase;
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,25,* Test class for {@link DefaultCodingConvention}.
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,27,public class DefaultCodingConventionTest extends TestCase {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,28,private DefaultCodingConvention conv = new DefaultCodingConvention();
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,30,public void testVarAndOptionalParams() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,31,"Node args = new Node(Token.LP,"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,32,"Node.newString(Token.NAME, ""a""),"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,33,"Node.newString(Token.NAME, ""b""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,34,"Node optArgs = new Node(Token.LP,"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,35,"Node.newString(Token.NAME, ""opt_a""),"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,36,"Node.newString(Token.NAME, ""opt_b""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,38,assertFalse(conv.isVarArgsParameter(args.getFirstChild()));
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,39,assertTrue(conv.isVarArgsParameter(args.getLastChild()));
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,40,assertFalse(conv.isVarArgsParameter(optArgs.getFirstChild()));
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,41,assertTrue(conv.isVarArgsParameter(optArgs.getLastChild()));
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,43,assertTrue(conv.isOptionalParameter(args.getFirstChild()));
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,44,assertFalse(conv.isOptionalParameter(args.getLastChild()));
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,45,assertTrue(conv.isOptionalParameter(optArgs.getFirstChild()));
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,46,assertFalse(conv.isOptionalParameter(optArgs.getLastChild()));
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,49,public void testInlineName() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,50,"assertFalse(conv.isConstant(""a""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,51,"assertFalse(conv.isConstant(""XYZ123_""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,52,"assertFalse(conv.isConstant(""ABC""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,53,"assertFalse(conv.isConstant(""ABCdef""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,54,"assertFalse(conv.isConstant(""aBC""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,55,"assertFalse(conv.isConstant(""A""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,56,"assertFalse(conv.isConstant(""_XYZ123""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,57,"assertFalse(conv.isConstant(""a$b$XYZ123_""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,58,"assertFalse(conv.isConstant(""a$b$ABC_DEF""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,59,"assertFalse(conv.isConstant(""a$b$A""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,60,"assertFalse(conv.isConstant(""a$b$a""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,61,"assertFalse(conv.isConstant(""a$b$ABCdef""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,62,"assertFalse(conv.isConstant(""a$b$aBC""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,63,"assertFalse(conv.isConstant(""a$b$""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,64,"assertFalse(conv.isConstant(""$""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,67,public void testExportedName() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,68,"assertFalse(conv.isExported(""_a""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,69,"assertFalse(conv.isExported(""_a_""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,70,"assertFalse(conv.isExported(""a""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,73,public void testPrivateName() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,74,"assertFalse(conv.isPrivate(""a_""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,75,"assertFalse(conv.isPrivate(""a""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,76,"assertFalse(conv.isPrivate(""_a_""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,79,public void testEnumKey() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,80,"assertTrue(conv.isValidEnumKey(""A""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,81,"assertTrue(conv.isValidEnumKey(""123""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,82,"assertTrue(conv.isValidEnumKey(""FOO_BAR""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,84,"assertTrue(conv.isValidEnumKey(""a""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,85,"assertTrue(conv.isValidEnumKey(""someKeyInCamelCase""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,86,"assertTrue(conv.isValidEnumKey(""_FOO_BAR""));"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,89,public void testInheritanceDetection1() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,90,"assertNotClassDefining(""goog.foo(A, B);"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,93,public void testInheritanceDetection2() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,94,"assertNotClassDefining(""goog.inherits(A, B);"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,97,public void testInheritanceDetection3() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,98,"assertNotClassDefining(""A.inherits(B);"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,101,public void testInheritanceDetection4() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,102,"assertNotClassDefining(""goog.inherits(goog.A, goog.B);"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,105,public void testInheritanceDetection5() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,106,"assertNotClassDefining(""goog.A.inherits(goog.B);"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,109,public void testInheritanceDetection6() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,110,"assertNotClassDefining(""A.inherits(this.B);"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,113,public void testInheritanceDetection7() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,114,"assertNotClassDefining(""this.A.inherits(B);"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,117,public void testInheritanceDetection8() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,118,"assertNotClassDefining(""goog.inherits(A, B, C);"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,121,public void testInheritanceDetection9() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,122,"assertNotClassDefining(""A.mixin(B.prototype);"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,125,public void testInheritanceDetection10() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,126,"assertNotClassDefining(""goog.mixin(A.prototype, B.prototype);"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,129,public void testInheritanceDetectionPostCollapseProperties() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,130,"assertNotClassDefining(""goog$inherits(A, B);"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,131,"assertNotClassDefining(""goog$inherits(A);"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,134,private void assertNotClassDefining(String code) {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,135,Node n = parseTestCode(code);
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,136,assertNull(conv.getClassesDefinedByCall(n.getFirstChild()));
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,139,private Node parseTestCode(String code) {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,140,Compiler compiler = new Compiler();
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,141,return compiler.parseTestCode(code).getFirstChild();
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,2,* Copyright 2009 Google Inc.
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,17,package com.google.javascript.jscomp;
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,19,import com.google.common.collect.Sets;
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,21,import java.util.Set;
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,24,* Tests for {@link GatherRawExports}.
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,28,public class GatherRawExportsTest extends CompilerTestCase {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,30,"private static final String EXTERNS = ""var window;"";"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,31,private GatherRawExports last;
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,33,public GatherRawExportsTest() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,34,super(EXTERNS);
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,35,super.enableNormalize();
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,38,@Override
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,39,protected CompilerPass getProcessor(Compiler compiler) {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,40,last = new GatherRawExports(compiler);
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,41,return last;
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,44,public void testExportsFound1() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,45,"assertExported(""var a"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,48,public void testExportsFound2() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,49,"assertExported(""window['a']"", ""a"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,52,public void testExportsFound3() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,53,"assertExported(""window.a"", ""a"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,56,public void testExportsFound4() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,57,"assertExported(""this['a']"", ""a"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,60,public void testExportsFound5() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,61,"assertExported(""this.a"", ""a"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,64,public void testExportsFound6() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,65,"assertExported(""function f() { this['a'] }"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,68,public void testExportsFound7() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,69,"assertExported(""function f() { this.a }"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,72,public void testExportsFound8() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,73,"assertExported(""window['foo']"", ""foo"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,76,public void testExportsFound9() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,77,"assertExported(""window['a'] = 1;"", ""a"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,80,public void testExportsFound10() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,81,"assertExported(""window['a']['b']['c'] = 1;"", ""a"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,84,public void testExportsFound11() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,85,"assertExported(""if (window['a'] = 1) alert(x);"", ""a"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,88,public void testExportsFound12() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,89,"assertExported(""function foo() { window['a'] = 1; }"", ""a"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,92,public void testExportsFound13() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,93,"assertExported(""function foo() {var window; window['a'] = 1; }"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,96,public void testExportsFound14() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,97,"assertExported(""var a={window:{}}; a.window['b']"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,100,public void testExportsFound15() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,101,"assertExported(""window.window['b']"", ""window"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,104,public void testExportsFound16() {
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,105,"// It would be nice to handle this case, hopefully inlining will take care"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,106,// of it for us.
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,107,"assertExported(""var a = window; a['b']"");"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,110,"private void assertExported(String js, String ... names) {"
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,111,Set<String> setNames = Sets.newHashSet(names);
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,112,testSame(js);
True,test/com/google/javascript/jscomp/GatherRawExportsTest.java,test/com/google/javascript/jscomp/GatherRawExportsTest.java,113,assertTrue(last.getExportedVariableNames().equals(setNames));
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,27,"private static final String EXTERNS = ""var window;"";"
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,29,public NormalizeTest() {
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,30,super(EXTERNS);
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,180,// Verify global redefinition of extern definition is left alone.
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,181,"testSame(""var window"");"
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,183,// Verify local masking extern made unique.
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,184,"test(""function f() {var window}"","
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,185,"""function f() {var window$$1}"");"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,775,public void testParseParam19() throws Exception {
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,776,"JSDocInfo info = parse(""@param {...} [index] */"");"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,777,"assertEquals(1, info.getParameterCount());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,778,assertTypeEquals(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,779,"registry.createOptionalType(UNKNOWN_TYPE),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,780,"info.getParameterType(""index""));"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,781,"assertTrue(info.getParameterType(""index"").isVarArgs());"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,991,ssertFalse(ALL_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,991,assertTrue(ALL_TYPE.matchesObjectContext());
