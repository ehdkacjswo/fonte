is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1264,* @author tylerg@google.com (Tyler Goodwin)
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,21,import com.google.javascript.jscomp.AstValidator;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,100,new AstValidator().validateScript(root);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,140,Preconditions.checkState(rootElement.getType() == TagType.Program);
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,141,eturn root;
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,142,return root.removeFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,635,block.setIsSyntheticBlock(true);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,759,block.setIsSyntheticBlock(true);
False,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,40,reconditions.checkArgument(root.getType() == Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,40,Preconditions.checkArgument(
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,41,root.getType() == Token.BLOCK || root.getType() == Token.SCRIPT);
False,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,43,ode child = root.getFirstChild();
False,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,44,hile (child != null) {
False,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,45,"rocessNode(child, rootElement);"
False,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,46,hild = child.getNext();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,44,if (root.getType() == Token.SCRIPT) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,45,"processNode(root, rootElement);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,46,return rootElement.getChild(0);
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,47,} else {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,48,Node child = root.getFirstChild();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,49,while (child != null) {
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,50,"processNode(child, rootElement);"
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,51,child = child.getNext();
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,53,// TODO(johnlenz): Add support for multiple scripts.
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,54,return rootElement.getChild(0);
False,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,49,eturn rootElement.getChild(0);
True,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,19,import com.google.common.base.Preconditions;
True,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,23,import com.google.javascript.rhino.Token;
False,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,51,ode astRoot = parseExpectedJs(js);
True,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,52,Node root = parseExpectedJs(js);
True,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,53,Node astRoot = root.getFirstChild();
True,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,54,Preconditions.checkState(astRoot.getType() == Token.SCRIPT);
False,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,73,ode ast = parseExpectedJs(js);
True,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,77,Node root = parseExpectedJs(js);
True,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,78,Node ast = root.getFirstChild();
True,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,79,Preconditions.checkState(ast.getType() == Token.SCRIPT);
False,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,98,ode ast = parseExpectedJs(js);
True,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,105,Node root = parseExpectedJs(js);
True,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,106,Node ast = root.getFirstChild();
True,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLConversionTest.java,107,Preconditions.checkState(ast.getType() == Token.SCRIPT);
