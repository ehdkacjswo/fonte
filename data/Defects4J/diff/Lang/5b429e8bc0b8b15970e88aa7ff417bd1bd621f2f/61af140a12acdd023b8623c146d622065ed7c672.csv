is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,72,rivate static final String DEFAULT_IS_ASSIGNABLE_EX_MESSAGE =
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,73,"The validated class can not be converted to the %s class"";"
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,74,"rivate static final String DEFAULT_IS_INSTANCE_OF_EX_MESSAGE = ""The validated object is not an instance of %s"";"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,72,"private static final String DEFAULT_IS_ASSIGNABLE_EX_MESSAGE = ""Cannot assign a %s to a %s"";"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,73,"private static final String DEFAULT_IS_INSTANCE_OF_EX_MESSAGE = ""Expected type: %s, actual: %s"";"
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,978, <p>Validate that the argument is an instance of the specified class; otherwise
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,979, throwing an exception. This method is useful when validating according to an arbitrary
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,980, class</p>
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,977,"* Validates that the argument is an instance of the specified class, if not throws an exception."
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,979,* <p>This method is useful when validating according to an arbitrary class</p>
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,984, <p>The message of the exception is &quot;The validated object is not an instance of&quot;
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,985, followed by the name of the class</p>
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,983,"* <p>The message of the exception is &quot;Expected type: {type}, actual: {obj_type}&quot;</p>"
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,996,"hrow new IllegalArgumentException(String.format(DEFAULT_IS_INSTANCE_OF_EX_MESSAGE, type.getName()));"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,994,"throw new IllegalArgumentException(String.format(DEFAULT_IS_INSTANCE_OF_EX_MESSAGE, type.getName(),"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,995,"obj == null ? ""null"" : obj.getClass().getName()));"
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1027, <p>Validate that the argument can be converted to the specified class; otherwise
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1028, throwing an exception with the specified message. This method is useful when
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1029, validating if there will be no casting errors.</p>
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1026,"* Validates that the argument can be converted to the specified class, if not, throws an exception."
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1028,* <p>This method is useful when validating that there will be no casting errors.</p>
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1033, <p>The message of the exception is &quot;The validated object can not be converted to the&quot;
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1034, followed by the name of the class and &quot;class&quot;</p>
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1032,* <p>The message format of the exception is &quot;Cannot assign {type} to {superType}&quot;</p>
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1038, @throws IllegalArgumentException if argument can not be converted to the specified class
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1036,* @throws IllegalArgumentException if type argument is not assignable to the specified superType
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1045,"hrow new IllegalArgumentException(String.format(DEFAULT_IS_ASSIGNABLE_EX_MESSAGE, superType.getName()));"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1043,"throw new IllegalArgumentException(String.format(DEFAULT_IS_ASSIGNABLE_EX_MESSAGE, type == null ? ""null"" : type.getName(),"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1044,superType.getName()));
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1050, <p>Validate that the argument can be converted to the specified class; otherwise
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1051, throwing an exception. This method is useful when validating if there will be no
False,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1052, casting errors.</p>
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1049,"* Validates that the argument can be converted to the specified class, if not throws an exception."
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1051,* <p>This method is useful when validating if there will be no casting errors.</p>
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,854,public void testIsInstanceOfExceptionMessage() {
False,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,856,"ssertEquals(""The validated object is not an instance of java.util.List"", e.getMessage());"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,859,"assertEquals(""Expected type: java.util.List, actual: java.lang.String"", e.getMessage());"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,879,public void testIsAssignableExceptionMessage() {
False,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,878,"ssertEquals(""The validated class can not be converted to the java.util.List class"", e.getMessage());"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,884,"assertEquals(""Cannot assign a java.lang.String to a java.util.List"", e.getMessage());"
