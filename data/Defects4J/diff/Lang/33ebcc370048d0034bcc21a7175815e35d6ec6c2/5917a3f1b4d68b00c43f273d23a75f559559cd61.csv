is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,17,package org.apache.commons.lang.text;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,19,import java.text.DateFormat;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,20,import java.text.FieldPosition;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,21,import java.text.Format;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,22,import java.text.MessageFormat;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,23,import java.text.NumberFormat;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,24,import java.text.ParsePosition;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,25,import java.util.Calendar;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,26,import java.util.HashMap;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,27,import java.util.Locale;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,28,import java.util.Map;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,30,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,33,* Test case for {@link ExtendedMessageFormat}.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,35,* @since 2.4
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,36,* @version $Id$
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,38,public class ExtendedMessageFormatTest extends TestCase {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,40,"private Locale[] testLocales = new Locale[] {null, //default locale"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,41,"Locale.US,"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,42,"Locale.UK,"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,43,"Locale.FRANCE,"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,44,Locale.GERMANY};
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,46,private Map registry = new HashMap();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,49,* Create a new test case.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,51,* @param name The name of the test
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,53,public ExtendedMessageFormatTest(String name) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,54,super(name);
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,57,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,58,super.setUp();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,59,"registry.put(""lower"", new LowerCaseFormatFactory());"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,60,"registry.put(""upper"", new UpperCaseFormatFactory());"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,63,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,64,super.tearDown();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,68,* Test extended formats.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,70,public void testExtendedFormats() {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,71,"String pattern = ""Lower: {0,lower} Upper: {1,upper}"";"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,72,"ExtendedMessageFormat emf = new ExtendedMessageFormat(pattern, registry);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,73,"assertEquals(""TOPATTERN"", pattern, emf.toPattern());"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,74,"assertEquals(""Lower: foo Upper: BAR"", emf.format(new Object[] {""foo"", ""bar""}));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,75,"assertEquals(""Lower: foo Upper: BAR"", emf.format(new Object[] {""Foo"", ""Bar""}));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,76,"assertEquals(""Lower: foo Upper: BAR"", emf.format(new Object[] {""FOO"", ""BAR""}));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,77,"assertEquals(""Lower: foo Upper: BAR"", emf.format(new Object[] {""FOO"", ""bar""}));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,78,"assertEquals(""Lower: foo Upper: BAR"", emf.format(new Object[] {""foo"", ""BAR""}));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,82,* Test extended and built in formats.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,84,public void testExtendedAndBuiltInFormats() {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,85,Calendar cal = Calendar.getInstance();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,86,"cal.set(2007, Calendar.JANUARY, 23, 18, 33, 05);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,87,"Object[] args = new Object[] {""John Doe"", cal.getTime(), new Double(""12345.67"")};"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,88,"String pattern = ""Name: {0,upper} DOB: {1,date,short} Salary: {2,number,currency}"";"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,90,for (int i = 0; i < testLocales.length; i++) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,91,DateFormat df = null;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,92,NumberFormat nf = null;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,93,ExtendedMessageFormat emf = null;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,94,if (testLocales[i] == null) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,95,df = DateFormat.getDateInstance(DateFormat.SHORT);
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,96,nf = NumberFormat.getCurrencyInstance();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,97,"emf = new ExtendedMessageFormat(pattern, registry);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,98,} else {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,99,"df = DateFormat.getDateInstance(DateFormat.SHORT, testLocales[i]);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,100,nf = NumberFormat.getCurrencyInstance(testLocales[i]);
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,101,"emf = new ExtendedMessageFormat(pattern, testLocales[i], registry);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,103,StringBuffer expected = new StringBuffer();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,104,"expected.append(""Name: "");"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,105,expected.append(args[0].toString().toUpperCase());
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,106,"expected.append("" DOB: "");"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,107,expected.append(df.format(args[1]));
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,108,"expected.append("" Salary: "");"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,109,expected.append(nf.format(args[2]));
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,110,"assertEquals(pattern, emf.toPattern());"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,111,"assertEquals("""" + testLocales[i], expected.toString(), emf.format(args));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,116,* Test extended formats with choice format.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,118,* N.B. FAILING - currently sub-formats not supported
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,120,public void testExtendedWithChoiceFormat() {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,121,"String pattern = ""Choice: {0,choice,1.0#{1,lower}|2.0#{1,upper}}"";"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,122,"ExtendedMessageFormat emf = new ExtendedMessageFormat(pattern, registry);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,123,"assertEquals(pattern, emf.toPattern());"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,124,try {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,125,"assertEquals(""one"", emf.format(new Object[] {new Integer(1), ""ONE""}));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,126,"assertEquals(""TWO"", emf.format(new Object[] {new Integer(2), ""two""}));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,127,} catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,128,// currently sub-formats not supported
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,133,* Test mixed extended and built-in formats with choice format.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,135,* N.B. FAILING - currently sub-formats not supported
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,137,public void testExtendedAndBuiltInWithChoiceFormat() {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,138,"String pattern = ""Choice: {0,choice,1.0#{0} {1,lower} {2,number}|2.0#{0} {1,upper} {2,number,currency}}"";"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,139,"Object[] lowArgs  = new Object[] {new Integer(1), ""Low"",  new Double(""1234.56"")};"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,140,"Object[] highArgs = new Object[] {new Integer(2), ""High"", new Double(""9876.54"")};"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,142,for (int i = 0; i < testLocales.length; i++) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,143,NumberFormat nf = null;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,144,NumberFormat cf = null;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,145,ExtendedMessageFormat emf = null;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,146,if (testLocales[i] == null) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,147,nf = NumberFormat.getNumberInstance();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,148,cf = NumberFormat.getCurrencyInstance();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,149,"emf = new ExtendedMessageFormat(pattern, registry);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,150,} else {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,151,nf = NumberFormat.getNumberInstance(testLocales[i]);
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,152,cf = NumberFormat.getCurrencyInstance(testLocales[i]);
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,153,"emf = new ExtendedMessageFormat(pattern, testLocales[i], registry);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,155,"assertEquals(pattern, emf.toPattern());"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,156,try {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,157,"String lowExpected = lowArgs[0] + "" low ""    + nf.format(lowArgs[2]);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,158,"String highExpected = highArgs[0] + "" HIGH ""  + cf.format(highArgs[2]);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,159,"assertEquals(lowExpected,  emf.format(lowArgs));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,160,"assertEquals(highExpected, emf.format(highArgs));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,161,} catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,162,// currently sub-formats not supported
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,168,* Test the built in choice format.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,170,public void testBuiltInChoiceFormat() {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,171,"Object[] values = new Number[] {new Integer(1), new Double(""2.2""), new Double(""1234.5"")};"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,172,String choicePattern = null;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,174,"choicePattern = ""{0,choice,1#One|2#Two|3#Many {0,number}}"";"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,175,for (int i = 0; i < values.length; i++) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,176,"checkBuiltInFormat(values[i] + "": "" + choicePattern, new Object[] {values[i]});"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,179,"choicePattern = ""{0,choice,1#''One''|2#\""Two\""|3#''{Many}'' {0,number}}"";"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,180,for (int i = 0; i < values.length; i++) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,181,"checkBuiltInFormat(values[i] + "": "" + choicePattern, new Object[] {values[i]});"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,186,* Test the built in date/time formats
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,188,public void testBuiltInDateTimeFormat() {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,189,Calendar cal = Calendar.getInstance();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,190,"cal.set(2007, Calendar.JANUARY, 23, 18, 33, 05);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,191,Object[] args = new Object[] {cal.getTime()};
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,193,"checkBuiltInFormat(""1: {0,date,short}"",    args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,194,"checkBuiltInFormat(""2: {0,date,medium}"",   args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,195,"checkBuiltInFormat(""3: {0,date,long}"",     args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,196,"checkBuiltInFormat(""4: {0,date,full}"",     args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,197,"checkBuiltInFormat(""5: {0,date,d MMM yy}"", args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,198,"checkBuiltInFormat(""6: {0,time,short}"",    args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,199,"checkBuiltInFormat(""7: {0,time,medium}"",   args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,200,"checkBuiltInFormat(""8: {0,time,long}"",     args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,201,"checkBuiltInFormat(""9: {0,time,full}"",     args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,202,"checkBuiltInFormat(""10: {0,time,HH:mm}"",   args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,206,* Test the built in number formats.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,208,public void testBuiltInNumberFormat() {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,209,"Object[] args = new Object[] {new Double(""6543.21"")};"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,210,"checkBuiltInFormat(""1: {0,number}"",            args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,211,"checkBuiltInFormat(""2: {0,number,integer}"",    args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,212,"checkBuiltInFormat(""3: {0,number,currency}"",   args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,213,"checkBuiltInFormat(""4: {0,number,percent}"",    args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,214,"checkBuiltInFormat(""5: {0,number,00000.000}"",  args);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,218,* Create ExtendedMessageFormats for the specified pattern and the set of locales
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,219,* and check the formated output matches the expected result for the parameters.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,221,"private void checkBuiltInFormat(String pattern, Object[] args) {"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,222,for (int i = 0; i < testLocales.length; i++) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,223,"checkBuiltInFormat(pattern, args, testLocales[i]);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,228,* Create an ExtendedMessageFormat for the specified pattern and locale and check the
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,229,* formated output matches the expected result for the parameters.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,231,"private void checkBuiltInFormat(String pattern, Object[] args, Locale locale) {"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,232,StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,233,"buffer.append(""Pattern=["");"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,234,buffer.append(pattern);
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,235,"buffer.append(""], locale=["");"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,236,buffer.append(locale);
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,237,"buffer.append(""]"");"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,238,MessageFormat mf = null;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,239,if (locale == null) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,240,mf = new MessageFormat(pattern);
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,241,} else {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,242,"mf = new MessageFormat(pattern, locale);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,244,"// System.out.println(buffer + "", result=["" + mf.format(args) +""]"");"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,245,ExtendedMessageFormat emf = null;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,246,if (locale == null) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,247,emf = new ExtendedMessageFormat(pattern);
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,248,} else {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,249,"emf = new ExtendedMessageFormat(pattern, locale);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,251,"assertEquals(""format ""    + buffer.toString(), mf.format(args), emf.format(args));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,252,"assertEquals(""toPattern "" + buffer.toString(), mf.toPattern(),  emf.toPattern());"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,255,// ------------------------ Test Formats ------------------------
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,258,* {@link Format} implementation which converts to upper case.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,260,private static class LowerCaseFormat extends Format {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,261,"public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,262,return toAppendTo.append(((String)obj).toLowerCase());
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,264,"public Object parseObject(String source, ParsePosition pos) {throw new UnsupportedOperationException();}"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,268,* {@link Format} implementation which converts to lower case.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,270,private static class UpperCaseFormat extends Format {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,271,"public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,272,return toAppendTo.append(((String)obj).toUpperCase());
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,274,"public Object parseObject(String source, ParsePosition pos) {throw new UnsupportedOperationException();}"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,278,// ------------------------ Test Format Factories ---------------
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,280,* {@link FormatFactory} implementation for lower case format.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,282,private static class LowerCaseFormatFactory implements FormatFactory {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,283,private static final Format LOWER_INSTANCE = new LowerCaseFormat();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,284,"public Format getFormat(String name, String arguments, Locale locale) {"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,285,return LOWER_INSTANCE;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,289,* {@link FormatFactory} implementation for upper case format.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,291,private static class UpperCaseFormatFactory implements FormatFactory {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,292,private static final Format UPPER_INSTANCE = new UpperCaseFormat();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,293,"public Format getFormat(String name, String arguments, Locale locale) {"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,294,return UPPER_INSTANCE;
