is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,17,package org.apache.commons.lang3.util;
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,19,import static java.util.FormattableFlags.LEFT_JUSTIFY;
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,21,import java.util.Formattable;
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,22,import java.util.Formatter;
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,24,import org.apache.commons.lang3.ObjectUtils;
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,25,import org.apache.commons.lang3.Validate;
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,28,* Provides utilities for working with {@link Formattable}s.
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,30,* @since Lang 3.0
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,31,* @version $Id$
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,33,public class FormattableUtils {
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,35,"private static final String SIMPLEST_FORMAT = ""%1$s"";"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,38,* <p>{@link FormattableUtils} instances should NOT be constructed in
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,39,"* standard programming. Instead, the methods of the class should be invoked"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,40,* statically.</p>
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,42,* <p>This constructor is public to permit tools that require a JavaBean
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,43,* instance to operate.</p>
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,45,public FormattableUtils() {
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,46,super();
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,50,* Get the default formatted representation of the specified
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,51,* {@link Formattable}.
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,53,* @param formattable
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,54,* @return String
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,56,public static String toString(Formattable formattable) {
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,57,"return String.format(SIMPLEST_FORMAT, formattable);"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,61,"* Handles the common {@link Formattable} operations of truncate-pad-append,"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,62,"* with no ellipsis on precision overflow, and padding width underflow with"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,63,* spaces.
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,65,* @param seq to handle
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,66,* @param formatter destination
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,67,* @param flags for formatting
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,68,* @param width of output
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,69,* @param precision of output
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,70,* @return {@code formatter}
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,72,"public static Formatter append(CharSequence seq, Formatter formatter, int flags, int width,"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,73,int precision) {
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,74,"return append(seq, formatter, flags, width, precision, ' ', null);"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,78,"* Handles the common {@link Formattable} operations of truncate-pad-append,"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,79,* with no ellipsis on precision overflow.
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,81,* @param seq to handle
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,82,* @param formatter destination
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,83,* @param flags for formatting
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,84,* @param width of output
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,85,* @param precision of output
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,86,* @param padChar to use
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,87,* @return {@code formatter}
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,89,"public static Formatter append(CharSequence seq, Formatter formatter, int flags, int width,"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,90,"int precision, char padChar) {"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,91,"return append(seq, formatter, flags, width, precision, padChar, null);"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,95,"* Handles the common {@link Formattable} operations of truncate-pad-append,"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,96,* padding width underflow with spaces.
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,98,* @param seq to handle
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,99,* @param formatter destination
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,100,* @param flags for formatting
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,101,* @param width of output
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,102,* @param precision of output
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,103,* @param ellipsis to use when precision dictates truncation; a {@code null}
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,104,* or empty value causes a hard truncation
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,105,* @return {@code formatter}
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,107,"public static Formatter append(CharSequence seq, Formatter formatter, int flags, int width,"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,108,"int precision, CharSequence ellipsis) {"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,109,"return append(seq, formatter, flags, width, precision, ' ', ellipsis);"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,113,* Handles the common {@link Formattable} operations of truncate-pad-append.
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,115,* @param seq to handle
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,116,* @param formatter destination
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,117,* @param flags for formatting
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,118,* @param width of output
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,119,* @param precision of output
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,120,* @param padChar to use
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,121,* @param ellipsis to use when precision dictates truncation; a {@code null}
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,122,* or empty value causes a hard truncation
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,123,* @return {@code formatter}
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,125,"public static Formatter append(CharSequence seq, Formatter formatter, int flags, int width,"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,126,"int precision, char padChar, CharSequence ellipsis) {"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,127,"Validate.isTrue(ellipsis == null || precision < 0 || ellipsis.length() <= precision,"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,128,"""Specified ellipsis '%1$s' exceeds precision of %2$s"", ellipsis, precision);"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,129,StringBuilder buf = new StringBuilder(seq);
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,130,if (precision >= 0 && precision < seq.length()) {
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,131,"CharSequence _ellipsis = ObjectUtils.defaultIfNull(ellipsis, """");"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,132,"buf.replace(precision - _ellipsis.length(), seq.length(), _ellipsis.toString());"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,134,boolean leftJustify = (flags & LEFT_JUSTIFY) == LEFT_JUSTIFY;
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,135,for (int i = buf.length(); i < width; i++) {
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,136,"buf.insert(leftJustify ? i : 0, padChar);"
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,138,formatter.format(buf.toString());
True,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,src/main/java/org/apache/commons/lang3/util/FormattableUtils.java,139,return formatter;
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,17,package org.apache.commons.lang3.util;
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,19,import static java.util.FormattableFlags.LEFT_JUSTIFY;
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,20,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,22,import java.util.Formatter;
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,24,import org.apache.commons.lang3.tuple.Pair;
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,25,import org.junit.Test;
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,28,* Unit tests {@link FormattableUtils}.
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,30,* @version $Id$
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,32,public class FormattableUtilsTest {
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,34,@Test
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,35,public void testDefaultAppend() {
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,36,"assertEquals(""foo"", FormattableUtils.append(""foo"", new Formatter(), 0, -1, -1).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,37,"assertEquals(""fo"", FormattableUtils.append(""foo"", new Formatter(), 0, -1, 2).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,38,"assertEquals("" foo"", FormattableUtils.append(""foo"", new Formatter(), 0, 4, -1).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,39,"assertEquals(""   foo"", FormattableUtils.append(""foo"", new Formatter(), 0, 6, -1).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,40,"assertEquals("" fo"", FormattableUtils.append(""foo"", new Formatter(), 0, 3, 2).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,41,"assertEquals(""   fo"", FormattableUtils.append(""foo"", new Formatter(), 0, 5, 2).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,42,"assertEquals(""foo "", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 4, -1).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,43,"assertEquals(""foo   "", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 6, -1).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,44,"assertEquals(""fo "", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 3, 2).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,45,"assertEquals(""fo   "", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 5, 2).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,48,@Test
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,49,public void testAlternatePadCharacter() {
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,50,char pad='_';
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,51,"assertEquals(""foo"", FormattableUtils.append(""foo"", new Formatter(), 0, -1, -1, pad).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,52,"assertEquals(""fo"", FormattableUtils.append(""foo"", new Formatter(), 0, -1, 2, pad).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,53,"assertEquals(""_foo"", FormattableUtils.append(""foo"", new Formatter(), 0, 4, -1, pad).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,54,"assertEquals(""___foo"", FormattableUtils.append(""foo"", new Formatter(), 0, 6, -1, pad).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,55,"assertEquals(""_fo"", FormattableUtils.append(""foo"", new Formatter(), 0, 3, 2, pad).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,56,"assertEquals(""___fo"", FormattableUtils.append(""foo"", new Formatter(), 0, 5, 2, pad).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,57,"assertEquals(""foo_"", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 4, -1, pad).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,58,"assertEquals(""foo___"", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 6, -1, pad).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,59,"assertEquals(""fo_"", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 3, 2, pad).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,60,"assertEquals(""fo___"", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 5, 2, pad).toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,63,@Test
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,64,public void testEllipsis() {
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,65,"assertEquals(""foo"", FormattableUtils.append(""foo"", new Formatter(), 0, -1, -1, ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,66,"assertEquals(""f*"", FormattableUtils.append(""foo"", new Formatter(), 0, -1, 2, ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,67,"assertEquals("" foo"", FormattableUtils.append(""foo"", new Formatter(), 0, 4, -1, ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,68,"assertEquals(""   foo"", FormattableUtils.append(""foo"", new Formatter(), 0, 6, -1, ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,69,"assertEquals("" f*"", FormattableUtils.append(""foo"", new Formatter(), 0, 3, 2, ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,70,"assertEquals(""   f*"", FormattableUtils.append(""foo"", new Formatter(), 0, 5, 2, ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,71,"assertEquals(""foo "", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 4, -1, ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,72,"assertEquals(""foo   "", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 6, -1, ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,73,"assertEquals(""f* "", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 3, 2, ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,74,"assertEquals(""f*   "", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 5, 2, ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,76,"assertEquals(""foo"", FormattableUtils.append(""foo"", new Formatter(), 0, -1, -1, ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,77,"assertEquals(""+*"", FormattableUtils.append(""foo"", new Formatter(), 0, -1, 2, ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,78,"assertEquals("" foo"", FormattableUtils.append(""foo"", new Formatter(), 0, 4, -1, ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,79,"assertEquals(""   foo"", FormattableUtils.append(""foo"", new Formatter(), 0, 6, -1, ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,80,"assertEquals("" +*"", FormattableUtils.append(""foo"", new Formatter(), 0, 3, 2, ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,81,"assertEquals(""   +*"", FormattableUtils.append(""foo"", new Formatter(), 0, 5, 2, ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,82,"assertEquals(""foo "", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 4, -1, ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,83,"assertEquals(""foo   "", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 6, -1, ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,84,"assertEquals(""+* "", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 3, 2, ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,85,"assertEquals(""+*   "", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 5, 2, ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,88,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,89,public void testIllegalEllipsis() {
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,90,"FormattableUtils.append(""foo"", new Formatter(), 0, -1, 1, ""xx"");"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,93,@Test
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,94,public void testAlternatePadCharAndEllipsis() {
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,95,"assertEquals(""foo"", FormattableUtils.append(""foo"", new Formatter(), 0, -1, -1, '_', ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,96,"assertEquals(""f*"", FormattableUtils.append(""foo"", new Formatter(), 0, -1, 2, '_', ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,97,"assertEquals(""_foo"", FormattableUtils.append(""foo"", new Formatter(), 0, 4, -1, '_', ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,98,"assertEquals(""___foo"", FormattableUtils.append(""foo"", new Formatter(), 0, 6, -1, '_', ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,99,"assertEquals(""_f*"", FormattableUtils.append(""foo"", new Formatter(), 0, 3, 2, '_', ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,100,"assertEquals(""___f*"", FormattableUtils.append(""foo"", new Formatter(), 0, 5, 2, '_', ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,101,"assertEquals(""foo_"", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 4, -1, '_', ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,102,"assertEquals(""foo___"", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 6, -1, '_', ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,103,"assertEquals(""f*_"", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 3, 2, '_', ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,104,"assertEquals(""f*___"", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 5, 2, '_', ""*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,106,"assertEquals(""foo"", FormattableUtils.append(""foo"", new Formatter(), 0, -1, -1, '_', ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,107,"assertEquals(""+*"", FormattableUtils.append(""foo"", new Formatter(), 0, -1, 2, '_', ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,108,"assertEquals(""_foo"", FormattableUtils.append(""foo"", new Formatter(), 0, 4, -1, '_', ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,109,"assertEquals(""___foo"", FormattableUtils.append(""foo"", new Formatter(), 0, 6, -1, '_', ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,110,"assertEquals(""_+*"", FormattableUtils.append(""foo"", new Formatter(), 0, 3, 2, '_', ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,111,"assertEquals(""___+*"", FormattableUtils.append(""foo"", new Formatter(), 0, 5, 2, '_', ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,112,"assertEquals(""foo_"", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 4, -1, '_', ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,113,"assertEquals(""foo___"", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 6, -1, '_', ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,114,"assertEquals(""+*_"", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 3, 2, '_', ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,115,"assertEquals(""+*___"", FormattableUtils.append(""foo"", new Formatter(), LEFT_JUSTIFY, 5, 2, '_', ""+*"").toString());"
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,118,@Test
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,119,public void testToStringFormattable() {
True,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,src/test/java/org/apache/commons/lang3/util/FormattableUtilsTest.java,120,"assertEquals(""(Key,Value)"", FormattableUtils.toString(Pair.of(""Key"", ""Value"")));"
