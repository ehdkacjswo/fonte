is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,17,package org.apache.commons.collections.comparators;
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,19,import java.util.Arrays;
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,20,import java.util.Comparator;
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,21,import java.util.LinkedList;
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,22,import java.util.List;
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,23,import java.util.Random;
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,25,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,28,* Test class for FixedOrderComparator.
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,30,* @version $Revision$ $Date$
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,32,* @author David Leppik
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,33,* @author Stephen Colebourne
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,35,public class TestFixedOrderComparator extends TestCase {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,38,"* Top cities of the world, by population including metro areas."
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,40,private static final String topCities[] = new String[] {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,41,"""Tokyo"","
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,42,"""Mexico City"","
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,43,"""Mumbai"","
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,44,"""Sao Paulo"","
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,45,"""New York"","
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,46,"""Shanghai"","
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,47,"""Lagos"","
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,48,"""Los Angeles"","
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,49,"""Calcutta"","
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,50,"""Buenos Aires"""
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,54,// Initialization and busywork
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,57,public TestFixedOrderComparator(String name) {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,58,super(name);
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,62,// Set up and tear down
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,68,// The tests
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,72,* Tests that the constructor plus add method compares items properly.
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,74,public void testConstructorPlusAdd() {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,75,FixedOrderComparator<String> comparator = new FixedOrderComparator<String>();
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,76,for (int i = 0; i < topCities.length; i++) {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,77,comparator.add(topCities[i]);
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,79,String[] keys = topCities.clone();
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,80,"assertComparatorYieldsOrder(keys, comparator);"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,84,* Tests that the array constructor compares items properly.
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,86,public void testArrayConstructor() {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,87,String[] keys = topCities.clone();
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,88,String[] topCitiesForTest = topCities.clone();
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,89,FixedOrderComparator<String> comparator = new FixedOrderComparator<String>(topCitiesForTest);
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,90,"assertComparatorYieldsOrder(keys, comparator);"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,91,// test that changing input after constructor has no effect
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,92,"topCitiesForTest[0] = ""Brighton"";"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,93,"assertComparatorYieldsOrder(keys, comparator);"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,97,* Tests the list constructor.
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,99,public void testListConstructor() {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,100,String[] keys = topCities.clone();
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,101,List<String> topCitiesForTest = new LinkedList<String>(Arrays.asList(topCities));
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,102,FixedOrderComparator<String> comparator = new FixedOrderComparator<String>(topCitiesForTest);
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,103,"assertComparatorYieldsOrder(keys, comparator);"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,104,// test that changing input after constructor has no effect
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,105,"topCitiesForTest.set(0, ""Brighton"");"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,106,"assertComparatorYieldsOrder(keys, comparator);"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,110,* Tests addAsEqual method.
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,112,public void testAddAsEqual() {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,113,FixedOrderComparator<String> comparator = new FixedOrderComparator<String>(topCities);
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,114,"comparator.addAsEqual(""New York"", ""Minneapolis"");"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,115,"assertEquals(0, comparator.compare(""New York"", ""Minneapolis""));"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,116,"assertEquals(-1, comparator.compare(""Tokyo"", ""Minneapolis""));"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,117,"assertEquals(1, comparator.compare(""Shanghai"", ""Minneapolis""));"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,121,* Tests whether or not updates are disabled after a comparison is made.
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,123,public void testLock() {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,124,FixedOrderComparator<String> comparator = new FixedOrderComparator<String>(topCities);
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,125,"assertEquals(false, comparator.isLocked());"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,126,"comparator.compare(""New York"", ""Tokyo"");"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,127,"assertEquals(true, comparator.isLocked());"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,128,try {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,129,"comparator.add(""Minneapolis"");"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,130,"fail(""Should have thrown an UnsupportedOperationException"");"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,131,} catch (UnsupportedOperationException e) {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,132,// success -- ignore
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,135,try {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,136,"comparator.addAsEqual(""New York"", ""Minneapolis"");"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,137,"fail(""Should have thrown an UnsupportedOperationException"");"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,138,} catch (UnsupportedOperationException e) {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,139,// success -- ignore
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,143,public void testUnknownObjectBehavior() {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,144,FixedOrderComparator<String> comparator = new FixedOrderComparator<String>(topCities);
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,145,try {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,146,"comparator.compare(""New York"", ""Minneapolis"");"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,147,"fail(""Should have thrown a IllegalArgumentException"");"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,148,} catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,149,// success-- ignore
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,151,try {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,152,"comparator.compare(""Minneapolis"", ""New York"");"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,153,"fail(""Should have thrown a IllegalArgumentException"");"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,154,} catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,155,// success-- ignore
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,157,"assertEquals(FixedOrderComparator.UnknownObjectBehavior.EXCEPTION, comparator.getUnknownObjectBehavior());"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,159,comparator = new FixedOrderComparator<String>(topCities);
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,160,comparator.setUnknownObjectBehavior(FixedOrderComparator.UnknownObjectBehavior.BEFORE);
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,161,"assertEquals(FixedOrderComparator.UnknownObjectBehavior.BEFORE, comparator.getUnknownObjectBehavior());"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,162,LinkedList<String> keys = new LinkedList<String>(Arrays.asList(topCities));
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,163,"keys.addFirst(""Minneapolis"");"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,164,"assertComparatorYieldsOrder(keys.toArray(new String[0]), comparator);"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,166,"assertEquals(-1, comparator.compare(""Minneapolis"", ""New York""));"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,167,"assertEquals( 1, comparator.compare(""New York"", ""Minneapolis""));"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,168,"assertEquals( 0, comparator.compare(""Minneapolis"", ""St Paul""));"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,170,comparator = new FixedOrderComparator<String>(topCities);
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,171,comparator.setUnknownObjectBehavior(FixedOrderComparator.UnknownObjectBehavior.AFTER);
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,172,keys = new LinkedList<String>(Arrays.asList(topCities));
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,173,"keys.add(""Minneapolis"");"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,174,"assertComparatorYieldsOrder(keys.toArray(new String[0]), comparator);"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,176,"assertEquals( 1, comparator.compare(""Minneapolis"", ""New York""));"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,177,"assertEquals(-1, comparator.compare(""New York"", ""Minneapolis""));"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,178,"assertEquals( 0, comparator.compare(""Minneapolis"", ""St Paul""));"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,183,// Helper methods
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,186,/** Shuffles the keys and asserts that the comparator sorts them back to
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,187,* their original order.
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,189,"@SuppressWarnings(""unused"")"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,190,"private void assertComparatorYieldsOrder(String[] orderedObjects,"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,191,Comparator<String> comparator) {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,192,String[] keys = orderedObjects.clone();
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,194,// shuffle until the order changes.  It's extremely rare that
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,195,// this requires more than one shuffle.
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,197,boolean isInNewOrder = false;
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,198,Random rand = new Random();
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,199,while (keys.length > 1 && isInNewOrder == false) {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,200,// shuffle:
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,201,for (int i = keys.length-1; i > 0; i--) {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,202,String swap = keys[i];
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,203,int j = rand.nextInt(i+1);
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,204,keys[i] = keys[j];
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,205,keys[j] = swap;
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,208,// testShuffle
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,209,for (int i = 0; i < keys.length && !isInNewOrder; i++) {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,210,if( !orderedObjects[i].equals(keys[i])) {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,211,isInNewOrder = true;
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,216,// The real test:  sort and make sure they come out right.
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,218,"Arrays.sort(keys, comparator);"
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,220,for (int i = 0; i < orderedObjects.length; i++) {
True,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,221,"assertEquals(orderedObjects[i], keys[i]);"
