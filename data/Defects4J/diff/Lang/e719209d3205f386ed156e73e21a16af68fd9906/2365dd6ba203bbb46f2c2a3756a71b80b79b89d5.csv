is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,14,* limitations under the License.
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,16,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,18,import java.util.ArrayList;
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,19,import java.util.HashSet;
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,20,import java.util.List;
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,21,import java.util.Locale;
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,22,import java.util.Set;
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,25,* <p>Operations to assist when working with a Locale.</p>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,27,* <p>This class tries to handle <code>null</code> input gracefully.
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,28,* An exception will not be thrown for a <code>null</code> input.
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,29,* Each method documents its behaviour in more detail.</p>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,31,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,32,* @since 2.2
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,33,* @version $Id$
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,35,public class LocaleUtils {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,38,* <p><code>LocaleUtils</code> instances should NOT be constructed in standard programming.
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,39,"* Instead, the class should be used as <code>LocaleUtils.toLocale(""en_GB"");</code>.</p>"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,41,* <p>This constructor is public to permit tools that require a JavaBean instance
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,42,* to operate.</p>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,44,public LocaleUtils() {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,45,super();
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,50,* <p>Converts a String to a Locale.</p>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,52,* <p>This method takes the string format of a locale and creates the
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,53,* locale object from it.</p>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,55,* <pre>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,56,"*   LocaleUtils.toLocale(""en"")     = new Locale(""en"", """")"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,57,"*   LocaleUtils.toLocale(""en_GB"")  = new Locale(""en"", ""GB"")"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,58,"*   LocaleUtils.toLocale(""en_GB_xxx"")  = new Locale(""en"", ""GB"", ""xxx"")"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,59,* </pre>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,61,"* @param str  the locale String to convert, null returns null"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,62,* @return a Locale
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,63,* @throws IllegalArgumentException if the string is an invalid format
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,65,public static Locale toLocale(String str) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,66,if (str == null) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,67,return null;
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,69,if (str.length() != 2 &&
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,70,str.length() != 5 &&
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,71,str.length() < 7) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,72,"throw new IllegalArgumentException(""Invalid locale format: "" + str);"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,74,if (Character.isLowerCase(str.charAt(0)) == false ||
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,75,Character.isLowerCase(str.charAt(1)) == false) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,76,"throw new IllegalArgumentException(""Invalid locale format: "" + str);"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,78,if (str.length() == 2) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,79,"return new Locale(str, """");"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,80,} else {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,81,if (Character.isUpperCase(str.charAt(3)) == false ||
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,82,Character.isUpperCase(str.charAt(4)) == false) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,83,"throw new IllegalArgumentException(""Invalid locale format: "" + str);"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,85,if (str.length() == 5) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,86,"return new Locale(str.substring(0, 2), str.substring(3, 5));"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,87,} else {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,88,"return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,95,* <p>Obtains the list of locales to search through when performing
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,96,* a locale search.</p>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,98,* <pre>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,99,"* localeLookupList(Locale(""fr"",""CA"",""xxx""))"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,100,"*   = [Locale(""fr"",""CA"",""xxx""), Locale(""fr"",""CA""), Locale(""fr"")]"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,101,* </pre>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,103,* @param locale  the locale to start from
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,104,* @param defaultLocale  the default locale to use if no other is found
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,105,"* @return the list of Locale objects, 0 being locale"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,107,public static List localeLookupList(Locale locale) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,108,"return localeLookupList(locale, locale);"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,113,* <p>Obtains the list of locales to search through when performing
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,114,* a locale search.</p>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,116,* <pre>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,117,"* localeLookupList(Locale(""fr"", ""CA"", ""xxx""), Locale(""en""))"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,118,"*   = [Locale(""fr"",""CA"",""xxx""), Locale(""fr"",""CA""), Locale(""fr""), Locale(""en""]"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,119,* </pre>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,121,* <p>This method takes a country code and searches to find the
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,122,* languages available for that country. Variant locales are removed.</p>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,124,"* @param locale  the locale to start from, null returns empty list"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,125,* @param defaultLocale  the default locale to use if no other is found
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,126,"* @return the list of Locale objects, 0 being locale"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,128,"public static List localeLookupList(Locale locale, Locale defaultLocale) {"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,129,List list = new ArrayList(4);
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,130,if (locale != null) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,131,list.add(locale);
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,132,if (locale.getVariant().length() > 0) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,133,"list.add(new Locale(locale.getLanguage(), locale.getCountry()));"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,135,if (locale.getCountry().length() > 0) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,136,"list.add(new Locale(locale.getLanguage(), """"));"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,138,if (list.contains(defaultLocale) == false) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,139,list.add(defaultLocale);
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,142,return list;
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,147,* <p>Obtains the set of languages supported for a given country.</p>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,149,* <p>This method takes a country code and searches to find the
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,150,* languages available for that country. Variant locales are removed.</p>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,152,"* @param countryCode  the 2 letter country code, null returns empty"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,153,* @return a Set of Locale objects
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,155,public static Set languagesByCountry(String countryCode) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,156,Set set = new HashSet();
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,157,Locale[] array = Locale.getAvailableLocales();
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,158,if (countryCode != null) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,159,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,160,if (countryCode.equals(array[i].getCountry()) &&
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,161,array[i].getVariant().length() == 0) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,162,set.add(array[i]);
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,166,return set;
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,171,* <p>Obtains the set of countries supported for a given language.</p>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,173,* <p>This method takes a language code and searches to find the
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,174,* countries available for that language. Variant locales are removed.</p>
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,176,"* @param languageCode  the 2 letter language code, null returns empty"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,177,* @return a Set of Locale objects
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,179,public static Set countriesByLanguage(String languageCode) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,180,Set set = new HashSet();
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,181,Locale[] array = Locale.getAvailableLocales();
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,182,if (languageCode != null) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,183,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,184,if (languageCode.equals(array[i].getLanguage()) &&
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,185,array[i].getVariant().length() == 0) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,186,set.add(array[i]);
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,190,return set;
