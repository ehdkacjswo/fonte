is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2606,esult[i] = new Byte(array[i]);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2606,result[i] = Byte.valueOf(array[i]);
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3604,"eturn (byte[]) add(array, index, new Byte(element), Byte.TYPE);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3604,"return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);"
False,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,76,eturn new Byte(this.value);
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,76,return Byte.valueOf(this.value);
False,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,162,eturn new Byte(byteValue());
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,162,return Byte.valueOf(byteValue());
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2111,"rrayUtils.toPrimitive(new Byte[] {new Byte(Byte.MIN_VALUE),"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2112,"ew Byte(Byte.MAX_VALUE), new Byte((byte)9999999)}))"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2111,"ArrayUtils.toPrimitive(new Byte[] {Byte.valueOf(Byte.MIN_VALUE),"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2112,"Byte.valueOf(Byte.MAX_VALUE), Byte.valueOf((byte)9999999)}))"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2116,"rrayUtils.toPrimitive(new Byte[] {new Byte(Byte.MIN_VALUE), null});"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2116,"ArrayUtils.toPrimitive(new Byte[] {Byte.valueOf(Byte.MIN_VALUE), null});"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2130,"rrayUtils.toPrimitive(new Byte[] {new Byte(Byte.MIN_VALUE),"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2131,"ew Byte(Byte.MAX_VALUE), new Byte((byte)9999999)},"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2130,"ArrayUtils.toPrimitive(new Byte[] {Byte.valueOf(Byte.MIN_VALUE),"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2131,"Byte.valueOf(Byte.MAX_VALUE), Byte.valueOf((byte)9999999)},"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2137,"rrayUtils.toPrimitive(new Byte[] {new Byte(Byte.MIN_VALUE), null,"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2138,"ew Byte((byte)9999999)}, Byte.MAX_VALUE))"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2137,"ArrayUtils.toPrimitive(new Byte[] {Byte.valueOf(Byte.MIN_VALUE), null,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2138,"Byte.valueOf((byte)9999999)}, Byte.MAX_VALUE))"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2150,"ew Byte[] {new Byte(Byte.MIN_VALUE),"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2151,"ew Byte(Byte.MAX_VALUE), new Byte((byte)9999999)},"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2150,"new Byte[] {Byte.valueOf(Byte.MIN_VALUE),"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,2151,"Byte.valueOf(Byte.MAX_VALUE), Byte.valueOf((byte)9999999)},"
False,src/test/org/apache/commons/lang/math/RangeTest.java,src/test/org/apache/commons/lang/math/RangeTest.java,55,eturn new Byte(max);
True,src/test/org/apache/commons/lang/math/RangeTest.java,src/test/org/apache/commons/lang/math/RangeTest.java,55,return Byte.valueOf(max);
False,src/test/org/apache/commons/lang/math/RangeTest.java,src/test/org/apache/commons/lang/math/RangeTest.java,60,eturn new Byte(min);
True,src/test/org/apache/commons/lang/math/RangeTest.java,src/test/org/apache/commons/lang/math/RangeTest.java,60,return Byte.valueOf(min);
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,50,"ssertEquals((byte) 2, new MutableByte(new Byte((byte) 2)).byteValue());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,50,"assertEquals((byte) 2, new MutableByte(Byte.valueOf((byte) 2)).byteValue());"
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,61,"ssertEquals(new Byte((byte) 0), new MutableByte().getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,61,"assertEquals(Byte.valueOf((byte) 0), new MutableByte().getValue());"
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,65,"ssertEquals(new Byte((byte) 1), mutNum.getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,65,"assertEquals(Byte.valueOf((byte) 1), mutNum.getValue());"
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,67,utNum.setValue(new Byte((byte) 2));
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,67,mutNum.setValue(Byte.valueOf((byte) 2));
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,69,"ssertEquals(new Byte((byte) 2), mutNum.getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,69,"assertEquals(Byte.valueOf((byte) 2), mutNum.getValue());"
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,73,"ssertEquals(new Byte((byte) 3), mutNum.getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,73,"assertEquals(Byte.valueOf((byte) 3), mutNum.getValue());"
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,97,"ssertEquals(false, mutNumA.equals(new Byte((byte) 0)));"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,97,"assertEquals(false, mutNumA.equals(Byte.valueOf((byte) 0)));"
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,109,"ssertEquals(true, mutNumA.hashCode() == new Byte((byte) 0).hashCode());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,109,"assertEquals(true, mutNumA.hashCode() == Byte.valueOf((byte) 0).hashCode());"
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,123,utNum.compareTo(new Byte((byte) 0));
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,123,mutNum.compareTo(Byte.valueOf((byte) 0));
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,144,"ssertEquals(new Byte((byte) 0), new MutableByte((byte) 0).toByte());"
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,145,"ssertEquals(new Byte((byte) 123), new MutableByte((byte) 123).toByte());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,144,"assertEquals(Byte.valueOf((byte) 0), new MutableByte((byte) 0).toByte());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,145,"assertEquals(Byte.valueOf((byte) 123), new MutableByte((byte) 123).toByte());"
