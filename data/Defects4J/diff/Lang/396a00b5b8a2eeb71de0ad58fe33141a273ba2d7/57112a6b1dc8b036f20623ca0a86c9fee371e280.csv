is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,686, <p>Convert a <code>String</code> to a <code>BigInteger</code>.</p>
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,686,* <p>Convert a <code>String</code> to a <code>BigInteger</code>;
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,687,* since 3.2 it handles hex (0x or #) and octal (0) notations.</p>
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,698,eturn new BigInteger(str);
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,699,int pos = 0; // offset within string
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,700,int radix = 10;
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,701,boolean negate = false; // need to negate later?
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,702,"if (str.startsWith(""-"")) {"
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,703,negate = true;
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,704,pos = 1;
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,706,"if (str.startsWith(""0x"", pos) || str.startsWith(""0x"", pos)) { // hex"
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,707,radix = 16;
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,708,pos += 2;
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,709,"} else if (str.startsWith(""#"", pos)) { // alternative hex (allowed by Long/Integer)"
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,710,radix = 16;
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,711,pos ++;
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,712,"} else if (str.startsWith(""0"", pos) && str.length() > pos + 1) { // octal; so long as there are additional digits"
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,713,radix = 8;
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,714,pos ++;
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,715,} // default is to treat as decimal
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,717,"final BigInteger value = new BigInteger(str.substring(pos), radix);"
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,718,return negate ? value.negate() : value;
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,351,"assertEquals(""createBigInteger(String) failed"", new BigInteger(""255""), NumberUtils.createBigInteger(""0xff""));"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,352,"assertEquals(""createBigInteger(String) failed"", new BigInteger(""255""), NumberUtils.createBigInteger(""#ff""));"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,353,"assertEquals(""createBigInteger(String) failed"", new BigInteger(""-255""), NumberUtils.createBigInteger(""-0xff""));"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,354,"assertEquals(""createBigInteger(String) failed"", new BigInteger(""255""), NumberUtils.createBigInteger(""0377""));"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,355,"assertEquals(""createBigInteger(String) failed"", new BigInteger(""-255""), NumberUtils.createBigInteger(""-0377""));"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,356,"assertEquals(""createBigInteger(String) failed"", new BigInteger(""-255""), NumberUtils.createBigInteger(""-0377""));"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,357,"assertEquals(""createBigInteger(String) failed"", new BigInteger(""-0""), NumberUtils.createBigInteger(""-0""));"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,358,"assertEquals(""createBigInteger(String) failed"", new BigInteger(""0""), NumberUtils.createBigInteger(""0""));"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,359,"testCreateBigIntegerFailure(""#"");"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,360,"testCreateBigIntegerFailure(""-#"");"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,361,"testCreateBigIntegerFailure(""0x"");"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,362,"testCreateBigIntegerFailure(""-0x"");"
