is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,761," <p>Compares two CharSequences, returning {@code true} if they are equal.</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,761,"* <p>Compares two CharSequences, returning {@code true} if they represent"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,762,* equal sequences of characters.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,774, @see java.lang.String#equals(Object)
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,775," @param cs1  the first CharSequence, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,776," @param cs2  the second CharSequence, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,777," @return {@code true} if the CharSequences are equal, case sensitive, or"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,778,  both {@code null}
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,775,* @see java.lang.CharSequence#equals(Object)
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,776,"* @param cs1  the first CharSequence, may be {@code null}"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,777,"* @param cs2  the second CharSequence, may be {@code null}"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,778,"* @return {@code true} if the CharSequences are equal (case-sensitive), or both {@code null}"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,782,eturn cs1 == null ? cs2 == null : cs1.equals(cs2);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,782,if (cs1 == cs2) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,783,return true;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,785,if (cs1 == null || cs2 == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,786,return false;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,788,if (cs1 instanceof String && cs2 instanceof String) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,789,return cs1.equals(cs2);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,791,"return CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, Math.max(cs1.length(), cs2.length()));"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,786," <p>Compares two CharSequences, returning {@code true} if they are equal ignoring"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,787, the case.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,795,"* <p>Compares two CharSequences, returning {@code true} if they represent"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,796,"* equal sequences of characters, ignoring case.</p>"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,22,import org.hamcrest.core.IsNot;
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,23,import static org.junit.Assert.assertThat;
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,443,"// The purpose of this class is to test StringUtils#equals(CharSequence, CharSequence)"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,444,// with a CharSequence implementation whose equals(Object) override requires that the
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,445,"// other object be an instance of CustomCharSequence, even though, as char sequences,"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,446,// `seq` may equal the other object.
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,447,private static class CustomCharSequence implements CharSequence {
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,448,private CharSequence seq;
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,450,public CustomCharSequence(CharSequence seq) {
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,451,this.seq = seq;
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,454,public char charAt(int index) {
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,455,return seq.charAt(index);
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,458,public int length() {
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,459,return seq.length();
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,462,"public CharSequence subSequence(int start, int end) {"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,463,"return new CustomCharSequence(seq.subSequence(start, end));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,466,@Override
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,467,public boolean equals(Object obj) {
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,468,if (obj == null || !(obj instanceof CustomCharSequence)) {
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,469,return false;
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,471,CustomCharSequence other = (CustomCharSequence) obj;
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,472,return seq.equals(other.seq);
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,475,public String toString() {
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,476,return seq.toString();
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,480,public void testCustomCharSequence() {
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,481,"assertThat((CharSequence) new CustomCharSequence(FOO), IsNot.<CharSequence>not(FOO));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,482,"assertThat((CharSequence) FOO, IsNot.<CharSequence>not(new CustomCharSequence(FOO)));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,483,"assertEquals(new CustomCharSequence(FOO), new CustomCharSequence(FOO));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,442,"ssertEquals(true, StringUtils.equals(null, null));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,443,"ssertEquals(true, StringUtils.equals(FOO, FOO));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,444,"ssertEquals(true, StringUtils.equals(FOO, new String(new char[] { 'f', 'o', 'o' })));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,445,"ssertEquals(false, StringUtils.equals(FOO, new String(new char[] { 'f', 'O', 'O' })));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,446,"ssertEquals(false, StringUtils.equals(FOO, BAR));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,447,"ssertEquals(false, StringUtils.equals(FOO, null));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,448,"ssertEquals(false, StringUtils.equals(null, FOO));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,487,"final CharSequence fooCs = FOO, barCs = BAR, foobarCs = FOOBAR;"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,488,"assertTrue(StringUtils.equals(null, null));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,489,"assertTrue(StringUtils.equals(fooCs, fooCs));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,490,"assertTrue(StringUtils.equals(fooCs, (CharSequence) new StringBuilder(FOO)));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,491,"assertTrue(StringUtils.equals(fooCs, (CharSequence) new String(new char[] { 'f', 'o', 'o' })));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,492,"assertTrue(StringUtils.equals(fooCs, (CharSequence) new CustomCharSequence(FOO)));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,493,"assertTrue(StringUtils.equals((CharSequence) new CustomCharSequence(FOO), fooCs));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,494,"assertFalse(StringUtils.equals(fooCs, (CharSequence) new String(new char[] { 'f', 'O', 'O' })));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,495,"assertFalse(StringUtils.equals(fooCs, barCs));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,496,"assertFalse(StringUtils.equals(fooCs, null));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,497,"assertFalse(StringUtils.equals(null, fooCs));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,498,"assertFalse(StringUtils.equals(fooCs, foobarCs));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,499,"assertFalse(StringUtils.equals(foobarCs, fooCs));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,502,public void testEqualsOnStrings() {
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,503,"assertTrue(StringUtils.equals(null, null));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,504,"assertTrue(StringUtils.equals(FOO, FOO));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,505,"assertTrue(StringUtils.equals(FOO, new String(new char[] { 'f', 'o', 'o' })));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,506,"assertFalse(StringUtils.equals(FOO, new String(new char[] { 'f', 'O', 'O' })));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,507,"assertFalse(StringUtils.equals(FOO, BAR));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,508,"assertFalse(StringUtils.equals(FOO, null));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,509,"assertFalse(StringUtils.equals(null, FOO));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,510,"assertFalse(StringUtils.equals(FOO, FOOBAR));"
True,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,511,"assertFalse(StringUtils.equals(FOOBAR, FOO));"
