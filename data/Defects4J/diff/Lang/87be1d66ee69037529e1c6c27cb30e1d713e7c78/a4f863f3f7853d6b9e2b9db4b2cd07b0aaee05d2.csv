is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,5,* reserved.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,9,* are met:
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,17,*    distribution.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,54,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,57,* <p><code>BooleanUtils</code> contains utility methods for working for
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,58,* boolean and Boolean objects.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,60,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,61,"* @version $Id: BooleanUtils.java,v 1.1 2002/12/15 16:55:32 scolebourne Exp $"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,63,public class BooleanUtils {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,66,* <p><code>BooleanUtils</code> instances should NOT be constructed in standard programming.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,67,"* Instead, the class should be used as <code>BooleanUtils.toBooleanObject(true);</code>.</p>"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,69,* <p>This constructor is public to permit tools that require a JavaBean instance
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,70,* to operate.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,72,public BooleanUtils() {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,75,// boolean Boolean methods
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,79,* <p>Boolean factory that avoids creating new Boolean objecs all the time.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,81,* <p>This method was added to JDK1.4 but is available here for earlier JDKs.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,83,* @param bool  the boolean to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,84,* @return Boolean.TRUE or Boolean.FALSE as appropriate
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,86,public static Boolean toBooleanObject(boolean bool) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,87,return (bool ? Boolean.TRUE : Boolean.FALSE);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,91,* <p>Converts a Boolean to a boolean handling null by returning false.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,93,* @param bool  the boolean to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,94,* @return true or false
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,96,public static boolean toBoolean(Boolean bool) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,97,if (bool == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,98,return false;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,100,return (bool.booleanValue() ? true : false);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,104,* <p>Converts a Boolean to a boolean handling null.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,106,* @param bool  the boolean to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,107,* @param valueIfNull  the boolean value to return if null
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,108,* @return true or false
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,110,"public static boolean toBooleanDefaultIfNull(Boolean bool, boolean valueIfNull) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,111,if (bool == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,112,return valueIfNull;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,114,return (bool.booleanValue() ? true : false);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,117,// Integer to Boolean methods
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,121,* <p>Convert an int to a boolean using the convention that zero is false.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,123,* @param value  the int to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,124,"* @return true if non-zero, false if zero"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,126,public static boolean toBoolean(int value) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,127,return (value == 0 ? false : true);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,131,* <p>Convert an int to a Boolean using the convention that zero is false.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,133,* @param value  the int to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,134,"* @return Boolean.TRUE if non-zero, Boolean.FALSE if zero, null if null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,136,public static Boolean toBooleanObject(int value) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,137,return (value == 0 ? Boolean.FALSE : Boolean.TRUE);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,141,* <p>Convert an Integer to a Boolean using the convention that zero is false.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,143,* <p>null will be converted to null.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,145,* @param value  the Integer to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,146,"* @return Boolean.TRUE if non-zero, Boolean.FALSE if zero, null if null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,148,public static Boolean toBooleanObject(Integer value) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,149,if (value == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,150,return null;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,152,return (value.intValue() == 0 ? Boolean.FALSE : Boolean.TRUE);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,156,* <p>Convert an int to a boolean specifying the conversion values.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,158,* @param value  the Integer to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,159,* @param trueValue  the value to match for true
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,160,* @param falseValue  the value to match for false
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,161,* @return true or false
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,162,* @throws IllegalArgumentException if no match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,164,"public static boolean toBoolean(int value, int trueValue, int falseValue) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,165,if (value == trueValue) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,166,return true;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,167,} else if (value == falseValue) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,168,return false;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,170,// no match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,171,"throw new IllegalArgumentException(""The Integer did not match either specified value"");"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,175,* <p>Convert an Integer to a boolean specifying the conversion values.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,177,* @param value  the Integer to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,178,"* @param trueValue  the value to match for true, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,179,"* @param falseValue  the value to match for false, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,180,* @return true or false
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,181,* @throws IllegalArgumentException if no match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,183,"public static boolean toBoolean(Integer value, Integer trueValue, Integer falseValue) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,184,if (value == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,185,if (trueValue == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,186,return true;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,187,} else if (falseValue == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,188,return false;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,190,} else if (value.equals(trueValue)) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,191,return true;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,192,} else if (value.equals(falseValue)) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,193,return false;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,195,// no match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,196,"throw new IllegalArgumentException(""The Integer did not match either specified value"");"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,200,* <p>Convert an int to a Boolean specifying the conversion values.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,202,* @param value  the Integer to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,203,* @param trueValue  the value to match for true
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,204,* @param falseValue  the value to match for false
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,205,* @param nullValue  the value to to match for null
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,206,"* @return Boolean.TRUE, Boolean.FALSE, or null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,207,* @throws IllegalArgumentException if no match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,209,"public static Boolean toBooleanObject(int value, int trueValue, int falseValue, int nullValue) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,210,if (value == trueValue) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,211,return Boolean.TRUE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,212,} else if (value == falseValue) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,213,return Boolean.FALSE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,214,} else if (value == nullValue) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,215,return null;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,217,// no match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,218,"throw new IllegalArgumentException(""The Integer did not match any specified value"");"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,222,* <p>Convert an Integer to a Boolean specifying the conversion values.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,224,* @param value  the Integer to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,225,"* @param trueValue  the value to match for true, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,226,"* @param falseValue  the value to match for false, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,227,"* @param nullValue  the value to to match for null, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,228,"* @return Boolean.TRUE, Boolean.FALSE, or null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,229,* @throws IllegalArgumentException if no match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,231,"public static Boolean toBooleanObject(Integer value, Integer trueValue, Integer falseValue, Integer nullValue) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,232,if (value == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,233,if (trueValue == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,234,return Boolean.TRUE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,235,} else if (falseValue == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,236,return Boolean.FALSE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,237,} else if (nullValue == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,238,return null;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,240,} else if (value.equals(trueValue)) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,241,return Boolean.TRUE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,242,} else if (value.equals(falseValue)) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,243,return Boolean.FALSE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,244,} else if (value.equals(nullValue)) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,245,return null;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,247,// no match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,248,"throw new IllegalArgumentException(""The Integer did not match any specified value"");"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,251,// Boolean to Integer methods
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,255,* <p>Convert a boolean to an int using the convention that zero is false.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,257,* @param bool  the boolean to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,258,"* @return one if true, zero if false"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,260,public static int toInteger(boolean bool) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,261,return (bool ? 1 : 0);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,265,* <p>Convert a boolean to an Integer using the convention that zero is false.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,267,* @param bool  the boolean to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,268,"* @return one if true, zero if false"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,270,public static Integer toIntegerObject(boolean bool) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,271,return (bool ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,275,* <p>Convert a Boolean to a Integer using the convention that zero is false.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,277,* <p>null will be converted to null.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,279,* @param bool  the Boolean to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,280,"* @return one if Boolean.TRUE, zero if Boolean.FALSE, null if null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,282,public static Integer toIntegerObject(Boolean bool) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,283,if (bool == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,284,return null;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,286,return (bool.booleanValue() ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,290,* <p>Convert a boolean to an int specifying the conversion values.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,292,* @param bool  the to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,293,* @param trueValue  the value to return if true
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,294,* @param falseValue  the value to return if false
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,295,* @param nullValue  the value to return if null
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,296,* @return the appropriate value
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,298,"public static int toInteger(boolean bool, int trueValue, int falseValue) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,299,return (bool ? trueValue : falseValue);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,303,* <p>Convert a Boolean to an int specifying the conversion values.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,305,* @param bool  the Boolean to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,306,* @param trueValue  the value to return if true
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,307,* @param falseValue  the value to return if false
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,308,* @param nullValue  the value to return if null
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,309,* @return the appropriate value
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,311,"public static int toInteger(Boolean bool, int trueValue, int falseValue, int nullValue) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,312,if (bool == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,313,return nullValue;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,315,return (bool.booleanValue() ? trueValue : falseValue);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,319,* <p>Convert a boolean to an Integer specifying the conversion values.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,321,* @param bool  the to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,322,"* @param trueValue  the value to return if true, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,323,"* @param falseValue  the value to return if false, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,324,"* @param nullValue  the value to return if null, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,325,* @return the appropriate value
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,327,"public static Integer toIntegerObject(boolean bool, Integer trueValue, Integer falseValue) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,328,return (bool ? trueValue : falseValue);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,332,* <p>Convert a Boolean to an Integer specifying the conversion values.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,334,* @param bool  the Boolean to convert
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,335,"* @param trueValue  the value to return if true, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,336,"* @param falseValue  the value to return if false, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,337,"* @param nullValue  the value to return if null, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,338,* @return the appropriate value
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,340,"public static Integer toIntegerObject(Boolean bool, Integer trueValue, Integer falseValue, Integer nullValue) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,341,if (bool == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,342,return nullValue;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,344,return (bool.booleanValue() ? trueValue : falseValue);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,347,// String to Boolean methods
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,351,* <p>Converts a String to a Boolean.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,353,"* <p>'true', 'on' or 'yes' (case insensitive) will return true."
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,354,"* 'false', 'off' or 'no' (case insensitive) will return false."
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,355,"* Otherwise, null is returned.</p>"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,357,* @param str  the String to check
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,358,"* @return the Boolean value of the string, null if no match or null input"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,360,public static Boolean toBooleanObject(String str) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,361,"if (""true"".equalsIgnoreCase(str)) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,362,return Boolean.TRUE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,363,"} else if (""false"".equalsIgnoreCase(str)) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,364,return Boolean.FALSE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,365,"} else if (""on"".equalsIgnoreCase(str)) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,366,return Boolean.TRUE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,367,"} else if (""off"".equalsIgnoreCase(str)) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,368,return Boolean.FALSE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,369,"} else if (""yes"".equalsIgnoreCase(str)) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,370,return Boolean.TRUE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,371,"} else if (""no"".equalsIgnoreCase(str)) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,372,return Boolean.FALSE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,374,// no match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,375,return null;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,379,* <p>Converts a String to a Boolean throwing an exception if no match.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,381,* @param str  the String to check
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,382,"* @param trueString  the String to match for true (case sensitive), may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,383,"* @param falseString  the String to match for false (case sensitive), may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,384,"* @param nullString  the String to match for null (case sensitive), may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,385,"* @return the Boolean value of the string, null if no match or null input"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,387,"public static Boolean toBooleanObject(String str, String trueString, String falseString, String nullString) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,388,if (str == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,389,if (trueString == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,390,return Boolean.TRUE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,391,} else if (falseString == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,392,return Boolean.FALSE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,393,} else if (nullString == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,394,return null;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,396,} else if (str.equals(trueString)) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,397,return Boolean.TRUE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,398,} else if (str.equals(falseString)) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,399,return Boolean.FALSE;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,400,} else if (str.equals(nullString)) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,401,return null;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,403,// no match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,404,"throw new IllegalArgumentException(""The String did not match any specified value"");"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,407,// String to boolean methods
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,411,* <p>Converts a String to a boolean.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,413,"* <p>'true', 'on' or 'yes' (case insensitive) will return true."
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,414,"* Otherwise, false is returned.</p>"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,416,* @param str  the String to check
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,417,"* @return the boolean value of the string, false if no match"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,419,public static boolean toBoolean(String str) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,420,"if (""true"".equalsIgnoreCase(str)) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,421,return true;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,422,"} else if (""on"".equalsIgnoreCase(str)) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,423,return true;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,424,"} else if (""yes"".equalsIgnoreCase(str)) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,425,return true;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,427,// no match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,428,return false;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,432,* <p>Converts a String to a Boolean throwing an exception if no match found.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,434,* <p>null is returned if there is no match.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,436,* @param str  the String to check
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,437,"* @param trueString  the String to match for true (case sensitive), may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,438,"* @param falseString  the String to match for false (case sensitive), may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,439,* @return the boolean value of the string
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,440,* @throws IllegalArgumentException if the String doesn't match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,442,"public static boolean toBoolean(String str, String trueString, String falseString) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,443,if (str == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,444,if (trueString == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,445,return true;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,446,} else if (falseString == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,447,return false;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,449,} else if (str.equals(trueString)) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,450,return true;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,451,} else if (str.equals(falseString)) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,452,return false;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,454,// no match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,455,"throw new IllegalArgumentException(""The String did not match either specified value"");"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,458,// Boolean to String methods
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,462,"* <p>Converts a Boolean to a String returning 'true', 'false', or <code>null</code>.</p>"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,464,* @param bool  the Boolean to check
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,465,"* @return 'true', 'false', or <code>null</code>"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,467,public static String toStringTrueFalse(Boolean bool) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,468,"return toString(bool, ""true"", ""false"", null);"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,472,"* <p>Converts a Boolean to a String returning 'on', 'off', or <code>null</code>.</p>"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,474,* @param bool  the Boolean to check
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,475,"* @return 'on', 'off', or <code>null</code>"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,477,public static String toStringOnOff(Boolean bool) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,478,"return toString(bool, ""on"", ""off"", null);"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,482,"* <p>Converts a Boolean to a String returning 'yes', 'no', or <code>null</code>.</p>"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,484,* @param bool  the Boolean to check
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,485,"* @return 'yes', 'no', or <code>null</code>"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,487,public static String toStringYesNo(Boolean bool) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,488,"return toString(bool, ""yes"", ""no"", null);"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,492,* <p>Converts a Boolean to a String returning one of the input Strings.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,494,* @param bool  the Boolean to check
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,495,"* @param trueString  the String to return if true, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,496,"* @param falseString  the String to return if false, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,497,"* @param nullString  the String to return if null, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,498,* @return one of the three input Strings
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,500,"public static String toString(Boolean bool, String trueString, String falseString, String nullString) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,501,if (bool == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,502,return nullString;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,504,return (bool.booleanValue() ? trueString : falseString);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,507,// boolean to String methods
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,511,* <p>Converts a boolean to a String returning 'true' or 'false'.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,513,* @param bool  the Boolean to check
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,514,"* @return 'true', 'false', or <code>null</code>"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,516,public static String toStringTrueFalse(boolean bool) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,517,"return toString(bool, ""true"", ""false"");"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,521,* <p>Converts a boolean to a String returning 'on' or 'off'.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,523,* @param bool  the Boolean to check
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,524,"* @return 'on', 'off', or <code>null</code>"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,526,public static String toStringOnOff(boolean bool) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,527,"return toString(bool, ""on"", ""off"");"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,531,* <p>Converts a boolean to a String returning 'yes' or 'no'.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,533,* @param bool  the Boolean to check
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,534,"* @return 'yes', 'no', or <code>null</code>"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,536,public static String toStringYesNo(boolean bool) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,537,"return toString(bool, ""yes"", ""no"");"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,541,* <p>Converts a boolean to a String returning one of the input Strings.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,543,* @param bool  the Boolean to check
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,544,"* @param trueString  the String to return if true, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,545,"* @param falseString  the String to return if false, may be null"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,546,* @return one of the two input Strings
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,548,"public static String toString(boolean bool, String trueString, String falseString) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,549,return (bool ? trueString : falseString);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,9,* are met:
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,54,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,59,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,61,* Unit tests {@link org.apache.commons.lang.BooleanUtils}.
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,63,* @author Stephen Colebourne
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,64,"* @version $Id: BooleanUtilsTest.java,v 1.1 2002/12/15 16:55:32 scolebourne Exp $"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,66,public class BooleanUtilsTest extends TestCase {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,68,public BooleanUtilsTest(String name) {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,69,super(name);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,72,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,73,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,76,public static Test suite() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,77,TestSuite suite = new TestSuite(BooleanUtilsTest.class);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,78,"suite.setName(""BooleanUtils Tests"");"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,79,return suite;
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,82,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,83,super.setUp();
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,86,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,87,super.tearDown();
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,91,public void test_toBooleanObject_boolean() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,92,"assertSame(Boolean.TRUE, BooleanUtils.toBooleanObject(true));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,93,"assertSame(Boolean.FALSE, BooleanUtils.toBooleanObject(false));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,96,public void test_toBoolean_Boolean() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,97,"assertEquals(true, BooleanUtils.toBoolean(Boolean.TRUE));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,98,"assertEquals(false, BooleanUtils.toBoolean(Boolean.FALSE));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,99,"assertEquals(false, BooleanUtils.toBoolean((Boolean) null));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,102,public void test_toBooleanDefaultIfNull_Boolean_boolean() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,103,"assertEquals(true, BooleanUtils.toBooleanDefaultIfNull(Boolean.TRUE, true));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,104,"assertEquals(true, BooleanUtils.toBooleanDefaultIfNull(Boolean.TRUE, false));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,105,"assertEquals(false, BooleanUtils.toBooleanDefaultIfNull(Boolean.FALSE, true));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,106,"assertEquals(false, BooleanUtils.toBooleanDefaultIfNull(Boolean.FALSE, false));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,107,"assertEquals(true, BooleanUtils.toBooleanDefaultIfNull((Boolean) null, true));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,108,"assertEquals(false, BooleanUtils.toBooleanDefaultIfNull((Boolean) null, false));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,113,public void test_toBoolean_int() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,114,"assertEquals(true, BooleanUtils.toBoolean(1));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,115,"assertEquals(true, BooleanUtils.toBoolean(-1));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,116,"assertEquals(false, BooleanUtils.toBoolean(0));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,119,public void test_toBooleanObject_int() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,120,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(1));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,121,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(-1));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,122,"assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(0));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,125,public void test_toBooleanObject_Integer() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,126,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(new Integer(1)));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,127,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(new Integer(-1)));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,128,"assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(new Integer(0)));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,129,"assertEquals(null, BooleanUtils.toBooleanObject((Integer) null));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,133,public void test_toBoolean_int_int_int() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,134,"assertEquals(true, BooleanUtils.toBoolean(6, 6, 7));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,135,"assertEquals(false, BooleanUtils.toBoolean(7, 6, 7));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,136,try {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,137,"BooleanUtils.toBoolean(8, 6, 7);"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,138,fail();
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,139,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,142,public void test_toBoolean_Integer_Integer_Integer() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,143,Integer six = new Integer(6);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,144,Integer seven = new Integer(7);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,145,"assertEquals(true, BooleanUtils.toBoolean(new Integer(6), six, seven));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,146,"assertEquals(false, BooleanUtils.toBoolean(new Integer(7), six, seven));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,147,try {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,148,"BooleanUtils.toBoolean(new Integer(8), six, seven);"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,149,fail();
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,150,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,154,public void test_toBooleanObject_int_int_int() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,155,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(6, 6, 7, 8));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,156,"assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(7, 6, 7, 8));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,157,"assertEquals(null, BooleanUtils.toBooleanObject(8, 6, 7, 8));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,158,try {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,159,"BooleanUtils.toBooleanObject(9, 6, 7, 8);"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,160,fail();
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,161,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,164,public void test_toBooleanObject_Integer_Integer_Integer() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,165,Integer six = new Integer(6);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,166,Integer seven = new Integer(7);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,167,Integer eight = new Integer(8);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,168,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(new Integer(6), six, seven, eight));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,169,"assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(new Integer(7), six, seven, eight));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,170,"assertEquals(null, BooleanUtils.toBooleanObject(new Integer(8), six, seven, eight));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,171,try {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,172,"BooleanUtils.toBooleanObject(new Integer(9), six, seven, eight);"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,173,fail();
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,174,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,178,public void test_toInteger_boolean() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,179,"assertEquals(1, BooleanUtils.toInteger(true));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,180,"assertEquals(0, BooleanUtils.toInteger(false));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,183,public void test_toIntegerObject_boolean() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,184,"assertEquals(new Integer(1), BooleanUtils.toIntegerObject(true));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,185,"assertEquals(new Integer(0), BooleanUtils.toIntegerObject(false));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,188,public void test_toIntegerObject_Boolean() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,189,"assertEquals(new Integer(1), BooleanUtils.toIntegerObject(Boolean.TRUE));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,190,"assertEquals(new Integer(0), BooleanUtils.toIntegerObject(Boolean.FALSE));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,191,"assertEquals(null, BooleanUtils.toIntegerObject((Boolean) null));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,195,public void test_toInteger_boolean_int_int() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,196,"assertEquals(6, BooleanUtils.toInteger(true, 6, 7));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,197,"assertEquals(7, BooleanUtils.toInteger(false, 6, 7));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,200,public void test_toInteger_Boolean_int_int_int() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,201,"assertEquals(6, BooleanUtils.toInteger(Boolean.TRUE, 6, 7, 8));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,202,"assertEquals(7, BooleanUtils.toInteger(Boolean.FALSE, 6, 7, 8));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,203,"assertEquals(8, BooleanUtils.toInteger(null, 6, 7, 8));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,206,public void test_toIntegerObject_boolean_Integer_Integer() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,207,Integer six = new Integer(6);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,208,Integer seven = new Integer(7);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,209,"assertEquals(six, BooleanUtils.toIntegerObject(true, six, seven));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,210,"assertEquals(seven, BooleanUtils.toIntegerObject(false, six, seven));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,213,public void test_toIntegerObject_Boolean_Integer_Integer_Integer() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,214,Integer six = new Integer(6);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,215,Integer seven = new Integer(7);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,216,Integer eight = new Integer(8);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,217,"assertEquals(six, BooleanUtils.toIntegerObject(Boolean.TRUE, six, seven, eight));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,218,"assertEquals(seven, BooleanUtils.toIntegerObject(Boolean.FALSE, six, seven, eight));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,219,"assertEquals(eight, BooleanUtils.toIntegerObject((Boolean) null, six, seven, eight));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,220,"assertEquals(null, BooleanUtils.toIntegerObject((Boolean) null, six, seven, null));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,225,public void test_toBooleanObject_String() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,226,"assertEquals(null, BooleanUtils.toBooleanObject((String) null));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,227,"assertEquals(null, BooleanUtils.toBooleanObject(""""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,228,"assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(""false""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,229,"assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(""no""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,230,"assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(""off""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,231,"assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(""FALSE""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,232,"assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(""NO""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,233,"assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(""OFF""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,234,"assertEquals(null, BooleanUtils.toBooleanObject(""oof""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,235,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(""true""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,236,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(""yes""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,237,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(""on""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,238,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(""TRUE""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,239,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(""ON""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,240,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(""YES""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,241,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(""TruE""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,244,public void test_toBooleanObject_String_String_String_String() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,245,"assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(""Y"", ""Y"", ""N"", ""U""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,246,"assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(""N"", ""Y"", ""N"", ""U""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,247,"assertEquals(null, BooleanUtils.toBooleanObject(""U"", ""Y"", ""N"", ""U""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,248,try {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,249,"BooleanUtils.toBooleanObject(null, ""Y"", ""N"", ""U"");"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,250,fail();
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,251,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,252,try {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,253,"BooleanUtils.toBooleanObject(""X"", ""Y"", ""N"", ""U"");"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,254,fail();
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,255,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,259,public void test_toBoolean_String() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,260,"assertEquals(false, BooleanUtils.toBoolean((String) null));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,261,"assertEquals(false, BooleanUtils.toBoolean(""""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,262,"assertEquals(false, BooleanUtils.toBoolean(""off""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,263,"assertEquals(false, BooleanUtils.toBoolean(""oof""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,264,"assertEquals(true, BooleanUtils.toBoolean(""true""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,265,"assertEquals(true, BooleanUtils.toBoolean(""yes""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,266,"assertEquals(true, BooleanUtils.toBoolean(""on""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,267,"assertEquals(true, BooleanUtils.toBoolean(""TRUE""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,268,"assertEquals(true, BooleanUtils.toBoolean(""ON""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,269,"assertEquals(true, BooleanUtils.toBoolean(""YES""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,270,"assertEquals(true, BooleanUtils.toBoolean(""TruE""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,273,public void test_toBoolean_String_String_String() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,274,"assertEquals(true, BooleanUtils.toBoolean(""Y"", ""Y"", ""N""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,275,"assertEquals(false, BooleanUtils.toBoolean(""N"", ""Y"", ""N""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,276,try {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,277,"BooleanUtils.toBoolean(null, ""Y"", ""N"");"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,278,fail();
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,279,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,280,try {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,281,"BooleanUtils.toBoolean(""X"", ""Y"", ""N"");"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,282,fail();
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,283,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,287,public void test_toStringTrueFalse_Boolean() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,288,"assertEquals(null, BooleanUtils.toStringTrueFalse((Boolean) null));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,289,"assertEquals(""true"", BooleanUtils.toStringTrueFalse(Boolean.TRUE));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,290,"assertEquals(""false"", BooleanUtils.toStringTrueFalse(Boolean.FALSE));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,293,public void test_toStringOnOff_Boolean() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,294,"assertEquals(null, BooleanUtils.toStringOnOff((Boolean) null));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,295,"assertEquals(""on"", BooleanUtils.toStringOnOff(Boolean.TRUE));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,296,"assertEquals(""off"", BooleanUtils.toStringOnOff(Boolean.FALSE));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,299,public void test_toStringYesNo_Boolean() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,300,"assertEquals(null, BooleanUtils.toStringYesNo((Boolean) null));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,301,"assertEquals(""yes"", BooleanUtils.toStringYesNo(Boolean.TRUE));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,302,"assertEquals(""no"", BooleanUtils.toStringYesNo(Boolean.FALSE));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,305,public void test_toString_Boolean_String_String_String() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,306,"assertEquals(""U"", BooleanUtils.toString((Boolean) null, ""Y"", ""N"", ""U""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,307,"assertEquals(""Y"", BooleanUtils.toString(Boolean.TRUE, ""Y"", ""N"", ""U""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,308,"assertEquals(""N"", BooleanUtils.toString(Boolean.FALSE, ""Y"", ""N"", ""U""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,312,public void test_toStringTrueFalse_boolean() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,313,"assertEquals(""true"", BooleanUtils.toStringTrueFalse(true));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,314,"assertEquals(""false"", BooleanUtils.toStringTrueFalse(false));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,317,public void test_toStringOnOff_boolean() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,318,"assertEquals(""on"", BooleanUtils.toStringOnOff(true));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,319,"assertEquals(""off"", BooleanUtils.toStringOnOff(false));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,322,public void test_toStringYesNo_boolean() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,323,"assertEquals(""yes"", BooleanUtils.toStringYesNo(true));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,324,"assertEquals(""no"", BooleanUtils.toStringYesNo(false));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,327,public void test_toString_boolean_String_String_String() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,328,"assertEquals(""Y"", BooleanUtils.toString(true, ""Y"", ""N""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,329,"assertEquals(""N"", BooleanUtils.toString(false, ""Y"", ""N""));"
False,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,65," @version $Id: LangTestSuite.java,v 1.6 2002/12/13 17:21:56 scolebourne Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,65,"* @version $Id: LangTestSuite.java,v 1.7 2002/12/15 16:55:32 scolebourne Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,90,suite.addTest(BooleanUtilsTest.suite());
