is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,635,  public final static boolean MAGIC_FLAG = CONST(true);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,635,* <pre>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,636,*     public final static boolean MAGIC_FLAG = ObjectUtils.CONST(true);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,637,* </pre>
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,651,  public final static byte MAGIC_BYTE = CONST(127);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,653,* <pre>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,654,*     public final static byte MAGIC_BYTE = ObjectUtils.CONST((byte) 127);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,655,* </pre>
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,667,  public final static byte MAGIC_CHAR = CONST('a');
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,671,* <pre>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,672,*     public final static byte MAGIC_BYTE = ObjectUtils.CONST_BYTE(127);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,673,* </pre>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,675,* This way any jars that refer to this field do not
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,676,* have to recompile themselves if the field's value
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,677,* changes at some future date.
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,679,* @param v the byte literal (as an int) value to return
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,680,* @throws IllegalArgumentException if the value passed to v
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,681,"*         is larger than a byte, that is, smaller than -128 or"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,682,*         larger than 127.
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,683,"* @return the byte v, unchanged"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,685,public static byte CONST_BYTE(final int v) throws IllegalArgumentException {
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,686,if (v < Byte.MIN_VALUE || v > Byte.MAX_VALUE) {
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,687,"throw new IllegalArgumentException(""Supplied value must be a valid byte literal between -128 and 127: ["" + v + ""]"");"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,689,return (byte) v;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,693,* This method returns the provided value unchanged.
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,694,* This can prevent javac from inlining a constant
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,695,"* field, e.g.,"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,697,* <pre>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,698,*     public final static char MAGIC_CHAR = ObjectUtils.CONST('a');
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,699,* </pre>
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,683,  public final static byte MAGIC_SHORT = CONST(123);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,715,* <pre>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,716,*     public final static short MAGIC_SHORT = ObjectUtils.CONST((short) 123);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,717,* </pre>
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,699,  public final static byte MAGIC_INT = CONST(123);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,733,* <pre>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,734,*     public final static short MAGIC_SHORT = ObjectUtils.CONST_SHORT(127);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,735,* </pre>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,737,* This way any jars that refer to this field do not
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,738,* have to recompile themselves if the field's value
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,739,* changes at some future date.
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,741,* @param v the short literal (as an int) value to return
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,742,* @throws IllegalArgumentException if the value passed to v
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,743,"*         is larger than a short, that is, smaller than -32768 or"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,744,*         larger than 32767.
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,745,"* @return the byte v, unchanged"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,747,public static short CONST_SHORT(final int v) throws IllegalArgumentException {
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,748,if (v < Short.MIN_VALUE || v > Short.MAX_VALUE) {
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,749,"throw new IllegalArgumentException(""Supplied value must be a valid byte literal between -32768 and 32767: ["" + v + ""]"");"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,751,return (short) v;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,756,* This method returns the provided value unchanged.
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,757,* This can prevent javac from inlining a constant
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,758,"* field, e.g.,"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,760,* <pre>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,761,*     public final static int MAGIC_INT = ObjectUtils.CONST(123);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,762,* </pre>
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,715,  public final static byte MAGIC_LONG = CONST(123L);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,778,* <pre>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,779,*     public final static long MAGIC_LONG = ObjectUtils.CONST(123L);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,780,* </pre>
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,731,  public final static byte MAGIC_FLOAT = CONST(1.0f);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,796,* <pre>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,797,*     public final static float MAGIC_FLOAT = ObjectUtils.CONST(1.0f);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,798,* </pre>
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,747,  public final static byte MAGIC_DOUBLE = CONST(1.0);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,814,* <pre>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,815,*     public final static double MAGIC_DOUBLE = ObjectUtils.CONST(1.0);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,816,* </pre>
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,763,"  public final static byte MAGIC_STRING = CONST(""abc"");"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,832,* <pre>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,833,"*     public final static String MAGIC_STRING = ObjectUtils.CONST(""abc"");"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,834,* </pre>
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,470,// Make sure documentation examples from Javadoc all work
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,471,// (this fixed a lot of my bugs when I these!)
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,473,// My bugs should be in a software engineering textbook
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,474,"// for ""Can you screw this up?""  The answer is, yes,"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,475,// you can even screw this up.  (When you == Julius)
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,477,boolean MAGIC_FLAG = ObjectUtils.CONST(true);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,478,byte MAGIC_BYTE1 = ObjectUtils.CONST((byte) 127);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,479,byte MAGIC_BYTE2 = ObjectUtils.CONST_BYTE(127);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,480,char MAGIC_CHAR = ObjectUtils.CONST('a');
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,481,short MAGIC_SHORT1 = ObjectUtils.CONST((short) 123);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,482,short MAGIC_SHORT2 = ObjectUtils.CONST_SHORT(127);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,483,int MAGIC_INT = ObjectUtils.CONST(123);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,484,long MAGIC_LONG1 = ObjectUtils.CONST(123L);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,485,long MAGIC_LONG2 = ObjectUtils.CONST(3);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,486,float MAGIC_FLOAT = ObjectUtils.CONST(1.0f);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,487,double MAGIC_DOUBLE = ObjectUtils.CONST(1.0);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,488,"String MAGIC_STRING = ObjectUtils.CONST(""abc"");"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,490,"assertEquals(true, MAGIC_FLAG);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,491,"assertEquals(127, MAGIC_BYTE1);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,492,"assertEquals(127, MAGIC_BYTE2);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,493,"assertEquals('a', MAGIC_CHAR);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,494,"assertEquals(123, MAGIC_SHORT1);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,495,"assertEquals(127, MAGIC_SHORT2);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,496,"assertEquals(123, MAGIC_INT);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,497,"assertEquals(123, MAGIC_LONG1);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,498,"assertEquals(3, MAGIC_LONG2);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,499,"assertEquals(1.0f, MAGIC_FLOAT, 0.0f);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,500,"assertEquals(1.0, MAGIC_DOUBLE, 0.0);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,501,"assertEquals(""abc"", MAGIC_STRING);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,503,try {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,504,ObjectUtils.CONST_BYTE(-129);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,505,"fail(""CONST_BYTE(-129): IllegalArgumentException should have been thrown."");"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,506,} catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,509,try {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,510,ObjectUtils.CONST_BYTE(128);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,511,"fail(""CONST_BYTE(128): IllegalArgumentException should have been thrown."");"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,512,} catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,515,try {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,516,ObjectUtils.CONST_SHORT(-32769);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,517,"fail(""CONST_SHORT(-32769): IllegalArgumentException should have been thrown."");"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,518,} catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,521,try {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,522,ObjectUtils.CONST_BYTE(32768);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,523,"fail(""CONST_SHORT(32768): IllegalArgumentException should have been thrown."");"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,524,} catch (IllegalArgumentException iae) {
