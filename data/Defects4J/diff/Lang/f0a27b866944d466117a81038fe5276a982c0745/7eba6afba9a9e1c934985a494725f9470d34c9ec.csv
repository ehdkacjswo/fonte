is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,5,* reserved.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,9,* are met:
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,17,*    distribution.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,54,package org.apache.commons.lang.math;
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,57,* <p><code>RandomUtils</code> is a wrapper that supports all possible
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,58,* Random methods via the java.lang.Math.random() method and its system-wide
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,59,* Random object.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,61,* @author Henri Yandell
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,62,* @since 2.0
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,63,"* @version $Id: RandomUtils.java,v 1.1 2003/04/02 16:28:15 bayard Exp $"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,65,public final class RandomUtils {
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,67,// Note: This class statically implements the Random class
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,68,//       except for public synchronized void setSeed(long);
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,69,//       and public synchronized double nextGaussian();
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,71,// should be possible?
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,72,//    public static void nextBytes(byte[]) {
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,76,"* Returns the next pseudorandom, uniformly distributed int value"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,77,* from the Math.random() sequence.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,79,* @return the random int
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,81,public static int nextInt() {
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,82,return nextInt(Integer.MAX_VALUE);
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,85,"* Returns a pseudorandom, uniformly distributed int value between 0"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,86,"* (inclusive) and the specified value (exclusive), from the"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,87,* Math.random() sequence.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,89,* @param n  the specified exclusive max-value
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,91,* @return the random int
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,93,public static int nextInt(int n) {
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,94,// check this cannot return 'n'
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,95,return (int)Math.random() * n;
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,98,"* Returns the next pseudorandom, uniformly distributed long value"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,99,* from the Math.random() sequence.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,101,* @return the random long
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,103,public static long nextLong() {
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,104,// possible loss of precision?
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,105,return (long)Math.random() * Long.MAX_VALUE;
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,108,"* Returns the next pseudorandom, uniformly distributed boolean value"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,109,* from the Math.random() sequence.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,111,* @return the random boolean
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,113,public static boolean nextBoolean() {
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,114,return (Math.random() > 0.5);
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,117,"* Returns the next pseudorandom, uniformly distributed float value"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,118,* between 0.0 and 1.0 from the Math.random() sequence.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,120,* @return the random float
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,122,public static float nextFloat() {
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,123,return (float)Math.random();
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,126,* Synonymous to the Math.random() call.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,128,* @return the random double
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,130,public static double nextDouble() {
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,131,return Math.random();
