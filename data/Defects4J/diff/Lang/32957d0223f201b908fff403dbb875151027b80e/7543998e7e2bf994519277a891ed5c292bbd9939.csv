is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,70," @version $Id: Entities.java,v 1.6 2003/05/24 13:29:44 alex Exp $"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,70,"* @version $Id: Entities.java,v 1.7 2003/05/24 15:11:36 alex Exp $"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,440,nt growBy = 100;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,441,rivate int size = 0;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,442,rivate String[] names = new String[growBy];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,443,rivate int[] values = new int[growBy];
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,440,protected int growBy = 100;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,441,protected int size = 0;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,442,protected String[] names;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,443,protected int[] values;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,445,public ArrayIntMap() {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,446,names = new String[growBy];
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,447,values = new int[growBy];
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,450,public ArrayIntMap(int growBy) {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,451,this.growBy = growBy;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,452,names = new String[growBy];
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,453,values = new int[growBy];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,452,rivate void ensureCapacity(int capacity) {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,463,protected void ensureCapacity(int capacity) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,483,ntMap map = new HashIntMap();
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,494,static class BinaryIntMap extends ArrayIntMap {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,496,public BinaryIntMap() {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,499,public BinaryIntMap(int growBy) {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,500,super(growBy);
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,503,// based on code in java.util.Arrays
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,504,private int binarySearch(int key) {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,505,int low = 0;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,506,int high = size - 1;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,508,while (low <= high) {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,509,int mid = (low + high) >> 1;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,510,int midVal = values[mid];
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,512,if (midVal < key)
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,513,low = mid + 1;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,514,else if (midVal > key)
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,515,high = mid - 1;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,516,else
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,517,return mid; // key found
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,519,return -(low + 1);  // key not found.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,522,"public void add(String name, int value) {"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,523,ensureCapacity(size + 1);
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,524,int insertAt = binarySearch(value);
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,525,if (insertAt > 0) return;    // note: this means you can't insert the same value twice
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,526,insertAt = -(insertAt + 1);  // binarySearch returns it negative and off-by-one
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,527,"System.arraycopy(values, insertAt, values, insertAt + 1, size - insertAt);"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,528,values[insertAt] = value;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,529,"System.arraycopy(names, insertAt, names, insertAt + 1, size - insertAt);"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,530,names[insertAt] = name;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,531,size++;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,534,public String name(int value) {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,535,int index = binarySearch(value);
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,536,if (index < 0) return null;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,537,return names[index];
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,541,IntMap map = new BinaryIntMap();
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,56,mport java.io.IOException;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,62,mport junit.extensions.RepeatedTest;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,65,rivate int COUNT = 200;
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,62,private int COUNT = 10000;
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,70,private static Entities binaryEntities;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,84,"/        suite.setName(""Entities Performance Tests"");"
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,85,"/        return new RepeatedTest(suite, 1000);"
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,94,tring entityValue = Entities.html40[i % Entities.html40.length][1];
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,95,har ch = (char) Integer.parseInt(entityValue);
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,90,char ch = html40value(i);
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,98,private char html40value(int i) {
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,99,String entityValue = Entities.html40[i % Entities.html40.length][1];
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,100,char ch = (char) Integer.parseInt(entityValue);
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,101,return ch;
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,128,public void testBuildBinary() throws Exception {
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,129,for (int i = 0; i < COUNT; ++i) {
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,130,binaryEntities = new Entities();
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,131,binaryEntities.map = new Entities.BinaryIntMap();
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,132,Entities.fillWithHtml40Entities(binaryEntities);
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,136,public void testLookupHash() throws Exception {
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,137,lookup(hashEntities);
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,140,public void testLookupTree() throws Exception {
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,141,lookup(treeEntities);
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,144,public void testLookupArray() throws Exception {
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,145,lookup(arrayEntities);
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,148,public void testLookupBinary() throws Exception {
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,149,lookup(binaryEntities);
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,164,public void testEscapeBinary() throws Exception {
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,165,escapeIt(binaryEntities);
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,180,public void testUnescapeBinary() throws Exception {
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,181,unescapeIt(binaryEntities);
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,184,private void lookup(Entities entities) {
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,185,for (int i = 0; i < COUNT*1000; ++i) {
True,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,186,entities.entityName(html40value(i));
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,68," @version $Id: EntitiesTest.java,v 1.3 2003/05/24 13:29:44 alex Exp $"
True,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,68,"* @version $Id: EntitiesTest.java,v 1.4 2003/05/24 15:11:36 alex Exp $"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,138,ntities.ArrayIntMap map = new Entities.ArrayIntMap();
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,139,ap.growBy = 2;
True,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,138,Entities.ArrayIntMap map = new Entities.ArrayIntMap(2);
True,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,139,checkSomeIntMap(map);
True,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,142,public void testTreeIntMap() throws Exception
True,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,144,Entities.IntMap map = new Entities.TreeIntMap();
True,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,145,checkSomeIntMap(map);
True,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,148,public void testHashIntMap() throws Exception
True,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,150,Entities.IntMap map = new Entities.HashIntMap();
True,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,151,checkSomeIntMap(map);
True,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,154,public void testBinaryIntMap() throws Exception
True,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,156,Entities.BinaryIntMap map = new Entities.BinaryIntMap(2);
True,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,157,checkSomeIntMap(map);
True,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,160,private void checkSomeIntMap(Entities.IntMap map) {
