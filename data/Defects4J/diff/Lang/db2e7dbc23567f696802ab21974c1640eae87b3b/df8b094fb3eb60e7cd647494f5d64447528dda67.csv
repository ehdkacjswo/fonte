is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,2, Copyright 2004-2005 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,2,* Copyright 2004-2006 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,157,* Increments the value.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,159,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,161,public void increment() {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,162,value++;
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,166,* Decrements the value.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,168,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,170,public void decrement() {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,171,value--;
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,176,* Adds a value.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,178,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,179,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,181,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,183,public void add(byte operand) {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,184,this.value += operand;
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,188,* Adds a value.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,190,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,191,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,192,* @throws NullPointerException
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,193,*             if the object is null
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,195,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,197,public void add(Number operand) {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,198,this.value += operand.byteValue();
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,202,* Subtracts a value.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,204,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,205,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,207,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,209,public void subtract(byte operand) {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,210,this.value -= operand;
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,214,* Subtracts a value.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,216,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,217,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,218,* @throws NullPointerException
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,219,*             if the object is null
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,221,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,223,public void subtract(Number operand) {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,224,this.value -= operand.byteValue();
False,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,2, Copyright 2004-2005 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,2,* Copyright 2004-2006 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,168,* Increments the value.
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,170,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,172,public void increment() {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,173,value++;
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,177,* Decrements the value.
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,179,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,181,public void decrement() {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,182,value--;
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,187,* Adds a value.
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,189,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,190,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,192,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,194,public void add(double operand) {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,195,this.value += operand;
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,199,* Adds a value.
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,201,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,202,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,203,* @throws NullPointerException
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,204,*             if the object is null
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,206,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,208,public void add(Number operand) {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,209,this.value += operand.doubleValue();
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,213,* Subtracts a value.
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,215,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,216,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,218,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,220,public void subtract(double operand) {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,221,this.value -= operand;
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,225,* Subtracts a value.
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,227,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,228,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,229,* @throws NullPointerException
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,230,*             if the object is null
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,232,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,234,public void subtract(Number operand) {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,235,this.value -= operand.doubleValue();
False,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,2, Copyright 2004-2005 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,2,* Copyright 2004-2006 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,102,* Increments the value.
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,104,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,106,public void increment() {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,107,value++;
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,111,* Decrements the value.
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,113,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,115,public void decrement() {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,116,value--;
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,121,* Adds a value.
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,123,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,124,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,126,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,128,public void add(float operand) {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,129,this.value += operand;
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,133,* Adds a value.
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,135,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,136,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,137,* @throws NullPointerException
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,138,*             if the object is null
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,140,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,142,public void add(Number operand) {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,143,this.value += operand.floatValue();
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,147,* Subtracts a value.
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,149,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,150,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,152,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,154,public void subtract(float operand) {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,155,this.value -= operand;
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,159,* Subtracts a value.
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,161,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,162,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,163,* @throws NullPointerException
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,164,*             if the object is null
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,166,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,168,public void subtract(Number operand) {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,169,this.value -= operand.floatValue();
False,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,2, Copyright 2004-2005 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,2,* Copyright 2004-2006 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,100,* Increments the value.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,102,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,104,public void increment() {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,105,value++;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,109,* Decrements the value.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,111,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,113,public void decrement() {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,114,value--;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,119,* Adds a value.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,121,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,122,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,124,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,126,public void add(int operand) {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,127,this.value += operand;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,131,* Adds a value.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,133,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,134,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,135,* @throws NullPointerException
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,136,*             if the object is null
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,138,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,140,public void add(Number operand) {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,141,this.value += operand.intValue();
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,145,* Subtracts a value.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,147,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,148,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,150,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,152,public void subtract(int operand) {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,153,this.value -= operand;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,157,* Subtracts a value.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,159,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,160,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,161,* @throws NullPointerException
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,162,*             if the object is null
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,164,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,166,public void subtract(Number operand) {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,167,this.value -= operand.intValue();
False,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,2, Copyright 2004-2005 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,2,* Copyright 2004-2006 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,100,* Increments the value.
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,102,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,104,public void increment() {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,105,value++;
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,109,* Decrements the value.
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,111,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,113,public void decrement() {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,114,value--;
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,119,* Adds a value.
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,121,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,122,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,124,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,126,public void add(long operand) {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,127,this.value += operand;
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,131,* Adds a value.
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,133,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,134,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,135,* @throws NullPointerException
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,136,*             if the object is null
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,138,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,140,public void add(Number operand) {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,141,this.value += operand.longValue();
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,145,* Subtracts a value.
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,147,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,148,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,150,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,152,public void subtract(long operand) {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,153,this.value -= operand;
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,157,* Subtracts a value.
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,159,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,160,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,161,* @throws NullPointerException
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,162,*             if the object is null
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,164,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,166,public void subtract(Number operand) {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,167,this.value -= operand.longValue();
False,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,2, Copyright 2004-2005 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,2,* Copyright 2004-2006 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,100,* Increments the value.
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,102,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,104,public void increment() {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,105,value++;
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,109,* Decrements the value.
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,111,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,113,public void decrement() {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,114,value--;
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,119,* Adds a value.
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,121,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,122,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,124,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,126,public void add(short operand) {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,127,this.value += operand;
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,131,* Adds a value.
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,133,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,134,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,135,* @throws NullPointerException
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,136,*             if the object is null
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,138,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,140,public void add(Number operand) {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,141,this.value += operand.shortValue();
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,145,* Subtracts a value.
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,147,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,148,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,150,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,152,public void subtract(short operand) {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,153,this.value -= operand;
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,157,* Subtracts a value.
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,159,* @param operand
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,160,*            the value to add
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,161,* @throws NullPointerException
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,162,*             if the object is null
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,164,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,166,public void subtract(Number operand) {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,167,this.value -= operand.shortValue();
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,2, Copyright 2002-2005 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,2,* Copyright 2002-2006 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,147,public void testIncrement() {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,148,MutableByte mutNum = new MutableByte((byte) 1);
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,149,mutNum.increment();
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,151,"assertEquals(2, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,152,"assertEquals(2L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,155,public void testDecrement() {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,156,MutableByte mutNum = new MutableByte((byte) 1);
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,157,mutNum.decrement();
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,159,"assertEquals(0, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,160,"assertEquals(0L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,163,public void testAddValuePrimitive() {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,164,MutableByte mutNum = new MutableByte((byte) 1);
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,165,mutNum.add((byte)1);
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,167,"assertEquals((byte) 2, mutNum.byteValue());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,170,public void testAddValueObject() {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,171,MutableByte mutNum = new MutableByte((byte) 1);
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,172,mutNum.add(new Integer(1));
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,174,"assertEquals((byte) 2, mutNum.byteValue());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,177,public void testSubtractValuePrimitive() {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,178,MutableByte mutNum = new MutableByte((byte) 1);
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,179,mutNum.subtract((byte) 1);
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,181,"assertEquals((byte) 0, mutNum.byteValue());"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,184,public void testSubtractValueObject() {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,185,MutableByte mutNum = new MutableByte((byte) 1);
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,186,mutNum.subtract(new Integer(1));
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,188,"assertEquals((byte) 0, mutNum.byteValue());"
False,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,2, Copyright 2002-2005 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,2,* Copyright 2002-2006 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,158,public void testIncrement() {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,159,MutableDouble mutNum = new MutableDouble(1);
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,160,mutNum.increment();
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,162,"assertEquals(2, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,163,"assertEquals(2L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,166,public void testDecrement() {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,167,MutableDouble mutNum = new MutableDouble(1);
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,168,mutNum.decrement();
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,170,"assertEquals(0, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,171,"assertEquals(0L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,174,public void testAddValuePrimitive() {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,175,MutableDouble mutNum = new MutableDouble(1);
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,176,mutNum.add(1.1d);
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,178,"assertEquals(2.1d, mutNum.doubleValue(), 0.01d);"
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,181,public void testAddValueObject() {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,182,MutableDouble mutNum = new MutableDouble(1);
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,183,mutNum.add(new Double(1.1d));
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,185,"assertEquals(2.1d, mutNum.doubleValue(), 0.01d);"
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,188,public void testSubtractValuePrimitive() {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,189,MutableDouble mutNum = new MutableDouble(1);
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,190,mutNum.subtract(0.9d);
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,192,"assertEquals(0.1d, mutNum.doubleValue(), 0.01d);"
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,195,public void testSubtractValueObject() {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,196,MutableDouble mutNum = new MutableDouble(1);
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,197,mutNum.subtract(new Double(0.9d));
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,199,"assertEquals(0.1d, mutNum.doubleValue(), 0.01d);"
False,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,2, Copyright 2002-2005 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,2,* Copyright 2002-2006 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,158,public void testIncrement() {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,159,MutableFloat mutNum = new MutableFloat(1);
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,160,mutNum.increment();
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,162,"assertEquals(2, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,163,"assertEquals(2L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,166,public void testDecrement() {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,167,MutableFloat mutNum = new MutableFloat(1);
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,168,mutNum.decrement();
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,170,"assertEquals(0, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,171,"assertEquals(0L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,174,public void testAddValuePrimitive() {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,175,MutableFloat mutNum = new MutableFloat(1);
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,176,mutNum.add(1.1f);
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,178,"assertEquals(2.1f, mutNum.floatValue(), 0.01f);"
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,181,public void testAddValueObject() {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,182,MutableFloat mutNum = new MutableFloat(1);
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,183,mutNum.add(new Float(1.1f));
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,185,"assertEquals(2.1f, mutNum.floatValue(), 0.01f);"
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,188,public void testSubtractValuePrimitive() {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,189,MutableFloat mutNum = new MutableFloat(1);
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,190,mutNum.subtract(0.9f);
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,192,"assertEquals(0.1f, mutNum.floatValue(), 0.01f);"
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,195,public void testSubtractValueObject() {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,196,MutableFloat mutNum = new MutableFloat(1);
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,197,mutNum.subtract(new Float(0.9f));
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,199,"assertEquals(0.1f, mutNum.floatValue(), 0.01f);"
False,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,2, Copyright 2002-2005 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,2,* Copyright 2002-2006 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,153,public void testIncrement() {
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,154,MutableInt mutNum = new MutableInt(1);
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,155,mutNum.increment();
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,157,"assertEquals(2, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,158,"assertEquals(2L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,161,public void testDecrement() {
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,162,MutableInt mutNum = new MutableInt(1);
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,163,mutNum.decrement();
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,165,"assertEquals(0, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,166,"assertEquals(0L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,169,public void testAddValuePrimitive() {
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,170,MutableInt mutNum = new MutableInt(1);
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,171,mutNum.add(1);
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,173,"assertEquals(2, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,174,"assertEquals(2L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,177,public void testAddValueObject() {
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,178,MutableInt mutNum = new MutableInt(1);
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,179,mutNum.add(new Integer(1));
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,181,"assertEquals(2, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,182,"assertEquals(2L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,185,public void testSubtractValuePrimitive() {
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,186,MutableInt mutNum = new MutableInt(1);
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,187,mutNum.subtract(1);
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,189,"assertEquals(0, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,190,"assertEquals(0L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,193,public void testSubtractValueObject() {
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,194,MutableInt mutNum = new MutableInt(1);
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,195,mutNum.subtract(new Integer(1));
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,197,"assertEquals(0, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,198,"assertEquals(0L, mutNum.longValue());"
False,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,2, Copyright 2002-2005 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,2,* Copyright 2002-2006 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,147,public void testIncrement() {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,148,MutableLong mutNum = new MutableLong(1);
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,149,mutNum.increment();
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,151,"assertEquals(2, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,152,"assertEquals(2L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,155,public void testDecrement() {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,156,MutableLong mutNum = new MutableLong(1);
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,157,mutNum.decrement();
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,159,"assertEquals(0, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,160,"assertEquals(0L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,163,public void testAddValuePrimitive() {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,164,MutableLong mutNum = new MutableLong(1);
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,165,mutNum.add(1);
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,167,"assertEquals(2, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,168,"assertEquals(2L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,171,public void testAddValueObject() {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,172,MutableLong mutNum = new MutableLong(1);
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,173,mutNum.add(new Long(1));
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,175,"assertEquals(2, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,176,"assertEquals(2L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,179,public void testSubtractValuePrimitive() {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,180,MutableLong mutNum = new MutableLong(1);
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,181,mutNum.subtract(1);
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,183,"assertEquals(0, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,184,"assertEquals(0L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,187,public void testSubtractValueObject() {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,188,MutableLong mutNum = new MutableLong(1);
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,189,mutNum.subtract(new Long(1));
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,191,"assertEquals(0, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,192,"assertEquals(0L, mutNum.longValue());"
False,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,2, Copyright 2002-2005 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,2,* Copyright 2002-2006 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,147,public void testIncrement() {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,148,MutableShort mutNum = new MutableShort((short) 1);
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,149,mutNum.increment();
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,151,"assertEquals(2, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,152,"assertEquals(2L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,155,public void testDecrement() {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,156,MutableShort mutNum = new MutableShort((short) 1);
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,157,mutNum.decrement();
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,159,"assertEquals(0, mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,160,"assertEquals(0L, mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,163,public void testAddValuePrimitive() {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,164,MutableShort mutNum = new MutableShort((short) 1);
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,165,mutNum.add((short) 1);
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,167,"assertEquals((short) 2, mutNum.shortValue());"
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,170,public void testAddValueObject() {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,171,MutableShort mutNum = new MutableShort((short) 1);
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,172,mutNum.add(new Short((short) 1));
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,174,"assertEquals((short) 2, mutNum.shortValue());"
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,177,public void testSubtractValuePrimitive() {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,178,MutableShort mutNum = new MutableShort((short) 1);
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,179,mutNum.subtract((short) 1);
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,181,"assertEquals((short) 0, mutNum.shortValue());"
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,184,public void testSubtractValueObject() {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,185,MutableShort mutNum = new MutableShort((short) 1);
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,186,mutNum.subtract(new Short((short) 1));
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,188,"assertEquals((short) 0, mutNum.shortValue());"
