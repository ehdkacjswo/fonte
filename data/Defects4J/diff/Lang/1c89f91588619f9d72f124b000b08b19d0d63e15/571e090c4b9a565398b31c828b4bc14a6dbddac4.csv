is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,50,/     * <p>Wraps a block of text to a specified line length using '\n' as
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,51,/     * a newline.</p>
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,53,"/     * <p>This method takes a block of text, which might have long lines in it"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,54,/     * and wraps the long lines based on the supplied lineLength parameter.</p>
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,56,"/     * <p>If a single word is longer than the line length (eg. a URL), it will"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,57,"/     * not be broken, and will display beyond the expected width.</p>"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,59,"/     * <p>If there are tabs in inString, you are going to get results that are"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,60,/     * a bit strange. Tabs are a single character but are displayed as 4 or 8
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,61,/     * spaces. Remove the tabs.</p>
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,63,"/     * @param str  text which is in need of word-wrapping, may be null"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,64,/     * @param lineLength  the column to wrap the words at
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,65,/     * @return the text with all the long lines word-wrapped
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,66,/     *  <code>null</code> if null string input
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,68,"/    public static String wrapText(String str, int lineLength) {"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,69,"/        return wrap(str, null, lineLength);"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,73,/     * <p>Wraps a block of text to a specified line length.</p>
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,75,"/     * <p>This method takes a block of text, which might have long lines in it"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,76,/     * and wraps the long lines based on the supplied lineLength parameter.</p>
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,78,"/     * <p>If a single word is longer than the wrapColumn (eg. a URL), it will"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,79,"/     * not be broken, and will display beyond the expected width.</p>"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,81,"/     * <p>If there are tabs in inString, you are going to get results that are"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,82,/     * a bit strange. Tabs are a single character but are displayed as 4 or 8
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,83,/     * spaces. Remove the tabs.</p>
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,85,"/     * @param str  text which is in need of word-wrapping, may be null"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,86,"/     * @param newLineChars  the characters that define a newline, null treated as \n"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,87,/     * @param lineLength  the column to wrap the words at
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,88,/     * @return the text with all the long lines word-wrapped
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,89,/     *  <code>null</code> if null string input
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,91,"/    public static String wrapText(String str, String newLineChars, int lineLength) {"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,92,/        if (str == null) {
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,93,/            return null;
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,95,/        if (newLineChars == null) {
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,96,"/            newLineChars = ""\n"";"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,98,"/        StringTokenizer lineTokenizer = new StringTokenizer(str, newLineChars, true);"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,99,/        StringBuffer stringBuffer = new StringBuffer();
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,101,/        while (lineTokenizer.hasMoreTokens()) {
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,102,/            try {
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,103,/                String nextLine = lineTokenizer.nextToken();
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,105,/                if (nextLine.length() > lineLength) {
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,106,/                    // This line is long enough to be wrapped.
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,107,"/                    nextLine = wrapLine(nextLine, null, lineLength, false);"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,110,/                stringBuffer.append(nextLine);
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,112,/            } catch (NoSuchElementException nsee) {
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,113,"/                // thrown by nextToken(), but I don't know why it would"
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,114,/                break;
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,118,/        return stringBuffer.toString();
False,src/java/org/apache/commons/lang3/WordUtils.java,src/java/org/apache/commons/lang3/WordUtils.java,121,/ Wrapping
