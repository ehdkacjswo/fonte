is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,268, Create a type-safe generic array.
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,268,* <p>Create a type-safe generic array.</p>
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,270, <p>Arrays are covariant i.e. they cannot be created from a generic type:</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,270,* <p>The Java language does not allow an array to be created from a generic type:</p>
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,274,eturn T[size]; // compiler error here
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,274,return new T[size]; // compiler error here
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,281," <p>Therefore new arrays of generic types can be created with this method, e.g. an arrays"
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,282, of Strings:</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,281,* <p>Therefore new arrays of generic types can be created with this method.
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,282,"* For example, an array of Strings can be created:</p>"
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,289," The method is typically used in scenarios, where the caller itself uses generic types"
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,290, that have to be combined into an array.
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,289,"* <p>The method is typically used in scenarios, where the caller itself uses generic types"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,290,* that have to be combined into an array.</p>
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,292," Note, this method makes only sense to provide arguments of the same type so that the"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,292,"* <p>Note, this method makes only sense to provide arguments of the same type so that the"
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,294, type explicitly like in <code>Number[] array = ArrayUtils.&lt;Number&gt;toArray(new
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,295," Integer(42), new Double(Math.PI))</code>, there is no real advantage to <code>new"
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,296," Number[] {new Integer(42), new Double(Math.PI)}</code> anymore."
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,294,* type explicitly like in
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,295,"* <code>Number[] array = ArrayUtils.&lt;Number&gt;toArray(new Integer(42), new Double(Math.PI))</code>,"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,296,* there is no real advantage when compared to
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,297,"* <code>new Number[] {new Integer(42), new Double(Math.PI)}</code>.</p>"
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,299, @param  items the items of the array
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,300, @return the array
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,300,"* @param  items  the varargs array items, null allowed"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,301,"* @return the array, not null unless a null array is passed in"
