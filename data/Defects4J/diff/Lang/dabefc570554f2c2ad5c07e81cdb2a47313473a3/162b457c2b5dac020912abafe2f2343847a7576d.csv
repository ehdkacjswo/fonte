is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,46,"          .addContextValue(""accountNumber"", accountNumber)"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,47,"          .addContextValue(""amountPosted"", amountPosted)"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,48,"          .addContextValue(""previousBalance"", previousBalance)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,46,"*          .addContextValue(""Account Number"", accountNumber)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,47,"*          .addContextValue(""Amount Posted"", amountPosted)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,48,"*          .addContextValue(""Previous Balance"", previousBalance)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,51,* </pre> or improve diagnose data at a higher level:
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,52,* <pre>
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,53,*   try {
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,55,*   } catch (ContextedException e) {
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,56,"*     throw e.setContextValue(""Transaction Id"", transactionId);"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,57,*   } catch (Exception e) {
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,58,*     if (e instanceof ExceptionContext) {
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,59,"*       e.setContextValue(""Transaction Id"", transactionId);"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,61,*     throw e;
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,57,  [accountNumber=null]
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,58,  [amountPosted=100.00]
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,59,  [previousBalance=-2.17]
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,70,*  [1:Account Number=null]
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,71,*  [2:Amount Posted=100.00]
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,72,*  [3:Previous Balance=-2.17]
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,73,*  [4:Transaction Id=94ef1d15-d443-46c4-822b-637f26244899]
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,159, Adds information helpful to a developer in diagnosing and correcting the problem.
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,160," For the information to be meaningful, the value passed should have a reasonable"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,161, toString() implementation.
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,162, Different values can be added with the same label multiple times.
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,163, <p>
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,164, Note: This exception is only serializable if the object added as value is serializable.
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,165, </p>
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,167," @param pair  a pair of textual label and information, not {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,168," @return {@code this}, for method chaining, not {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,169, @throws NullPointerException if {@code pair} is {@code null}
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,171,"ublic ContextedException addContextValue(Pair<String, Object> pair) {"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,172,his.exceptionContext.addContextValue(pair);
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,173,eturn this;
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,195, Sets information helpful to a developer in diagnosing and correcting the problem.
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,196," For the information to be meaningful, the value passed should have a reasonable"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,197, toString() implementation.
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,198, Any existing values with the same labels are removed before the new one is added.
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,199, <p>
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,200, Note: This exception is only serializable if the object added as value is serializable.
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,201, </p>
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,203," @param pair  a pair of textual label and information, not {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,204," @return {@code this}, for method chaining, not {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,205, @throws NullPointerException if {@code pair} is {@code null}
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,207,"ublic ContextedException setContextValue(Pair<String, Object> pair) {"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,208,his.exceptionContext.setContextValue(pair);
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,209,eturn this;
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,45,"     throw new ContextedException(""Error posting account transaction"", e)"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,46,"          .addContextValue(""accountNumber"", accountNumber)"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,47,"          .addContextValue(""amountPosted"", amountPosted)"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,48,"          .addContextValue(""previousBalance"", previousBalance)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,45,"*     throw new ContextedRuntimeException(""Error posting account transaction"", e)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,46,"*          .addContextValue(""Account Number"", accountNumber)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,47,"*          .addContextValue(""Amount Posted"", amountPosted)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,48,"*          .addContextValue(""Previous Balance"", previousBalance)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,51,* </pre> or improve diagnose data at a higher level:
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,52,* <pre>
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,53,*   try {
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,55,*   } catch (ContextedRuntimeException e) {
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,56,"*     throw e.setContextValue(""Transaction Id"", transactionId);"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,57,*   } catch (Exception e) {
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,58,*     if (e instanceof ExceptionContext) {
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,59,"*       e.setContextValue(""Transaction Id"", transactionId);"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,61,*     throw e;
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,57,  [accountNumber=null]
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,58,  [amountPosted=100.00]
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,59,  [previousBalance=-2.17]
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,70,*  [1:Account Number=null]
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,71,*  [2:Amount Posted=100.00]
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,72,*  [3:Previous Balance=-2.17]
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,73,*  [4:Transaction Id=94ef1d15-d443-46c4-822b-637f26244899]
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,159, Adds information helpful to a developer in diagnosing and correcting the problem.
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,160," For the information to be meaningful, the value passed should have a reasonable"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,161, toString() implementation.
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,162, Different values can be added with the same label multiple times.
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,163, <p>
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,164, Note: This exception is only serializable if the object added as value is serializable.
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,165, </p>
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,167," @param pair  a pair of textual label and information, not {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,168," @return {@code this}, for method chaining, not {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,169, @throws NullPointerException if {@code pair} is {@code null}
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,171,"ublic ContextedRuntimeException addContextValue(Pair<String, Object> pair) {"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,172,his.exceptionContext.addContextValue(pair);
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,173,eturn this;
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,195, Sets information helpful to a developer in diagnosing and correcting the problem.
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,196," For the information to be meaningful, the value passed should have a reasonable"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,197, toString() implementation.
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,198, Any existing values with the same labels are removed before the new one is added.
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,199, <p>
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,200, Note: This exception is only serializable if the object added as value is serializable.
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,201, </p>
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,203," @param pair  a pair of textual label and information, not {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,204," @return {@code this}, for method chaining, not {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,205, @throws NullPointerException if {@code pair} is {@code null}
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,207,"ublic ContextedRuntimeException setContextValue(Pair<String, Object> pair) {"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,208,his.exceptionContext.setContextValue(pair);
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,209,eturn this;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,35,* </p>
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,37,* @see ContextedException
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,38,* @see ContextedRuntimeException
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,50,"eturn addContextValue(new ImmutablePair<String, Object>(label, value));"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,54, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,56,"ublic DefaultExceptionContext addContextValue(Pair<String, Object> pair) {"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,57,f (pair == null) {
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,58,hrow new NullPointerException();
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,60,ontextValues.add(pair);
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,53,"contextValues.add(new ImmutablePair<String, Object>(label, value));"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,68,"eturn setContextValue(new ImmutablePair<String, Object>(label, value));"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,72, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,74,"ublic DefaultExceptionContext setContextValue(Pair<String, Object> pair) {"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,75,inal String label = pair.getKey(); // implicit NPE
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,82,eturn addContextValue(pair);
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,67,"addContextValue(label, value);"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,68,return this;
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,146,bject value;
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,147,tring valueStr;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,132,int i = 0;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,135,buffer.append(++i);
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,136,buffer.append(':');
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,152,alue = pair.getValue();
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,139,final Object value = pair.getValue();
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,143,String valueStr;
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,52, Adds a contextual label-value pair into this context.
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,53, <p>
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,54," The pair will be added to the context, independently of an already"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,55, existing pair with the same label.
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,56, </p>
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,58," @param pair  the label-value pair to add, not {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,59," @return {@code this}, for method chaining, not {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,60, @throws NullPointerException if pair is {@code null}
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,62,"ublic ExceptionContext addContextValue(Pair<String, Object> pair);"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,78, Sets a contextual label-value pair into this context.
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,79, <p>
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,80," The pair will be added normally, but any existing label-value pair with"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,81, the same label is removed from the context.
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,82, </p>
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,84," @param pair  the label-value pair to add, not {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,85," @return {@code this}, for method chaining, not {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,86, @throws NullPointerException if pair is {@code null}
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,88,"ublic ExceptionContext setContextValue(Pair<String, Object> pair);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,26,import org.apache.commons.lang3.SerializationUtils;
False,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,34,ublic abstract class AbstractExceptionContextTest<T extends ExceptionContext> extends TestCase {
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,35,public abstract class AbstractExceptionContextTest<T extends ExceptionContext & Serializable> extends TestCase {
False,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,40,rotected static class ObjectWithFaultyToString implements Serializable {
False,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,42,rivate static final long serialVersionUID = 3495843995332310458L;
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,41,protected static class ObjectWithFaultyToString {
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,169,public void testJavaSerialization() {
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,170,"exceptionContext.setContextValue(""test Poorly written obj"", ""serializable replacement"");"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,172,"@SuppressWarnings(""unchecked"")"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,173,T clone = (T)SerializationUtils.deserialize(SerializationUtils.serialize(exceptionContext));
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,174,"assertEquals(exceptionContext.getFormattedExceptionMessage(null), clone.getFormattedExceptionMessage(null));"
