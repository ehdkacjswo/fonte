is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6071,"han creating and retaining a matrix of size s.length()+1 by t.length()+1,"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6072,"e maintain two single-dimensional arrays of length s.length()+1.  The first, d,"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6071,"than creating and retaining a matrix of size s.length() + 1 by t.length() + 1,"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6072,"we maintain two single-dimensional arrays of length s.length() + 1.  The first, d,"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6104,"nt p[] = new int[n+1]; //'previous' cost array, horizontally"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6105,"nt d[] = new int[n+1]; // cost array, horizontally"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6104,"int p[] = new int[n + 1]; //'previous' cost array, horizontally"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6105,"int d[] = new int[n + 1]; // cost array, horizontally"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6116,or (i = 0; i<=n; i++) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6116,for (i = 0; i <= n; i++) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6120,or (j = 1; j<=m; j++) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6121,_j = t.charAt(j-1);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6120,for (j = 1; j <= m; j++) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6121,t_j = t.charAt(j - 1);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6124,or (i=1; i<=n; i++) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6125,ost = s.charAt(i-1)==t_j ? 0 : 1;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6124,for (i = 1; i <= n; i++) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6125,cost = s.charAt(i - 1) == t_j ? 0 : 1;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6127,"[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6127,"d[i] = Math.min(Math.min(d[i - 1] + 1, p[i] + 1), p[i - 1] + cost);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6174,f(s == null || t == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6174,if (s == null || t == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6177,f(threshold < 0) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6177,if (threshold < 0) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6185,omputing a diagonal stripe of width 2k+1 of the cost table.
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6185,computing a diagonal stripe of width 2k + 1 of the cost table.
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6229,f(n == 0) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6230,eturn m <= threshold? m : -1;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6231, else if(m == 0) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6232,eturn n <= threshold? n : -1;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6229,if (n == 0) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6230,return m <= threshold ? m : -1;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6231,} else if (m == 0) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6232,return n <= threshold ? n : -1;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6235,f(n > m) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6235,if (n > m) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6244,"nt p[] = new int[n+1]; // 'previous' cost array, horizontally"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6245,"nt d[] = new int[n+1]; // cost array, horizontally"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6244,"int p[] = new int[n + 1]; // 'previous' cost array, horizontally"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6245,"int d[] = new int[n + 1]; // cost array, horizontally"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6250,or(int i = 0; i < boundary; i++) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6250,for (int i = 0; i < boundary; i++) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6259,or(int j = 1; j <= m; j++) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6260,har t_j = t.charAt(j-1); // jth character of t
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6259,for (int j = 1; j <= m; j++) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6260,char t_j = t.charAt(j - 1); // jth character of t
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6268,f(min > max) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6268,if (min > max) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6273,f(min > 1) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6274,[min-1] = Integer.MAX_VALUE;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6273,if (min > 1) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6274,d[min - 1] = Integer.MAX_VALUE;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6278,or(int i = min; i <= max; i++) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6279,f(s.charAt(i-1) == t_j) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6278,for (int i = min; i <= max; i++) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6279,if (s.charAt(i - 1) == t_j) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6281,[i] = p[i-1];
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6281,d[i] = p[i - 1];
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6284,"[i] = 1 + Math.min(Math.min(d[i-1], p[i]), p[i-1]);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6284,"d[i] = 1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6296,f(p[n] <= threshold) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6296,if (p[n] <= threshold) {
