is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,5,* reserved.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,9,* are met:
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,17,*    distribution.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,54,package org.apache.commons.lang.util;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,57,* Manage operations dealing with bit-mapped fields.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,58,* <p>
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,59,* Code originated from the POI project.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,61,* @author Scott Sanders (sanders at apache dot org)
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,62,* @author Marc Johnson (mjohnson at apache dot org)
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,63,* @author Andrew C. Oliver (acoliver at apache dot org)
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,64,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,65,"* @version $Id: BitField.java,v 1.1 2002/12/18 02:50:36 bayard Exp $"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,67,public class BitField {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,68,private final int _mask;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,69,private final int _shift_count;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,72,* Create a BitField instance
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,74,* @param mask the mask specifying which bits apply to this
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,75,*             BitField. Bits that are set in this mask are the
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,76,*             bits that this BitField operates on
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,79,public BitField(final int mask) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,80,_mask = mask;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,81,int count = 0;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,82,int bit_pattern = mask;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,84,if (bit_pattern != 0) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,85,while ((bit_pattern & 1) == 0) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,86,count++;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,87,bit_pattern >>= 1;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,90,_shift_count = count;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,94,"* Obtain the value for the specified BitField, appropriately"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,95,* shifted right. Many users of a BitField will want to treat the
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,96,"* specified bits as an int value, and will not want to be aware"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,97,* that the value is stored as a BitField (and so shifted left so
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,98,* many bits)
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,100,* @param holder the int data containing the bits we're interested
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,101,*               in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,103,"* @return the selected bits, shifted right appropriately"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,106,public int getValue(final int holder) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,107,return getRawValue(holder) >> _shift_count;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,111,"* Obtain the value for the specified BitField, appropriately"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,112,"* shifted right, as a short. Many users of a BitField will want"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,113,"* to treat the specified bits as an int value, and will not want"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,114,* to be aware that the value is stored as a BitField (and so
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,115,* shifted left so many bits)
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,117,* @param holder the short data containing the bits we're
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,118,*               interested in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,120,"* @return the selected bits, shifted right appropriately"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,123,public short getShortValue(final short holder) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,124,return (short) getValue(holder);
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,128,"* Obtain the value for the specified BitField, unshifted"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,130,* @param holder the int data containing the bits we're interested
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,131,*               in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,133,* @return the selected bits
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,136,public int getRawValue(final int holder) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,137,return (holder & _mask);
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,141,"* Obtain the value for the specified BitField, unshifted"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,143,* @param holder the short data containing the bits we're
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,144,*               interested in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,146,* @return the selected bits
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,149,public short getShortRawValue(final short holder) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,150,return (short) getRawValue(holder);
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,154,* Is the field set or not? This is most commonly used for a
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,155,"* single-bit field, which is often used to represent a boolean"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,156,* value; the results of using it for a multi-bit field is to
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,157,* determine whether *any* of its bits are set
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,159,* @param holder the int data containing the bits we're interested
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,160,*               in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,162,"* @return true if any of the bits are set, else false"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,165,public boolean isSet(final int holder) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,166,return (holder & _mask) != 0;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,170,* Are all of the bits set or not? This is a stricter test than
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,171,"* isSet, in that all of the bits in a multi-bit set must be set"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,172,* for this method to return true
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,174,* @param holder the int data containing the bits we're interested
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,175,*               in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,177,"* @return true if all of the bits are set, else false"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,180,public boolean isAllSet(final int holder) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,181,return (holder & _mask) == _mask;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,185,* Replace the bits with new values.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,187,* @param holder the int data containint the bits we're interested
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,188,*               in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,189,* @param value the new value for the specified bits
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,191,* @return the value of holder with the bits from the value
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,192,*         parameter replacing the old bits
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,195,"public int setValue(final int holder, final int value) {"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,196,return (holder & ~_mask) | ((value << _shift_count) & _mask);
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,200,* Replace the bits with new values.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,202,* @param holder the short data containing the bits we're
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,203,*               interested in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,204,* @param value the new value for the specified bits
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,206,* @return the value of holder with the bits from the value
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,207,*         parameter replacing the old bits
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,210,"public short setShortValue(final short holder, final short value) {"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,211,"return (short) setValue(holder, value);"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,215,* Clear the bits.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,217,* @param holder the int data containing the bits we're interested
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,218,*               in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,220,* @return the value of holder with the specified bits cleared
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,221,*         (set to 0)
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,224,public int clear(final int holder) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,225,return holder & ~_mask;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,229,* Clear the bits.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,231,* @param holder the short data containing the bits we're
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,232,*               interested in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,234,* @return the value of holder with the specified bits cleared
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,235,*         (set to 0)
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,238,public short clearShort(final short holder) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,239,return (short) clear(holder);
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,243,* Clear the bits.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,245,* @param holder the byte data containing the bits we're
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,246,*               interested in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,248,* @return the value of holder with the specified bits cleared
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,249,*         (set to 0)
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,252,public byte clearByte(final byte holder) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,253,return (byte) clear(holder);
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,257,* Set the bits.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,259,* @param holder the int data containing the bits we're interested
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,260,*               in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,262,* @return the value of holder with the specified bits set to 1
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,265,public int set(final int holder) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,266,return holder | _mask;
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,270,* Set the bits.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,272,* @param holder the short data containing the bits we're
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,273,*               interested in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,275,* @return the value of holder with the specified bits set to 1
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,278,public short setShort(final short holder) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,279,return (short) set(holder);
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,283,* Set the bits.
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,285,* @param holder the byte data containing the bits we're
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,286,*               interested in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,288,* @return the value of holder with the specified bits set to 1
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,291,public byte setByte(final byte holder) {
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,292,return (byte) set(holder);
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,296,* Set a boolean BitField
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,298,* @param holder the int data containing the bits we're interested
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,299,*               in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,300,* @param flag indicating whether to set or clear the bits
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,302,* @return the value of holder with the specified bits set or
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,303,*         cleared
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,306,"public int setBoolean(final int holder, final boolean flag) {"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,307,return flag ? set(holder) : clear(holder);
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,311,* Set a boolean BitField
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,313,* @param holder the short data containing the bits we're
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,314,*               interested in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,315,* @param flag indicating whether to set or clear the bits
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,317,* @return the value of holder with the specified bits set or
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,318,*         cleared
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,321,"public short setShortBoolean(final short holder, final boolean flag) {"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,322,return flag ? setShort(holder) : clearShort(holder);
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,326,* Set a boolean BitField
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,328,* @param holder the byte data containing the bits we're
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,329,*               interested in
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,330,* @param flag indicating whether to set or clear the bits
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,332,* @return the value of holder with the specified bits set or
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,333,*         cleared
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,336,"public byte setByteBoolean(final byte holder, final boolean flag) {"
True,src/java/org/apache/commons/lang/util/BitField.java,src/java/org/apache/commons/lang/util/BitField.java,337,return flag ? setByte(holder) : clearByte(holder);
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//lang/src/test/org/apache/commons/lang/util/Attic/BitFieldTest.java,v 1.1 2002/12/18 02:50:36 bayard Exp $"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,3,* $Revision: 1.1 $
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,4,* $Date: 2002/12/18 02:50:36 $
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,8,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,10,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,11,* reserved.
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,14,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,15,* are met:
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,22,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,23,*    distribution.
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,26,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,27,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,34,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,35,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,39,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,52,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,55,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,57,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,58,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,62,package org.apache.commons.lang.util;
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,64,import junit.framework.Test;
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,65,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,66,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,67,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,70,* Class to test BitField functionality
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,72,* @author Scott Sanders (sanders at apache dot org)
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,73,* @author Marc Johnson
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,74,* @author Glen Stampoultzis (gstamp@iprimus.com.au)
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,75,"* @version $Id: BitFieldTest.java,v 1.1 2002/12/18 02:50:36 bayard Exp $"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,78,public class BitFieldTest
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,79,extends TestCase
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,82,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,83,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,86,public static Test suite() {
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,87,TestSuite suite = new TestSuite(BitFieldTest.class);
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,88,"suite.setName(""BitField Tests"");"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,89,return suite;
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,92,private static BitField bf_multi  = new BitField(0x3F80);
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,93,private static BitField bf_single = new BitField(0x4000);
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,96,* Constructor BitFieldTest
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,98,* @param name
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,101,public BitFieldTest(String name)
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,103,super(name);
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,107,* test the getValue() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,110,public void testGetValue()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,112,"assertEquals(bf_multi.getValue(-1), 127);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,113,"assertEquals(bf_multi.getValue(0), 0);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,114,"assertEquals(bf_single.getValue(-1), 1);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,115,"assertEquals(bf_single.getValue(0), 0);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,119,* test the getShortValue() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,122,public void testGetShortValue()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,124,"assertEquals(bf_multi.getShortValue(( short ) -1), ( short ) 127);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,125,"assertEquals(bf_multi.getShortValue(( short ) 0), ( short ) 0);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,126,"assertEquals(bf_single.getShortValue(( short ) -1), ( short ) 1);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,127,"assertEquals(bf_single.getShortValue(( short ) 0), ( short ) 0);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,131,* test the getRawValue() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,134,public void testGetRawValue()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,136,"assertEquals(bf_multi.getRawValue(-1), 0x3F80);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,137,"assertEquals(bf_multi.getRawValue(0), 0);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,138,"assertEquals(bf_single.getRawValue(-1), 0x4000);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,139,"assertEquals(bf_single.getRawValue(0), 0);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,143,* test the getShortRawValue() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,146,public void testGetShortRawValue()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,148,"assertEquals(bf_multi.getShortRawValue(( short ) -1),"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,149,( short ) 0x3F80);
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,150,"assertEquals(bf_multi.getShortRawValue(( short ) 0), ( short ) 0);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,151,"assertEquals(bf_single.getShortRawValue(( short ) -1),"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,152,( short ) 0x4000);
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,153,"assertEquals(bf_single.getShortRawValue(( short ) 0), ( short ) 0);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,157,* test the isSet() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,160,public void testIsSet()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,162,assertTrue(!bf_multi.isSet(0));
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,163,for (int j = 0x80; j <= 0x3F80; j += 0x80)
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,165,assertTrue(bf_multi.isSet(j));
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,167,assertTrue(!bf_single.isSet(0));
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,168,assertTrue(bf_single.isSet(0x4000));
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,172,* test the isAllSet() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,175,public void testIsAllSet()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,177,for (int j = 0; j < 0x3F80; j += 0x80)
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,179,assertTrue(!bf_multi.isAllSet(j));
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,181,assertTrue(bf_multi.isAllSet(0x3F80));
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,182,assertTrue(!bf_single.isAllSet(0));
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,183,assertTrue(bf_single.isAllSet(0x4000));
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,187,* test the setValue() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,190,public void testSetValue()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,192,for (int j = 0; j < 128; j++)
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,194,"assertEquals(bf_multi.getValue(bf_multi.setValue(0, j)), j);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,195,"assertEquals(bf_multi.setValue(0, j), j << 7);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,198,// verify that excess bits are stripped off
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,199,"assertEquals(bf_multi.setValue(0x3f80, 128), 0);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,200,for (int j = 0; j < 2; j++)
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,202,"assertEquals(bf_single.getValue(bf_single.setValue(0, j)), j);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,203,"assertEquals(bf_single.setValue(0, j), j << 14);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,206,// verify that excess bits are stripped off
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,207,"assertEquals(bf_single.setValue(0x4000, 2), 0);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,211,* test the setShortValue() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,214,public void testSetShortValue()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,216,for (int j = 0; j < 128; j++)
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,218,assertEquals(bf_multi
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,219,.getShortValue(bf_multi
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,220,".setShortValue(( short ) 0, ( short ) j)), ( short ) j);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,221,"assertEquals(bf_multi.setShortValue(( short ) 0, ( short ) j),"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,222,( short ) (j << 7));
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,225,// verify that excess bits are stripped off
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,226,"assertEquals(bf_multi.setShortValue(( short ) 0x3f80, ( short ) 128),"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,227,( short ) 0);
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,228,for (int j = 0; j < 2; j++)
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,230,assertEquals(bf_single
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,231,.getShortValue(bf_single
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,232,".setShortValue(( short ) 0, ( short ) j)), ( short ) j);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,233,"assertEquals(bf_single.setShortValue(( short ) 0, ( short ) j),"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,234,( short ) (j << 14));
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,237,// verify that excess bits are stripped off
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,238,"assertEquals(bf_single.setShortValue(( short ) 0x4000, ( short ) 2),"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,239,( short ) 0);
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,242,public void testByte()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,244,"assertEquals(1, new BitField(1).setByteBoolean(( byte ) 0, true));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,245,"assertEquals(2, new BitField(2).setByteBoolean(( byte ) 0, true));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,246,"assertEquals(4, new BitField(4).setByteBoolean(( byte ) 0, true));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,247,"assertEquals(8, new BitField(8).setByteBoolean(( byte ) 0, true));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,248,"assertEquals(16, new BitField(16).setByteBoolean(( byte ) 0, true));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,249,"assertEquals(32, new BitField(32).setByteBoolean(( byte ) 0, true));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,250,"assertEquals(64, new BitField(64).setByteBoolean(( byte ) 0, true));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,251,"assertEquals(-128,"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,252,"new BitField(128).setByteBoolean(( byte ) 0, true));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,253,"assertEquals(0, new BitField(1).setByteBoolean(( byte ) 1, false));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,254,"assertEquals(0, new BitField(2).setByteBoolean(( byte ) 2, false));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,255,"assertEquals(0, new BitField(4).setByteBoolean(( byte ) 4, false));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,256,"assertEquals(0, new BitField(8).setByteBoolean(( byte ) 8, false));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,257,"assertEquals(0, new BitField(16).setByteBoolean(( byte ) 16, false));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,258,"assertEquals(0, new BitField(32).setByteBoolean(( byte ) 32, false));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,259,"assertEquals(0, new BitField(64).setByteBoolean(( byte ) 64, false));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,260,"assertEquals(0, new BitField(128).setByteBoolean(( byte ) 128,"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,261,false));
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,262,"assertEquals(-2, new BitField(1).setByteBoolean(( byte ) 255, false));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,263,"byte clearedBit = new BitField(0x40).setByteBoolean(( byte ) -63,"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,264,false);
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,266,"assertEquals(false, new BitField(0x40).isSet(clearedBit));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,270,* test the clear() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,273,public void testClear()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,275,"assertEquals(bf_multi.clear(-1), 0xFFFFC07F);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,276,"assertEquals(bf_single.clear(-1), 0xFFFFBFFF);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,280,* test the clearShort() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,283,public void testClearShort()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,285,"assertEquals(bf_multi.clearShort(( short ) -1), ( short ) 0xC07F);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,286,"assertEquals(bf_single.clearShort(( short ) -1), ( short ) 0xBFFF);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,290,* test the set() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,293,public void testSet()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,295,"assertEquals(bf_multi.set(0), 0x3F80);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,296,"assertEquals(bf_single.set(0), 0x4000);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,300,* test the setShort() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,303,public void testSetShort()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,305,"assertEquals(bf_multi.setShort(( short ) 0), ( short ) 0x3F80);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,306,"assertEquals(bf_single.setShort(( short ) 0), ( short ) 0x4000);"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,310,* test the setBoolean() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,313,public void testSetBoolean()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,315,"assertEquals(bf_multi.set(0), bf_multi.setBoolean(0, true));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,316,"assertEquals(bf_single.set(0), bf_single.setBoolean(0, true));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,317,"assertEquals(bf_multi.clear(-1), bf_multi.setBoolean(-1, false));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,318,"assertEquals(bf_single.clear(-1), bf_single.setBoolean(-1, false));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,322,* test the setShortBoolean() method
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,325,public void testSetShortBoolean()
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,327,"assertEquals(bf_multi.setShort(( short ) 0),"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,328,"bf_multi.setShortBoolean(( short ) 0, true));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,329,"assertEquals(bf_single.setShort(( short ) 0),"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,330,"bf_single.setShortBoolean(( short ) 0, true));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,331,"assertEquals(bf_multi.clearShort(( short ) -1),"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,332,"bf_multi.setShortBoolean(( short ) -1, false));"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,333,"assertEquals(bf_single.clearShort(( short ) -1),"
True,src/test/org/apache/commons/lang/util/BitFieldTest.java,src/test/org/apache/commons/lang/util/BitFieldTest.java,334,"bf_single.setShortBoolean(( short ) -1, false));"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,5,* reserved.
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,9,* are met:
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,17,*    distribution.
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,54,package org.apache.commons.lang.util;
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,59,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,61,* Test suite for the Util package.
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,63,"* @author <a href=""mailto:bayard@apache.org"">Henri Yandell</a>"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,64,"* @version $Id: UtilTestSuite.java,v 1.1 2002/12/18 02:50:36 bayard Exp $"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,66,public class UtilTestSuite extends TestCase {
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,69,* Construct a new instance.
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,71,public UtilTestSuite(String name) {
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,72,super(name);
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,76,* Command-line interface.
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,78,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,79,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,83,* Get the suite of tests
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,85,public static Test suite() {
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,86,TestSuite suite = new TestSuite();
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,87,"suite.setName(""Commons-Lang-Util Tests"");"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,88,suite.addTest(BitFieldTest.suite());
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,89,return suite;
