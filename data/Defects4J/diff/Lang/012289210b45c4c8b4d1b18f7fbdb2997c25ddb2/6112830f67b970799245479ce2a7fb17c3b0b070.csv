is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,24, Broken color enumeration.
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,26," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,27, @version $Id$
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,29,ublic final class Broken1Enum extends Enum {
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,30,"ublic static final Broken1Enum RED = new Broken1Enum(""Red"");"
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,31,"ublic static final Broken1Enum GREEN = new Broken1Enum(""Green"");"
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,32,"ublic static final Broken1Enum GREENISH = new Broken1Enum(""Green"");  // duplicate not allowed"
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,34,rivate Broken1Enum(String color) {
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,35,uper(color);
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,38,ublic static Broken1Enum getEnum(String color) {
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,39,"eturn (Broken1Enum) getEnum(Broken1Enum.class, color);"
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,42,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,43,eturn getEnumMap(Broken1Enum.class);
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,46,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,47,eturn getEnumList(Broken1Enum.class);
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,50,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/Broken1Enum.java,src/test/org/apache/commons/lang/enums/Broken1Enum.java,51,eturn iterator(Broken1Enum.class);
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,24," Broken Operator enumeration, null class."
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,26, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,27, @version $Id$
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,29,ublic abstract class Broken1OperationEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,30,/ This syntax works for JDK 1.3 and upwards:
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,31,"/    public static final OperationEnum PLUS = new OperationEnum(""Plus"") {"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,32,"/        public int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,33,/            return (a + b);
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,36,"/    public static final OperationEnum MINUS = new OperationEnum(""Minus"") {"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,37,"/        public int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,38,/            return (a - b);
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,41,/ This syntax works for JDK 1.2 and upwards:
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,42,ublic static final Broken1OperationEnum PLUS = new PlusOperation();
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,43,rivate static class PlusOperation extends Broken1OperationEnum {
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,44,rivate PlusOperation() {
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,45,"uper(""Plus"");"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,47,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,48,eturn (a + b);
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,51,ublic static final Broken1OperationEnum MINUS = new MinusOperation();
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,52,rivate static class MinusOperation extends Broken1OperationEnum {
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,53,rivate MinusOperation() {
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,54,"uper(""Minus"");"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,56,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,57,eturn (a - b);
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,61,rivate Broken1OperationEnum(String name) {
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,62,uper(name);
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,65,ublic final Class getEnumClass() {
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,66,eturn null;
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,69,"ublic abstract int eval(int a, int b);"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,71,ublic static Broken1OperationEnum getEnum(String name) {
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,72,"eturn (Broken1OperationEnum) getEnum(Broken1OperationEnum.class, name);"
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,75,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,76,eturn getEnumMap(Broken1OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,79,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,80,eturn getEnumList(Broken1OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,83,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java,84,eturn iterator(Broken1OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,24, Broken color enumeration.
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,26," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,27, @version $Id$
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,29,ublic final class Broken2Enum extends Enum {
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,30,"ublic static final Broken2Enum RED = new Broken2Enum(""Red"");"
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,31,"ublic static final Broken2Enum GREEN = new Broken2Enum(""Green"");"
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,32,"ublic static final Broken2Enum BLUE = new Broken2Enum("""");  // blank not allowed"
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,34,rivate Broken2Enum(String color) {
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,35,uper(color);
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,38,ublic static Broken2Enum getEnum(String color) {
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,39,"eturn (Broken2Enum) getEnum(Broken2Enum.class, color);"
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,42,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,43,eturn getEnumMap(Broken2Enum.class);
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,46,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,47,eturn getEnumList(Broken2Enum.class);
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,50,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/Broken2Enum.java,src/test/org/apache/commons/lang/enums/Broken2Enum.java,51,eturn iterator(Broken2Enum.class);
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,24," Broken Operator enumeration, getEnumClass() not superclass."
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,26, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,27, @version $Id$
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,29,ublic abstract class Broken2OperationEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,30,/ This syntax works for JDK 1.3 and upwards:
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,31,"/    public static final OperationEnum PLUS = new OperationEnum(""Plus"") {"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,32,"/        public int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,33,/            return (a + b);
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,36,"/    public static final OperationEnum MINUS = new OperationEnum(""Minus"") {"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,37,"/        public int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,38,/            return (a - b);
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,41,/ This syntax works for JDK 1.2 and upwards:
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,42,ublic static final Broken2OperationEnum PLUS = new PlusOperation();
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,43,rivate static class PlusOperation extends Broken2OperationEnum {
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,44,rivate PlusOperation() {
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,45,"uper(""Plus"");"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,47,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,48,eturn (a + b);
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,51,ublic static final Broken2OperationEnum MINUS = new MinusOperation();
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,52,rivate static class MinusOperation extends Broken2OperationEnum {
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,53,rivate MinusOperation() {
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,54,"uper(""Minus"");"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,56,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,57,eturn (a - b);
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,61,rivate Broken2OperationEnum(String name) {
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,62,uper(name);
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,65,ublic final Class getEnumClass() {
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,66,eturn ColorEnum.class;
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,69,"ublic abstract int eval(int a, int b);"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,71,ublic static Broken2OperationEnum getEnum(String name) {
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,72,"eturn (Broken2OperationEnum) getEnum(Broken2OperationEnum.class, name);"
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,75,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,76,eturn getEnumMap(Broken2OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,79,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,80,eturn getEnumList(Broken2OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,83,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java,84,eturn iterator(Broken2OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,24, Broken color enumeration.
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,26," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,27, @version $Id$
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,29,ublic final class Broken3Enum extends Enum {
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,30,"ublic static final Broken3Enum RED = new Broken3Enum(""Red"");"
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,31,"ublic static final Broken3Enum GREEN = new Broken3Enum(""Green"");"
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,32,ublic static final Broken3Enum BLUE = new Broken3Enum(null);  // null not allowed
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,34,rivate Broken3Enum(String color) {
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,35,uper(color);
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,38,ublic static Broken3Enum getEnum(String color) {
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,39,"eturn (Broken3Enum) getEnum(Broken3Enum.class, color);"
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,42,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,43,eturn getEnumMap(Broken3Enum.class);
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,46,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,47,eturn getEnumList(Broken3Enum.class);
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,50,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/Broken3Enum.java,src/test/org/apache/commons/lang/enums/Broken3Enum.java,51,eturn iterator(Broken3Enum.class);
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,24," Broken Operator enumeration, getEnumClass() is Enum.class."
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,26, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,27, @version $Id$
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,29,ublic abstract class Broken3OperationEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,30,/ This syntax works for JDK 1.3 and upwards:
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,31,"/    public static final OperationEnum PLUS = new OperationEnum(""Plus"") {"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,32,"/        public int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,33,/            return (a + b);
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,36,"/    public static final OperationEnum MINUS = new OperationEnum(""Minus"") {"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,37,"/        public int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,38,/            return (a - b);
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,41,/ This syntax works for JDK 1.2 and upwards:
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,42,ublic static final Broken3OperationEnum PLUS = new PlusOperation();
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,43,rivate static class PlusOperation extends Broken3OperationEnum {
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,44,rivate PlusOperation() {
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,45,"uper(""Plus"");"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,47,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,48,eturn (a + b);
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,51,ublic static final Broken3OperationEnum MINUS = new MinusOperation();
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,52,rivate static class MinusOperation extends Broken3OperationEnum {
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,53,rivate MinusOperation() {
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,54,"uper(""Minus"");"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,56,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,57,eturn (a - b);
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,61,rivate Broken3OperationEnum(String name) {
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,62,uper(name);
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,65,ublic final Class getEnumClass() {
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,66,eturn Enum.class;
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,69,"ublic abstract int eval(int a, int b);"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,71,ublic static Broken3OperationEnum getEnum(String name) {
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,72,"eturn (Broken3OperationEnum) getEnum(Broken3OperationEnum.class, name);"
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,75,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,76,eturn getEnumMap(Broken3OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,79,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,80,eturn getEnumList(Broken3OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,83,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java,84,eturn iterator(Broken3OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,24," Broken Operator enumeration, getEnumClass() is ValuedEnum.class."
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,26, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,27, @version $Id$
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,29,ublic abstract class Broken4OperationEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,30,/ This syntax works for JDK 1.3 and upwards:
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,31,"/    public static final OperationEnum PLUS = new OperationEnum(""Plus"") {"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,32,"/        public int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,33,/            return (a + b);
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,36,"/    public static final OperationEnum MINUS = new OperationEnum(""Minus"") {"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,37,"/        public int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,38,/            return (a - b);
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,41,/ This syntax works for JDK 1.2 and upwards:
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,42,ublic static final Broken4OperationEnum PLUS = new PlusOperation();
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,43,rivate static class PlusOperation extends Broken4OperationEnum {
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,44,rivate PlusOperation() {
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,45,"uper(""Plus"");"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,47,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,48,eturn (a + b);
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,51,ublic static final Broken4OperationEnum MINUS = new MinusOperation();
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,52,rivate static class MinusOperation extends Broken4OperationEnum {
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,53,rivate MinusOperation() {
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,54,"uper(""Minus"");"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,56,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,57,eturn (a - b);
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,61,rivate Broken4OperationEnum(String name) {
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,62,uper(name);
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,65,ublic final Class getEnumClass() {
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,66,eturn ValuedEnum.class;
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,69,"ublic abstract int eval(int a, int b);"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,71,ublic static Broken4OperationEnum getEnum(String name) {
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,72,"eturn (Broken4OperationEnum) getEnum(Broken4OperationEnum.class, name);"
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,75,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,76,eturn getEnumMap(Broken4OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,79,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,80,eturn getEnumList(Broken4OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,83,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java,84,eturn iterator(Broken4OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,24," Broken Operator enumeration, getEnumClass() is not an Enum class."
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,26, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,27, @version $Id$
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,29,ublic abstract class Broken5OperationEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,30,/ This syntax works for JDK 1.3 and upwards:
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,31,"/    public static final OperationEnum PLUS = new OperationEnum(""Plus"") {"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,32,"/        public int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,33,/            return (a + b);
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,36,"/    public static final OperationEnum MINUS = new OperationEnum(""Minus"") {"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,37,"/        public int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,38,/            return (a - b);
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,41,/ This syntax works for JDK 1.2 and upwards:
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,42,ublic static final Broken5OperationEnum PLUS = new PlusOperation();
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,43,rivate static class PlusOperation extends Broken5OperationEnum {
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,44,rivate PlusOperation() {
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,45,"uper(""Plus"");"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,47,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,48,eturn (a + b);
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,51,ublic static final Broken5OperationEnum MINUS = new MinusOperation();
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,52,rivate static class MinusOperation extends Broken5OperationEnum {
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,53,rivate MinusOperation() {
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,54,"uper(""Minus"");"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,56,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,57,eturn (a - b);
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,61,rivate Broken5OperationEnum(String name) {
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,62,uper(name);
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,65,ublic final Class getEnumClass() {
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,66,eturn String.class;
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,69,"ublic abstract int eval(int a, int b);"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,71,ublic static Broken5OperationEnum getEnum(String name) {
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,72,"eturn (Broken5OperationEnum) getEnum(Broken5OperationEnum.class, name);"
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,75,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,76,eturn getEnumMap(Broken5OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,79,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,80,eturn getEnumList(Broken5OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,83,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java,84,eturn iterator(Broken5OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,24, Color enumeration.
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,26," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,27, @version $Id$
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,30,ublic final class ColorEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,31,"ublic static final ColorEnum RED = new ColorEnum(""Red"");"
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,32,"ublic static final ColorEnum GREEN = new ColorEnum(""Green"");"
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,33,"ublic static final ColorEnum BLUE = new ColorEnum(""Blue"");"
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,35,rivate ColorEnum(String color) {
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,36,uper(color);
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,39,ublic static ColorEnum getEnum(String color) {
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,40,"eturn (ColorEnum) getEnum(ColorEnum.class, color);"
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,43,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,44,eturn getEnumMap(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,47,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,48,eturn getEnumList(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,51,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/ColorEnum.java,src/test/org/apache/commons/lang/enums/ColorEnum.java,52,eturn iterator(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,20, Dummy enumeration - no values.
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,22, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,23, @version $Id$
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,25,ublic abstract class DummyEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,27,rivate DummyEnum(String name) {
False,src/test/org/apache/commons/lang/enums/DummyEnum.java,src/test/org/apache/commons/lang/enums/DummyEnum.java,28,uper(name);
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,19,mport java.net.URLClassLoader;
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,21,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,22,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,23,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,26, Test cases for the {@link Enum} class equals method.
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,28, @author Matthias Eichel
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,29, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,30, @version $Id$
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,32,ublic final class EnumEqualsTest extends TestCase {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,34,ublic EnumEqualsTest(String name) {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,35,uper(name);
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,38,ublic void setUp() {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,41,ublic static Test suite() {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,42,estSuite suite = new TestSuite(EnumEqualsTest.class);
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,43,"uite.setName(""Enum equals Tests"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,44,eturn suite;
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,48,tatic final class CarColorEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,49,"ublic static final CarColorEnum BLACK = new CarColorEnum(""black"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,50,"ublic static final CarColorEnum BROWN = new CarColorEnum(""brown"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,51,"ublic static final CarColorEnum YELLOW = new CarColorEnum(""yellow"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,52,"ublic static final CarColorEnum BLUE = new CarColorEnum(""blue"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,53,"ublic static final CarColorEnum RED = new CarColorEnum(""red"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,55,rivate CarColorEnum(String enumAsString) {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,56,uper(enumAsString);
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,60,tatic final class TrafficlightColorEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,61,"ublic static final TrafficlightColorEnum RED = new TrafficlightColorEnum(""red"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,62,"ublic static final TrafficlightColorEnum YELLOW = new TrafficlightColorEnum(""yellow"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,63,"ublic static final TrafficlightColorEnum GREEN = new TrafficlightColorEnum(""green"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,65,rivate TrafficlightColorEnum(String enumAsString) {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,66,uper(enumAsString);
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,70,tatic class TotallyUnrelatedClass {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,71,rivate final String name;
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,73,ublic TotallyUnrelatedClass(final String name) {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,74,his.name = name;
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,77,ublic String getName() {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,78,eturn name;
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,83,ublic void testEquals() {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,84,"ssertEquals(false, CarColorEnum.RED.equals(TrafficlightColorEnum.RED));"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,85,"ssertEquals(false, CarColorEnum.YELLOW.equals(TrafficlightColorEnum.YELLOW));"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,87,"ssertEquals(false, TrafficlightColorEnum.RED.equals(new TotallyUnrelatedClass(""red"")));"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,88,"ssertEquals(false, CarColorEnum.RED.equals(new TotallyUnrelatedClass(""red"")));"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,90,"ssertEquals(false, TrafficlightColorEnum.RED.equals(new TotallyUnrelatedClass(""some"")));"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,91,"ssertEquals(false, CarColorEnum.RED.equals(new TotallyUnrelatedClass(""some"")));"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,94,ublic void testEquals_classloader_equal() throws Exception {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,95,lassLoader cl = ColorEnum.class.getClassLoader();
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,96,f (cl instanceof URLClassLoader) {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,97,RLClassLoader urlCL = (URLClassLoader) cl;
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,98,"RLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,99,"RLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,100,"lass otherEnumClass1 = urlCL1.loadClass(""org.apache.commons.lang.enums.ColorEnum"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,101,"lass otherEnumClass2 = urlCL2.loadClass(""org.apache.commons.lang.enums.ColorEnum"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,102,"bject blue1 = otherEnumClass1.getDeclaredField(""BLUE"").get(null);"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,103,"bject blue2 = otherEnumClass2.getDeclaredField(""BLUE"").get(null);"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,104,"ssertEquals(true, blue1.equals(blue2));"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,108,ublic void testEquals_classloader_different() throws Exception {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,109,lassLoader cl = ColorEnum.class.getClassLoader();
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,110,f (cl instanceof URLClassLoader) {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,111,RLClassLoader urlCL = (URLClassLoader) cl;
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,112,"RLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,113,"RLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,114,"lass otherEnumClass1 = urlCL1.loadClass(""org.apache.commons.lang.enums.ColorEnum"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,115,"lass otherEnumClass2 = urlCL2.loadClass(""org.apache.commons.lang.enums.ColorEnum"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,116,"bject blue1 = otherEnumClass1.getDeclaredField(""BLUE"").get(null);"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,117,"bject blue2 = otherEnumClass2.getDeclaredField(""RED"").get(null);"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,118,"ssertEquals(false, blue1.equals(blue2));"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,123,ublic void testCompareTo() {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,124,ry {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,125,arColorEnum.RED.compareTo(TrafficlightColorEnum.RED);
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,126,ail();
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,127, catch (ClassCastException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,128,ry {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,129,arColorEnum.YELLOW.compareTo(TrafficlightColorEnum.YELLOW);
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,130,ail();
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,131, catch (ClassCastException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,132,ry {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,133,"rafficlightColorEnum.RED.compareTo(new TotallyUnrelatedClass(""red""));"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,134,ail();
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,135, catch (ClassCastException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,136,ry {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,137,"arColorEnum.RED.compareTo(new TotallyUnrelatedClass(""red""));"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,138,ail();
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,139, catch (ClassCastException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,140,ry {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,141,"rafficlightColorEnum.RED.compareTo(new TotallyUnrelatedClass(""some""));"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,142,ail();
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,143, catch (ClassCastException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,144,ry {
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,145,"arColorEnum.RED.compareTo(new TotallyUnrelatedClass(""some""));"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,146,ail();
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,147, catch (ClassCastException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,19,mport java.lang.reflect.InvocationTargetException;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,20,mport java.lang.reflect.Method;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,21,mport java.net.URL;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,22,mport java.net.URLClassLoader;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,23,mport java.util.ArrayList;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,24,mport java.util.HashMap;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,25,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,26,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,27,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,29,mport junit.framework.AssertionFailedError;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,30,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,31,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,32,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,34,mport org.apache.commons.lang.SerializationUtils;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,37, Test cases for the {@link Enum} class.
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,39, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,40, @author Gary D. Gregory
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,41, @version $Id$
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,44,ublic final class EnumTest extends TestCase {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,46,"rivate static final String ENUMS_CLASS_NAME = ""org.apache.commons.lang.enums.ColorEnum"";"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,48,ublic EnumTest(String name) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,49,uper(name);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,52,ublic void setUp() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,55,ublic static Test suite() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,56,estSuite suite = new TestSuite(EnumTest.class);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,57,"uite.setName(""Enum Tests"");"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,58,eturn suite;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,61,ublic void testName() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,62,"ssertEquals(""Red"", ColorEnum.RED.getName());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,63,"ssertEquals(""Green"", ColorEnum.GREEN.getName());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,64,"ssertEquals(""Blue"", ColorEnum.BLUE.getName());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,67,ublic void testCompareTo() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,68,ssertTrue(ColorEnum.BLUE.compareTo(ColorEnum.BLUE) == 0);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,69,ssertTrue(ColorEnum.RED.compareTo(ColorEnum.BLUE) > 0);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,70,ssertTrue(ColorEnum.BLUE.compareTo(ColorEnum.RED) < 0);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,71,ry {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,72,olorEnum.RED.compareTo(null);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,73,ail();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,74, catch (NullPointerException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,75,ry {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,76,olorEnum.RED.compareTo(new Object());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,77,ail();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,78, catch (ClassCastException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,81,ublic void testEquals() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,82,"ssertSame(ColorEnum.RED, ColorEnum.RED);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,83,"ssertSame(ColorEnum.getEnum(""Red""), ColorEnum.RED);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,84,"ssertEquals(false, ColorEnum.RED.equals(null));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,85,"ssertEquals(true, ColorEnum.RED.equals(ColorEnum.RED));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,86,"ssertEquals(true, ColorEnum.RED.equals(ColorEnum.getEnum(""Red"")));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,89,ublic void testHashCode() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,90,"ssertEquals(ColorEnum.RED.hashCode(), ColorEnum.RED.hashCode());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,91,"ssertEquals(7 + ColorEnum.class.hashCode() + 3 * ""Red"".hashCode(), ColorEnum.RED.hashCode());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,94,ublic void testToString() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,95,tring toString = ColorEnum.RED.toString();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,96,"ssertEquals(""ColorEnum[Red]"", toString);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,97,"ssertSame(toString, ColorEnum.RED.toString());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,100,ublic void testIterator() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,101,terator it = ColorEnum.iterator();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,102,"ssertSame(ColorEnum.RED, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,103,"ssertSame(ColorEnum.GREEN, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,104,"ssertSame(ColorEnum.BLUE, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,107,ublic void testList() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,108,ist list = new ArrayList(ColorEnum.getEnumList());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,110,ssertNotNull(list);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,112,"ssertEquals( list.size(),"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,113,olorEnum.getEnumMap().keySet().size());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,115,terator it = list.iterator();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,116,"ssertSame(ColorEnum.RED, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,117,"ssertSame(ColorEnum.GREEN, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,118,"ssertSame(ColorEnum.BLUE, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,121,ublic void testMap() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,122,ap map = new HashMap(ColorEnum.getEnumMap());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,124,ssertNotNull(map);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,125,ssertTrue(map.containsValue(ColorEnum.RED));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,126,ssertTrue(map.containsValue(ColorEnum.GREEN));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,127,ssertTrue(map.containsValue(ColorEnum.BLUE));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,128,"ssertSame(ColorEnum.RED, map.get(""Red""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,129,"ssertSame(ColorEnum.GREEN, map.get(""Green""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,130,"ssertSame(ColorEnum.BLUE, map.get(""Blue""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,131,"ssertEquals( map.keySet().size(),"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,132,olorEnum.getEnumList().size());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,135,ublic void testGet() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,136,"ssertSame(ColorEnum.RED, ColorEnum.getEnum(""Red""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,137,"ssertSame(ColorEnum.GREEN, ColorEnum.getEnum(""Green""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,138,"ssertSame(ColorEnum.BLUE, ColorEnum.getEnum(""Blue""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,139,"ssertSame(null, ColorEnum.getEnum(""Pink""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,142,ublic void testSerialization() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,143,nt hashCode = ColorEnum.RED.hashCode();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,144,"ssertSame(ColorEnum.RED, SerializationUtils.clone(ColorEnum.RED));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,145,"ssertEquals(hashCode, SerializationUtils.clone(ColorEnum.RED).hashCode());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,146,"ssertSame(ColorEnum.GREEN, SerializationUtils.clone(ColorEnum.GREEN));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,147,"ssertSame(ColorEnum.BLUE, SerializationUtils.clone(ColorEnum.BLUE));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,150,ublic void testBroken1() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,151,ry {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,152,roken1Enum.RED.getName();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,153,ail();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,154, catch (ExceptionInInitializerError ex) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,155,ssertTrue(ex.getException() instanceof IllegalArgumentException);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,159,ublic void testBroken2() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,160,ry {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,161,roken2Enum.RED.getName();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,162,ail();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,163, catch (ExceptionInInitializerError ex) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,164,ssertTrue(ex.getException() instanceof IllegalArgumentException);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,168,ublic void testBroken3() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,169,ry {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,170,roken3Enum.RED.getName();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,171,ail();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,172, catch (ExceptionInInitializerError ex) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,173,ssertTrue(ex.getException() instanceof IllegalArgumentException);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,177,ublic void testBroken1Operation() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,178,ry {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,179,roken1OperationEnum.PLUS.getName();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,180,ail();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,181, catch (ExceptionInInitializerError ex) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,182,ssertTrue(ex.getException() instanceof IllegalArgumentException);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,186,ublic void testBroken2Operation() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,187,ry {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,188,roken2OperationEnum.PLUS.getName();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,189,ail();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,190, catch (ExceptionInInitializerError ex) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,191,ssertTrue(ex.getException() instanceof IllegalArgumentException);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,195,ublic void testBroken3Operation() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,196,ry {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,197,roken3OperationEnum.PLUS.getName();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,198,ail();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,199, catch (ExceptionInInitializerError ex) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,200,ssertTrue(ex.getException() instanceof IllegalArgumentException);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,204,ublic void testBroken4Operation() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,205,ry {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,206,roken4OperationEnum.PLUS.getName();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,207,ail();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,208, catch (ExceptionInInitializerError ex) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,209,ssertTrue(ex.getException() instanceof IllegalArgumentException);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,213,ublic void testBroken5Operation() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,214,ry {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,215,roken5OperationEnum.PLUS.getName();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,216,ail();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,217, catch (ExceptionInInitializerError ex) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,218,ssertTrue(ex.getException() instanceof IllegalArgumentException);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,222,ublic void testOperationGet() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,223,"ssertSame(OperationEnum.PLUS, OperationEnum.getEnum(""Plus""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,224,"ssertSame(OperationEnum.MINUS, OperationEnum.getEnum(""Minus""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,225,"ssertSame(null, OperationEnum.getEnum(""Pink""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,228,ublic void testOperationSerialization() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,229,"ssertSame(OperationEnum.PLUS, SerializationUtils.clone(OperationEnum.PLUS));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,230,"ssertSame(OperationEnum.MINUS, SerializationUtils.clone(OperationEnum.MINUS));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,233,ublic void testOperationToString() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,234,"ssertEquals(""OperationEnum[Plus]"", OperationEnum.PLUS.toString());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,237,ublic void testOperationList() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,238,ist list = OperationEnum.getEnumList();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,239,ssertNotNull(list);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,240,"ssertEquals(2, list.size());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,241,"ssertEquals(list.size(), OperationEnum.getEnumMap().keySet().size());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,243,terator it = list.iterator();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,244,"ssertSame(OperationEnum.PLUS, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,245,"ssertSame(OperationEnum.MINUS, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,248,ublic void testOperationMap() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,249,ap map = OperationEnum.getEnumMap();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,250,ssertNotNull(map);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,251,"ssertEquals(map.keySet().size(), OperationEnum.getEnumList().size());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,253,ssertTrue(map.containsValue(OperationEnum.PLUS));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,254,ssertTrue(map.containsValue(OperationEnum.MINUS));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,255,"ssertSame(OperationEnum.PLUS, map.get(""Plus""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,256,"ssertSame(OperationEnum.MINUS, map.get(""Minus""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,259,ublic void testOperationCalculation() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,260,"ssertEquals(3, OperationEnum.PLUS.eval(1, 2));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,261,"ssertEquals(-1, OperationEnum.MINUS.eval(1, 2));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,265,ublic void testExtended1Get() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,266,"ssertSame(Extended1Enum.ALPHA, Extended1Enum.getEnum(""Alpha""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,267,"ssertSame(Extended1Enum.BETA, Extended1Enum.getEnum(""Beta""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,268,"ssertSame(null, Extended1Enum.getEnum(""Gamma""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,269,"ssertSame(null, Extended1Enum.getEnum(""Delta""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,272,ublic void testExtended2Get() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,273,"ssertSame(Extended1Enum.ALPHA, Extended2Enum.ALPHA);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,274,"ssertSame(Extended1Enum.BETA, Extended2Enum.BETA);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,276,"ssertSame(Extended2Enum.ALPHA, Extended2Enum.getEnum(""Alpha""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,277,"ssertSame(Extended2Enum.BETA, Extended2Enum.getEnum(""Beta""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,278,"ssertSame(Extended2Enum.GAMMA, Extended2Enum.getEnum(""Gamma""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,279,"ssertSame(null, Extended2Enum.getEnum(""Delta""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,282,ublic void testExtended3Get() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,283,"ssertSame(Extended2Enum.ALPHA, Extended3Enum.ALPHA);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,284,"ssertSame(Extended2Enum.BETA, Extended3Enum.BETA);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,285,"ssertSame(Extended2Enum.GAMMA, Extended3Enum.GAMMA);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,287,"ssertSame(Extended3Enum.ALPHA, Extended3Enum.getEnum(""Alpha""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,288,"ssertSame(Extended3Enum.BETA, Extended3Enum.getEnum(""Beta""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,289,"ssertSame(Extended3Enum.GAMMA, Extended3Enum.getEnum(""Gamma""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,290,"ssertSame(Extended3Enum.DELTA, Extended3Enum.getEnum(""Delta""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,293,ublic void testExtendedSerialization() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,294,"ssertSame(Extended1Enum.ALPHA, SerializationUtils.clone(Extended1Enum.ALPHA));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,295,"ssertSame(Extended1Enum.BETA, SerializationUtils.clone(Extended1Enum.BETA));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,296,"ssertSame(Extended2Enum.GAMMA, SerializationUtils.clone(Extended2Enum.GAMMA));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,297,"ssertSame(Extended3Enum.DELTA, SerializationUtils.clone(Extended3Enum.DELTA));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,300,ublic void testExtendedToString() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,301,"ssertEquals(""Extended1Enum[Alpha]"", Extended1Enum.ALPHA.toString());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,302,"ssertEquals(""Extended1Enum[Beta]"", Extended1Enum.BETA.toString());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,304,"ssertEquals(""Extended1Enum[Alpha]"", Extended2Enum.ALPHA.toString());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,305,"ssertEquals(""Extended1Enum[Beta]"", Extended2Enum.BETA.toString());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,306,"ssertEquals(""Extended2Enum[Gamma]"", Extended2Enum.GAMMA.toString());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,308,"ssertEquals(""Extended1Enum[Alpha]"", Extended3Enum.ALPHA.toString());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,309,"ssertEquals(""Extended1Enum[Beta]"", Extended3Enum.BETA.toString());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,310,"ssertEquals(""Extended2Enum[Gamma]"", Extended3Enum.GAMMA.toString());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,311,"ssertEquals(""Extended3Enum[Delta]"", Extended3Enum.DELTA.toString());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,314,ublic void testExtended1List() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,315,ist list = Extended1Enum.getEnumList();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,316,ssertNotNull(list);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,317,"ssertEquals(2, list.size());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,318,"ssertEquals(list.size(), Extended1Enum.getEnumMap().keySet().size());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,320,terator it = list.iterator();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,321,"ssertSame(Extended1Enum.ALPHA, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,322,"ssertSame(Extended1Enum.BETA, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,325,ublic void testExtended2List() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,326,ist list = Extended2Enum.getEnumList();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,327,ssertNotNull(list);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,328,"ssertEquals(3, list.size());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,329,"ssertEquals(list.size(), Extended2Enum.getEnumMap().keySet().size());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,331,terator it = list.iterator();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,332,"ssertSame(Extended2Enum.ALPHA, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,333,"ssertSame(Extended2Enum.BETA, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,334,"ssertSame(Extended2Enum.GAMMA, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,337,ublic void testExtended3List() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,338,ist list = Extended3Enum.getEnumList();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,339,ssertNotNull(list);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,340,"ssertEquals(4, list.size());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,341,"ssertEquals(list.size(), Extended3Enum.getEnumMap().keySet().size());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,343,terator it = list.iterator();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,344,"ssertSame(Extended3Enum.ALPHA, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,345,"ssertSame(Extended3Enum.BETA, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,346,"ssertSame(Extended3Enum.GAMMA, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,347,"ssertSame(Extended3Enum.DELTA, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,350,ublic void testExtended1Map() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,351,ap map = Extended1Enum.getEnumMap();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,352,ssertNotNull(map);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,353,"ssertEquals(map.keySet().size(), Extended1Enum.getEnumList().size());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,355,ssertTrue(map.containsValue(Extended1Enum.ALPHA));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,356,ssertTrue(map.containsValue(Extended1Enum.BETA));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,357,"ssertSame(Extended1Enum.ALPHA, map.get(""Alpha""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,358,"ssertSame(Extended1Enum.BETA, map.get(""Beta""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,361,ublic void testExtended2Map() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,362,ap map = Extended2Enum.getEnumMap();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,363,ssertNotNull(map);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,364,"ssertEquals(map.keySet().size(), Extended2Enum.getEnumList().size());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,366,ssertTrue(map.containsValue(Extended2Enum.ALPHA));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,367,ssertTrue(map.containsValue(Extended2Enum.BETA));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,368,ssertTrue(map.containsValue(Extended2Enum.GAMMA));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,369,"ssertSame(Extended2Enum.ALPHA, map.get(""Alpha""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,370,"ssertSame(Extended2Enum.BETA, map.get(""Beta""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,371,"ssertSame(Extended2Enum.GAMMA, map.get(""Gamma""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,374,ublic void testExtended3Map() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,375,ap map = Extended3Enum.getEnumMap();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,376,ssertNotNull(map);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,377,"ssertEquals(map.keySet().size(), Extended3Enum.getEnumList().size());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,379,ssertTrue(map.containsValue(Extended3Enum.ALPHA));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,380,ssertTrue(map.containsValue(Extended3Enum.BETA));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,381,ssertTrue(map.containsValue(Extended3Enum.GAMMA));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,382,ssertTrue(map.containsValue(Extended3Enum.DELTA));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,383,"ssertSame(Extended3Enum.ALPHA, map.get(""Alpha""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,384,"ssertSame(Extended3Enum.BETA, map.get(""Beta""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,385,"ssertSame(Extended3Enum.GAMMA, map.get(""Gamma""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,386,"ssertSame(Extended3Enum.DELTA, map.get(""Delta""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,390,ublic void testNested() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,391,ist list = new ArrayList(Nest.ColorEnum.getEnumList());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,392,"ssertEquals(3, list.size());  // all is well"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,393,terator it = list.iterator();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,394,"ssertSame(Nest.ColorEnum.RED, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,395,"ssertSame(Nest.ColorEnum.GREEN, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,396,"ssertSame(Nest.ColorEnum.BLUE, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,397,/ This nesting works because the enum constants are defined in the SAME
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,398,/ class as the getEnumList(). It just acts as a normal enum.
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,401,ublic void testNestedBroken() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,402,ist list = new ArrayList(NestBroken.ColorEnum.getEnumList());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,403,ry {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,404,"ssertEquals(0, list.size());  // no enums!!!"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,405,/ this is BROKEN because the enum constants are defined in a DIFFERENT
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,406,"/ class from getEnumList(). Once NestBroken class is referenced,"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,407,"/ and thus class loaded with its enum constants, the getEnumList works:"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,408, catch (AssertionFailedError ex) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,409,"/ this actually works and isn't broken on Linux SunJDK1.4.1, so..."
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,410,"ssertEquals(3, list.size());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,412,ew NestBroken();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,413,ist = new ArrayList(NestBroken.ColorEnum.getEnumList());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,414,"ssertEquals(3, list.size());  // all is well!!!"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,415,terator it = list.iterator();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,416,"ssertSame(NestBroken.RED, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,417,"ssertSame(NestBroken.GREEN, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,418,"ssertSame(NestBroken.BLUE, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,421,ublic void testNestedLinked() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,422,ist list = new ArrayList(NestLinked.ColorEnum.getEnumList());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,423,"ssertEquals(3, list.size());  // all is well"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,424,terator it = list.iterator();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,425,"ssertSame(NestLinked.RED, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,426,"ssertSame(NestLinked.GREEN, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,427,"ssertSame(NestLinked.BLUE, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,428,/ This nesting works because a static block in the enum class forces a
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,429,/ class load of the outer class which defines the enum constants.
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,432,ublic void testNestedReferenced() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,433,ist list = new ArrayList(NestReferenced.ColorEnum.getEnumList());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,434,"ssertEquals(3, list.size());  // all is well"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,435,terator it = list.iterator();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,436,"ssertSame(NestReferenced.RED, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,437,"ssertSame(NestReferenced.GREEN, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,438,"ssertSame(NestReferenced.BLUE, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,439,/ This nesting works because the enum constants are actually defined in
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,440,/ the SAME class as the getEnumList(). The references in the outer class
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,441,/ are just extra references.
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,444,"ublic void testColorEnumEqualsWithDifferentClassLoaders() throws SecurityException, IllegalArgumentException,"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,445,"lassNotFoundException, NoSuchMethodException, IllegalAccessException, InvocationTargetException {"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,446,his.testWithDifferentClassLoaders(ColorEnum.BLUE);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,447,his.testWithDifferentClassLoaders(ColorEnum.GREEN);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,448,his.testWithDifferentClassLoaders(ColorEnum.RED);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,451,"oid testWithDifferentClassLoaders(ColorEnum colorEnum) throws ClassNotFoundException, SecurityException,"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,452,"oSuchMethodException, IllegalArgumentException, IllegalAccessException, InvocationTargetException {"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,453,/ Sanity checks:
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,454,ssertTrue(colorEnum.equals(colorEnum));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,455,ssertNotNull(ColorEnum.class.getClassLoader());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,456,/ set up:
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,457,lassLoader myClassLoader = EnumTest.class.getClassLoader();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,458,f (!(myClassLoader instanceof URLClassLoader)) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,459,"ail(""EnumTest ClassLoader = "" + (myClassLoader == null ? null : myClassLoader.getClass().getName()));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,461,"lassLoader classLoader = URLClassLoader.newInstance( ((URLClassLoader)myClassLoader).getURLs(), null);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,462,"bject enumObjectFromOtherClassLoader = this.getColorEnum(classLoader, colorEnum.getName());"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,464,"/ the real test, part 1."
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,465,ry {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,466,olorEnum testCase = (ColorEnum) enumObjectFromOtherClassLoader;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,467,"ail(""Should have thrown a ClassCastException for "" + testCase);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,468, catch (ClassCastException e) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,469,/ normal.
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,472,"/ the real test, part 2."
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,473,"ssertEquals(""The two objects should match even though they are from different class loaders"", colorEnum,"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,474,numObjectFromOtherClassLoader);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,476,"/ the real test, part 3 - testing equals(Object)"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,477,nt falseCount = 0;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,478,or (Iterator iter = ColorEnum.iterator(); iter.hasNext();) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,479,olorEnum element = (ColorEnum) iter.next();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,480,f (!colorEnum.equals(element)) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,481,alseCount++;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,482,ssertFalse(enumObjectFromOtherClassLoader.equals(element));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,485,"ssertEquals(ColorEnum.getEnumList().size() - 1, falseCount);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,487,"/ the real test, part 4 - testing compareTo(Object) == 0"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,488,alseCount = 0;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,489,or (Iterator iter = ColorEnum.iterator(); iter.hasNext();) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,490,olorEnum element = (ColorEnum) iter.next();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,491,f (!colorEnum.equals(element)) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,492,alseCount++;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,493,ssertFalse( ((Comparable)enumObjectFromOtherClassLoader).compareTo(element) == 0);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,496,"ssertEquals(ColorEnum.getEnumList().size() - 1, falseCount);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,499,"bject getColorEnum(ClassLoader classLoader, String color) throws ClassNotFoundException, SecurityException,"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,500,"oSuchMethodException, IllegalArgumentException, IllegalAccessException, InvocationTargetException {"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,501,/ Sanity check:
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,502,olorEnum.RED.equals(ColorEnum.RED);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,503,ssertNotNull(ColorEnum.class.getClassLoader());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,504,/ set up:
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,505,ssertNotNull(classLoader);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,506,ssertFalse(classLoader.equals(ColorEnum.class.getClassLoader()));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,507,lass otherColorEnumClass = null;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,508,ry {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,509,therColorEnumClass = classLoader.loadClass(ENUMS_CLASS_NAME);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,510, catch (ClassNotFoundException e) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,511,"/ Dump some information to help debug class loader issues under different JREs, Ant, Eclipse."
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,512,"ystem.err.println(""Could not load "" + ENUMS_CLASS_NAME + "" from the class loader "" + classLoader);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,513,RLClassLoader urlCl = (URLClassLoader) classLoader;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,514,RL[] urls = urlCl.getURLs();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,515,"ystem.err.println(""Class loader has "" + urls.length + "" URLs:"");"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,516,or (int i = 0; i < urls.length; i++) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,517,"ystem.err.println(""URL["" + i + ""] = "" + urls[i]);"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,519,.printStackTrace();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,520,hrow e;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,522,ssertNotNull(otherColorEnumClass);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,523,ssertNotNull(otherColorEnumClass.getClassLoader());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,524,ssertTrue(classLoader.equals(otherColorEnumClass.getClassLoader()));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,525,ssertFalse(otherColorEnumClass.getClassLoader().equals(ColorEnum.class.getClassLoader()));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,526,"ethod method = otherColorEnumClass.getMethod(""getEnum"", new Class[]{String.class});"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,527,"bject enumObject = method.invoke(otherColorEnumClass, new Object[]{color});"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,528,ssertNotNull(enumObject);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,529,ssertFalse(ColorEnum.class.equals(enumObject.getClass()));
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,530,ssertFalse(ColorEnum.class == enumObject.getClass());
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,531,eturn enumObject;
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,534,ublic void testEqualsToWrongInstance() {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,535,or (Iterator iter = ColorEnum.iterator(); iter.hasNext();) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,536,olorEnum element = (ColorEnum) iter.next();
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,537,his.testEqualsToWrongInstance(element);
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,541,oid testEqualsToWrongInstance(ColorEnum colorEnum) {
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,542,"ssertEquals(false, colorEnum.equals(""test""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,543,"ssertEquals(false, colorEnum.equals(new Integer(1)));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,544,"ssertEquals(false, colorEnum.equals(new Boolean(true)));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,545,"ssertEquals(false, colorEnum.equals(new StringBuffer(""test"")));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,546,"ssertEquals(false, colorEnum.equals(new Object()));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,547,"ssertEquals(false, colorEnum.equals(null));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,548,"ssertEquals(false, colorEnum.equals(""""));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,549,"ssertEquals(false, colorEnum.equals(ColorEnum.getEnum(null)));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,550,"ssertEquals(false, colorEnum.equals(ColorEnum.getEnum("""")));"
False,src/test/org/apache/commons/lang/enums/EnumTest.java,src/test/org/apache/commons/lang/enums/EnumTest.java,551,"ssertEquals(false, colorEnum.equals(ColorEnum.getEnum(""This ColorEnum does not exist."")));"
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,19,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,20,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,21,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,22,mport junit.textui.TestRunner;
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,25, Test suite for the Enum package.
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,27," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,28, @version $Id$
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,30,ublic class EnumTestSuite extends TestCase {
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,33, Construct a new instance.
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,35,ublic EnumTestSuite(String name) {
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,36,uper(name);
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,40, Command-line interface.
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,42,ublic static void main(String[] args) {
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,43,estRunner.run(suite());
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,47, Get the suite of tests
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,49,ublic static Test suite() {
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,50,estSuite suite = new TestSuite();
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,51,"uite.setName(""Commons-Lang-Enum Tests"");"
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,52,uite.addTest(EnumTest.suite());
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,53,uite.addTest(EnumEqualsTest.suite());
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,54,uite.addTest(EnumUtilsTest.suite());
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,55,uite.addTest(ValuedEnumTest.suite());
False,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,src/test/org/apache/commons/lang/enums/EnumTestSuite.java,56,eturn suite;
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,19,mport java.lang.reflect.Constructor;
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,20,mport java.lang.reflect.Modifier;
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,21,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,22,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,23,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,25,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,26,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,27,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,30, Test cases for the {@link Enum} class.
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,32," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,33, @version $Id$
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,36,ublic final class EnumUtilsTest extends TestCase {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,38,ublic EnumUtilsTest(String name) {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,39,uper(name);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,42,ublic void setUp() {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,45,ublic static Test suite() {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,46,estSuite suite = new TestSuite(EnumUtilsTest.class);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,47,"uite.setName(""EnumUtils Tests"");"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,48,eturn suite;
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,52,ublic void testConstructor() {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,53,ssertNotNull(new EnumUtils());
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,54,onstructor[] cons = EnumUtils.class.getDeclaredConstructors();
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,55,"ssertEquals(1, cons.length);"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,56,"ssertEquals(true, Modifier.isPublic(cons[0].getModifiers()));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,57,"ssertEquals(true, Modifier.isPublic(EnumUtils.class.getModifiers()));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,58,"ssertEquals(false, Modifier.isFinal(EnumUtils.class.getModifiers()));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,62,ublic void testIterator() {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,63,terator it = EnumUtils.iterator(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,64,"ssertSame(ColorEnum.RED, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,65,"ssertSame(ColorEnum.GREEN, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,66,"ssertSame(ColorEnum.BLUE, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,67,t = EnumUtils.iterator(DummyEnum.class);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,68,"ssertEquals(false, it.hasNext());"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,71,ublic void testIteratorEx() {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,72,ry {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,73,numUtils.iterator(null);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,74,ail();
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,75, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,76,ry {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,77,numUtils.iterator(Object.class);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,78,ail();
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,79, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,83,ublic void testList() {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,84,ist list = EnumUtils.getEnumList(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,85,terator it = list.iterator();
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,86,"ssertSame(ColorEnum.RED, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,87,"ssertSame(ColorEnum.GREEN, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,88,"ssertSame(ColorEnum.BLUE, it.next());"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,89,ist = EnumUtils.getEnumList(DummyEnum.class);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,90,"ssertEquals(0, list.size());"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,93,ublic void testListEx() {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,94,ry {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,95,numUtils.getEnumList(null);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,96,ail();
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,97, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,98,ry {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,99,numUtils.getEnumList(Object.class);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,100,ail();
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,101, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,105,ublic void testMap() {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,106,ap map = EnumUtils.getEnumMap(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,107,ssertTrue(map.containsValue(ColorEnum.RED));
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,108,ssertTrue(map.containsValue(ColorEnum.GREEN));
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,109,ssertTrue(map.containsValue(ColorEnum.BLUE));
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,110,"ssertSame(ColorEnum.RED, map.get(""Red""));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,111,"ssertSame(ColorEnum.GREEN, map.get(""Green""));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,112,"ssertSame(ColorEnum.BLUE, map.get(""Blue""));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,113,ap = EnumUtils.getEnumMap(DummyEnum.class);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,114,"ssertEquals(0, map.size());"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,117,ublic void testMapEx() {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,118,ry {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,119,numUtils.getEnumMap(null);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,120,ail();
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,121, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,122,ry {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,123,numUtils.getEnumMap(Object.class);
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,124,ail();
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,125, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,129,ublic void testGet() {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,130,"ssertSame(ColorEnum.RED, EnumUtils.getEnum(ColorEnum.class, ""Red""));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,131,"ssertSame(ColorEnum.GREEN, EnumUtils.getEnum(ColorEnum.class, ""Green""));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,132,"ssertSame(ColorEnum.BLUE, EnumUtils.getEnum(ColorEnum.class, ""Blue""));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,133,"ssertSame(null, EnumUtils.getEnum(ColorEnum.class, ""Pink""));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,134,"ssertSame(null, EnumUtils.getEnum(DummyEnum.class, ""Pink""));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,137,ublic void testGetEx() {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,138,ry {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,139,"numUtils.getEnum(null, """");"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,140,ail();
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,141, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,142,ry {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,143,"numUtils.getEnum(Object.class, ""Red"");"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,144,ail();
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,145, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,149,ublic void testGetValue() {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,150,"ssertSame(ValuedColorEnum.RED, EnumUtils.getEnum(ValuedColorEnum.class, 1));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,151,"ssertSame(ValuedColorEnum.GREEN, EnumUtils.getEnum(ValuedColorEnum.class, 2));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,152,"ssertSame(ValuedColorEnum.BLUE, EnumUtils.getEnum(ValuedColorEnum.class, 3));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,153,"ssertSame(null, EnumUtils.getEnum(ValuedColorEnum.class, 4));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,154,"ssertSame(null, EnumUtils.getEnum(DummyEnum.class, 5));"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,157,ublic void testGetValueEx() {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,158,ry {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,159,"numUtils.getEnum(null, 0);"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,160,ail();
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,161, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,162,ry {
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,163,"numUtils.getEnum(Object.class, 2);"
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,164,ail();
False,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,src/test/org/apache/commons/lang/enums/EnumUtilsTest.java,165, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,17, under the License.
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,19,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,21,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,22,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,23,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,26, Base extended enumeration.
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,28, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,29, @version $Id$
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,31,ublic class Extended1Enum extends Enum {
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,32,"ublic static final Extended1Enum ALPHA = new Extended1Enum(""Alpha"");"
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,33,"ublic static final Extended1Enum BETA = new Extended1Enum(""Beta"");"
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,35,rotected Extended1Enum(String name) {
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,36,uper(name);
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,39,ublic static Extended1Enum getEnum(String name) {
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,40,"eturn (Extended1Enum) getEnum(Extended1Enum.class, name);"
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,43,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,44,eturn getEnumMap(Extended1Enum.class);
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,47,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,48,eturn getEnumList(Extended1Enum.class);
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,51,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/Extended1Enum.java,src/test/org/apache/commons/lang/enums/Extended1Enum.java,52,eturn iterator(Extended1Enum.class);
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,17, under the License.
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,19,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,21,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,22,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,23,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,26, Extended enumeration.
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,28, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,29, @version $Id$
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,31,ublic class Extended2Enum extends Extended1Enum {
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,32,"ublic static final Extended1Enum GAMMA = new Extended2Enum(""Gamma"");"
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,34,rotected Extended2Enum(String color) {
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,35,uper(color);
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,38,ublic static Extended1Enum getEnum(String name) {
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,39,"eturn (Extended1Enum) getEnum(Extended2Enum.class, name);"
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,42,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,43,eturn getEnumMap(Extended2Enum.class);
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,46,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,47,eturn getEnumList(Extended2Enum.class);
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,50,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/Extended2Enum.java,src/test/org/apache/commons/lang/enums/Extended2Enum.java,51,eturn iterator(Extended2Enum.class);
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,17, under the License.
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,19,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,21,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,22,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,23,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,26, Extended enumeration.
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,28, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,29, @version $Id$
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,31,ublic class Extended3Enum extends Extended2Enum {
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,32,"ublic static final Extended1Enum DELTA = new Extended3Enum(""Delta"");"
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,34,rotected Extended3Enum(String name) {
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,35,uper(name);
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,38,ublic static Extended1Enum getEnum(String name) {
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,39,"eturn (Extended1Enum) Enum.getEnum(Extended3Enum.class, name);"
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,42,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,43,eturn Enum.getEnumMap(Extended3Enum.class);
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,46,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,47,eturn Enum.getEnumList(Extended3Enum.class);
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,50,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/Extended3Enum.java,src/test/org/apache/commons/lang/enums/Extended3Enum.java,51,eturn Enum.iterator(Extended3Enum.class);
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,24, Color enumeration demonstrating a normal simple nesting case.
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,25, All is well here as the nested enum class is really no different
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,26, to any other class.
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,28, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,29, @version $Id$
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,32,ublic final class Nest {
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,34,ublic Nest() {
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,35,uper();
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,38,ublic static final class ColorEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,39,"ublic static final ColorEnum RED = new ColorEnum(""Red"");"
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,40,"ublic static final ColorEnum GREEN = new ColorEnum(""Green"");"
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,41,"ublic static final ColorEnum BLUE = new ColorEnum(""Blue"");"
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,43,rivate ColorEnum(String color) {
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,44,uper(color);
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,47,ublic static ColorEnum getEnum(String color) {
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,48,"eturn (ColorEnum) getEnum(ColorEnum.class, color);"
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,51,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,52,eturn getEnumMap(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,55,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,56,eturn getEnumList(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,59,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/Nest.java,src/test/org/apache/commons/lang/enums/Nest.java,60,eturn iterator(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,24, Color enumeration which demonstrates how to break the enum system.
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,25, <p>
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,26, The class loader sees the two classes here as independent - the enum
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,27," class is nested, not an inner class. Calling getEnumList() on ColorEnum"
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,28," will return an empty list, unless and until the NestBroken class is"
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,29, referenced.
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,31, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,32, @version $Id$
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,35,ublic final class NestBroken {
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,37,"ublic static final ColorEnum RED = new ColorEnum(""Red"");"
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,38,"ublic static final ColorEnum GREEN = new ColorEnum(""Green"");"
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,39,"ublic static final ColorEnum BLUE = new ColorEnum(""Blue"");"
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,41,ublic NestBroken() {
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,42,uper();
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,45,ublic static final class ColorEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,47,rivate ColorEnum(String color) {
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,48,uper(color);
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,51,ublic static ColorEnum getEnum(String color) {
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,52,"eturn (ColorEnum) getEnum(ColorEnum.class, color);"
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,55,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,56,eturn getEnumMap(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,59,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,60,eturn getEnumList(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,63,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/NestBroken.java,src/test/org/apache/commons/lang/enums/NestBroken.java,64,eturn iterator(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,24, Color enumeration which demonstrates how to define the constants in a
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,25, different class to the Enum. The extra <code>static{}</code> block is
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,26, needed to ensure that the enum constants are created before the
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,27, static methods on the ColorEnum are used.
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,28, <p>
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,29, The class loader sees the two classes here as independent - the enum
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,30," class is nested, not an inner class. The static block thus forces the"
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,31," class load of the outer class, which is needed to initialise the enums."
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,33, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,34, @version $Id$
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,37,ublic final class NestLinked {
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,39,"ublic static final ColorEnum RED = new ColorEnum(""Red"");"
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,40,"ublic static final ColorEnum GREEN = new ColorEnum(""Green"");"
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,41,"ublic static final ColorEnum BLUE = new ColorEnum(""Blue"");"
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,43,ublic NestLinked() {
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,44,uper();
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,47,ublic static final class ColorEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,49,tatic {
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,50,/ Explicitly reference the class where the enums are defined
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,51,bject obj = NestLinked.RED;
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,54,rivate ColorEnum(String color) {
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,55,uper(color);
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,58,ublic static ColorEnum getEnum(String color) {
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,59,"eturn (ColorEnum) getEnum(ColorEnum.class, color);"
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,62,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,63,eturn getEnumMap(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,66,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,67,eturn getEnumList(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,70,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/NestLinked.java,src/test/org/apache/commons/lang/enums/NestLinked.java,71,eturn iterator(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,24, Color enumeration which demonstrates how to provide a view of the constants
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,25," in a different class to the Enum. This technique is the safest, however it"
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,26, is obviously inconvenient as it involves defining two sets of constants.
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,27, See NestedLinked for an alternative.
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,29, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,30, @version $Id$
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,33,ublic final class NestReferenced {
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,35,ublic static final ColorEnum RED = ColorEnum.RED;
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,36,ublic static final ColorEnum GREEN = ColorEnum.GREEN;
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,37,ublic static final ColorEnum BLUE = ColorEnum.BLUE;
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,39,ublic NestReferenced() {
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,40,uper();
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,43,ublic static final class ColorEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,45,"/ must be defined here, not just in outer class"
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,46,"rivate static final ColorEnum RED = new ColorEnum(""Red"");"
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,47,"rivate static final ColorEnum GREEN = new ColorEnum(""Green"");"
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,48,"rivate static final ColorEnum BLUE = new ColorEnum(""Blue"");"
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,50,rivate ColorEnum(String color) {
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,51,uper(color);
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,54,ublic static ColorEnum getEnum(String color) {
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,55,"eturn (ColorEnum) getEnum(ColorEnum.class, color);"
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,58,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,59,eturn getEnumMap(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,62,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,63,eturn getEnumList(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,66,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/NestReferenced.java,src/test/org/apache/commons/lang/enums/NestReferenced.java,67,eturn iterator(ColorEnum.class);
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,24, Operator enumeration.
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,26, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,27, @version $Id$
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,29,ublic abstract class OperationEnum extends Enum {
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,30,/ This syntax works for JDK 1.3 and upwards:
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,31,"/    public static final OperationEnum PLUS = new OperationEnum(""Plus"") {"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,32,"/        public int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,33,/            return (a + b);
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,36,"/    public static final OperationEnum MINUS = new OperationEnum(""Minus"") {"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,37,"/        public int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,38,/            return (a - b);
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,41,/ This syntax works for JDK 1.2 and upwards:
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,42,ublic static final OperationEnum PLUS = new PlusOperation();
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,43,rivate static class PlusOperation extends OperationEnum {
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,44,rivate PlusOperation() {
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,45,"uper(""Plus"");"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,47,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,48,eturn (a + b);
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,51,ublic static final OperationEnum MINUS = new MinusOperation();
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,52,rivate static class MinusOperation extends OperationEnum {
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,53,rivate MinusOperation() {
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,54,"uper(""Minus"");"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,56,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,57,eturn (a - b);
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,61,rivate OperationEnum(String name) {
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,62,uper(name);
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,65,ublic final Class getEnumClass() {
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,66,eturn OperationEnum.class;
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,69,"ublic abstract int eval(int a, int b);"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,71,ublic static OperationEnum getEnum(String name) {
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,72,"eturn (OperationEnum) getEnum(OperationEnum.class, name);"
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,75,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,76,eturn getEnumMap(OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,79,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,80,eturn getEnumList(OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,83,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/OperationEnum.java,src/test/org/apache/commons/lang/enums/OperationEnum.java,84,eturn iterator(OperationEnum.class);
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,24, Color enumeration.
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,26," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,27, @version $Id$
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,30,ublic final class ValuedColorEnum extends ValuedEnum {
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,31,"ublic static final ValuedColorEnum RED = new ValuedColorEnum(""Red"", 1);"
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,32,"ublic static final ValuedColorEnum GREEN = new ValuedColorEnum(""Green"", 2);"
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,33,"ublic static final ValuedColorEnum BLUE = new ValuedColorEnum(""Blue"", 3);"
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,35,"rivate ValuedColorEnum(String color, int value) {"
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,36,"uper(color, value);"
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,39,ublic static ValuedColorEnum getEnum(String color) {
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,40,"eturn (ValuedColorEnum) getEnum(ValuedColorEnum.class, color);"
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,43,ublic static ValuedColorEnum getEnum(int value) {
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,44,"eturn (ValuedColorEnum) getEnum(ValuedColorEnum.class, value);"
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,47,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,48,eturn getEnumMap(ValuedColorEnum.class);
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,51,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,52,eturn getEnumList(ValuedColorEnum.class);
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,55,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,src/test/org/apache/commons/lang/enums/ValuedColorEnum.java,56,eturn iterator(ValuedColorEnum.class);
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,19,mport java.net.URLClassLoader;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,20,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,21,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,22,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,24,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,25,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,26,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,28,mport org.apache.commons.lang.SerializationUtils;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,31, Test cases for the {@link Enum} class.
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,33," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,34, @version $Id$
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,37,ublic final class ValuedEnumTest extends TestCase {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,39,ublic ValuedEnumTest(String name) {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,40,uper(name);
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,43,ublic void setUp() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,46,ublic static Test suite() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,47,estSuite suite = new TestSuite(ValuedEnumTest.class);
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,48,"uite.setName(""ValuedEnum Tests"");"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,49,eturn suite;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,52,ublic void testName() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,53,"ssertEquals(""Red"", ValuedColorEnum.RED.getName());"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,54,"ssertEquals(""Green"", ValuedColorEnum.GREEN.getName());"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,55,"ssertEquals(""Blue"", ValuedColorEnum.BLUE.getName());"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,58,ublic void testValue() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,59,"ssertEquals(1, ValuedColorEnum.RED.getValue());"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,60,"ssertEquals(2, ValuedColorEnum.GREEN.getValue());"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,61,"ssertEquals(3, ValuedColorEnum.BLUE.getValue());"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,64,ublic void testCompareTo() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,65,ssertTrue(ValuedColorEnum.BLUE.compareTo(ValuedColorEnum.BLUE) == 0);
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,66,ssertTrue(ValuedColorEnum.RED.compareTo(ValuedColorEnum.BLUE) < 0);
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,67,ssertTrue(ValuedColorEnum.BLUE.compareTo(ValuedColorEnum.RED) > 0);
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,70,ublic void testCompareTo_classloader_equal() throws Exception {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,71,lassLoader cl = ValuedColorEnum.class.getClassLoader();
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,72,f (cl instanceof URLClassLoader) {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,73,RLClassLoader urlCL = (URLClassLoader) cl;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,74,"RLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,75,"RLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,76,"lass otherEnumClass1 = urlCL1.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,77,"lass otherEnumClass2 = urlCL2.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,78,"bject blue1 = otherEnumClass1.getDeclaredField(""BLUE"").get(null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,79,"bject blue2 = otherEnumClass2.getDeclaredField(""BLUE"").get(null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,80,ssertTrue(((Comparable) blue1).compareTo(blue2) == 0);
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,84,ublic void testCompareTo_classloader_different() throws Exception {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,85,lassLoader cl = ValuedColorEnum.class.getClassLoader();
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,86,f (cl instanceof URLClassLoader) {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,87,RLClassLoader urlCL = (URLClassLoader) cl;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,88,"RLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,89,"RLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,90,"lass otherEnumClass1 = urlCL1.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,91,"lass otherEnumClass2 = urlCL2.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,92,"bject blue1 = otherEnumClass1.getDeclaredField(""BLUE"").get(null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,93,"bject blue2 = otherEnumClass2.getDeclaredField(""RED"").get(null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,94,ssertTrue(((Comparable) blue1).compareTo(blue2) != 0);
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,98,ublic void testCompareTo_nonEnumType() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,99,ry {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,100,aluedColorEnum.BLUE.compareTo(new TotallyUnrelatedClass(ValuedColorEnum.BLUE.getValue()));
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,101,ail();
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,102, catch (ClassCastException ex) {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,103,/ expected
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,107,ublic void testCompareTo_otherEnumType() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,108,ry {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,109,aluedColorEnum.BLUE.compareTo(ValuedLanguageEnum.ENGLISH);
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,110,ail();
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,111, catch (ClassCastException ex) {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,112,/ expected
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,116,ublic void testCompareTo_otherType() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,117,ry {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,118,"aluedColorEnum.BLUE.compareTo(""Blue"");"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,119,ail();
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,120, catch (ClassCastException ex) {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,121,/ expected
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,125,ublic void testCompareTo_null() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,126,ry {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,127,aluedColorEnum.BLUE.compareTo(null);
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,128,ail();
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,129, catch (NullPointerException ex) {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,130,/ expected
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,134,ublic void testEquals() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,135,"ssertSame(ValuedColorEnum.RED, ValuedColorEnum.RED);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,136,"ssertSame(ValuedColorEnum.getEnum(""Red""), ValuedColorEnum.RED);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,139,ublic void testEquals_classloader_equal() throws Exception {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,140,lassLoader cl = ValuedColorEnum.class.getClassLoader();
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,141,f (cl instanceof URLClassLoader) {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,142,RLClassLoader urlCL = (URLClassLoader) cl;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,143,"RLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,144,"RLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,145,"lass otherEnumClass1 = urlCL1.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,146,"lass otherEnumClass2 = urlCL2.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,147,"bject blue1 = otherEnumClass1.getDeclaredField(""BLUE"").get(null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,148,"bject blue2 = otherEnumClass2.getDeclaredField(""BLUE"").get(null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,149,"ssertEquals(true, blue1.equals(blue2));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,153,ublic void testEquals_classloader_different() throws Exception {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,154,lassLoader cl = ValuedColorEnum.class.getClassLoader();
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,155,f (cl instanceof URLClassLoader) {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,156,RLClassLoader urlCL = (URLClassLoader) cl;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,157,"RLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,158,"RLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,159,"lass otherEnumClass1 = urlCL1.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,160,"lass otherEnumClass2 = urlCL2.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,161,"bject blue1 = otherEnumClass1.getDeclaredField(""BLUE"").get(null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,162,"bject blue2 = otherEnumClass2.getDeclaredField(""RED"").get(null);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,163,"ssertEquals(false, blue1.equals(blue2));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,167,ublic void testToString() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,168,tring toString = ValuedColorEnum.RED.toString();
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,169,"ssertEquals(""ValuedColorEnum[Red=1]"", toString);"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,170,"ssertSame(toString, ValuedColorEnum.RED.toString());"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,173,ublic void testIterator() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,174,terator it = ValuedColorEnum.iterator();
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,175,"ssertSame(ValuedColorEnum.RED, it.next());"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,176,"ssertSame(ValuedColorEnum.GREEN, it.next());"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,177,"ssertSame(ValuedColorEnum.BLUE, it.next());"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,180,ublic void testList() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,181,ist list = ValuedColorEnum.getEnumList();
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,183,ssertNotNull(list);
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,185,"ssertEquals( list.size(),"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,186,aluedColorEnum.getEnumMap().keySet().size());
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,188,terator it = list.iterator();
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,189,"ssertSame(ValuedColorEnum.RED, it.next());"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,190,"ssertSame(ValuedColorEnum.GREEN, it.next());"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,191,"ssertSame(ValuedColorEnum.BLUE, it.next());"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,194,ublic void testMap() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,195,ap map = ValuedColorEnum.getEnumMap();
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,197,ssertNotNull(map);
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,199,"ssertEquals( map.keySet().size(),"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,200,aluedColorEnum.getEnumList().size());
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,202,ssertTrue(map.containsValue(ValuedColorEnum.RED));
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,203,ssertTrue(map.containsValue(ValuedColorEnum.GREEN));
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,204,ssertTrue(map.containsValue(ValuedColorEnum.BLUE));
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,205,"ssertSame(ValuedColorEnum.RED, map.get(""Red""));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,206,"ssertSame(ValuedColorEnum.GREEN, map.get(""Green""));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,207,"ssertSame(ValuedColorEnum.BLUE, map.get(""Blue""));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,210,ublic void testGet() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,211,"ssertSame(ValuedColorEnum.RED, ValuedColorEnum.getEnum(""Red""));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,212,"ssertSame(ValuedColorEnum.GREEN, ValuedColorEnum.getEnum(""Green""));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,213,"ssertSame(ValuedColorEnum.BLUE, ValuedColorEnum.getEnum(""Blue""));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,214,"ssertSame(null, ValuedColorEnum.getEnum(""Pink""));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,217,ublic void testGetValue() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,218,"ssertSame(ValuedColorEnum.RED, ValuedColorEnum.getEnum(1));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,219,"ssertSame(ValuedColorEnum.GREEN, ValuedColorEnum.getEnum(2));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,220,"ssertSame(ValuedColorEnum.BLUE, ValuedColorEnum.getEnum(3));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,221,"ssertSame(null, ValuedColorEnum.getEnum(4));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,224,ublic void testSerialization() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,225,"ssertSame(ValuedColorEnum.RED, SerializationUtils.clone(ValuedColorEnum.RED));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,226,"ssertSame(ValuedColorEnum.GREEN, SerializationUtils.clone(ValuedColorEnum.GREEN));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,227,"ssertSame(ValuedColorEnum.BLUE, SerializationUtils.clone(ValuedColorEnum.BLUE));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,230,/-----------------------------------------------------------------------s
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,231,tatic class TotallyUnrelatedClass {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,232,rivate final int value;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,234,ublic TotallyUnrelatedClass(final int value) {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,235,his.value = value;
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,238,ublic int getValue() {
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,239,eturn value;
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,17,ackage org.apache.commons.lang.enums;
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,19,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,20,mport java.util.List;
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,21,mport java.util.Map;
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,24, Language enumeration.
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,26," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,27, @version $Id$
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,29,ublic final class ValuedLanguageEnum extends ValuedEnum {
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,30,"ublic static final ValuedLanguageEnum ENGLISH = new ValuedLanguageEnum(""English"", 1);"
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,31,"ublic static final ValuedLanguageEnum FRENCH = new ValuedLanguageEnum(""French"", 2);"
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,32,"ublic static final ValuedLanguageEnum GERMAN = new ValuedLanguageEnum(""German"", 3);"
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,34,"rivate ValuedLanguageEnum(String color, int value) {"
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,35,"uper(color, value);"
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,38,ublic static ValuedLanguageEnum getEnum(String color) {
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,39,"eturn (ValuedLanguageEnum) getEnum(ValuedLanguageEnum.class, color);"
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,42,ublic static ValuedLanguageEnum getEnum(int value) {
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,43,"eturn (ValuedLanguageEnum) getEnum(ValuedLanguageEnum.class, value);"
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,46,ublic static Map getEnumMap() {
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,47,eturn getEnumMap(ValuedLanguageEnum.class);
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,50,ublic static List getEnumList() {
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,51,eturn getEnumList(ValuedLanguageEnum.class);
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,54,ublic static Iterator iterator() {
False,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,55,eturn iterator(ValuedLanguageEnum.class);
