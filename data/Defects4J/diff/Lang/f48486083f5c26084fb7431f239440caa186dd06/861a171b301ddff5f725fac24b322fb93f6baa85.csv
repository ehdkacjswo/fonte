is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,57,import java.lang.reflect.Field;
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,72,"rotected static final String CAUSE_METHOD_NAME = ""getCause"";"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,73,protected static final String[] CAUSE_METHOD_NAMES =
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,75,"""getCause"","
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,76,"""getNextException"","
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,77,"""getTargetException"","
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,78,"""getException"""
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,89, <code>getCause()</code> method which returns a
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,96,"* <code>getCause()</code>, <code>getNextException()</code>,"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,97,"* <code>getTargetException()</code>, or"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,98,* <code>getException()</code> method which returns a
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,93, extracting and returning the cause of the exception.
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,94," Otherwise, returns <code>null</code>."
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,96," <p>TODO: Examine for a ""detail"" public member attribute from"
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,97, java.rmi.RemoteException.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,102,* extracting and returning the cause of the exception.  In the
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,103,"* absence of any such method, the object is inspected for a"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,104,* <code>detail</code> field assignable to a
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,105,"* <code>Throwable</code>.  If none of the above is found, returns"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,106,* <code>null</code>.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,113,"return getCause(t, CAUSE_METHOD_NAMES);"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,117,* Extends the API of {@link #getCause(Throwable)} by
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,118,* introspecting for only user-specified method names.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,120,* @see #getCause(Throwable)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,122,"public static Throwable getCause(Throwable t, String[] methodNames)"
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,107,"ause = getCauseUsingMethodName(CAUSE_METHOD_NAME, t);"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,127,for (int i = 0; i < methodNames.length; i++)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,129,"cause = getCauseUsingMethodName(t, methodNames[i]);"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,130,if (cause != null)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,132,break;
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,136,if (cause == null)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,138,"cause = getCauseUsingFieldName(t, ""detail"");"
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,168, @param methodName The name of the method to find and invoke.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,201,* @param methodName The name of the method to find and invoke.
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,173,"rivate static Throwable getCauseUsingMethodName(String methodName,"
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,174,hrowable t)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,205,"private static Throwable getCauseUsingMethodName(Throwable t,"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,206,String methodName)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,241,* @param t The exception to examine.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,242,* @param fieldName The name of the attribute to examine.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,243,"* @return The wrapped exception, or <code>null</code> if not"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,244,* found.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,246,"private static Throwable getCauseUsingFieldName(Throwable t,"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,247,String fieldName)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,249,Field field = null;
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,250,try
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,252,field = t.getClass().getField(fieldName);
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,254,catch (NoSuchFieldException ignored)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,257,catch (SecurityException ignored)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,261,if (field != null &&
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,262,Throwable.class.isAssignableFrom(field.getType()))
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,264,try
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,266,return (Throwable) field.get(t);
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,268,catch (IllegalAccessException ignored)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,271,catch (IllegalArgumentException ignored)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,275,return null;
