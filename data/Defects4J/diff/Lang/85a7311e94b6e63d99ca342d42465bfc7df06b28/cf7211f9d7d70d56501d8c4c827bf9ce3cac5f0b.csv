is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,17,package org.apache.commons.lang3.time;
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,19,import java.text.ParseException;
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,20,import java.text.ParsePosition;
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,21,import java.util.Date;
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,22,import java.util.Locale;
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,23,import java.util.TimeZone;
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,26,"* <p>DateParser is the ""missing"" interface for the parsing methods of"
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,27,* {@link java.text.DateFormat}.</p>
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,29,* @since 3.2
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,31,public interface DateParser {
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,34,* Equivalent to DateFormat.parse(String).
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,36,* See {@link java.text.DateFormat#parse(String)} for more information.
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,37,* @param source A <code>String</code> whose beginning should be parsed.
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,38,* @return A <code>Date</code> parsed from the string
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,39,* @throws ParseException if the beginning of the specified string cannot be parsed.
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,41,public Date parse(String source) throws ParseException;
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,44,"* Equivalent to DateFormat.parse(String, ParsePosition)."
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,46,"* See {@link java.text.DateFormat#parse(String, ParsePosition)} for more information."
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,48,"* @param source A <code>String</code>, part of which should be parsed."
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,49,* @param pos A <code>ParsePosition</code> object with index and error index information
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,50,* as described above.
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,51,"* @return A <code>Date</code> parsed from the string. In case of error, returns null."
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,52,* @throws NullPointerException if text or pos is null.
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,54,"public Date parse(String source, ParsePosition pos);"
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,56,// Accessors
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,59,* <p>Get the pattern used by this parser.</p>
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,61,"* @return the pattern, {@link java.text.SimpleDateFormat} compatible"
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,63,public String getPattern();
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,66,* <p>Get the time zone used by this parser.</p>
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,68,* <p>This zone is always used for <code>Date</code> formatting.
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,69,"* If a <code>Calendar</code> is passed in to be formatted, the"
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,70,* time zone on that may be used depending on
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,71,* {@link #getTimeZoneOverridesCalendar()}.</p>
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,73,* @return the time zone
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,75,public TimeZone getTimeZone();
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,78,* <p>Get the locale used by this parser.</p>
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,80,* @return the locale
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,82,public Locale getLocale();
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,85,* Parses text from a string to produce a Date.
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,86,* See {@link java.text.DateFormat#parseObject(String)}
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,88,Object parseObject(String source) throws ParseException;
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,91,* Parse a date/time string according to the given parse position.
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,92,"* See {@link java.text.DateFormat#parseObject(String, ParsePosition)}"
True,src/main/java/org/apache/commons/lang3/time/DateParser.java,src/main/java/org/apache/commons/lang3/time/DateParser.java,94,"public Object parseObject(String source, ParsePosition pos);"
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,17,package org.apache.commons.lang3.time;
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,19,import java.text.FieldPosition;
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,20,import java.util.Calendar;
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,21,import java.util.Date;
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,22,import java.util.Locale;
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,23,import java.util.TimeZone;
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,26,"* <p>DatePrinter is the ""missing"" interface for the format methods of"
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,27,* {@link java.text.DateFormat}.</p>
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,29,* @since 3.2
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,31,public interface DatePrinter {
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,34,* <p>Formats a millisecond {@code long} value.</p>
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,36,* @param millis  the millisecond value to format
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,37,* @return the formatted string
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,38,* @since 2.1
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,40,public String format(long millis);
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,43,* <p>Formats a {@code Date} object using a {@code GregorianCalendar}.</p>
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,45,* @param date  the date to format
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,46,* @return the formatted string
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,48,public String format(Date date);
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,51,* <p>Formats a {@code Calendar} object.</p>
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,53,* @param calendar  the calendar to format
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,54,* @return the formatted string
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,56,public String format(Calendar calendar);
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,59,* <p>Formats a milliseond {@code long} value into the
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,60,* supplied {@code StringBuffer}.</p>
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,62,* @param millis  the millisecond value to format
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,63,* @param buf  the buffer to format into
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,64,* @return the specified string buffer
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,66,"public StringBuffer format(long millis, StringBuffer buf);"
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,69,* <p>Formats a {@code Date} object into the
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,70,* supplied {@code StringBuffer} using a {@code GregorianCalendar}.</p>
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,72,* @param date  the date to format
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,73,* @param buf  the buffer to format into
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,74,* @return the specified string buffer
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,76,"public StringBuffer format(Date date, StringBuffer buf);"
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,79,* <p>Formats a {@code Calendar} object into the
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,80,* supplied {@code StringBuffer}.</p>
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,82,* @param calendar  the calendar to format
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,83,* @param buf  the buffer to format into
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,84,* @return the specified string buffer
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,86,"public StringBuffer format(Calendar calendar, StringBuffer buf);"
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,88,// Accessors
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,91,* <p>Gets the pattern used by this printer.</p>
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,93,"* @return the pattern, {@link java.text.SimpleDateFormat} compatible"
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,95,public String getPattern();
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,98,* <p>Gets the time zone used by this printer.</p>
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,100,* <p>This zone is always used for {@code Date} printing. </p>
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,102,* @return the time zone
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,104,public TimeZone getTimeZone();
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,107,* <p>Gets the locale used by this printer.</p>
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,109,* @return the locale
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,111,public Locale getLocale();
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,114,"* <p>Formats a {@code Date}, {@code Calendar} or"
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,115,* {@code Long} (milliseconds) object.</p>
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,117,"* See {@link java.text.DateFormat#format(Object, StringBuffer, FieldPosition)"
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,119,* @param obj  the object to format
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,120,* @param toAppendTo  the buffer to append to
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,121,* @param pos  the position - ignored
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,122,* @return the buffer passed in
True,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,src/main/java/org/apache/commons/lang3/time/DatePrinter.java,124,"StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,19,mport java.io.IOException;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,20,mport java.io.ObjectInputStream;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,22,mport java.text.DateFormatSymbols;
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,22,import java.text.ParseException;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,26,mport java.util.ArrayList;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,29,mport java.util.GregorianCalendar;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,30,mport java.util.List;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,33,mport java.util.concurrent.ConcurrentHashMap;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,34,mport java.util.concurrent.ConcurrentMap;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,36,mport org.apache.commons.lang3.Validate;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,43, {@code SimpleDateFormat} in most formatting situations.
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,34,* {@code SimpleDateFormat} in most formatting and parsing situations.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,49," <p>Only formatting is supported, but all patterns are compatible with"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,40,* <p>All patterns are compatible with
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,43,"* <p>Since 3.2, FastDateFormat supports parsing as well as printing.</p>"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,70,ublic class FastDateFormat extends Format {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,71,"/ A lot of the speed in this class comes from caching, but some comes"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,72,/ from the special int to StringBuffer conversion.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,74,/ The following produces a padded 2 digit number:
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,75,/   buffer.append((char)(value / 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,76,/   buffer.append((char)(value % 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,78,/ Note that the fastest append to StringBuffer is a single char (used here).
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,79,"/ Note that Integer.toString() is not called, the conversion is simply"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,80,/ taking the value and adding (mathematically) the ASCII value for '0'.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,81,"/ So, don't change this code! It works and is very fast."
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,63,"public class FastDateFormat extends Format implements DateParser, DatePrinter {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,88,rivate static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,69,private static final long serialVersionUID = 2L;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,109,"rotected FastDateFormat createInstance(String pattern,    TimeZone timeZone, Locale locale) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,90,"protected FastDateFormat createInstance(String pattern, TimeZone timeZone, Locale locale) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,114,"rivate static ConcurrentMap<TimeZoneDisplayKey, String> cTimeZoneDisplayCache ="
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,115,"ew ConcurrentHashMap<TimeZoneDisplayKey, String>(7);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,118, The pattern.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,120,rivate final String mPattern;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,122, The time zone.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,124,rivate final TimeZone mTimeZone;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,126, The locale.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,128,rivate final Locale mLocale;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,130, The parsed rules.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,132,rivate transient Rule[] mRules;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,134, The estimated maximum length.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,136,rivate transient int mMaxLengthEstimate;
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,95,private final FastDatePrinter printer;
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,96,private final FastDateParser parser;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,146,"eturn cache.getDateTimeInstance(SHORT, SHORT, null, null);"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,106,return cache.getInstance();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,400," <p>Gets the time zone display name, using a cache for performance.</p>"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,402, @param tz  the zone to query
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,403, @param daylight  true if daylight savings
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,404, @param style  the style to use {@code TimeZone.LONG} or {@code TimeZone.SHORT}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,405, @param locale  the locale to use
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,406, @return the textual name of the time zone
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,408,"tatic String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,409,"imeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,410,tring value = cTimeZoneDisplayCache.get(key);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,411,f (value == null) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,412,"/ This is a very slow call, so cache the results."
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,413,"alue = tz.getDisplayName(daylight, style, locale);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,414,"tring prior = cTimeZoneDisplayCache.putIfAbsent(key, value);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,415,f (prior != null) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,416,alue= prior;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,419,eturn value;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,433,Pattern = pattern;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,434,TimeZone = timeZone;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,435,Locale = locale;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,437,nit();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,441, <p>Initializes the instance for first use.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,443,rivate void init() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,444,ist<Rule> rulesList = parsePattern();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,445,Rules = rulesList.toArray(new Rule[rulesList.size()]);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,447,nt len = 0;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,448,or (int i=mRules.length; --i >= 0; ) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,449,en += mRules[i].estimateLength();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,452,MaxLengthEstimate = len;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,455,/ Parse the pattern
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,458, <p>Returns a list of Rules given a pattern.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,460, @return a {@code List} of Rule objects
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,461, @throws IllegalArgumentException if pattern is invalid
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,463,rotected List<Rule> parsePattern() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,464,ateFormatSymbols symbols = new DateFormatSymbols(mLocale);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,465,ist<Rule> rules = new ArrayList<Rule>();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,467,tring[] ERAs = symbols.getEras();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,468,tring[] months = symbols.getMonths();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,469,tring[] shortMonths = symbols.getShortMonths();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,470,tring[] weekdays = symbols.getWeekdays();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,471,tring[] shortWeekdays = symbols.getShortWeekdays();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,472,tring[] AmPmStrings = symbols.getAmPmStrings();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,474,nt length = mPattern.length();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,475,nt[] indexRef = new int[1];
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,477,or (int i = 0; i < length; i++) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,478,ndexRef[0] = i;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,479,"tring token = parseToken(mPattern, indexRef);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,480, = indexRef[0];
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,482,nt tokenLen = token.length();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,483,f (tokenLen == 0) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,484,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,487,ule rule;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,488,har c = token.charAt(0);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,490,witch (c) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,491,ase 'G': // era designator (text)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,492,"ule = new TextField(Calendar.ERA, ERAs);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,493,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,494,ase 'y': // year (number)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,495,f (tokenLen == 2) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,496,ule = TwoDigitYearField.INSTANCE;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,497, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,498,"ule = selectNumberRule(Calendar.YEAR, tokenLen < 4 ? 4 : tokenLen);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,500,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,501,ase 'M': // month in year (text and number)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,502,f (tokenLen >= 4) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,503,"ule = new TextField(Calendar.MONTH, months);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,504, else if (tokenLen == 3) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,505,"ule = new TextField(Calendar.MONTH, shortMonths);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,506, else if (tokenLen == 2) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,507,ule = TwoDigitMonthField.INSTANCE;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,508, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,509,ule = UnpaddedMonthField.INSTANCE;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,511,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,512,ase 'd': // day in month (number)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,513,"ule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,514,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,515,"ase 'h': // hour in am/pm (number, 1..12)"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,516,"ule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,517,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,518,"ase 'H': // hour in day (number, 0..23)"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,519,"ule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,520,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,521,ase 'm': // minute in hour (number)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,522,"ule = selectNumberRule(Calendar.MINUTE, tokenLen);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,523,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,524,ase 's': // second in minute (number)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,525,"ule = selectNumberRule(Calendar.SECOND, tokenLen);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,526,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,527,ase 'S': // millisecond (number)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,528,"ule = selectNumberRule(Calendar.MILLISECOND, tokenLen);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,529,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,530,ase 'E': // day in week (text)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,531,"ule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,532,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,533,ase 'D': // day in year (number)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,534,"ule = selectNumberRule(Calendar.DAY_OF_YEAR, tokenLen);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,535,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,536,ase 'F': // day of week in month (number)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,537,"ule = selectNumberRule(Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,538,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,539,ase 'w': // week in year (number)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,540,"ule = selectNumberRule(Calendar.WEEK_OF_YEAR, tokenLen);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,541,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,542,ase 'W': // week in month (number)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,543,"ule = selectNumberRule(Calendar.WEEK_OF_MONTH, tokenLen);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,544,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,545,ase 'a': // am/pm marker (text)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,546,"ule = new TextField(Calendar.AM_PM, AmPmStrings);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,547,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,548,ase 'k': // hour in day (1..24)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,549,"ule = new TwentyFourHourField(selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen));"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,550,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,551,ase 'K': // hour in am/pm (0..11)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,552,"ule = selectNumberRule(Calendar.HOUR, tokenLen);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,553,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,554,ase 'z': // time zone (text)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,555,f (tokenLen >= 4) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,556,"ule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.LONG);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,557, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,558,"ule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,560,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,561,ase 'Z': // time zone (value)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,562,f (tokenLen == 1) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,563,ule = TimeZoneNumberRule.INSTANCE_NO_COLON;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,564, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,565,ule = TimeZoneNumberRule.INSTANCE_COLON;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,567,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,568,ase '\'': // literal text
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,569,tring sub = token.substring(1);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,570,f (sub.length() == 1) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,571,ule = new CharacterLiteral(sub.charAt(0));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,572, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,573,ule = new StringLiteral(sub);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,575,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,576,efault:
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,577,"hrow new IllegalArgumentException(""Illegal pattern component: "" + token);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,580,ules.add(rule);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,583,eturn rules;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,587, <p>Performs the parsing of tokens.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,589, @param pattern  the pattern
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,590, @param indexRef  index references
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,591, @return parsed token
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,593,"rotected String parseToken(String pattern, int[] indexRef) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,594,tringBuilder buf = new StringBuilder();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,596,nt i = indexRef[0];
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,597,nt length = pattern.length();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,599,har c = pattern.charAt(i);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,600,f (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,601,"/ Scan a run of the same character, which indicates a time"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,602,/ pattern.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,603,uf.append(c);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,605,hile (i + 1 < length) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,606,har peek = pattern.charAt(i + 1);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,607,f (peek == c) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,608,uf.append(c);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,609,++;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,610, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,611,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,614, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,615,/ This will identify token as text.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,616,uf.append('\'');
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,618,oolean inLiteral = false;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,620,or (; i < length; i++) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,621, = pattern.charAt(i);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,623,f (c == '\'') {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,624,f (i + 1 < length && pattern.charAt(i + 1) == '\'') {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,625,/ '' is treated as escaped '
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,626,++;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,627,uf.append(c);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,628, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,629,nLiteral = !inLiteral;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,631, else if (!inLiteral &&
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,632,c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,633,--;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,634,reak;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,635, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,636,uf.append(c);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,641,ndexRef[0] = i;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,642,eturn buf.toString();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,646, <p>Gets an appropriate rule for the padding required.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,648, @param field  the field to get a rule for
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,649, @param padding  the padding required
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,650, @return a new rule with the correct padding
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,652,"rotected NumberRule selectNumberRule(int field, int padding) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,653,witch (padding) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,654,ase 1:
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,655,eturn new UnpaddedNumberField(field);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,656,ase 2:
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,657,eturn new TwoDigitNumberField(field);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,658,efault:
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,659,"eturn new PaddedNumberField(field, padding);"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,369,"printer= new FastDatePrinter(pattern, timeZone, locale);"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,370,"parser= new FastDateParser(pattern, timeZone, locale);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,676,f (obj instanceof Date) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,677,"eturn format((Date) obj, toAppendTo);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,678, else if (obj instanceof Calendar) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,679,"eturn format((Calendar) obj, toAppendTo);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,680, else if (obj instanceof Long) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,681,"eturn format(((Long) obj).longValue(), toAppendTo);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,682, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,683,"hrow new IllegalArgumentException(""Unknown class: "" +"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,684,"obj == null ? ""<null>"" : obj.getClass().getName()));"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,386,"return printer.format(obj, toAppendTo, pos);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,706,"alendar c = new GregorianCalendar(mTimeZone, mLocale);  // hard code GregorianCalendar"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,707,.setTime(date);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,708,"eturn applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,407,return printer.format(date);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,718,"eturn format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,417,return printer.format(calendar);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,731,"eturn format(new Date(millis), buf);"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,430,"return printer.format(millis, buf);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,743,"alendar c = new GregorianCalendar(mTimeZone, mLocale);  // hard code GregorianCalendar"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,744,.setTime(date);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,745,"eturn applyRules(c, buf);"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,442,"return printer.format(date, buf);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,757,"eturn applyRules(calendar, buf);"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,454,"return printer.format(calendar, buf);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,761, <p>Performs the formatting by applying the rules to the
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,762, specified calendar.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,764, @param calendar  the calendar to format
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,765, @param buf  the buffer to format into
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,766, @return the specified string buffer
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,457,// Parsing
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,461,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,462,* @see DateParser#parse(java.lang.String)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,768,"rotected StringBuffer applyRules(Calendar calendar, StringBuffer buf) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,769,or (Rule rule : mRules) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,770,"ule.appendTo(buf, calendar);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,772,eturn buf;
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,464,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,465,public Date parse(String source) throws ParseException {
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,466,return parser.parse(source);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,775,/ Parsing
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,778, <p>Parsing is not supported.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,780, @param source  the string to parse
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,781, @param pos  the parsing position
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,782, @return {@code null} as not supported
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,469,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,470,"* @see DateParser#parse(java.lang.String, java.text.ParsePosition)"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,472,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,473,"public Date parse(String source, ParsePosition pos) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,474,"return parser.parse(source, pos);"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,477,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,478,"* @see java.text.Format#parseObject(java.lang.String, java.text.ParsePosition)"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,786,os.setIndex(0);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,787,os.setErrorIndex(0);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,788,eturn null;
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,482,"return parser.parseObject(source, pos);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,799,eturn mPattern;
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,493,return printer.getPattern();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,810,eturn mTimeZone;
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,504,return printer.getTimeZone();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,819,eturn mLocale;
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,513,return printer.getLocale();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,832,eturn mMaxLengthEstimate;
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,526,return printer.getMaxLengthEstimate();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,849,eturn mPattern.equals(other.mPattern)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,850,& mTimeZone.equals(other.mTimeZone)
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,851,& mLocale.equals(other.mLocale);
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,543,"// no need to check parser, as it has same invariants as printer"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,544,return printer.equals(other.printer);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,861,eturn mPattern.hashCode() + 13 * (mTimeZone.hashCode() + 13 * mLocale.hashCode());
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,554,return printer.hashCode();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,871,"eturn ""FastDateFormat["" + mPattern + ""]"";"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,564,"return ""FastDateFormat["" + printer.getPattern() + "","" + printer.getLocale() + "","" + printer.getTimeZone().getID() + ""]"";"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,874,/ Serializing
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,877, Create the object after serialization. This implementation reinitializes the
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,878, transient properties.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,880, @param in ObjectInputStream from which the object is being deserialized.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,881, @throws IOException if there is an IO issue.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,882, @throws ClassNotFoundException if a class cannot be found.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,884,"rivate void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,885,n.defaultReadObject();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,886,nit();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,889,/ Rules
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,892, <p>Inner class defining a rule.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,894,rivate interface Rule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,896, Returns the estimated lentgh of the result.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,898, @return the estimated length
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,900,nt estimateLength();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,903, Appends the value of the specified calendar to the output buffer based on the rule implementation.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,905, @param buffer the output buffer
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,906, @param calendar calendar to be appended
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,908,"oid appendTo(StringBuffer buffer, Calendar calendar);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,912, <p>Inner class defining a numeric rule.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,914,rivate interface NumberRule extends Rule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,916, Appends the specified value to the output buffer based on the rule implementation.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,918, @param buffer the output buffer
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,919, @param value the value to be appended
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,921,"oid appendTo(StringBuffer buffer, int value);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,925, <p>Inner class to output a constant single character.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,927,rivate static class CharacterLiteral implements Rule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,928,rivate final char mValue;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,931, Constructs a new instance of {@code CharacterLiteral}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,932, to hold the specified value.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,934, @param value the character literal
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,936,haracterLiteral(char value) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,937,Value = value;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,941, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,943,ublic int estimateLength() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,944,eturn 1;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,948, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,950,"ublic void appendTo(StringBuffer buffer, Calendar calendar) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,951,uffer.append(mValue);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,956, <p>Inner class to output a constant string.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,958,rivate static class StringLiteral implements Rule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,959,rivate final String mValue;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,962, Constructs a new instance of {@code StringLiteral}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,963, to hold the specified value.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,965, @param value the string literal
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,967,tringLiteral(String value) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,968,Value = value;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,972, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,974,ublic int estimateLength() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,975,eturn mValue.length();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,979, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,981,"ublic void appendTo(StringBuffer buffer, Calendar calendar) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,982,uffer.append(mValue);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,987, <p>Inner class to output one of a set of values.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,989,rivate static class TextField implements Rule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,990,rivate final int mField;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,991,rivate final String[] mValues;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,994, Constructs an instance of {@code TextField}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,995, with the specified field and values.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,997, @param field the field
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,998, @param values the field values
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1000,"extField(int field, String[] values) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1001,Field = field;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1002,Values = values;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1006, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1008,ublic int estimateLength() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1009,nt max = 0;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1010,or (int i=mValues.length; --i >= 0; ) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1011,nt len = mValues[i].length();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1012,f (len > max) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1013,ax = len;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1016,eturn max;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1020, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1022,"ublic void appendTo(StringBuffer buffer, Calendar calendar) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1023,uffer.append(mValues[calendar.get(mField)]);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1028, <p>Inner class to output an unpadded number.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1030,rivate static class UnpaddedNumberField implements NumberRule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1031,rivate final int mField;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1034, Constructs an instance of {@code UnpadedNumberField} with the specified field.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1036, @param field the field
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1038,npaddedNumberField(int field) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1039,Field = field;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1043, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1045,ublic int estimateLength() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1046,eturn 4;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1050, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1052,"ublic void appendTo(StringBuffer buffer, Calendar calendar) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1053,"ppendTo(buffer, calendar.get(mField));"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1057, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1059,"ublic final void appendTo(StringBuffer buffer, int value) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1060,f (value < 10) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1061,uffer.append((char)(value + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1062, else if (value < 100) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1063,uffer.append((char)(value / 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1064,uffer.append((char)(value % 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1065, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1066,uffer.append(Integer.toString(value));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1072, <p>Inner class to output an unpadded month.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1074,rivate static class UnpaddedMonthField implements NumberRule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1075,tatic final UnpaddedMonthField INSTANCE = new UnpaddedMonthField();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1078, Constructs an instance of {@code UnpaddedMonthField}.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1081,npaddedMonthField() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1082,uper();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1086, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1088,ublic int estimateLength() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1089,eturn 2;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1093, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1095,"ublic void appendTo(StringBuffer buffer, Calendar calendar) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1096,"ppendTo(buffer, calendar.get(Calendar.MONTH) + 1);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1100, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1102,"ublic final void appendTo(StringBuffer buffer, int value) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1103,f (value < 10) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1104,uffer.append((char)(value + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1105, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1106,uffer.append((char)(value / 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1107,uffer.append((char)(value % 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1113, <p>Inner class to output a padded number.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1115,rivate static class PaddedNumberField implements NumberRule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1116,rivate final int mField;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1117,rivate final int mSize;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1120, Constructs an instance of {@code PaddedNumberField}.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1122, @param field the field
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1123, @param size size of the output field
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1125,"addedNumberField(int field, int size) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1126,f (size < 3) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1127,/ Should use UnpaddedNumberField or TwoDigitNumberField.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1128,hrow new IllegalArgumentException();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1130,Field = field;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1131,Size = size;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1135, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1137,ublic int estimateLength() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1138,eturn 4;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1142, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1144,"ublic void appendTo(StringBuffer buffer, Calendar calendar) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1145,"ppendTo(buffer, calendar.get(mField));"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1149, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1151,"ublic final void appendTo(StringBuffer buffer, int value) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1152,f (value < 100) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1153,or (int i = mSize; --i >= 2; ) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1154,uffer.append('0');
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1156,uffer.append((char)(value / 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1157,uffer.append((char)(value % 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1158, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1159,nt digits;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1160,f (value < 1000) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1161,igits = 3;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1162, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1163,"alidate.isTrue(value > -1, ""Negative values should not be possible"", value);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1164,igits = Integer.toString(value).length();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1166,or (int i = mSize; --i >= digits; ) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1167,uffer.append('0');
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1169,uffer.append(Integer.toString(value));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1175, <p>Inner class to output a two digit number.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1177,rivate static class TwoDigitNumberField implements NumberRule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1178,rivate final int mField;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1181, Constructs an instance of {@code TwoDigitNumberField} with the specified field.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1183, @param field the field
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1185,woDigitNumberField(int field) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1186,Field = field;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1190, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1192,ublic int estimateLength() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1193,eturn 2;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1197, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1199,"ublic void appendTo(StringBuffer buffer, Calendar calendar) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1200,"ppendTo(buffer, calendar.get(mField));"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1204, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1206,"ublic final void appendTo(StringBuffer buffer, int value) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1207,f (value < 100) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1208,uffer.append((char)(value / 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1209,uffer.append((char)(value % 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1210, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1211,uffer.append(Integer.toString(value));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1217, <p>Inner class to output a two digit year.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1219,rivate static class TwoDigitYearField implements NumberRule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1220,tatic final TwoDigitYearField INSTANCE = new TwoDigitYearField();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1223, Constructs an instance of {@code TwoDigitYearField}.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1225,woDigitYearField() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1226,uper();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1230, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1232,ublic int estimateLength() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1233,eturn 2;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1237, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1239,"ublic void appendTo(StringBuffer buffer, Calendar calendar) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1240,"ppendTo(buffer, calendar.get(Calendar.YEAR) % 100);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1244, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1246,"ublic final void appendTo(StringBuffer buffer, int value) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1247,uffer.append((char)(value / 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1248,uffer.append((char)(value % 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1253, <p>Inner class to output a two digit month.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1255,rivate static class TwoDigitMonthField implements NumberRule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1256,tatic final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1259, Constructs an instance of {@code TwoDigitMonthField}.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1261,woDigitMonthField() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1262,uper();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1266, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1268,ublic int estimateLength() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1269,eturn 2;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1273, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1275,"ublic void appendTo(StringBuffer buffer, Calendar calendar) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1276,"ppendTo(buffer, calendar.get(Calendar.MONTH) + 1);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1280, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1282,"ublic final void appendTo(StringBuffer buffer, int value) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1283,uffer.append((char)(value / 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1284,uffer.append((char)(value % 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1289, <p>Inner class to output the twelve hour field.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1291,rivate static class TwelveHourField implements NumberRule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1292,rivate final NumberRule mRule;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1295, Constructs an instance of {@code TwelveHourField} with the specified
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1296, {@code NumberRule}.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1298, @param rule the rule
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1300,welveHourField(NumberRule rule) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1301,Rule = rule;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1305, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1307,ublic int estimateLength() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1308,eturn mRule.estimateLength();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1312, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1314,"ublic void appendTo(StringBuffer buffer, Calendar calendar) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1315,nt value = calendar.get(Calendar.HOUR);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1316,f (value == 0) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1317,alue = calendar.getLeastMaximum(Calendar.HOUR) + 1;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1319,"Rule.appendTo(buffer, value);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1323, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1325,"ublic void appendTo(StringBuffer buffer, int value) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1326,"Rule.appendTo(buffer, value);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1331, <p>Inner class to output the twenty four hour field.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1333,rivate static class TwentyFourHourField implements NumberRule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1334,rivate final NumberRule mRule;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1337, Constructs an instance of {@code TwentyFourHourField} with the specified
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1338, {@code NumberRule}.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1340, @param rule the rule
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1342,wentyFourHourField(NumberRule rule) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1343,Rule = rule;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1347, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1349,ublic int estimateLength() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1350,eturn mRule.estimateLength();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1354, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1356,"ublic void appendTo(StringBuffer buffer, Calendar calendar) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1357,nt value = calendar.get(Calendar.HOUR_OF_DAY);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1358,f (value == 0) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1359,alue = calendar.getMaximum(Calendar.HOUR_OF_DAY) + 1;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1361,"Rule.appendTo(buffer, value);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1365, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1367,"ublic void appendTo(StringBuffer buffer, int value) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1368,"Rule.appendTo(buffer, value);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1373, <p>Inner class to output a time zone name.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1375,rivate static class TimeZoneNameRule implements Rule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1376,rivate final TimeZone mTimeZone;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1377,rivate final String mStandard;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1378,rivate final String mDaylight;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1381, Constructs an instance of {@code TimeZoneNameRule} with the specified properties.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1383, @param timeZone the time zone
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1384, @param locale the locale
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1385, @param style the style
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1387,"imeZoneNameRule(TimeZone timeZone, Locale locale, int style) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1388,TimeZone = timeZone;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1390,"Standard = getTimeZoneDisplay(timeZone, false, style, locale);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1391,"Daylight = getTimeZoneDisplay(timeZone, true, style, locale);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1395, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1397,ublic int estimateLength() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1398,"eturn Math.max(mStandard.length(), mDaylight.length());"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1402, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1404,"ublic void appendTo(StringBuffer buffer, Calendar calendar) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1405,f (mTimeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1406,uffer.append(mDaylight);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1407, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1408,uffer.append(mStandard);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1414, <p>Inner class to output a time zone as a number {@code +/-HHMM}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1415, or {@code +/-HH:MM}.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,569,* <p>Performs the formatting by applying the rules to the
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,570,* specified calendar.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,572,* @param calendar  the calendar to format
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,573,* @param buf  the buffer to format into
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,574,* @return the specified string buffer
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1417,rivate static class TimeZoneNumberRule implements Rule {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1418,tatic final TimeZoneNumberRule INSTANCE_COLON = new TimeZoneNumberRule(true);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1419,tatic final TimeZoneNumberRule INSTANCE_NO_COLON = new TimeZoneNumberRule(false);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1421,inal boolean mColon;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1424, Constructs an instance of {@code TimeZoneNumberRule} with the specified properties.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1426, @param colon add colon between HH and MM in the output if {@code true}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1428,imeZoneNumberRule(boolean colon) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1429,Colon = colon;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1433, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1435,ublic int estimateLength() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1436,eturn 5;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1440, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1442,"ublic void appendTo(StringBuffer buffer, Calendar calendar) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1443,nt offset = calendar.get(Calendar.ZONE_OFFSET) + calendar.get(Calendar.DST_OFFSET);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1445,f (offset < 0) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1446,uffer.append('-');
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1447,ffset = -offset;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1448, else {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1449,uffer.append('+');
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1452,nt hours = offset / (60 * 60 * 1000);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1453,uffer.append((char)(hours / 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1454,uffer.append((char)(hours % 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1456,f (mColon) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1457,uffer.append(':');
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1460,nt minutes = offset / (60 * 1000) - 60 * hours;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1461,uffer.append((char)(minutes / 10 + '0'));
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1462,uffer.append((char)(minutes % 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,576,"protected StringBuffer applyRules(Calendar calendar, StringBuffer buf) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,577,"return printer.applyRules(calendar, buf);"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1468, <p>Inner class that acts as a compound key for time zone names.</p>
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1470,rivate static class TimeZoneDisplayKey {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1471,rivate final TimeZone mTimeZone;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1472,rivate final int mStyle;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1473,rivate final Locale mLocale;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1476, Constructs an instance of {@code TimeZoneDisplayKey} with the specified properties.
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1478, @param timeZone the time zone
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1479, @param daylight adjust the style for daylight saving time if {@code true}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1480, @param style the timezone style
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1481, @param locale the timezone locale
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1483,"imeZoneDisplayKey(TimeZone timeZone,"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1484,"oolean daylight, int style, Locale locale) {"
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1485,TimeZone = timeZone;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1486,f (daylight) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1487,tyle |= 0x80000000;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1489,Style = style;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1490,Locale = locale;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1494, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1496,Override
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1497,ublic int hashCode() {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1498,eturn (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1502, {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1504,Override
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1505,ublic boolean equals(Object obj) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1506,f (this == obj) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1507,eturn true;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1509,f (obj instanceof TimeZoneDisplayKey) {
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1510,imeZoneDisplayKey other = (TimeZoneDisplayKey)obj;
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1511,eturn
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1512,TimeZone.equals(other.mTimeZone) &&
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1513,Style == other.mStyle &&
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1514,Locale.equals(other.mLocale);
False,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,src/main/java/org/apache/commons/lang3/time/FastDateFormat.java,1516,eturn false;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,17,package org.apache.commons.lang3.time;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,19,import java.io.IOException;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,20,import java.io.ObjectInputStream;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,21,import java.io.Serializable;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,22,import java.text.DateFormatSymbols;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,23,import java.text.ParseException;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,24,import java.text.ParsePosition;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,25,import java.util.ArrayList;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,26,import java.util.Arrays;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,27,import java.util.Calendar;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,28,import java.util.Comparator;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,29,import java.util.Date;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,30,import java.util.List;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,31,import java.util.Locale;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,32,import java.util.SortedMap;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,33,import java.util.TimeZone;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,34,import java.util.TreeMap;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,35,import java.util.concurrent.ConcurrentHashMap;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,36,import java.util.concurrent.ConcurrentMap;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,37,import java.util.regex.Matcher;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,38,import java.util.regex.Pattern;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,41,* <p>FastDateParser is a fast and thread-safe version of
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,42,* {@link java.text.SimpleDateFormat}.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,44,* <p>This class can be used as a direct replacement to
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,45,* <code>SimpleDateFormat</code> in most parsing situations.
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,46,* This class is especially useful in multi-threaded server environments.
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,47,"* <code>SimpleDateFormat</code> is not thread-safe in any JDK version,"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,48,* nor will it be as Sun have closed the
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,49,"* <a href=""http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4228335"">bug</a>/RFE."
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,50,* </p>
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,52,"* <p>Only parsing is supported, but all patterns are compatible with"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,53,* SimpleDateFormat.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,55,* <p>Timing tests indicate this class is as about as fast as SimpleDateFormat
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,56,* in single thread applications and about 25% faster in multi-thread applications.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,58,* @since 3.2
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,60,"public class FastDateParser implements DateParser, Serializable {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,62,* Required for serialization support.
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,64,* @see java.io.Serializable
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,66,private static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,68,"private static final ConcurrentMap<Locale,TimeZoneStrategy> tzsCache="
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,69,"new ConcurrentHashMap<Locale,TimeZoneStrategy>(3);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,71,// defining fields
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,72,private final String pattern;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,73,private final TimeZone timeZone;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,74,private final Locale locale;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,76,// derived fields
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,77,private transient Pattern parsePattern;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,78,private transient Strategy[] strategies;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,79,private transient int thisYear;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,80,"private transient ConcurrentMap<Integer, KeyValue[]> nameValues;"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,82,// dynamic fields to communicate with Strategy
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,83,private transient String currentFormatField;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,84,private transient Strategy nextStrategy;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,87,* <p>Constructs a new FastDateParser.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,89,* @param pattern non-null {@link java.text.SimpleDateFormat} compatible
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,90,*  pattern
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,91,* @param timeZone non-null time zone to use
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,92,* @param locale non-null locale
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,94,"protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,95,this.pattern = pattern;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,96,this.timeZone = timeZone;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,97,this.locale = locale;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,98,init();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,102,* Initialize derived fields from defining fields.
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,103,* This is called from constructor and from readObject (de-serialization)
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,105,private void init() {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,106,"thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,108,"nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,110,StringBuilder regex= new StringBuilder();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,111,List<Strategy> collector = new ArrayList<Strategy>();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,113,Matcher patternMatcher= formatPattern.matcher(pattern);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,114,if(!patternMatcher.lookingAt()) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,115,"throw new IllegalArgumentException(""Invalid pattern"");"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,118,currentFormatField= patternMatcher.group();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,119,Strategy currentStrategy= getStrategy(currentFormatField);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,120,for(;;) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,121,"patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,122,if(!patternMatcher.lookingAt()) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,123,nextStrategy = null;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,124,break;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,126,String nextFormatField= patternMatcher.group();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,127,nextStrategy = getStrategy(nextFormatField);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,128,"if(currentStrategy.addRegex(this, regex)) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,129,collector.add(currentStrategy);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,131,currentFormatField= nextFormatField;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,132,currentStrategy= nextStrategy;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,134,"if(currentStrategy.addRegex(this, regex)) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,135,collector.add(currentStrategy);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,137,currentFormatField= null;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,138,strategies= collector.toArray(new Strategy[collector.size()]);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,139,parsePattern= Pattern.compile(regex.toString());
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,142,// Accessors
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,144,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,145,* @see org.apache.commons.lang3.time.DateParser#getPattern()
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,147,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,148,public String getPattern() {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,149,return pattern;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,152,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,153,* @see org.apache.commons.lang3.time.DateParser#getTimeZone()
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,155,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,156,public TimeZone getTimeZone() {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,157,return timeZone;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,160,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,161,* @see org.apache.commons.lang3.time.DateParser#getLocale()
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,163,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,164,public Locale getLocale() {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,165,return locale;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,168,// Basics
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,171,* <p>Compare another object for equality with this object.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,173,* @param obj  the object to compare to
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,174,* @return <code>true</code>if equal to this instance
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,176,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,177,public boolean equals(Object obj) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,178,if (! (obj instanceof FastDateParser) ) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,179,return false;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,181,FastDateParser other = (FastDateParser) obj;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,182,return pattern.equals(other.pattern)
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,183,&& timeZone.equals(other.timeZone)
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,184,&& locale.equals(other.locale);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,188,* <p>Return a hashcode compatible with equals.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,190,* @return a hashcode compatible with equals
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,192,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,193,public int hashCode() {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,194,return pattern.hashCode() + 13 * (timeZone.hashCode() + 13 * locale.hashCode());
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,198,* <p>Get a string version of this formatter.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,200,* @return a debugging string
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,202,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,203,public String toString() {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,204,"return ""FastDateParser["" + pattern + "","" + locale + "","" + timeZone.getID() + ""]"";"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,207,// Serializing
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,210,* Create the object after serialization. This implementation reinitializes the
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,211,* transient properties.
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,213,* @param in ObjectInputStream from which the object is being deserialized.
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,214,* @throws IOException if there is an IO issue.
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,215,* @throws ClassNotFoundException if a class cannot be found.
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,217,"private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,218,in.defaultReadObject();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,219,init();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,222,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,223,* @see org.apache.commons.lang3.time.DateParser#parseObject(java.lang.String)
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,225,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,226,public Object parseObject(String source) throws ParseException {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,227,return parse(source);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,230,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,231,* @see org.apache.commons.lang3.time.DateParser#parse(java.lang.String)
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,233,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,234,public Date parse(String source) throws ParseException {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,235,"Date date= parse(source, new ParsePosition(0));"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,236,if(date==null) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,237,"throw new ParseException(source+"" does not match ""+parsePattern.pattern(), 0);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,239,return date;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,242,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,243,"* @see org.apache.commons.lang3.time.DateParser#parseObject(java.lang.String, java.text.ParsePosition)"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,245,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,246,"public Object parseObject(String source, ParsePosition pos) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,247,"return parse(source, pos);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,250,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,251,"* @see org.apache.commons.lang3.time.DateParser#parse(java.lang.String, java.text.ParsePosition)"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,253,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,254,"public Date parse(String source, ParsePosition pos) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,255,int offset= pos.getIndex();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,256,Matcher matcher= parsePattern.matcher(source.substring(offset));
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,257,if(!matcher.lookingAt()) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,258,return null;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,260,// timing tests indicate getting new instance is 19% faster than cloning
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,261,"Calendar cal= Calendar.getInstance(timeZone, locale);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,262,cal.clear();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,264,for(int i=0; i<strategies.length;) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,265,Strategy strategy= strategies[i++];
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,266,"strategy.setCalendar(this, cal, matcher.group(i));"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,268,pos.setIndex(offset+matcher.end());
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,269,return cal.getTime();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,272,// Support for strategies
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,276,* Escape constant fields into regular expression
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,277,* @param regex The destination regex
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,278,* @param value The source field
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,279,"* @param unquote If true, replace two success quotes ('') with single quote (')"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,280,* @return The <code>StringBuilder</code>
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,282,"private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,283,boolean wasWhite= false;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,284,for(int i= 0; i<value.length(); ++i) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,285,char c= value.charAt(i);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,286,if(Character.isWhitespace(c)) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,287,if(!wasWhite) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,288,wasWhite= true;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,289,"regex.append(""\\s*+"");"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,291,continue;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,293,wasWhite= false;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,294,switch(c) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,295,case '\'':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,296,if(unquote) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,297,if(++i==value.length()) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,298,return regex;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,300,c= value.charAt(i);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,302,break;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,303,case '?':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,304,case '[':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,305,case ']':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,306,case '(':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,307,case ')':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,308,case '{':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,309,case '}':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,310,case '\\':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,311,case '|':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,312,case '*':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,313,case '+':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,314,case '^':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,315,case '$':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,316,case '.':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,317,regex.append('\\');
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,319,regex.append(c);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,321,return regex;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,325,* A class to store Key / Value pairs
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,327,private static class KeyValue {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,328,public String key;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,329,public int value;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,332,* Construct a Key / Value pair
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,333,* @param key The key
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,334,* @param value The value
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,336,"public KeyValue(String key, int value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,337,this.key= key;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,338,this.value= value;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,343,* ignore case comparison of keys
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,345,private static final Comparator<KeyValue> IGNORE_CASE_COMPARATOR = new Comparator<KeyValue> () {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,346,"public int compare(KeyValue left, KeyValue right) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,347,return left.key.compareToIgnoreCase(right.key);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,352,* Get the short and long values displayed for a field
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,353,* @param field The field of interest
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,354,* @return A sorted array of the field key / value pairs
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,356,KeyValue[] getDisplayNames(int field) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,357,KeyValue[] fieldKeyValues= nameValues.get(field);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,358,if(fieldKeyValues==null) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,359,DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,360,switch(field) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,361,case Calendar.ERA:
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,362,"fieldKeyValues= createKeyValues(symbols.getEras(), null);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,363,break;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,364,case Calendar.DAY_OF_WEEK:
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,365,"fieldKeyValues= createKeyValues(symbols.getWeekdays(), symbols.getShortWeekdays());"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,366,break;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,367,case Calendar.AM_PM:
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,368,"fieldKeyValues= createKeyValues(symbols.getAmPmStrings(), null);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,369,break;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,370,case Calendar.MONTH:
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,371,"fieldKeyValues= createKeyValues(symbols.getMonths(), symbols.getShortMonths());"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,372,break;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,373,default:
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,374,"throw new IllegalArgumentException(""Invalid field value ""+field);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,376,"KeyValue[] prior = nameValues.putIfAbsent(field, fieldKeyValues);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,377,if(prior!=null) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,378,fieldKeyValues= prior;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,381,return fieldKeyValues;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,385,* Create key / value pairs from keys
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,386,* @param longValues The allowable long names for a field
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,387,* @param shortValues The optional allowable short names for a field
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,388,* @return The sorted name / value pairs for the field
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,390,"private static KeyValue[] createKeyValues(String[] longValues, String[] shortValues) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,391,KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)];
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,392,"copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,393,"Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,394,return fieldKeyValues;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,398,* Get a count of valid values in array.  A valid value is of non-zero length.
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,399,* @param values The values to check.  This parameter may be null
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,400,* @return The number of valid values
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,402,private static int count(String[] values) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,403,int count= 0;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,404,if(values!=null) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,405,for(String value : values) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,406,if(value.length()>0) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,407,++count;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,411,return count;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,415,* Create key / value pairs from values
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,416,* @param fieldKeyValues The destination array
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,417,* @param offset The offset into the destination array
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,418,* @param values The values to use to create key / value pairs.  This parameter may be null.
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,419,* @return The offset into the destination array
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,421,"private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,422,if(values!=null) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,423,for(int i= 0; i<values.length; ++i) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,424,String value= values[i];
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,425,if(value.length()>0) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,426,"fieldKeyValues[offset++]= new KeyValue(value, i);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,430,return offset;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,434,* Adjust dates to be within 80 years before and 20 years after instantiation
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,435,* @param twoDigitYear The year to adjust
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,436,* @return A value within -80 and +20 years from instantiation of this instance
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,438,protected int adjustYear(int twoDigitYear) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,439,int trial= twoDigitYear + thisYear - thisYear%100;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,440,if(trial < thisYear+20) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,441,return trial;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,443,return trial-100;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,447,* Is the next field a number?
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,448,"* @return true, if next field will be a number"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,450,boolean isNextNumber() {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,451,return nextStrategy!=null && nextStrategy.isNumber();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,455,* What is the width of the current field?
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,456,* @return The number of characters in the current format field
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,458,int getFieldWidth() {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,459,return currentFormatField.length();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,463,* A strategy to parse a single field from the parsing pattern
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,465,private interface Strategy {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,467,* Is this field a number?
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,468,"* @return true, if field is a number"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,470,boolean isNumber();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,472,* Set the Calendar with the parsed field
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,473,* @param parser The parser calling this strategy
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,474,* @param cal The <code>Calendar</code> to set
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,475,* @param value The parsed field to translate and set in cal
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,477,"void setCalendar(FastDateParser parser, Calendar cal, String value);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,479,* Generate a <code>Pattern</code> regular expression to the <code>StringBuilder</code>
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,480,* which will accept this field
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,481,* @param parser The parser calling this strategy
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,482,* @param regex The <code>StringBuilder</code> to append to
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,483,"* @return true, if this field will set the calendar;"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,484,"* false, if this field is a constant value"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,486,"boolean addRegex(FastDateParser parser, StringBuilder regex);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,490,* A <code>Pattern</code> to parse the user supplied SimpleDateFormat pattern
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,492,private static Pattern formatPattern= Pattern.compile(
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,493,"""D+|E+|F+|G+|H+|K+|M+|S+|W+|Z+|a+|d+|h+|k+|m+|s+|w+|y+|z+|''|'[^']++(''[^']*+)*+'|[^'A-Za-z]++"");"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,496,* Obtain a Strategy given a field from a SimpleDateFormat pattern
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,497,* @param formatField A sub-sequence of the SimpleDateFormat pattern
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,498,* @return The Strategy that will handle parsing for the field
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,500,private Strategy getStrategy(String formatField) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,501,switch(formatField.charAt(0)) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,502,case '\'':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,503,if(formatField.length()>2) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,504,"formatField= formatField.substring(1, formatField.length()-1);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,506,default:
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,507,return new CopyQuotedStrategy(formatField);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,508,case 'D':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,509,return DAY_OF_YEAR_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,510,case 'E':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,511,return DAY_OF_WEEK_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,512,case 'F':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,513,return DAY_OF_WEEK_IN_MONTH_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,514,case 'G':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,515,return ERA_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,516,case 'H':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,517,return MODULO_HOUR_OF_DAY_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,518,case 'K':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,519,return HOUR_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,520,case 'M':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,521,return formatField.length()>=3 ?TEXT_MONTH_STRATEGY :NUMBER_MONTH_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,522,case 'S':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,523,return MILLISECOND_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,524,case 'W':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,525,return WEEK_OF_MONTH_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,526,case 'Z':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,527,break;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,528,case 'a':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,529,return AM_PM_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,530,case 'd':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,531,return DAY_OF_MONTH_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,532,case 'h':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,533,return MODULO_HOUR_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,534,case 'k':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,535,return HOUR_OF_DAY_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,536,case 'm':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,537,return MINUTE_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,538,case 's':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,539,return SECOND_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,540,case 'w':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,541,return WEEK_OF_YEAR_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,542,case 'y':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,543,return formatField.length()>2 ?LITERAL_YEAR_STRATEGY :ABBREVIATED_YEAR_STRATEGY;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,544,case 'z':
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,545,break;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,547,TimeZoneStrategy tzs= tzsCache.get(locale);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,548,if(tzs==null) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,549,tzs= new TimeZoneStrategy(locale);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,550,"TimeZoneStrategy inCache= tzsCache.putIfAbsent(locale, tzs);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,551,if(inCache!=null) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,552,return inCache;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,555,return tzs;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,559,* A strategy that copies the static or quoted field in the parsing pattern
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,561,private static class CopyQuotedStrategy implements Strategy {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,562,private final String formatField;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,565,* Construct a Strategy that ensures the formatField has literal text
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,566,* @param formatField The literal text to match
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,568,CopyQuotedStrategy(String formatField) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,569,this.formatField= formatField;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,573,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,575,public boolean isNumber() {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,576,char c= formatField.charAt(0);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,577,if(c=='\'') {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,578,c= formatField.charAt(1);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,580,return Character.isDigit(c);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,584,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,586,"public boolean addRegex(FastDateParser parser, StringBuilder regex) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,587,"escapeRegex(regex, formatField, true);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,588,return false;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,592,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,594,"public void setCalendar(FastDateParser parser, Calendar cal, String value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,599,* A strategy that handles a text field in the parsing pattern
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,601,private static class TextStrategy implements Strategy {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,602,private final int field;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,605,* Construct a Strategy that parses a Text field
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,606,* @param field The Calendar field
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,608,TextStrategy(int field) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,609,this.field= field;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,613,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,615,public boolean isNumber() {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,616,return false;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,620,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,622,"public boolean addRegex(FastDateParser parser, StringBuilder regex) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,623,regex.append('(');
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,624,for(KeyValue textKeyValue : parser.getDisplayNames(field)) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,625,"escapeRegex(regex, textKeyValue.key, false).append('|');"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,627,"regex.setCharAt(regex.length()-1, ')');"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,628,return true;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,632,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,634,"public void setCalendar(FastDateParser parser, Calendar cal, String value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,635,KeyValue[] textKeyValues= parser.getDisplayNames(field);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,636,"int idx= Arrays.binarySearch(textKeyValues, new KeyValue(value, -1), IGNORE_CASE_COMPARATOR);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,637,if(idx<0) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,638,StringBuilder sb= new StringBuilder(value);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,639,"sb.append("" not in ("");"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,640,for(KeyValue textKeyValue : textKeyValues) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,641,sb.append(textKeyValue.key).append(' ');
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,643,"sb.setCharAt(sb.length()-1, ')');"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,644,throw new IllegalArgumentException(sb.toString());
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,646,"cal.set(field, textKeyValues[idx].value);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,651,* A strategy that handles a number field in the parsing pattern
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,653,private static class NumberStrategy implements Strategy {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,654,protected final int field;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,657,* Construct a Strategy that parses a Number field
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,658,* @param field The Calendar field
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,660,NumberStrategy(int field) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,661,this.field= field;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,665,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,667,public boolean isNumber() {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,668,return true;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,672,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,674,"public boolean addRegex(FastDateParser parser, StringBuilder regex) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,675,if(parser.isNextNumber()) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,676,"regex.append(""(\\d{"").append(parser.getFieldWidth()).append(""}+)"");"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,678,else {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,679,"regex.append(""(\\d++)"");"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,681,return true;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,685,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,687,"public void setCalendar(FastDateParser parser, Calendar cal, String value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,688,"cal.set(field, modify(Integer.parseInt(value)));"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,692,* Make any modifications to parsed integer
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,693,* @param iValue The parsed integer
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,694,* @return The modified value
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,696,public int modify(int iValue) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,697,return iValue;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,701,private static final Strategy ABBREVIATED_YEAR_STRATEGY = new NumberStrategy(Calendar.YEAR) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,703,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,705,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,706,"public void setCalendar(FastDateParser parser, Calendar cal, String value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,707,int iValue= Integer.parseInt(value);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,708,if(iValue<100) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,709,iValue= parser.adjustYear(iValue);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,711,"cal.set(Calendar.YEAR, iValue);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,716,* A strategy that handles a timezone field in the parsing pattern
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,718,private static class TimeZoneStrategy implements Strategy {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,720,final String validTimeZoneChars;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,721,"final SortedMap<String, TimeZone> tzNames= new TreeMap<String, TimeZone>(String.CASE_INSENSITIVE_ORDER);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,724,* Construct a Strategy that parses a TimeZone
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,725,* @param locale The Locale
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,727,TimeZoneStrategy(Locale locale) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,728,for(String id : TimeZone.getAvailableIDs()) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,729,"if(id.startsWith(""GMT"")) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,730,continue;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,732,TimeZone tz= TimeZone.getTimeZone(id);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,733,"tzNames.put(tz.getDisplayName(false, TimeZone.SHORT, locale), tz);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,734,"tzNames.put(tz.getDisplayName(false, TimeZone.LONG, locale), tz);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,735,if(tz.useDaylightTime()) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,736,"tzNames.put(tz.getDisplayName(true, TimeZone.SHORT, locale), tz);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,737,"tzNames.put(tz.getDisplayName(true, TimeZone.LONG, locale), tz);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,740,StringBuilder sb= new StringBuilder();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,741,"sb.append(""(GMT[+\\-]\\d{0,1}\\d{2}|[+\\-]\\d{2}:?\\d{2}|"");"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,742,for(String id : tzNames.keySet()) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,743,"escapeRegex(sb, id, false).append('|');"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,745,"sb.setCharAt(sb.length()-1, ')');"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,746,validTimeZoneChars= sb.toString();
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,750,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,752,public boolean isNumber() {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,753,return false;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,757,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,759,"public boolean addRegex(FastDateParser parser, StringBuilder regex) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,760,regex.append(validTimeZoneChars);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,761,return true;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,765,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,767,"public void setCalendar(FastDateParser parser, Calendar cal, String value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,768,TimeZone tz;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,769,if(value.charAt(0)=='+' || value.charAt(0)=='-') {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,770,"tz= TimeZone.getTimeZone(""GMT""+value);"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,772,"else if(value.startsWith(""GMT"")) {"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,773,tz= TimeZone.getTimeZone(value);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,775,else {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,776,tz= tzNames.get(value);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,777,if(tz==null) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,778,"throw new IllegalArgumentException(value + "" is not a supported timezone name"");"
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,781,cal.setTimeZone(tz);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,785,private static final Strategy ERA_STRATEGY = new TextStrategy(Calendar.ERA);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,786,private static final Strategy DAY_OF_WEEK_STRATEGY = new TextStrategy(Calendar.DAY_OF_WEEK);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,787,private static final Strategy AM_PM_STRATEGY = new TextStrategy(Calendar.AM_PM);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,788,private static final Strategy TEXT_MONTH_STRATEGY = new TextStrategy(Calendar.MONTH);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,790,private static final Strategy NUMBER_MONTH_STRATEGY = new NumberStrategy(Calendar.MONTH) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,791,public int modify(int iValue) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,792,return iValue-1;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,795,private static final Strategy LITERAL_YEAR_STRATEGY = new NumberStrategy(Calendar.YEAR);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,796,private static final Strategy WEEK_OF_YEAR_STRATEGY = new NumberStrategy(Calendar.WEEK_OF_YEAR);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,797,private static final Strategy WEEK_OF_MONTH_STRATEGY = new NumberStrategy(Calendar.WEEK_OF_MONTH);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,798,private static final Strategy DAY_OF_YEAR_STRATEGY = new NumberStrategy(Calendar.DAY_OF_YEAR);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,799,private static final Strategy DAY_OF_MONTH_STRATEGY = new NumberStrategy(Calendar.DAY_OF_MONTH);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,800,private static final Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY = new NumberStrategy(Calendar.DAY_OF_WEEK_IN_MONTH);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,801,private static final Strategy HOUR_OF_DAY_STRATEGY = new NumberStrategy(Calendar.HOUR_OF_DAY);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,802,private static final Strategy MODULO_HOUR_OF_DAY_STRATEGY = new NumberStrategy(Calendar.HOUR_OF_DAY) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,803,public int modify(int iValue) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,804,return iValue%24;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,807,private static final Strategy MODULO_HOUR_STRATEGY = new NumberStrategy(Calendar.HOUR) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,808,public int modify(int iValue) {
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,809,return iValue%12;
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,812,private static final Strategy HOUR_STRATEGY = new NumberStrategy(Calendar.HOUR);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,813,private static final Strategy MINUTE_STRATEGY = new NumberStrategy(Calendar.MINUTE);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,814,private static final Strategy SECOND_STRATEGY = new NumberStrategy(Calendar.SECOND);
True,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,src/main/java/org/apache/commons/lang3/time/FastDateParser.java,815,private static final Strategy MILLISECOND_STRATEGY = new NumberStrategy(Calendar.MILLISECOND);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,17,package org.apache.commons.lang3.time;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,19,import java.io.IOException;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,20,import java.io.ObjectInputStream;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,21,import java.io.Serializable;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,22,import java.text.DateFormat;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,23,import java.text.DateFormatSymbols;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,24,import java.text.FieldPosition;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,25,import java.util.ArrayList;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,26,import java.util.Calendar;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,27,import java.util.Date;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,28,import java.util.GregorianCalendar;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,29,import java.util.List;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,30,import java.util.Locale;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,31,import java.util.TimeZone;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,32,import java.util.concurrent.ConcurrentHashMap;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,33,import java.util.concurrent.ConcurrentMap;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,35,import org.apache.commons.lang3.Validate;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,38,* <p>FastDatePrinter is a fast and thread-safe version of
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,39,* {@link java.text.SimpleDateFormat}.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,41,* <p>This class can be used as a direct replacement to
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,42,* {@code SimpleDateFormat} in most formatting situations.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,43,* This class is especially useful in multi-threaded server environments.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,44,"* {@code SimpleDateFormat} is not thread-safe in any JDK version,"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,45,* nor will it be as Sun have closed the bug/RFE.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,46,* </p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,48,"* <p>Only formatting is supported, but all patterns are compatible with"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,49,* SimpleDateFormat (except time zones and some year patterns - see below).</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,51,"* <p>Java 1.4 introduced a new pattern letter, {@code 'Z'}, to represent"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,52,* time zones in RFC822 format (eg. {@code +0800} or {@code -1100}).
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,53,* This pattern letter can be used here (on all JDK versions).</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,55,"* <p>In addition, the pattern {@code 'ZZ'} has been made to represent"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,56,* ISO8601 full format time zones (eg. {@code +08:00} or {@code -11:00}).
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,57,"* This introduces a minor incompatibility with Java 1.4, but at a gain of"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,58,* useful functionality.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,60,"* <p>Javadoc cites for the year pattern: <i>For formatting, if the number of"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,61,"* pattern letters is 2, the year is truncated to 2 digits; otherwise it is"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,62,* interpreted as a number.</i> Starting with Java 1.7 a pattern of 'Y' or
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,63,"* 'YYY' will be formatted as '2003', while it was '03' in former Java"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,64,* versions. FastDatePrinter implements the behavior of Java 7.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,66,* @since 3.2
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,68,"public class FastDatePrinter implements DatePrinter, Serializable {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,69,"// A lot of the speed in this class comes from caching, but some comes"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,70,// from the special int to StringBuffer conversion.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,72,// The following produces a padded 2 digit number:
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,73,//   buffer.append((char)(value / 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,74,//   buffer.append((char)(value % 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,76,// Note that the fastest append to StringBuffer is a single char (used here).
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,77,"// Note that Integer.toString() is not called, the conversion is simply"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,78,// taking the value and adding (mathematically) the ASCII value for '0'.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,79,"// So, don't change this code! It works and is very fast."
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,82,* Required for serialization support.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,84,* @see java.io.Serializable
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,86,private static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,89,* FULL locale dependent date or time style.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,91,public static final int FULL = DateFormat.FULL;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,93,* LONG locale dependent date or time style.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,95,public static final int LONG = DateFormat.LONG;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,97,* MEDIUM locale dependent date or time style.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,99,public static final int MEDIUM = DateFormat.MEDIUM;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,101,* SHORT locale dependent date or time style.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,103,public static final int SHORT = DateFormat.SHORT;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,106,* The pattern.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,108,private final String mPattern;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,110,* The time zone.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,112,private final TimeZone mTimeZone;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,114,* The locale.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,116,private final Locale mLocale;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,118,* The parsed rules.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,120,private transient Rule[] mRules;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,122,* The estimated maximum length.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,124,private transient int mMaxLengthEstimate;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,126,// Constructor
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,129,* <p>Constructs a new FastDatePrinter.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,131,* @param pattern  {@link java.text.SimpleDateFormat} compatible pattern
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,132,* @param timeZone  non-null time zone to use
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,133,* @param locale  non-null locale to use
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,134,"* @throws NullPointerException if pattern, timeZone, or locale is null."
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,136,"protected FastDatePrinter(String pattern, TimeZone timeZone, Locale locale) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,137,mPattern = pattern;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,138,mTimeZone = timeZone;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,139,mLocale = locale;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,141,init();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,145,* <p>Initializes the instance for first use.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,147,private void init() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,148,List<Rule> rulesList = parsePattern();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,149,mRules = rulesList.toArray(new Rule[rulesList.size()]);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,151,int len = 0;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,152,for (int i=mRules.length; --i >= 0; ) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,153,len += mRules[i].estimateLength();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,156,mMaxLengthEstimate = len;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,159,// Parse the pattern
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,162,* <p>Returns a list of Rules given a pattern.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,164,* @return a {@code List} of Rule objects
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,165,* @throws IllegalArgumentException if pattern is invalid
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,167,protected List<Rule> parsePattern() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,168,DateFormatSymbols symbols = new DateFormatSymbols(mLocale);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,169,List<Rule> rules = new ArrayList<Rule>();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,171,String[] ERAs = symbols.getEras();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,172,String[] months = symbols.getMonths();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,173,String[] shortMonths = symbols.getShortMonths();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,174,String[] weekdays = symbols.getWeekdays();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,175,String[] shortWeekdays = symbols.getShortWeekdays();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,176,String[] AmPmStrings = symbols.getAmPmStrings();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,178,int length = mPattern.length();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,179,int[] indexRef = new int[1];
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,181,for (int i = 0; i < length; i++) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,182,indexRef[0] = i;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,183,"String token = parseToken(mPattern, indexRef);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,184,i = indexRef[0];
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,186,int tokenLen = token.length();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,187,if (tokenLen == 0) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,188,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,191,Rule rule;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,192,char c = token.charAt(0);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,194,switch (c) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,195,case 'G': // era designator (text)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,196,"rule = new TextField(Calendar.ERA, ERAs);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,197,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,198,case 'y': // year (number)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,199,if (tokenLen == 2) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,200,rule = TwoDigitYearField.INSTANCE;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,201,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,202,"rule = selectNumberRule(Calendar.YEAR, tokenLen < 4 ? 4 : tokenLen);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,204,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,205,case 'M': // month in year (text and number)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,206,if (tokenLen >= 4) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,207,"rule = new TextField(Calendar.MONTH, months);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,208,} else if (tokenLen == 3) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,209,"rule = new TextField(Calendar.MONTH, shortMonths);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,210,} else if (tokenLen == 2) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,211,rule = TwoDigitMonthField.INSTANCE;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,212,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,213,rule = UnpaddedMonthField.INSTANCE;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,215,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,216,case 'd': // day in month (number)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,217,"rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,218,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,219,"case 'h': // hour in am/pm (number, 1..12)"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,220,"rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,221,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,222,"case 'H': // hour in day (number, 0..23)"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,223,"rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,224,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,225,case 'm': // minute in hour (number)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,226,"rule = selectNumberRule(Calendar.MINUTE, tokenLen);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,227,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,228,case 's': // second in minute (number)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,229,"rule = selectNumberRule(Calendar.SECOND, tokenLen);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,230,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,231,case 'S': // millisecond (number)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,232,"rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,233,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,234,case 'E': // day in week (text)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,235,"rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,236,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,237,case 'D': // day in year (number)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,238,"rule = selectNumberRule(Calendar.DAY_OF_YEAR, tokenLen);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,239,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,240,case 'F': // day of week in month (number)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,241,"rule = selectNumberRule(Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,242,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,243,case 'w': // week in year (number)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,244,"rule = selectNumberRule(Calendar.WEEK_OF_YEAR, tokenLen);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,245,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,246,case 'W': // week in month (number)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,247,"rule = selectNumberRule(Calendar.WEEK_OF_MONTH, tokenLen);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,248,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,249,case 'a': // am/pm marker (text)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,250,"rule = new TextField(Calendar.AM_PM, AmPmStrings);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,251,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,252,case 'k': // hour in day (1..24)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,253,"rule = new TwentyFourHourField(selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen));"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,254,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,255,case 'K': // hour in am/pm (0..11)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,256,"rule = selectNumberRule(Calendar.HOUR, tokenLen);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,257,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,258,case 'z': // time zone (text)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,259,if (tokenLen >= 4) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,260,"rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.LONG);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,261,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,262,"rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,264,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,265,case 'Z': // time zone (value)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,266,if (tokenLen == 1) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,267,rule = TimeZoneNumberRule.INSTANCE_NO_COLON;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,268,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,269,rule = TimeZoneNumberRule.INSTANCE_COLON;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,271,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,272,case '\'': // literal text
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,273,String sub = token.substring(1);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,274,if (sub.length() == 1) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,275,rule = new CharacterLiteral(sub.charAt(0));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,276,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,277,rule = new StringLiteral(sub);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,279,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,280,default:
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,281,"throw new IllegalArgumentException(""Illegal pattern component: "" + token);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,284,rules.add(rule);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,287,return rules;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,291,* <p>Performs the parsing of tokens.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,293,* @param pattern  the pattern
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,294,* @param indexRef  index references
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,295,* @return parsed token
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,297,"protected String parseToken(String pattern, int[] indexRef) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,298,StringBuilder buf = new StringBuilder();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,300,int i = indexRef[0];
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,301,int length = pattern.length();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,303,char c = pattern.charAt(i);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,304,if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,305,"// Scan a run of the same character, which indicates a time"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,306,// pattern.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,307,buf.append(c);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,309,while (i + 1 < length) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,310,char peek = pattern.charAt(i + 1);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,311,if (peek == c) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,312,buf.append(c);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,313,i++;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,314,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,315,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,318,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,319,// This will identify token as text.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,320,buf.append('\'');
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,322,boolean inLiteral = false;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,324,for (; i < length; i++) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,325,c = pattern.charAt(i);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,327,if (c == '\'') {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,328,if (i + 1 < length && pattern.charAt(i + 1) == '\'') {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,329,// '' is treated as escaped '
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,330,i++;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,331,buf.append(c);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,332,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,333,inLiteral = !inLiteral;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,335,} else if (!inLiteral &&
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,336,(c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,337,i--;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,338,break;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,339,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,340,buf.append(c);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,345,indexRef[0] = i;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,346,return buf.toString();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,350,* <p>Gets an appropriate rule for the padding required.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,352,* @param field  the field to get a rule for
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,353,* @param padding  the padding required
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,354,* @return a new rule with the correct padding
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,356,"protected NumberRule selectNumberRule(int field, int padding) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,357,switch (padding) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,358,case 1:
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,359,return new UnpaddedNumberField(field);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,360,case 2:
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,361,return new TwoDigitNumberField(field);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,362,default:
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,363,"return new PaddedNumberField(field, padding);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,367,// Format methods
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,370,"* <p>Formats a {@code Date}, {@code Calendar} or"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,371,* {@code Long} (milliseconds) object.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,373,* @param obj  the object to format
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,374,* @param toAppendTo  the buffer to append to
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,375,* @param pos  the position - ignored
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,376,* @return the buffer passed in
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,378,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,379,"public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,380,if (obj instanceof Date) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,381,"return format((Date) obj, toAppendTo);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,382,} else if (obj instanceof Calendar) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,383,"return format((Calendar) obj, toAppendTo);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,384,} else if (obj instanceof Long) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,385,"return format(((Long) obj).longValue(), toAppendTo);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,386,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,387,"throw new IllegalArgumentException(""Unknown class: "" +"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,388,"(obj == null ? ""<null>"" : obj.getClass().getName()));"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,392,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,393,* @see org.apache.commons.lang3.time.DatePrinter#format(long)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,395,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,396,public String format(long millis) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,397,return format(new Date(millis));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,400,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,401,* @see org.apache.commons.lang3.time.DatePrinter#format(java.util.Date)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,403,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,404,public String format(Date date) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,405,"Calendar c = new GregorianCalendar(mTimeZone, mLocale);  // hard code GregorianCalendar"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,406,c.setTime(date);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,407,"return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,410,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,411,* @see org.apache.commons.lang3.time.DatePrinter#format(java.util.Calendar)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,413,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,414,public String format(Calendar calendar) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,415,"return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,418,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,419,"* @see org.apache.commons.lang3.time.DatePrinter#format(long, java.lang.StringBuffer)"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,421,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,422,"public StringBuffer format(long millis, StringBuffer buf) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,423,"return format(new Date(millis), buf);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,426,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,427,"* @see org.apache.commons.lang3.time.DatePrinter#format(java.util.Date, java.lang.StringBuffer)"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,429,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,430,"public StringBuffer format(Date date, StringBuffer buf) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,431,"Calendar c = new GregorianCalendar(mTimeZone, mLocale);  // hard code GregorianCalendar"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,432,c.setTime(date);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,433,"return applyRules(c, buf);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,436,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,437,"* @see org.apache.commons.lang3.time.DatePrinter#format(java.util.Calendar, java.lang.StringBuffer)"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,439,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,440,"public StringBuffer format(Calendar calendar, StringBuffer buf) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,441,"return applyRules(calendar, buf);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,445,* <p>Performs the formatting by applying the rules to the
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,446,* specified calendar.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,448,* @param calendar  the calendar to format
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,449,* @param buf  the buffer to format into
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,450,* @return the specified string buffer
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,452,"protected StringBuffer applyRules(Calendar calendar, StringBuffer buf) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,453,for (Rule rule : mRules) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,454,"rule.appendTo(buf, calendar);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,456,return buf;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,459,// Accessors
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,461,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,462,* @see org.apache.commons.lang3.time.DatePrinter#getPattern()
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,464,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,465,public String getPattern() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,466,return mPattern;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,469,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,470,* @see org.apache.commons.lang3.time.DatePrinter#getTimeZone()
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,472,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,473,public TimeZone getTimeZone() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,474,return mTimeZone;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,477,/* (non-Javadoc)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,478,* @see org.apache.commons.lang3.time.DatePrinter#getLocale()
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,480,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,481,public Locale getLocale() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,482,return mLocale;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,486,* <p>Gets an estimate for the maximum string length that the
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,487,* formatter will produce.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,489,* <p>The actual formatted length will almost always be less than or
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,490,* equal to this amount.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,492,* @return the maximum formatted length
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,494,public int getMaxLengthEstimate() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,495,return mMaxLengthEstimate;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,498,// Basics
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,501,* <p>Compares two objects for equality.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,503,* @param obj  the object to compare to
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,504,* @return {@code true} if equal
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,506,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,507,public boolean equals(Object obj) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,508,if (obj instanceof FastDatePrinter == false) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,509,return false;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,511,FastDatePrinter other = (FastDatePrinter) obj;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,512,return mPattern.equals(other.mPattern)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,513,&& mTimeZone.equals(other.mTimeZone)
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,514,&& mLocale.equals(other.mLocale);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,518,* <p>Returns a hashcode compatible with equals.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,520,* @return a hashcode compatible with equals
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,522,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,523,public int hashCode() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,524,return mPattern.hashCode() + 13 * (mTimeZone.hashCode() + 13 * mLocale.hashCode());
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,528,* <p>Gets a debugging string version of this formatter.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,530,* @return a debugging string
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,532,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,533,public String toString() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,534,"return ""FastDatePrinter["" + mPattern + "","" + mLocale + "","" + mTimeZone.getID() + ""]"";"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,537,// Serializing
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,540,* Create the object after serialization. This implementation reinitializes the
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,541,* transient properties.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,543,* @param in ObjectInputStream from which the object is being deserialized.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,544,* @throws IOException if there is an IO issue.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,545,* @throws ClassNotFoundException if a class cannot be found.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,547,"private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,548,in.defaultReadObject();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,549,init();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,552,// Rules
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,555,* <p>Inner class defining a rule.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,557,private interface Rule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,559,* Returns the estimated lentgh of the result.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,561,* @return the estimated length
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,563,int estimateLength();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,566,* Appends the value of the specified calendar to the output buffer based on the rule implementation.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,568,* @param buffer the output buffer
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,569,* @param calendar calendar to be appended
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,571,"void appendTo(StringBuffer buffer, Calendar calendar);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,575,* <p>Inner class defining a numeric rule.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,577,private interface NumberRule extends Rule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,579,* Appends the specified value to the output buffer based on the rule implementation.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,581,* @param buffer the output buffer
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,582,* @param value the value to be appended
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,584,"void appendTo(StringBuffer buffer, int value);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,588,* <p>Inner class to output a constant single character.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,590,private static class CharacterLiteral implements Rule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,591,private final char mValue;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,594,* Constructs a new instance of {@code CharacterLiteral}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,595,* to hold the specified value.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,597,* @param value the character literal
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,599,CharacterLiteral(char value) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,600,mValue = value;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,604,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,606,public int estimateLength() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,607,return 1;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,611,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,613,"public void appendTo(StringBuffer buffer, Calendar calendar) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,614,buffer.append(mValue);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,619,* <p>Inner class to output a constant string.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,621,private static class StringLiteral implements Rule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,622,private final String mValue;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,625,* Constructs a new instance of {@code StringLiteral}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,626,* to hold the specified value.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,628,* @param value the string literal
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,630,StringLiteral(String value) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,631,mValue = value;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,635,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,637,public int estimateLength() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,638,return mValue.length();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,642,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,644,"public void appendTo(StringBuffer buffer, Calendar calendar) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,645,buffer.append(mValue);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,650,* <p>Inner class to output one of a set of values.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,652,private static class TextField implements Rule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,653,private final int mField;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,654,private final String[] mValues;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,657,* Constructs an instance of {@code TextField}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,658,* with the specified field and values.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,660,* @param field the field
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,661,* @param values the field values
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,663,"TextField(int field, String[] values) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,664,mField = field;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,665,mValues = values;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,669,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,671,public int estimateLength() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,672,int max = 0;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,673,for (int i=mValues.length; --i >= 0; ) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,674,int len = mValues[i].length();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,675,if (len > max) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,676,max = len;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,679,return max;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,683,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,685,"public void appendTo(StringBuffer buffer, Calendar calendar) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,686,buffer.append(mValues[calendar.get(mField)]);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,691,* <p>Inner class to output an unpadded number.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,693,private static class UnpaddedNumberField implements NumberRule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,694,private final int mField;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,697,* Constructs an instance of {@code UnpadedNumberField} with the specified field.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,699,* @param field the field
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,701,UnpaddedNumberField(int field) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,702,mField = field;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,706,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,708,public int estimateLength() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,709,return 4;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,713,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,715,"public void appendTo(StringBuffer buffer, Calendar calendar) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,716,"appendTo(buffer, calendar.get(mField));"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,720,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,722,"public final void appendTo(StringBuffer buffer, int value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,723,if (value < 10) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,724,buffer.append((char)(value + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,725,} else if (value < 100) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,726,buffer.append((char)(value / 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,727,buffer.append((char)(value % 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,728,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,729,buffer.append(Integer.toString(value));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,735,* <p>Inner class to output an unpadded month.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,737,private static class UnpaddedMonthField implements NumberRule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,738,static final UnpaddedMonthField INSTANCE = new UnpaddedMonthField();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,741,* Constructs an instance of {@code UnpaddedMonthField}.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,744,UnpaddedMonthField() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,745,super();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,749,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,751,public int estimateLength() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,752,return 2;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,756,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,758,"public void appendTo(StringBuffer buffer, Calendar calendar) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,759,"appendTo(buffer, calendar.get(Calendar.MONTH) + 1);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,763,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,765,"public final void appendTo(StringBuffer buffer, int value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,766,if (value < 10) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,767,buffer.append((char)(value + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,768,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,769,buffer.append((char)(value / 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,770,buffer.append((char)(value % 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,776,* <p>Inner class to output a padded number.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,778,private static class PaddedNumberField implements NumberRule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,779,private final int mField;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,780,private final int mSize;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,783,* Constructs an instance of {@code PaddedNumberField}.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,785,* @param field the field
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,786,* @param size size of the output field
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,788,"PaddedNumberField(int field, int size) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,789,if (size < 3) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,790,// Should use UnpaddedNumberField or TwoDigitNumberField.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,791,throw new IllegalArgumentException();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,793,mField = field;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,794,mSize = size;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,798,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,800,public int estimateLength() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,801,return 4;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,805,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,807,"public void appendTo(StringBuffer buffer, Calendar calendar) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,808,"appendTo(buffer, calendar.get(mField));"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,812,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,814,"public final void appendTo(StringBuffer buffer, int value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,815,if (value < 100) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,816,for (int i = mSize; --i >= 2; ) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,817,buffer.append('0');
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,819,buffer.append((char)(value / 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,820,buffer.append((char)(value % 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,821,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,822,int digits;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,823,if (value < 1000) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,824,digits = 3;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,825,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,826,"Validate.isTrue(value > -1, ""Negative values should not be possible"", value);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,827,digits = Integer.toString(value).length();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,829,for (int i = mSize; --i >= digits; ) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,830,buffer.append('0');
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,832,buffer.append(Integer.toString(value));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,838,* <p>Inner class to output a two digit number.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,840,private static class TwoDigitNumberField implements NumberRule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,841,private final int mField;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,844,* Constructs an instance of {@code TwoDigitNumberField} with the specified field.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,846,* @param field the field
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,848,TwoDigitNumberField(int field) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,849,mField = field;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,853,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,855,public int estimateLength() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,856,return 2;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,860,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,862,"public void appendTo(StringBuffer buffer, Calendar calendar) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,863,"appendTo(buffer, calendar.get(mField));"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,867,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,869,"public final void appendTo(StringBuffer buffer, int value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,870,if (value < 100) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,871,buffer.append((char)(value / 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,872,buffer.append((char)(value % 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,873,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,874,buffer.append(Integer.toString(value));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,880,* <p>Inner class to output a two digit year.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,882,private static class TwoDigitYearField implements NumberRule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,883,static final TwoDigitYearField INSTANCE = new TwoDigitYearField();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,886,* Constructs an instance of {@code TwoDigitYearField}.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,888,TwoDigitYearField() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,889,super();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,893,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,895,public int estimateLength() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,896,return 2;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,900,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,902,"public void appendTo(StringBuffer buffer, Calendar calendar) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,903,"appendTo(buffer, calendar.get(Calendar.YEAR) % 100);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,907,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,909,"public final void appendTo(StringBuffer buffer, int value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,910,buffer.append((char)(value / 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,911,buffer.append((char)(value % 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,916,* <p>Inner class to output a two digit month.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,918,private static class TwoDigitMonthField implements NumberRule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,919,static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,922,* Constructs an instance of {@code TwoDigitMonthField}.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,924,TwoDigitMonthField() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,925,super();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,929,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,931,public int estimateLength() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,932,return 2;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,936,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,938,"public void appendTo(StringBuffer buffer, Calendar calendar) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,939,"appendTo(buffer, calendar.get(Calendar.MONTH) + 1);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,943,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,945,"public final void appendTo(StringBuffer buffer, int value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,946,buffer.append((char)(value / 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,947,buffer.append((char)(value % 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,952,* <p>Inner class to output the twelve hour field.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,954,private static class TwelveHourField implements NumberRule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,955,private final NumberRule mRule;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,958,* Constructs an instance of {@code TwelveHourField} with the specified
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,959,* {@code NumberRule}.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,961,* @param rule the rule
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,963,TwelveHourField(NumberRule rule) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,964,mRule = rule;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,968,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,970,public int estimateLength() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,971,return mRule.estimateLength();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,975,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,977,"public void appendTo(StringBuffer buffer, Calendar calendar) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,978,int value = calendar.get(Calendar.HOUR);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,979,if (value == 0) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,980,value = calendar.getLeastMaximum(Calendar.HOUR) + 1;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,982,"mRule.appendTo(buffer, value);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,986,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,988,"public void appendTo(StringBuffer buffer, int value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,989,"mRule.appendTo(buffer, value);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,994,* <p>Inner class to output the twenty four hour field.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,996,private static class TwentyFourHourField implements NumberRule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,997,private final NumberRule mRule;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1000,* Constructs an instance of {@code TwentyFourHourField} with the specified
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1001,* {@code NumberRule}.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1003,* @param rule the rule
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1005,TwentyFourHourField(NumberRule rule) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1006,mRule = rule;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1010,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1012,public int estimateLength() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1013,return mRule.estimateLength();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1017,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1019,"public void appendTo(StringBuffer buffer, Calendar calendar) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1020,int value = calendar.get(Calendar.HOUR_OF_DAY);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1021,if (value == 0) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1022,value = calendar.getMaximum(Calendar.HOUR_OF_DAY) + 1;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1024,"mRule.appendTo(buffer, value);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1028,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1030,"public void appendTo(StringBuffer buffer, int value) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1031,"mRule.appendTo(buffer, value);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1037,"private static ConcurrentMap<TimeZoneDisplayKey, String> cTimeZoneDisplayCache ="
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1038,"new ConcurrentHashMap<TimeZoneDisplayKey, String>(7);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1040,"* <p>Gets the time zone display name, using a cache for performance.</p>"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1042,* @param tz  the zone to query
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1043,* @param daylight  true if daylight savings
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1044,* @param style  the style to use {@code TimeZone.LONG} or {@code TimeZone.SHORT}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1045,* @param locale  the locale to use
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1046,* @return the textual name of the time zone
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1048,"static String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1049,"TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1050,String value = cTimeZoneDisplayCache.get(key);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1051,if (value == null) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1052,"// This is a very slow call, so cache the results."
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1053,"value = tz.getDisplayName(daylight, style, locale);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1054,"String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1055,if (prior != null) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1056,value= prior;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1059,return value;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1063,* <p>Inner class to output a time zone name.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1065,private static class TimeZoneNameRule implements Rule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1066,private final TimeZone mTimeZone;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1067,private final String mStandard;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1068,private final String mDaylight;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1071,* Constructs an instance of {@code TimeZoneNameRule} with the specified properties.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1073,* @param timeZone the time zone
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1074,* @param locale the locale
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1075,* @param style the style
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1077,"TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1078,mTimeZone = timeZone;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1080,"mStandard = getTimeZoneDisplay(timeZone, false, style, locale);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1081,"mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1085,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1087,public int estimateLength() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1088,"return Math.max(mStandard.length(), mDaylight.length());"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1092,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1094,"public void appendTo(StringBuffer buffer, Calendar calendar) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1095,if (mTimeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1096,buffer.append(mDaylight);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1097,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1098,buffer.append(mStandard);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1104,* <p>Inner class to output a time zone as a number {@code +/-HHMM}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1105,* or {@code +/-HH:MM}.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1107,private static class TimeZoneNumberRule implements Rule {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1108,static final TimeZoneNumberRule INSTANCE_COLON = new TimeZoneNumberRule(true);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1109,static final TimeZoneNumberRule INSTANCE_NO_COLON = new TimeZoneNumberRule(false);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1111,final boolean mColon;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1114,* Constructs an instance of {@code TimeZoneNumberRule} with the specified properties.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1116,* @param colon add colon between HH and MM in the output if {@code true}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1118,TimeZoneNumberRule(boolean colon) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1119,mColon = colon;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1123,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1125,public int estimateLength() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1126,return 5;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1130,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1132,"public void appendTo(StringBuffer buffer, Calendar calendar) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1133,int offset = calendar.get(Calendar.ZONE_OFFSET) + calendar.get(Calendar.DST_OFFSET);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1135,if (offset < 0) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1136,buffer.append('-');
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1137,offset = -offset;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1138,} else {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1139,buffer.append('+');
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1142,int hours = offset / (60 * 60 * 1000);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1143,buffer.append((char)(hours / 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1144,buffer.append((char)(hours % 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1146,if (mColon) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1147,buffer.append(':');
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1150,int minutes = offset / (60 * 1000) - 60 * hours;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1151,buffer.append((char)(minutes / 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1152,buffer.append((char)(minutes % 10 + '0'));
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1158,* <p>Inner class that acts as a compound key for time zone names.</p>
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1160,private static class TimeZoneDisplayKey {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1161,private final TimeZone mTimeZone;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1162,private final int mStyle;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1163,private final Locale mLocale;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1166,* Constructs an instance of {@code TimeZoneDisplayKey} with the specified properties.
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1168,* @param timeZone the time zone
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1169,* @param daylight adjust the style for daylight saving time if {@code true}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1170,* @param style the timezone style
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1171,* @param locale the timezone locale
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1173,"TimeZoneDisplayKey(TimeZone timeZone,"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1174,"boolean daylight, int style, Locale locale) {"
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1175,mTimeZone = timeZone;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1176,if (daylight) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1177,style |= 0x80000000;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1179,mStyle = style;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1180,mLocale = locale;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1184,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1186,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1187,public int hashCode() {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1188,return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1192,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1194,@Override
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1195,public boolean equals(Object obj) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1196,if (this == obj) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1197,return true;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1199,if (obj instanceof TimeZoneDisplayKey) {
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1200,TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1201,return
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1202,mTimeZone.equals(other.mTimeZone) &&
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1203,mStyle == other.mStyle &&
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1204,mLocale.equals(other.mLocale);
True,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java,1206,return false;
False,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,44,"rivate final ConcurrentMap<MultipartKey, String> cDateTimeInstanceCache"
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,44,"private static final ConcurrentMap<MultipartKey, String> cDateTimeInstanceCache"
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,123,"String pattern = getPatternForStyle(dateStyle, timeStyle, locale);"
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,124,"return getInstance(pattern, timeZone, locale);"
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,128,* <p>Gets a date/time format for the specified styles and locale.</p>
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,130,"* @param dateStyle  date style: FULL, LONG, MEDIUM, or SHORT, null indicates no date in format"
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,131,"* @param timeStyle  time style: FULL, LONG, MEDIUM, or SHORT, null indicates no time in format"
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,132,* @param locale  The non-null locale of the desired format
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,133,* @return a localized standard date/time format
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,134,* @throws IllegalArgumentException if the Locale has no date/time pattern defined
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,136,"public static String getPatternForStyle(Integer dateStyle, Integer timeStyle, Locale locale) {"
False,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,151,"eturn getInstance(pattern, timeZone, locale);"
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,164,return pattern;
False,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,175,f (this == obj) {
False,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,176,eturn true;
False,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,178,f ( obj instanceof MultipartKey == false ) {
False,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,179,eturn false;
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,188,// Eliminate the usual boilerplate because
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,189,// this inner static class is only used in a generic ConcurrentHashMap
True,src/main/java/org/apache/commons/lang3/time/FormatCache.java,src/main/java/org/apache/commons/lang3/time/FormatCache.java,190,// which will not compare against other Object types
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,19,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,20,import static org.junit.Assert.assertFalse;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,21,import static org.junit.Assert.assertSame;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,22,import static org.junit.Assert.assertTrue;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,23,import static org.junit.Assert.fail;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,25,import java.text.Format;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,26,import java.text.ParseException;
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,20,mport java.util.Calendar;
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,22,mport java.util.GregorianCalendar;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,31,import java.util.concurrent.ExecutorService;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,32,import java.util.concurrent.Executors;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,33,import java.util.concurrent.TimeUnit;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,34,import java.util.concurrent.atomic.AtomicInteger;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,35,import java.util.concurrent.atomic.AtomicLong;
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,26,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,28,mport org.apache.commons.lang3.SerializationUtils;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,37,import org.junit.Test;
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,36,ublic class FastDateFormatTest extends TestCase {
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,38,ublic FastDateFormatTest(String name) {
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,39,uper(name);
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,45,public class FastDateFormatTest {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,48,* Only the cache methods need to be tested here.
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,49,* The print methods are tested by {@link FastDateFormat_PrinterTest}
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,50,* and the parse methods are tested by {@link FastDateFormat_ParserTest}
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,52,@Test
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,46,"ssertEquals(new SimpleDateFormat().toPattern(), format1.getPattern());"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,59,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,72,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,101,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,119,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,140,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,161,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,189,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,190,public void testCheckDefaults() {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,191,FastDateFormat format = FastDateFormat.getInstance();
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,192,"FastDateFormat medium = FastDateFormat.getDateTimeInstance(FastDateFormat.SHORT, FastDateFormat.SHORT);"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,193,"assertEquals(medium, format);"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,195,SimpleDateFormat sdf = new SimpleDateFormat();
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,196,"assertEquals(sdf.toPattern(), format.getPattern());"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,198,"assertEquals(Locale.getDefault(), format.getLocale());"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,199,"assertEquals(TimeZone.getDefault(), format.getTimeZone());"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,173,ublic void testFormat() {
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,174,ocale realDefaultLocale = Locale.getDefault();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,175,imeZone realDefaultZone = TimeZone.getDefault();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,176,ry {
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,177,ocale.setDefault(Locale.US);
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,178,"imeZone.setDefault(TimeZone.getTimeZone(""America/New_York""));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,180,"regorianCalendar cal1 = new GregorianCalendar(2003, 0, 10, 15, 33, 20);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,181,"regorianCalendar cal2 = new GregorianCalendar(2003, 6, 10, 9, 00, 00);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,182,ate date1 = cal1.getTime();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,183,ate date2 = cal2.getTime();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,184,ong millis1 = date1.getTime();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,185,ong millis2 = date2.getTime();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,187,"astDateFormat fdf = FastDateFormat.getInstance(""yyyy-MM-dd'T'HH:mm:ss"");"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,188,"impleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss"");"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,189,"ssertEquals(sdf.format(date1), fdf.format(date1));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,190,"ssertEquals(""2003-01-10T15:33:20"", fdf.format(date1));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,191,"ssertEquals(""2003-01-10T15:33:20"", fdf.format(cal1));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,192,"ssertEquals(""2003-01-10T15:33:20"", fdf.format(millis1));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,193,"ssertEquals(""2003-07-10T09:00:00"", fdf.format(date2));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,194,"ssertEquals(""2003-07-10T09:00:00"", fdf.format(cal2));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,195,"ssertEquals(""2003-07-10T09:00:00"", fdf.format(millis2));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,197,"df = FastDateFormat.getInstance(""Z"");"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,198,"ssertEquals(""-0500"", fdf.format(date1));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,199,"ssertEquals(""-0500"", fdf.format(cal1));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,200,"ssertEquals(""-0500"", fdf.format(millis1));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,202,"ssertEquals(""-0400"", fdf.format(date2));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,203,"ssertEquals(""-0400"", fdf.format(cal2));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,204,"ssertEquals(""-0400"", fdf.format(millis2));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,206,"df = FastDateFormat.getInstance(""ZZ"");"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,207,"ssertEquals(""-05:00"", fdf.format(date1));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,208,"ssertEquals(""-05:00"", fdf.format(cal1));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,209,"ssertEquals(""-05:00"", fdf.format(millis1));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,211,"ssertEquals(""-04:00"", fdf.format(date2));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,212,"ssertEquals(""-04:00"", fdf.format(cal2));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,213,"ssertEquals(""-04:00"", fdf.format(millis2));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,215,"tring pattern = ""GGGG GGG GG G yyyy yyy yy y MMMM MMM MM M"" +"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,216," dddd ddd dd d DDDD DDD DD D EEEE EEE EE E aaaa aaa aa a zzzz zzz zz z"";"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,217,df = FastDateFormat.getInstance(pattern);
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,218,df = new SimpleDateFormat(pattern);
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,219,/ SDF bug fix starting with Java 7
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,220,"ssertEquals(sdf.format(date1).replaceAll(""2003 03 03 03"", ""2003 2003 03 2003""), fdf.format(date1));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,221,"ssertEquals(sdf.format(date2).replaceAll(""2003 03 03 03"", ""2003 2003 03 2003""), fdf.format(date2));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,222, finally {
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,223,ocale.setDefault(realDefaultLocale);
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,224,imeZone.setDefault(realDefaultZone);
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,202,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,203,public void testCheckDifferingStyles() {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,204,"FastDateFormat shortShort = FastDateFormat.getDateTimeInstance(FastDateFormat.SHORT, FastDateFormat.SHORT, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,205,"FastDateFormat shortLong = FastDateFormat.getDateTimeInstance(FastDateFormat.SHORT, FastDateFormat.LONG, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,206,"FastDateFormat longShort = FastDateFormat.getDateTimeInstance(FastDateFormat.LONG, FastDateFormat.SHORT, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,207,"FastDateFormat longLong = FastDateFormat.getDateTimeInstance(FastDateFormat.LONG, FastDateFormat.LONG, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,209,assertFalse(shortShort.equals(shortLong));
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,210,assertFalse(shortShort.equals(longShort));
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,211,assertFalse(shortShort.equals(longLong));
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,212,assertFalse(shortLong.equals(longShort));
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,213,assertFalse(shortLong.equals(longLong));
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,214,assertFalse(longShort.equals(longLong));
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,229," Test case for {@link FastDateFormat#getDateInstance(int, java.util.Locale)}."
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,231,ublic void testShortDateStyleWithLocales() {
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,232,ocale usLocale = Locale.US;
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,233,"ocale swedishLocale = new Locale(""sv"", ""SE"");"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,234,alendar cal = Calendar.getInstance();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,235,"al.set(2004, 1, 3);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,236,"astDateFormat fdf = FastDateFormat.getDateInstance(FastDateFormat.SHORT, usLocale);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,237,"ssertEquals(""2/3/04"", fdf.format(cal));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,239,"df = FastDateFormat.getDateInstance(FastDateFormat.SHORT, swedishLocale);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,240,"ssertEquals(""2004-02-03"", fdf.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,217,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,218,public void testDateDefaults() {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,219,"assertEquals(FastDateFormat.getDateInstance(FastDateFormat.LONG, Locale.CANADA),"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,220,"FastDateFormat.getDateInstance(FastDateFormat.LONG, TimeZone.getDefault(), Locale.CANADA));"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,222,"assertEquals(FastDateFormat.getDateInstance(FastDateFormat.LONG, TimeZone.getTimeZone(""America/New_York"")),"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,223,"FastDateFormat.getDateInstance(FastDateFormat.LONG, TimeZone.getTimeZone(""America/New_York""), Locale.getDefault()));"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,225,"assertEquals(FastDateFormat.getDateInstance(FastDateFormat.LONG),"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,226,"FastDateFormat.getDateInstance(FastDateFormat.LONG, TimeZone.getDefault(), Locale.getDefault()));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,245, Tests that pre-1000AD years get padded with yyyy
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,247,ublic void testLowYearPadding() {
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,248,alendar cal = Calendar.getInstance();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,249,"astDateFormat format = FastDateFormat.getInstance(""yyyy/MM/DD"");"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,251,"al.set(1,0,1);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,252,"ssertEquals(""0001/01/01"", format.format(cal));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,253,"al.set(10,0,1);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,254,"ssertEquals(""0010/01/01"", format.format(cal));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,255,"al.set(100,0,1);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,256,"ssertEquals(""0100/01/01"", format.format(cal));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,257,"al.set(999,0,1);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,258,"ssertEquals(""0999/01/01"", format.format(cal));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,261, Show Bug #39410 is solved
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,263,ublic void testMilleniumBug() {
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,264,alendar cal = Calendar.getInstance();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,265,"astDateFormat format = FastDateFormat.getInstance(""dd.MM.yyyy"");"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,229,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,230,public void testTimeDefaults() {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,231,"assertEquals(FastDateFormat.getTimeInstance(FastDateFormat.LONG, Locale.CANADA),"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,232,"FastDateFormat.getTimeInstance(FastDateFormat.LONG, TimeZone.getDefault(), Locale.CANADA));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,267,"al.set(1000,0,1);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,268,"ssertEquals(""01.01.1000"", format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,234,"assertEquals(FastDateFormat.getTimeInstance(FastDateFormat.LONG, TimeZone.getTimeZone(""America/New_York"")),"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,235,"FastDateFormat.getTimeInstance(FastDateFormat.LONG, TimeZone.getTimeZone(""America/New_York""), Locale.getDefault()));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,272, testLowYearPadding showed that the date was buggy
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,273," This test confirms it, getting 366 back as a date"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,275,ublic void testSimpleDate() {
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,276,alendar cal = Calendar.getInstance();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,277,"astDateFormat format = FastDateFormat.getInstance(""yyyy/MM/dd"");"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,279,"al.set(2004,11,31);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,280,"ssertEquals(""2004/12/31"", format.format(cal));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,281,"al.set(999,11,31);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,282,"ssertEquals(""0999/12/31"", format.format(cal));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,283,"al.set(1,2,2);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,284,"ssertEquals(""0001/03/02"", format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,237,"assertEquals(FastDateFormat.getTimeInstance(FastDateFormat.LONG),"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,238,"FastDateFormat.getTimeInstance(FastDateFormat.LONG, TimeZone.getDefault(), Locale.getDefault()));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,287,ublic void testLang303() {
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,288,alendar cal = Calendar.getInstance();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,289,"al.set(2004,11,31);"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,241,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,242,public void testTimeDateDefaults() {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,243,"assertEquals(FastDateFormat.getDateTimeInstance(FastDateFormat.LONG, FastDateFormat.MEDIUM, Locale.CANADA),"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,244,"FastDateFormat.getDateTimeInstance(FastDateFormat.LONG, FastDateFormat.MEDIUM, TimeZone.getDefault(), Locale.CANADA));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,291,"astDateFormat format = FastDateFormat.getInstance(""yyyy/MM/dd"");"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,292,tring output = format.format(cal);
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,246,"assertEquals(FastDateFormat.getDateTimeInstance(FastDateFormat.LONG, FastDateFormat.MEDIUM, TimeZone.getTimeZone(""America/New_York"")),"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,247,"FastDateFormat.getDateTimeInstance(FastDateFormat.LONG, FastDateFormat.MEDIUM, TimeZone.getTimeZone(""America/New_York""), Locale.getDefault()));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,294,ormat = (FastDateFormat) SerializationUtils.deserialize( SerializationUtils.serialize( format ) );
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,295,"ssertEquals(output, format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,249,"assertEquals(FastDateFormat.getDateTimeInstance(FastDateFormat.LONG, FastDateFormat.MEDIUM),"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,250,"FastDateFormat.getDateTimeInstance(FastDateFormat.LONG, FastDateFormat.MEDIUM, TimeZone.getDefault(), Locale.getDefault()));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,298,ublic void testLang538() {
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,299,"/ more commonly constructed with: cal = new GregorianCalendar(2009, 9, 16, 8, 42, 16)"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,300,"/ for the unit test to work in any time zone, constructing with GMT-8 rather than default locale time zone"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,301,"regorianCalendar cal = new GregorianCalendar(TimeZone.getTimeZone(""GMT-8""));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,302,al.clear();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,303,"al.set(2009, 9, 16, 8, 42, 16);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,305,"astDateFormat format = FastDateFormat.getInstance(""yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"", TimeZone.getTimeZone(""GMT""));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,306,"ssertEquals(""dateTime"", ""2009-10-16T16:42:16.000Z"", format.format(cal.getTime()));"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,307,"ssertEquals(""dateTime"", ""2009-10-16T08:42:16.000Z"", format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,253,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,254,"public void testParseSync() throws ParseException, InterruptedException {"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,255,"final FastDateFormat formatter= FastDateFormat.getInstance(""yyyy-MM-dd'T'HH:mm:ss.SSS Z"");"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,257,"long sdfTime= measureTime(formatter, new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss.SSS Z"") {"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,258,private static final long serialVersionUID = 1L;  // because SimpleDateFormat is serializable
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,260,@Override
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,261,public Object parseObject(String formattedDate) throws ParseException {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,262,synchronized(this) {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,263,return super.parse(formattedDate);
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,268,"long fdfTime= measureTime(formatter, FastDateFormat.getInstance(""yyyy-MM-dd'T'HH:mm:ss.SSS Z""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,270,"String times= ""FastDateParser:""+fdfTime+""  SimpleDateFormat:""+sdfTime;"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,271,System.out.println(times);
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,310,ublic void testLang645() {
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,311,"ocale locale = new Locale(""sv"", ""SE"");"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,313,alendar cal = Calendar.getInstance();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,314,"al.set(2010, 0, 1, 12, 0, 0);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,315,ate d = cal.getTime();
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,317,"astDateFormat fdf = FastDateFormat.getInstance(""EEEE', week 'ww"", locale);"
False,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,319,"ssertEquals(""fredag, week 53"", fdf.format(d));"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,274,final static private int NTHREADS= 10;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,275,final static private int NROUNDS= 10000;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,277,"private long measureTime(final Format formatter, final Format parser) throws ParseException, InterruptedException {"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,278,final ExecutorService pool = Executors.newFixedThreadPool(NTHREADS);
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,279,final AtomicInteger failures= new AtomicInteger(0);
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,280,final AtomicLong totalElapsed= new AtomicLong(0);
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,282,for(int i= 0; i<NTHREADS; ++i) {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,283,pool.submit(new Runnable() {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,284,public void run() {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,285,for(int i= 0; i<NROUNDS; ++i) {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,286,try {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,287,Date date= new Date();
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,288,String formattedDate= formatter.format(date);
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,289,long start= System.currentTimeMillis();
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,290,Object pd= parser.parseObject(formattedDate);
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,291,totalElapsed.addAndGet(System.currentTimeMillis()-start);
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,292,if(!date.equals(pd)) {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,293,failures.incrementAndGet();
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,295,} catch (Exception e) {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,296,failures.incrementAndGet();
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,297,e.printStackTrace();
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,303,pool.shutdown();
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,304,"if(!pool.awaitTermination(20, TimeUnit.SECONDS)) {"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,305,pool.shutdownNow();
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,306,"fail(""did not complete tasks"");"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,308,"assertEquals(0, failures.get());"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormatTest.java,309,return totalElapsed.get();
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,17,package org.apache.commons.lang3.time;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,19,import java.util.Locale;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,20,import java.util.TimeZone;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,23,* Unit tests for the parse methods of FastDateFormat
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,25,* @since 3.2
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,27,public class FastDateFormat_ParserTest extends FastDateParserTest {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,29,@Override
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,30,"protected DateParser getInstance(String format, TimeZone timeZone, Locale locale) {"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_ParserTest.java,31,"return FastDateFormat.getInstance(format, timeZone, locale);"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,17,package org.apache.commons.lang3.time;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,19,import java.util.Locale;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,20,import java.util.TimeZone;
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,23,* Unit tests for the print methods of FastDateFormat
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,25,* @since 3.2
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,27,public class FastDateFormat_PrinterTest extends FastDatePrinterTest {
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,29,@Override
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,30,"protected DatePrinter getInstance(String format, TimeZone timeZone, Locale locale) {"
True,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDateFormat_PrinterTest.java,31,"return FastDateFormat.getInstance(format, timeZone, locale);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,4,* this work for additional inparserion regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,17,package org.apache.commons.lang3.time;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,19,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,20,import static org.junit.Assert.assertFalse;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,21,import static org.junit.Assert.assertTrue;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,23,import java.io.Serializable;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,24,import java.text.ParseException;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,25,import java.text.SimpleDateFormat;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,26,import java.util.Calendar;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,27,import java.util.Date;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,28,import java.util.GregorianCalendar;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,29,import java.util.HashMap;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,30,import java.util.Locale;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,31,import java.util.Map;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,32,import java.util.TimeZone;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,34,import org.apache.commons.lang3.SerializationUtils;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,35,import org.junit.Test;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,38,* Unit tests {@link org.apache.commons.lang3.time.FastDateParser}.
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,40,* @since 3.2
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,42,public class FastDateParserTest {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,43,"private static final String yMdHmsSZ = ""yyyy-MM-dd'T'HH:mm:ss.SSS Z"";"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,44,"private static final String DMY_DOT = ""dd.MM.yyyy"";"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,45,"private static final String YMD_SLASH = ""yyyy/MM/dd"";"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,46,"private static final String MDY_DASH = ""MM-DD-yyyy"";"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,47,"private static final String MDY_SLASH = ""MM/DD/yyyy"";"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,48,"private static final TimeZone REYKJAVIK = TimeZone.getTimeZone(""Atlantic/Reykjavik"");"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,49,"private static final TimeZone NEW_YORK = TimeZone.getTimeZone(""America/New_York"");"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,50,"private static final Locale SWEDEN = new Locale(""sv"", ""SE"");"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,52,DateParser getInstance(String format) {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,53,"return getInstance(format, TimeZone.getDefault(), Locale.getDefault());"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,56,"private DateParser getDateInstance(int dateStyle, Locale locale) {"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,57,"return getInstance(FormatCache.getPatternForStyle(dateStyle, null, locale), TimeZone.getDefault(), Locale.getDefault());"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,60,"private DateParser getInstance(String format, Locale locale) {"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,61,"return getInstance(format, TimeZone.getDefault(), locale);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,64,"private DateParser getInstance(String format, TimeZone timeZone) {"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,65,"return getInstance(format, timeZone, Locale.getDefault());"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,69,* Override this method in derived tests to change the construction of instances
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,70,* @param format
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,71,* @param timeZone
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,72,* @param locale
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,73,* @return
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,75,"protected DateParser getInstance(String format, TimeZone timeZone, Locale locale) {"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,76,"return new FastDateParser(format, timeZone, locale);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,79,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,80,public void test_Equality_Hash() {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,81,DateParser[] parsers= {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,82,"getInstance(yMdHmsSZ, NEW_YORK, Locale.US),"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,83,"getInstance(DMY_DOT, NEW_YORK, Locale.US),"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,84,"getInstance(YMD_SLASH, NEW_YORK, Locale.US),"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,85,"getInstance(MDY_DASH, NEW_YORK, Locale.US),"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,86,"getInstance(MDY_SLASH, NEW_YORK, Locale.US),"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,87,"getInstance(MDY_SLASH, REYKJAVIK, Locale.US),"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,88,"getInstance(MDY_SLASH, REYKJAVIK, SWEDEN)"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,91,"Map<DateParser,Integer> map= new HashMap<DateParser,Integer>();"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,92,int i= 0;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,93,for(DateParser parser:parsers) {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,94,"map.put(parser, i++);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,97,i= 0;
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,98,for(DateParser parser:parsers) {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,99,"assertEquals(i++, (int)map.get(parser));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,103,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,104,public void testParseZone() throws ParseException {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,105,"Calendar cal= Calendar.getInstance(NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,106,cal.clear();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,107,"cal.set(2003, 6, 10, 16, 33, 20);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,109,"DateParser fdf = getInstance(yMdHmsSZ, NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,111,"assertEquals(cal.getTime(), fdf.parse(""2003-07-10T15:33:20.000 -0500""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,112,"assertEquals(cal.getTime(), fdf.parse(""2003-07-10T15:33:20.000 GMT-05:00""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,113,"assertEquals(cal.getTime(), fdf.parse(""2003-07-10T16:33:20.000 Eastern Daylight Time""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,114,"assertEquals(cal.getTime(), fdf.parse(""2003-07-10T16:33:20.000 EDT""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,116,"cal.setTimeZone(TimeZone.getTimeZone(""GMT-3""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,117,"cal.set(2003, 1, 10, 9, 0, 0);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,119,"assertEquals(cal.getTime(), fdf.parse(""2003-02-10T09:00:00.000 -0300""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,121,"cal.setTimeZone(TimeZone.getTimeZone(""GMT+5""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,122,"cal.set(2003, 1, 10, 15, 5, 6);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,124,"assertEquals(cal.getTime(), fdf.parse(""2003-02-10T15:05:06.000 +0500""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,127,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,128,public void testParseLongShort() throws ParseException {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,129,"Calendar cal= Calendar.getInstance(NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,130,cal.clear();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,131,"cal.set(2003, 1, 10, 15, 33, 20);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,132,"cal.set(Calendar.MILLISECOND, 989);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,133,cal.setTimeZone(NEW_YORK);
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,135,"DateParser fdf = getInstance(""yyyy GGGG MMMM dddd aaaa EEEE HHHH mmmm ssss SSSS ZZZZ"", NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,137,"assertEquals(cal.getTime(), fdf.parse(""2003 AD February 0010 PM Monday 0015 0033 0020 0989 GMT-05:00""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,138,"cal.set(Calendar.ERA, GregorianCalendar.BC);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,140,"Date parse = fdf.parse(""2003 BC February 0010 PM Saturday 0015 0033 0020 0989 GMT-05:00"");"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,141,"assertEquals(cal.getTime(), parse);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,143,"fdf = getInstance(""y G M d a E H m s S Z"");"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,144,"assertEquals(cal.getTime(), fdf.parse(""03 BC 2 10 PM Sat 15 33 20 989 -0500""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,146,"cal.set(Calendar.ERA, GregorianCalendar.AD);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,147,"assertEquals(cal.getTime(), fdf.parse(""03 AD 2 10 PM Saturday 15 33 20 989 -0500""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,150,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,151,public void testAmPm() throws ParseException {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,152,"Calendar cal= Calendar.getInstance(NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,153,cal.clear();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,155,"DateParser h = getInstance(""yyyy-MM-dd hh a mm:ss"", NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,156,"DateParser K = getInstance(""yyyy-MM-dd KK a mm:ss"", NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,157,"DateParser k = getInstance(""yyyy-MM-dd kk:mm:ss"", NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,158,"DateParser H = getInstance(""yyyy-MM-dd HH:mm:ss"", NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,160,"cal.set(2010, 7, 1, 0, 33, 20);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,161,"assertEquals(cal.getTime(), h.parse(""2010-08-01 12 AM 33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,162,"assertEquals(cal.getTime(), K.parse(""2010-08-01 0 AM 33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,163,"assertEquals(cal.getTime(), k.parse(""2010-08-01 00:33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,164,"assertEquals(cal.getTime(), H.parse(""2010-08-01 00:33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,166,"cal.set(2010, 7, 1, 3, 33, 20);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,167,"assertEquals(cal.getTime(), h.parse(""2010-08-01 3 AM 33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,168,"assertEquals(cal.getTime(), K.parse(""2010-08-01 3 AM 33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,169,"assertEquals(cal.getTime(), k.parse(""2010-08-01 03:33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,170,"assertEquals(cal.getTime(), H.parse(""2010-08-01 03:33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,172,"cal.set(2010, 7, 1, 15, 33, 20);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,173,"assertEquals(cal.getTime(), h.parse(""2010-08-01 3 PM 33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,174,"assertEquals(cal.getTime(), K.parse(""2010-08-01 3 PM 33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,175,"assertEquals(cal.getTime(), k.parse(""2010-08-01 15:33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,176,"assertEquals(cal.getTime(), H.parse(""2010-08-01 15:33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,178,"cal.set(2010, 7, 1, 12, 33, 20);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,179,"assertEquals(cal.getTime(), h.parse(""2010-08-01 12 PM 33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,180,"assertEquals(cal.getTime(), K.parse(""2010-08-01 0 PM 33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,181,"assertEquals(cal.getTime(), k.parse(""2010-08-01 12:33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,182,"assertEquals(cal.getTime(), H.parse(""2010-08-01 12:33:20""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,185,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,186,public void testLocales() throws ParseException {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,188,for(Locale locale : Locale.getAvailableLocales()) {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,189,"Calendar cal= Calendar.getInstance(NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,190,cal.clear();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,191,"cal.set(2003, 1, 10);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,193,try {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,194,"String longFormat= ""GGGG/yyyy/MMMM/dddd/aaaa/EEEE/ZZZZ"";"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,195,"SimpleDateFormat sdf = new SimpleDateFormat(longFormat, locale);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,196,"DateParser fdf = getInstance(longFormat, locale);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,198,"checkParse(cal, sdf, fdf);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,200,"cal.set(Calendar.ERA, GregorianCalendar.BC);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,201,"checkParse(cal, sdf, fdf);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,203,"String shortFormat= ""G/y/M/d/a/E/Z"";"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,204,"sdf = new SimpleDateFormat(shortFormat, locale);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,205,"fdf = getInstance(shortFormat, locale);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,206,"checkParse(cal, sdf, fdf);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,208,"cal.set(Calendar.ERA, GregorianCalendar.AD);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,209,"checkParse(cal, sdf, fdf);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,211,catch(ParseException ex) {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,212,"// TODO: why do ja_JP_JP, hi_IN, th_TH, and th_TH_TH fail?"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,213,"System.out.println(""Locale ""+locale+ "" failed"");"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,218,"private void checkParse(Calendar cal, SimpleDateFormat sdf, DateParser fdf) throws ParseException {"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,219,String formattedDate= sdf.format(cal.getTime());
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,220,Date expectedTime = sdf.parse(formattedDate);
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,221,Date actualTime = fdf.parse(formattedDate);
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,222,"assertEquals(expectedTime, actualTime);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,225,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,226,public void testParseNumerics() throws ParseException {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,227,"Calendar cal= Calendar.getInstance(NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,228,cal.clear();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,229,"cal.set(2003, 1, 10, 15, 33, 20);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,230,"cal.set(Calendar.MILLISECOND, 989);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,232,"DateParser fdf = getInstance(""yyyyMMddHHmmssSSS"", NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,233,"assertEquals(cal.getTime(), fdf.parse(""20030210153320989""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,236,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,237,public void testQuotes() throws ParseException {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,238,"Calendar cal= Calendar.getInstance(NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,239,cal.clear();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,240,"cal.set(2003, 1, 10, 15, 33, 20);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,241,"cal.set(Calendar.MILLISECOND, 989);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,243,"DateParser fdf = getInstance(""''yyyyMMdd'A''B'HHmmssSSS''"", NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,244,"assertEquals(cal.getTime(), fdf.parse(""'20030210A'B153320989'""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,247,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,248,public void testDayOf() throws ParseException {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,249,"Calendar cal= Calendar.getInstance(NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,250,cal.clear();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,251,"cal.set(2003, 1, 10);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,253,"DateParser fdf = getInstance(""W w F D y"", NEW_YORK, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,254,"assertEquals(cal.getTime(), fdf.parse(""3 7 2 41 03""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,258,"* Test case for {@link FastDateParser#getDateInstance(int, java.util.Locale)}."
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,259,* @throws ParseException
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,261,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,262,public void testShortDateStyleWithLocales() throws ParseException {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,263,"DateParser fdf = getDateInstance(FastDateFormat.SHORT, Locale.US);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,264,Calendar cal = Calendar.getInstance();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,265,cal.clear();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,267,"cal.set(2004, 1, 3);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,268,"assertEquals(cal.getTime(), fdf.parse(""2/3/04""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,270,"fdf = getDateInstance(FastDateFormat.SHORT, SWEDEN);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,271,"assertEquals(cal.getTime(), fdf.parse(""2004-02-03""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,275,* Tests that pre-1000AD years get padded with yyyy
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,276,* @throws ParseException
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,278,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,279,public void testLowYearPadding() throws ParseException {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,280,DateParser parser = getInstance(YMD_SLASH);
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,281,Calendar cal = Calendar.getInstance();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,282,cal.clear();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,284,"cal.set(1,0,1);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,285,"assertEquals(cal.getTime(), parser.parse(""0001/01/01""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,286,"cal.set(10,0,1);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,287,"assertEquals(cal.getTime(), parser.parse(""0010/01/01""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,288,"cal.set(100,0,1);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,289,"assertEquals(cal.getTime(), parser.parse(""0100/01/01""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,290,"cal.set(999,0,1);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,291,"assertEquals(cal.getTime(), parser.parse(""0999/01/01""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,295,* @throws ParseException
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,297,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,298,public void testMilleniumBug() throws ParseException {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,299,DateParser parser = getInstance(DMY_DOT);
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,300,Calendar cal = Calendar.getInstance();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,301,cal.clear();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,303,"cal.set(1000,0,1);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,304,"assertEquals(cal.getTime(), parser.parse(""01.01.1000""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,307,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,308,public void testLang303() throws ParseException {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,309,DateParser parser = getInstance(YMD_SLASH);
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,310,Calendar cal = Calendar.getInstance();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,311,"cal.set(2004,11,31);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,313,"Date date = parser.parse(""2004/11/31"");"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,315,parser = (DateParser) SerializationUtils.deserialize( SerializationUtils.serialize( (Serializable)parser ) );
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,316,"assertEquals(date, parser.parse(""2004/11/31""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,319,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,320,public void testLang538() throws ParseException {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,321,"DateParser parser = getInstance(""yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"", TimeZone.getTimeZone(""GMT""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,323,"Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(""GMT-8""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,324,cal.clear();
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,325,"cal.set(2009, 9, 16, 8, 42, 16);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,327,"assertEquals(cal.getTime(), parser.parse(""2009-10-16T16:42:16.000Z""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,330,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,331,public void testEquals() {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,332,DateParser parser1= getInstance(YMD_SLASH);
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,333,DateParser parser2= getInstance(YMD_SLASH);
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,335,"assertEquals(parser1, parser2);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,336,"assertEquals(parser1.hashCode(), parser2.hashCode());"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,338,assertFalse(parser1.equals(new Object()));
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,341,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,342,public void testToStringContainsName() {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,343,DateParser parser= getInstance(YMD_SLASH);
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,344,"assertTrue(parser.toString().startsWith(""FastDate""));"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,347,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,348,public void testPatternMatches() {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,349,DateParser parser= getInstance(yMdHmsSZ);
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,350,"assertEquals(yMdHmsSZ, parser.getPattern());"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,353,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,354,public void testLocaleMatches() {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,355,"DateParser parser= getInstance(yMdHmsSZ, SWEDEN);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,356,"assertEquals(SWEDEN, parser.getLocale());"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,359,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,360,public void testTimeZoneMatches() {
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,361,"DateParser parser= getInstance(yMdHmsSZ, REYKJAVIK);"
True,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java,362,"assertEquals(REYKJAVIK, parser.getTimeZone());"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,17,package org.apache.commons.lang3.time;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,19,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,20,import static org.junit.Assert.assertFalse;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,21,import static org.junit.Assert.assertTrue;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,23,import java.io.Serializable;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,24,import java.text.SimpleDateFormat;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,25,import java.util.Calendar;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,26,import java.util.Date;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,27,import java.util.GregorianCalendar;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,28,import java.util.Locale;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,29,import java.util.TimeZone;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,31,import org.apache.commons.lang3.SerializationUtils;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,32,import org.junit.Test;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,35,* Unit tests {@link org.apache.commons.lang3.time.FastDatePrinter}.
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,37,* @since 3.0
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,39,public class FastDatePrinterTest {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,41,"private static final String YYYY_MM_DD = ""yyyy/MM/dd"";"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,42,"private static final TimeZone NEW_YORK = TimeZone.getTimeZone(""America/New_York"");"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,43,"private static final Locale SWEDEN = new Locale(""sv"", ""SE"");"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,45,DatePrinter getInstance(String format) {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,46,"return getInstance(format, TimeZone.getDefault(), Locale.getDefault());"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,49,"private DatePrinter getDateInstance(int dateStyle, Locale locale) {"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,50,"return getInstance(FormatCache.getPatternForStyle(dateStyle, null, locale), TimeZone.getDefault(), Locale.getDefault());"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,53,"private DatePrinter getInstance(String format, Locale locale) {"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,54,"return getInstance(format, TimeZone.getDefault(), locale);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,57,"private DatePrinter getInstance(String format, TimeZone timeZone) {"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,58,"return getInstance(format, timeZone, Locale.getDefault());"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,62,* Override this method in derived tests to change the construction of instances
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,63,* @param format
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,64,* @param timeZone
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,65,* @param locale
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,66,* @return
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,68,"protected DatePrinter getInstance(String format, TimeZone timeZone, Locale locale) {"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,69,"return new FastDatePrinter(format, timeZone, locale);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,72,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,73,public void testFormat() {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,74,Locale realDefaultLocale = Locale.getDefault();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,75,TimeZone realDefaultZone = TimeZone.getDefault();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,76,try {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,77,Locale.setDefault(Locale.US);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,78,TimeZone.setDefault(NEW_YORK);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,80,"GregorianCalendar cal1 = new GregorianCalendar(2003, 0, 10, 15, 33, 20);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,81,"GregorianCalendar cal2 = new GregorianCalendar(2003, 6, 10, 9, 00, 00);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,82,Date date1 = cal1.getTime();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,83,Date date2 = cal2.getTime();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,84,long millis1 = date1.getTime();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,85,long millis2 = date2.getTime();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,87,"DatePrinter fdf = getInstance(""yyyy-MM-dd'T'HH:mm:ss"");"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,88,"SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss"");"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,89,"assertEquals(sdf.format(date1), fdf.format(date1));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,90,"assertEquals(""2003-01-10T15:33:20"", fdf.format(date1));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,91,"assertEquals(""2003-01-10T15:33:20"", fdf.format(cal1));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,92,"assertEquals(""2003-01-10T15:33:20"", fdf.format(millis1));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,93,"assertEquals(""2003-07-10T09:00:00"", fdf.format(date2));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,94,"assertEquals(""2003-07-10T09:00:00"", fdf.format(cal2));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,95,"assertEquals(""2003-07-10T09:00:00"", fdf.format(millis2));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,97,"fdf = getInstance(""Z"");"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,98,"assertEquals(""-0500"", fdf.format(date1));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,99,"assertEquals(""-0500"", fdf.format(cal1));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,100,"assertEquals(""-0500"", fdf.format(millis1));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,102,"assertEquals(""-0400"", fdf.format(date2));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,103,"assertEquals(""-0400"", fdf.format(cal2));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,104,"assertEquals(""-0400"", fdf.format(millis2));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,106,"fdf = getInstance(""ZZ"");"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,107,"assertEquals(""-05:00"", fdf.format(date1));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,108,"assertEquals(""-05:00"", fdf.format(cal1));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,109,"assertEquals(""-05:00"", fdf.format(millis1));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,111,"assertEquals(""-04:00"", fdf.format(date2));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,112,"assertEquals(""-04:00"", fdf.format(cal2));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,113,"assertEquals(""-04:00"", fdf.format(millis2));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,115,"String pattern = ""GGGG GGG GG G yyyy yyy yy y MMMM MMM MM M"" +"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,116,""" dddd ddd dd d DDDD DDD DD D EEEE EEE EE E aaaa aaa aa a zzzz zzz zz z"";"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,117,fdf = getInstance(pattern);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,118,sdf = new SimpleDateFormat(pattern);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,119,// SDF bug fix starting with Java 7
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,120,"assertEquals(sdf.format(date1).replaceAll(""2003 03 03 03"", ""2003 2003 03 2003""), fdf.format(date1));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,121,"assertEquals(sdf.format(date2).replaceAll(""2003 03 03 03"", ""2003 2003 03 2003""), fdf.format(date2));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,122,} finally {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,123,Locale.setDefault(realDefaultLocale);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,124,TimeZone.setDefault(realDefaultZone);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,129,"* Test case for {@link FastDatePrinter#getDateInstance(int, java.util.Locale)}."
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,131,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,132,public void testShortDateStyleWithLocales() {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,133,Locale usLocale = Locale.US;
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,134,"Locale swedishLocale = new Locale(""sv"", ""SE"");"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,135,Calendar cal = Calendar.getInstance();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,136,"cal.set(2004, 1, 3);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,137,"DatePrinter fdf = getDateInstance(FastDateFormat.SHORT, usLocale);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,138,"assertEquals(""2/3/04"", fdf.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,140,"fdf = getDateInstance(FastDateFormat.SHORT, swedishLocale);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,141,"assertEquals(""2004-02-03"", fdf.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,146,* Tests that pre-1000AD years get padded with yyyy
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,148,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,149,public void testLowYearPadding() {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,150,Calendar cal = Calendar.getInstance();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,151,DatePrinter format = getInstance(YYYY_MM_DD);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,153,"cal.set(1,0,1);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,154,"assertEquals(""0001/01/01"", format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,155,"cal.set(10,0,1);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,156,"assertEquals(""0010/01/01"", format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,157,"cal.set(100,0,1);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,158,"assertEquals(""0100/01/01"", format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,159,"cal.set(999,0,1);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,160,"assertEquals(""0999/01/01"", format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,163,* Show Bug #39410 is solved
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,165,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,166,public void testMilleniumBug() {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,167,Calendar cal = Calendar.getInstance();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,168,"DatePrinter format = getInstance(""dd.MM.yyyy"");"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,170,"cal.set(1000,0,1);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,171,"assertEquals(""01.01.1000"", format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,175,* testLowYearPadding showed that the date was buggy
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,176,"* This test confirms it, getting 366 back as a date"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,178,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,179,public void testSimpleDate() {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,180,Calendar cal = Calendar.getInstance();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,181,DatePrinter format = getInstance(YYYY_MM_DD);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,183,"cal.set(2004,11,31);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,184,"assertEquals(""2004/12/31"", format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,185,"cal.set(999,11,31);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,186,"assertEquals(""0999/12/31"", format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,187,"cal.set(1,2,2);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,188,"assertEquals(""0001/03/02"", format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,191,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,192,public void testLang303() {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,193,Calendar cal = Calendar.getInstance();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,194,"cal.set(2004,11,31);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,196,DatePrinter format = getInstance(YYYY_MM_DD);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,197,String output = format.format(cal);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,199,format = (DatePrinter) SerializationUtils.deserialize( SerializationUtils.serialize( (Serializable)format ) );
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,200,"assertEquals(output, format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,203,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,204,public void testLang538() {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,205,"// more commonly constructed with: cal = new GregorianCalendar(2009, 9, 16, 8, 42, 16)"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,206,"// for the unit test to work in any time zone, constructing with GMT-8 rather than default locale time zone"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,207,"GregorianCalendar cal = new GregorianCalendar(TimeZone.getTimeZone(""GMT-8""));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,208,cal.clear();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,209,"cal.set(2009, 9, 16, 8, 42, 16);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,211,"DatePrinter format = getInstance(""yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"", TimeZone.getTimeZone(""GMT""));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,212,"assertEquals(""dateTime"", ""2009-10-16T16:42:16.000Z"", format.format(cal.getTime()));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,213,"assertEquals(""dateTime"", ""2009-10-16T08:42:16.000Z"", format.format(cal));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,216,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,217,public void testLang645() {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,218,"Locale locale = new Locale(""sv"", ""SE"");"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,220,Calendar cal = Calendar.getInstance();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,221,"cal.set(2010, 0, 1, 12, 0, 0);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,222,Date d = cal.getTime();
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,224,"DatePrinter fdf = getInstance(""EEEE', week 'ww"", locale);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,226,"assertEquals(""fredag, week 53"", fdf.format(d));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,229,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,230,public void testEquals() {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,231,DatePrinter printer1= getInstance(YYYY_MM_DD);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,232,DatePrinter printer2= getInstance(YYYY_MM_DD);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,234,"assertEquals(printer1, printer2);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,235,"assertEquals(printer1.hashCode(), printer2.hashCode());"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,237,assertFalse(printer1.equals(new Object()));
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,240,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,241,public void testToStringContainsName() {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,242,DatePrinter printer= getInstance(YYYY_MM_DD);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,243,"assertTrue(printer.toString().startsWith(""FastDate""));"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,246,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,247,public void testPatternMatches() {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,248,DatePrinter printer= getInstance(YYYY_MM_DD);
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,249,"assertEquals(YYYY_MM_DD, printer.getPattern());"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,252,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,253,public void testLocaleMatches() {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,254,"DatePrinter printer= getInstance(YYYY_MM_DD, SWEDEN);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,255,"assertEquals(SWEDEN, printer.getLocale());"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,258,@Test
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,259,public void testTimeZoneMatches() {
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,260,"DatePrinter printer= getInstance(YYYY_MM_DD, NEW_YORK);"
True,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java,261,"assertEquals(NEW_YORK, printer.getTimeZone());"
