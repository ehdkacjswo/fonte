is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,19,import java.util.List;
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,22,import org.apache.commons.lang3.tuple.Pair;
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,23, An exception that provides an easy and safe way to add contextual information.
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,26,* An exception that provides an easy and safe way to add contextual
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,27,* information.
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,30, map of context values. This additional information is automatically included in the
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,31, message and printed stack trace.
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,34,* list of context label-value pairs. This additional information is automatically included in
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,35,* the message and printed stack trace.
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,43,"          .addValue(""accountNumber"", accountNumber)"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,44,"          .addValue(""amountPosted"", amountPosted)"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,45,"          .addValue(""previousBalance"", previousBalance)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,47,"*          .addContextValue(""accountNumber"", accountNumber)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,48,"*          .addContextValue(""amountPosted"", amountPosted)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,49,"*          .addContextValue(""previousBalance"", previousBalance)"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,70,rivate static final long serialVersionUID = 8940917952810290164L;
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,74,private static final long serialVersionUID = 20110706L;
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,140, should have a reasonable toString() implementation. If the added label
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,141," is already available, the label is appended with an index."
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,145,* should have a reasonable toString() implementation.  Different values
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,146,* can be added with the same label multiple times.
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,146," @param label  a textual label associated with information, null not recommended"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,147," @param value  information needed to understand exception, may be null"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,151,"* @param label  a textual label associated with information, {@code null} not recommended"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,152,"* @param value  information needed to understand exception, may be {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,150,"ublic ContextedException addValue(String label, Object value) {"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,151,"xceptionContext.addValue(label, value);"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,155,"public ContextedException addContextValue(String label, Object value) {"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,156,"exceptionContext.addContextValue(label, value);"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,156, Replaces information helpful to a developer in diagnosing and correcting
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,161,* Adds information helpful to a developer in diagnosing and correcting
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,158, should have a reasonable toString() implementation. If the replaced
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,159," label does not yet exist, it is simply added."
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,163,* should have a reasonable toString() implementation.  Different values
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,164,* can be added with the same label multiple times.
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,161, Note: This exception is only serializable if the object added is serializable.
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,166,* Note: This exception is only serializable if the object added as value is serializable.
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,164," @param label  a textual label associated with information, null not recommended"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,165," @param value  information needed to understand exception, may be null"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,169,* @param pair a pair of textual label and information
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,170,* @throws NullPointerException if {@code pair} is {@code null}
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,168,"ublic ContextedException replaceValue(String label, Object value) {"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,169,"xceptionContext.replaceValue(label, value);"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,173,"public ContextedException addContextValue(Pair<String, Object> pair) {"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,174,this.exceptionContext.addContextValue(pair);
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,174, Retrieves a contextual data value associated with the label.
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,179,* Set information helpful to a developer in diagnosing and correcting
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,180,"* the problem.  For the information to be meaningful, the value passed"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,181,* should have a reasonable toString() implementation.  Existing values
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,182,* with the same labels are removed before the new one is added.
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,183,* <p>
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,184,* Note: This exception is only serializable if the object added as value is serializable.
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,185,* </p>
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,176," @param label  the label to get the contextual value for, may be null"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,177," @return the contextual value associated with the label, may be null"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,187,"* @param label  a textual label associated with information, {@code null} not recommended"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,188,"* @param value  information needed to understand exception, may be {@code null}"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,189,"* @return this, for method chaining"
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,179,ublic Object getValue(String label) {
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,180,eturn exceptionContext.getValue(label);
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,191,"public ContextedException setContextValue(String label, Object value) {"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,192,"exceptionContext.setContextValue(label, value);"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,193,return this;
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,184, Retrieves the labels defined in the contextual data.
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,197,* Set information helpful to a developer in diagnosing and correcting
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,198,"* the problem.  For the information to be meaningful, the value passed"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,199,* should have a reasonable toString() implementation.  Existing values
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,200,* with the same labels are removed before the new one is added.
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,201,* <p>
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,202,* Note: This exception is only serializable if the object added as value is serializable.
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,203,* </p>
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,186," @return the set of labels, never null"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,205,* @param pair a pair of textual label and information
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,206,* @throws NullPointerException if {@code pair} is {@code null}
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,207,"* @return this, for method chaining"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,209,"public ContextedException setContextValue(Pair<String, Object> pair) {"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,210,this.exceptionContext.setContextValue(pair);
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,211,return this;
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,215,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,217,public List<Object> getContextValues(String label) {
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,218,return this.exceptionContext.getContextValues(label);
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,222,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,224,public Object getFirstContextValue(String label) {
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,225,return this.exceptionContext.getFirstContextValue(label);
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,229,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,231,"public List<Pair<String, Object>> getContextEntries() {"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,232,return this.exceptionContext.getContextEntries();
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,236,* {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,188,ublic Set<String> getLabelSet() {
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,189,eturn exceptionContext.getLabelSet();
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,238,public Set<String> getContextLabels() {
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,239,return exceptionContext.getContextLabels();
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,19,import java.util.List;
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,22,import org.apache.commons.lang3.tuple.Pair;
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,30, map of context values. This additional information is automatically included in the
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,31, message and printed stack trace.
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,33,* list of context label-value pairs. This additional information is automatically included in
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,34,* the message and printed stack trace.
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,43,"          .addValue(""accountNumber"", accountNumber)"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,44,"          .addValue(""amountPosted"", amountPosted)"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,45,"          .addValue(""previousBalance"", previousBalance)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,46,"*          .addContextValue(""accountNumber"", accountNumber)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,47,"*          .addContextValue(""amountPosted"", amountPosted)"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,48,"*          .addContextValue(""previousBalance"", previousBalance)"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,70,rivate static final long serialVersionUID = 1459691936045811817L;
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,73,private static final long serialVersionUID = 20110706L;
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,126,* <p>
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,127,* Note: This exception is only serializable if the object added is serializable.
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,128,* </p>
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,140, should have a reasonable toString() implementation. If the added label
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,141," is already available, the label is appended with an index."
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,147,* should have a reasonable toString() implementation.  Different values
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,148,* can be added with the same label multiple times.
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,146," @param label  a textual label associated with information, null not recommended"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,147," @param value  information needed to understand exception, may be null"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,153,"* @param label  a textual label associated with information, {@code null} not recommended"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,154,"* @param value  information needed to understand exception, may be {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,150,"ublic ContextedRuntimeException addValue(String label, Object value) {"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,151,"xceptionContext.addValue(label, value);"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,157,"public ContextedRuntimeException addContextValue(String label, Object value) {"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,158,"exceptionContext.addContextValue(label, value);"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,156, Replaces information helpful to a developer in diagnosing and correcting
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,163,* Adds information helpful to a developer in diagnosing and correcting
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,158, should have a reasonable toString() implementation. If the replaced
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,159," label does not yet exist, it is simply added."
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,165,* should have a reasonable toString() implementation.  Different values
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,166,* can be added with the same label multiple times.
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,161, Note: This exception is only serializable if the object added is serializable.
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,168,* Note: This exception is only serializable if the object added as value is serializable.
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,164," @param label  a textual label associated with information, null not recommended"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,165," @param value  information needed to understand exception, may be null"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,171,* @param pair a pair of textual label and information
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,172,* @throws NullPointerException if {@code pair} is {@code null}
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,168,"ublic ContextedRuntimeException replaceValue(String label, Object value) {"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,169,"xceptionContext.replaceValue(label, value);"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,175,"public ContextedRuntimeException addContextValue(Pair<String, Object> pair) {"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,176,this.exceptionContext.addContextValue(pair);
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,174, Retrieves a contextual data value associated with the label.
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,181,* Set information helpful to a developer in diagnosing and correcting
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,182,"* the problem.  For the information to be meaningful, the value passed"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,183,* should have a reasonable toString() implementation.  Existing values
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,184,* with the same labels are removed before the new one is added.
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,185,* <p>
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,186,* Note: This exception is only serializable if the object added as value is serializable.
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,187,* </p>
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,176," @param label  the label to get the contextual value for, may be null"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,177," @return the contextual value associated with the label, may be null"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,189,"* @param label  a textual label associated with information, {@code null} not recommended"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,190,"* @param value  information needed to understand exception, may be {@code null}"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,191,"* @return this, for method chaining"
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,179,ublic Object getValue(String label) {
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,180,eturn exceptionContext.getValue(label);
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,193,"public ContextedRuntimeException setContextValue(String label, Object value) {"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,194,"exceptionContext.setContextValue(label, value);"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,195,return this;
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,184, Retrieves the labels defined in the contextual data.
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,199,* Set information helpful to a developer in diagnosing and correcting
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,200,"* the problem.  For the information to be meaningful, the value passed"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,201,* should have a reasonable toString() implementation.  Existing values
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,202,* with the same labels are removed before the new one is added.
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,203,* <p>
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,204,* Note: This exception is only serializable if the object added as value is serializable.
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,205,* </p>
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,186," @return the set of labels, never null"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,207,* @param pair a pair of textual label and information
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,208,* @throws NullPointerException if {@code pair} is {@code null}
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,209,"* @return this, for method chaining"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,211,"public ContextedRuntimeException setContextValue(Pair<String, Object> pair) {"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,212,this.exceptionContext.setContextValue(pair);
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,213,return this;
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,217,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,219,public List<Object> getContextValues(String label) {
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,220,return this.exceptionContext.getContextValues(label);
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,224,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,226,public Object getFirstContextValue(String label) {
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,227,return this.exceptionContext.getFirstContextValue(label);
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,231,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,233,"public List<Pair<String, Object>> getContextEntries() {"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,234,return this.exceptionContext.getContextEntries();
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,238,* {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,188,ublic Set<String> getLabelSet() {
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,189,eturn exceptionContext.getLabelSet();
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,240,public Set<String> getContextLabels() {
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,241,return exceptionContext.getContextLabels();
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,20,mport java.util.LinkedHashMap;
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,21,mport java.util.Map;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,20,import java.util.ArrayList;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,21,import java.util.HashSet;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,22,import java.util.Iterator;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,23,import java.util.List;
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,24,mport org.apache.commons.lang3.SystemUtils;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,26,import org.apache.commons.lang3.StringUtils;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,27,import org.apache.commons.lang3.tuple.ImmutablePair;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,28,import org.apache.commons.lang3.tuple.Pair;
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,34,"lass DefaultExceptionContext implements ExceptionContext, Serializable {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,38,"public class DefaultExceptionContext implements ExceptionContext, Serializable {"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,37,rivate static final long serialVersionUID = 293747957535772807L;
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,38,** The ordered map storing the label-data pairs. */
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,39,"rivate Map<String, Object> contextValueMap = new LinkedHashMap<String, Object>();"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,41,private static final long serialVersionUID = 20110706L;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,42,/** The list storing the label-data pairs. */
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,43,"private List<Pair<String, Object>> contextValues = new ArrayList<Pair<String,Object>>();"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,42, Adds a contextual label-value pair into this context.
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,43, <p>
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,44, This label-value pair provides information useful for debugging. If the
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,45," label already exists and the provided information is different, the"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,46, label will be added with an appended index.
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,47, </p>
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,49," @param label  the label of the item to add, null not recommended"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,50," @param value  the value of item to add, may be null"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,51," @return this, for method chaining"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,46,* {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,53,"ublic ExceptionContext addValue(String label, Object value) {"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,54,tring key = label;
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,55,nt i = 0;
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,56,hile (contextValueMap.containsKey(key)) {
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,57,bject information = contextValueMap.get(key);
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,58,f ((value == null && information == null)
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,59,| (value != null && value.equals(information))) {
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,60,eturn this;
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,62,"ey = label + ""["" + ++i +""]"";"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,48,"public DefaultExceptionContext addContextValue(String label, Object value) {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,49,"return addContextValue(new ImmutablePair<String, Object>(label, value));"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,53,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,55,"public DefaultExceptionContext addContextValue(Pair<String, Object> pair) {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,56,if (pair == null) {
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,57,throw new NullPointerException();
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,64,"ontextValueMap.put(key, value);"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,59,contextValues.add(pair);
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,69, Replaces a contextual label-value pair of this context.
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,70, <p>
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,71, This label-value pair provides information useful for debugging. If the
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,72," label does not yet exists, a simply add operation is performed."
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,73, </p>
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,75," @param label  the label of the item to add, null not recommended"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,76," @param value  the value of item to add, may be null"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,77," @return this, for method chaining"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,64,* {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,79,"ublic ExceptionContext replaceValue(String label, Object value) {"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,80,"ontextValueMap.put(label, value);"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,81,eturn this;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,66,"public DefaultExceptionContext setContextValue(String label, Object value) {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,67,"return setContextValue(new ImmutablePair<String, Object>(label, value));"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,85, Retrieves a contextual data value associated with the label.
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,87," @param label  the label to get the contextual value for, may be null"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,88," @return the contextual value associated with the label, may be null"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,71,* {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,90,ublic Object getValue(String label) {
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,91,eturn contextValueMap.get(label);
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,73,"public DefaultExceptionContext setContextValue(Pair<String, Object> pair) {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,74,final String label = pair.getKey(); // implicit NPE
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,75,"for (final Iterator<Pair<String, Object>> iter = contextValues.iterator(); iter.hasNext();) {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,76,"final Pair<String, Object> p = iter.next();"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,77,"if (StringUtils.equals(label, p.getKey())) {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,78,iter.remove();
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,81,return addContextValue(pair);
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,95, Retrieves the labels defined in the contextual data.
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,97," @return the set of labels, never null"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,85,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,87,public List<Object> getContextValues(String label) {
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,88,final List<Object> values = new ArrayList<Object>();
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,89,"for (final Pair<String, Object> pair : contextValues) {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,90,"if (StringUtils.equals(label, pair.getKey())) {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,91,values.add(pair.getValue());
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,94,return values;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,98,* {@inheritDoc}
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,99,ublic Set<String> getLabelSet() {
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,100,eturn contextValueMap.keySet();
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,100,public Object getFirstContextValue(String label) {
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,101,"for (final Pair<String, Object> pair : contextValues) {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,102,"if (StringUtils.equals(label, pair.getKey())) {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,103,return pair.getValue();
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,106,return null;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,110,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,112,public Set<String> getContextLabels() {
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,113,final Set<String> labels = new HashSet<String>();
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,114,"for (final Pair<String, Object> pair : contextValues) {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,115,labels.add(pair.getKey());
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,117,return labels;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,121,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,123,"public List<Pair<String, Object>> getContextEntries() {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,124,return contextValues;
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,115,f (contextValueMap.size() > 0) {
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,116,f (buffer.length() > 0l) {
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,117,uffer.append(SystemUtils.LINE_SEPARATOR);
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,139,if (contextValues.size() > 0) {
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,140,if (buffer.length() > 0) {
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,141,buffer.append('\n');
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,119,"uffer.append(""Exception Context:"");"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,120,uffer.append(SystemUtils.LINE_SEPARATOR);
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,121,"uffer.append(""\t"");"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,143,"buffer.append(""Exception Context:\n"");"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,125,or (String label : contextValueMap.keySet()) {
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,126,"uffer.append(""["");"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,127,uffer.append(label);
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,147,"for (final Pair<String, Object> pair : contextValues) {"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,148,"buffer.append(""\t["");"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,149,buffer.append(pair.getKey());
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,129,alue = this.contextValueMap.get(label);
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,151,value = pair.getValue();
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,140,"uffer.append(""]"");"
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,141,uffer.append(SystemUtils.LINE_SEPARATOR);
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,142,"uffer.append(""\t"");"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,162,"buffer.append(""]\n"");"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,19,import java.util.List;
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,22,import org.apache.commons.lang3.tuple.Pair;
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,27,* <p>
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,28,* Implementations are expected to manage the pairs in a list-style collection
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,29,* that keeps the pairs in the sequence of their addition.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,30,* </p>
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,34, This label-value pair provides information useful for debugging. If the
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,35," provided label already exists, it depends on the implementation what"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,36, happens with the new value.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,41,"* The pair will be added to the context, independently of an already"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,42,* existing pair with the same label.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,43,* </p>
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,45,"* @param label  the label of the item to add, {@code null} not recommended"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,46,"* @param value  the value of item to add, may be {@code null}"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,47,* @return context itself to allow method chaining
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,49,"public ExceptionContext addContextValue(String label, Object value);"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,52,* Adds a contextual label-value pair into this context.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,53,* <p>
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,54,"* The pair will be added to the context, independently of an already"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,55,* existing pair with the same label.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,56,* </p>
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,58,* @param pair  the label-value pair to add
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,59,* @return context itself to allow method chaining
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,60,* @throws NullPointerException if pair is {@code null}
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,62,"public ExceptionContext addContextValue(Pair<String, Object> pair);"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,65,* Sets a contextual label-value pair of this context.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,66,* <p>
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,67,"* The pair will be added normally, but any existing label-value pair with"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,68,* the same label is removed from the context.
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,39," @param label  the label of the item to add, null not recommended"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,40," @param value  the value of item to add, may be null"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,71,"* @param label  the label of the item to add, {@code null} not recommended"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,72,"* @param value  the value of item to add, may be {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,43,"ublic ExceptionContext addValue(String label, Object value);"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,75,"public ExceptionContext setContextValue(String label, Object value);"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,46, Replaces a contextual label-value pair of this context.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,78,* Sets a contextual label-value pair of this context.
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,48, This label-value pair provides information useful for debugging. If the
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,49," label does not exist yet, it depends on the implementation what happens"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,50, with the provided value.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,80,"* The pair will be added normally, but any existing label-value pair with"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,81,* the same label is removed from the context.
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,53," @param label  the label of the item to add, null not recommended"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,54," @param value  the value of item to add, may be null"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,84,* @param pair  the label-value pair to add
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,86,* @throws NullPointerException if pair is {@code null}
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,88,"public ExceptionContext setContextValue(Pair<String, Object> pair);"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,91,* Retrieves contextual data values associated with the label.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,93,"* @param label  the label to get the contextual values for, may be {@code null}"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,94,"* @return the contextual values associated with the label, never {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,57,"ublic ExceptionContext replaceValue(String label, Object value);"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,96,public List<Object> getContextValues(String label);
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,60, Retrieves a contextual data value associated with the label.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,99,* Retrieves the first available contextual data value associated with the label.
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,62," @param label  the label to get the contextual value for, may be null"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,63," @return the contextual value associated with the label, may be null"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,101,"* @param label  the label to get the contextual value for, may be {@code null}"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,102,"* @return the first contextual value associated with the label, may be {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,65,ublic Object getValue(String label);
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,104,public Object getFirstContextValue(String label);
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,70," @return the set of labels, never null"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,109,"* @return the set of labels, never {@code null}"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,111,public Set<String> getContextLabels();
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,114,* Retrieves the label-value pairs defined in the contextual data.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,116,"* @return the list of pairs, never {@code null}"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,72,ublic Set<String> getLabelSet();
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,118,"public List<Pair<String, Object>> getContextEntries();"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,79," @return the exception message <b>with</b> context information appended, never null"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,125,"* @return the exception message <b>with</b> context information appended, never {@code null}"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,17,package org.apache.commons.lang3.exception;
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,19,import java.io.Serializable;
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,20,import java.util.Arrays;
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,21,import java.util.Collections;
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,22,import java.util.Date;
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,23,import java.util.List;
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,24,import java.util.Set;
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,26,import org.apache.commons.lang3.tuple.Pair;
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,28,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,32,* Abstract test of an ExceptionContext implementation.
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,34,public abstract class AbstractExceptionContextTest<T extends ExceptionContext> extends TestCase {
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,36,"protected static final String TEST_MESSAGE_2 = ""This is monotonous"";"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,37,"protected static final String TEST_MESSAGE = ""Test Message"";"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,38,protected T exceptionContext;
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,40,protected static class ObjectWithFaultyToString implements Serializable {
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,42,private static final long serialVersionUID = 3495843995332310458L;
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,44,@Override
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,45,public String toString() {
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,46,"throw new RuntimeException(""Crap"");"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,50,@Override
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,51,protected void setUp() throws Exception {
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,52,exceptionContext
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,53,".addContextValue(""test1"", null)"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,54,".addContextValue(""test2"", ""some value"")"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,55,".addContextValue(""test Date"", new Date())"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,56,".addContextValue(""test Nbr"", new Integer(5))"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,57,".addContextValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,60,public void testAddContextValue() {
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,61,String message = exceptionContext.getFormattedExceptionMessage(TEST_MESSAGE);
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,62,assertTrue(message.indexOf(TEST_MESSAGE) >= 0);
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,63,"assertTrue(message.indexOf(""test1"") >= 0);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,64,"assertTrue(message.indexOf(""test2"") >= 0);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,65,"assertTrue(message.indexOf(""test Date"") >= 0);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,66,"assertTrue(message.indexOf(""test Nbr"") >= 0);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,67,"assertTrue(message.indexOf(""some value"") >= 0);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,68,"assertTrue(message.indexOf(""5"") >= 0);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,70,"assertTrue(exceptionContext.getFirstContextValue(""test1"") == null);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,71,"assertTrue(exceptionContext.getFirstContextValue(""test2"").equals(""some value""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,73,"assertEquals(5, exceptionContext.getContextLabels().size());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,74,"assertTrue(exceptionContext.getContextLabels().contains(""test1""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,75,"assertTrue(exceptionContext.getContextLabels().contains(""test2""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,76,"assertTrue(exceptionContext.getContextLabels().contains(""test Date""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,77,"assertTrue(exceptionContext.getContextLabels().contains(""test Nbr""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,79,"exceptionContext.addContextValue(""test2"", ""different value"");"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,80,"assertEquals(5, exceptionContext.getContextLabels().size());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,81,"assertTrue(exceptionContext.getContextLabels().contains(""test2""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,83,String contextMessage = exceptionContext.getFormattedExceptionMessage(null);
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,84,assertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,87,public void testSetContextValue() {
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,88,"exceptionContext.addContextValue(""test2"", ""different value"");"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,89,"exceptionContext.setContextValue(""test3"", ""3"");"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,91,String message = exceptionContext.getFormattedExceptionMessage(TEST_MESSAGE);
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,92,assertTrue(message.indexOf(TEST_MESSAGE) >= 0);
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,93,"assertTrue(message.indexOf(""test Poorly written obj"") >= 0);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,94,"assertTrue(message.indexOf(""Crap"") >= 0);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,96,"assertTrue(exceptionContext.getFirstContextValue(""crap"") == null);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,97,"assertTrue(exceptionContext.getFirstContextValue(""test Poorly written obj"") instanceof ObjectWithFaultyToString);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,99,"assertEquals(7, exceptionContext.getContextEntries().size());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,100,"assertEquals(6, exceptionContext.getContextLabels().size());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,102,"assertTrue(exceptionContext.getContextLabels().contains(""test Poorly written obj""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,103,"assertTrue(!exceptionContext.getContextLabels().contains(""crap""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,105,"exceptionContext.setContextValue(""test Poorly written obj"", ""replacement"");"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,107,"assertEquals(7, exceptionContext.getContextEntries().size());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,108,"assertEquals(6, exceptionContext.getContextLabels().size());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,110,"exceptionContext.setContextValue(""test2"", ""another"");"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,112,"assertEquals(6, exceptionContext.getContextEntries().size());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,113,"assertEquals(6, exceptionContext.getContextLabels().size());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,115,String contextMessage = exceptionContext.getFormattedExceptionMessage(null);
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,116,assertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,119,public void testGetFirstContextValue() {
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,120,"exceptionContext.addContextValue(""test2"", ""different value"");"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,122,"assertTrue(exceptionContext.getFirstContextValue(""test1"") == null);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,123,"assertTrue(exceptionContext.getFirstContextValue(""test2"").equals(""some value""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,124,"assertTrue(exceptionContext.getFirstContextValue(""crap"") == null);"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,126,"exceptionContext.setContextValue(""test2"", ""another"");"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,128,"assertTrue(exceptionContext.getFirstContextValue(""test2"").equals(""another""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,131,public void testGetContextValues() {
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,132,"exceptionContext.addContextValue(""test2"", ""different value"");"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,134,"assertEquals(exceptionContext.getContextValues(""test1""), Collections.singletonList(null));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,135,"assertEquals(exceptionContext.getContextValues(""test2""), Arrays.asList(""some value"", ""different value""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,137,"exceptionContext.setContextValue(""test2"", ""another"");"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,139,"assertTrue(exceptionContext.getFirstContextValue(""test2"").equals(""another""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,142,public void testGetContextLabels() {
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,143,"assertEquals(5, exceptionContext.getContextEntries().size());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,145,"exceptionContext.addContextValue(""test2"", ""different value"");"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,147,Set<String> labels = exceptionContext.getContextLabels();
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,148,"assertEquals(6, exceptionContext.getContextEntries().size());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,149,"assertEquals(5, labels.size());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,150,"assertTrue(labels.contains(""test1""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,151,"assertTrue(labels.contains(""test2""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,152,"assertTrue(labels.contains(""test Date""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,153,"assertTrue(labels.contains(""test Nbr""));"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,156,public void testGetContextEntries() {
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,157,"assertEquals(5, exceptionContext.getContextEntries().size());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,159,"exceptionContext.addContextValue(""test2"", ""different value"");"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,161,"List<Pair<String, Object>> entries = exceptionContext.getContextEntries();"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,162,"assertEquals(6, entries.size());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,163,"assertEquals(""test1"", entries.get(0).getKey());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,164,"assertEquals(""test2"", entries.get(1).getKey());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,165,"assertEquals(""test Date"", entries.get(2).getKey());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,166,"assertEquals(""test Nbr"", entries.get(3).getKey());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,167,"assertEquals(""test Poorly written obj"", entries.get(4).getKey());"
True,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java,168,"assertEquals(""test2"", entries.get(5).getKey());"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,19,mport java.io.Serializable;
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,22,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,29,ublic class ContextedExceptionTest extends TestCase {
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,26,public class ContextedExceptionTest extends AbstractExceptionContextTest<ContextedException> {
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,31,"rivate static final String TEST_MESSAGE_2 = ""This is monotonous"";"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,32,"rivate static final String TEST_MESSAGE = ""Test Message"";"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,33,rivate ContextedException contextedException;
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,28,@Override
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,29,public void setUp() throws Exception {
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,30,exceptionContext = new ContextedException(new Exception(TEST_MESSAGE));
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,31,super.setUp();
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,36,ontextedException = new ContextedException();
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,37,tring message = contextedException.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,38,tring trace = ExceptionUtils.getStackTrace(contextedException);
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,35,exceptionContext = new ContextedException();
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,36,String message = exceptionContext.getMessage();
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,37,String trace = ExceptionUtils.getStackTrace(exceptionContext);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,44,ontextedException = new ContextedException(TEST_MESSAGE);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,45,"ssertEquals(TEST_MESSAGE, contextedException.getMessage());"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,43,exceptionContext = new ContextedException(TEST_MESSAGE);
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,44,"assertEquals(TEST_MESSAGE, exceptionContext.getMessage());"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,47,tring trace = ExceptionUtils.getStackTrace(contextedException);
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,46,String trace = ExceptionUtils.getStackTrace(exceptionContext);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,52,ontextedException = new ContextedException(new Exception(TEST_MESSAGE));
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,53,tring message = contextedException.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,54,tring trace = ExceptionUtils.getStackTrace(contextedException);
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,51,exceptionContext = new ContextedException(new Exception(TEST_MESSAGE));
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,52,String message = exceptionContext.getMessage();
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,53,String trace = ExceptionUtils.getStackTrace(exceptionContext);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,61,"ontextedException = new ContextedException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,62,tring message = contextedException.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,63,tring trace = ExceptionUtils.getStackTrace(contextedException);
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,60,"exceptionContext = new ContextedException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE));"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,61,String message = exceptionContext.getMessage();
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,62,String trace = ExceptionUtils.getStackTrace(exceptionContext);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,71,"ontextedException = new ContextedException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), new DefaultExceptionContext());"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,72,tring message = contextedException.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,73,tring trace = ExceptionUtils.getStackTrace(contextedException);
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,70,"exceptionContext = new ContextedException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), new DefaultExceptionContext());"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,71,String message = exceptionContext.getMessage();
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,72,String trace = ExceptionUtils.getStackTrace(exceptionContext);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,80,ublic void testAddValue() {
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,81,ontextedException = new ContextedException(new Exception(TEST_MESSAGE))
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,82,"addValue(""test1"", null)"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,83,"addValue(""test2"", ""some value"")"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,84,"addValue(""test Date"", new Date())"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,85,"addValue(""test Nbr"", new Integer(5));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,87,tring message = contextedException.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,88,ssertTrue(message.indexOf(TEST_MESSAGE)>=0);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,89,"ssertTrue(message.indexOf(""test1"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,90,"ssertTrue(message.indexOf(""test2"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,91,"ssertTrue(message.indexOf(""test Date"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,92,"ssertTrue(message.indexOf(""test Nbr"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,93,"ssertTrue(message.indexOf(""some value"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,94,"ssertTrue(message.indexOf(""5"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,96,"ssertTrue(contextedException.getValue(""test1"") == null);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,97,"ssertTrue(contextedException.getValue(""test2"").equals(""some value""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,99,ssertTrue(contextedException.getLabelSet().size() == 4);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,100,"ssertTrue(contextedException.getLabelSet().contains(""test1""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,101,"ssertTrue(contextedException.getLabelSet().contains(""test2""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,102,"ssertTrue(contextedException.getLabelSet().contains(""test Date""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,103,"ssertTrue(contextedException.getLabelSet().contains(""test Nbr""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,105,"ontextedException.addValue(""test2"", ""different value"");"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,106,ssertTrue(contextedException.getLabelSet().size() == 5);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,107,"ssertTrue(contextedException.getLabelSet().contains(""test2""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,108,"ssertTrue(contextedException.getLabelSet().contains(""test2[1]""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,110,tring contextMessage = contextedException.getFormattedExceptionMessage(null);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,111,ssertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,112,ssertTrue(contextedException.getMessage().endsWith(contextMessage));
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,115,ublic void testReplaceValue() {
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,116,ontextedException = new ContextedException(new Exception(TEST_MESSAGE))
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,117,"addValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,119,tring message = contextedException.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,120,ssertTrue(message.indexOf(TEST_MESSAGE)>=0);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,121,"ssertTrue(message.indexOf(""test Poorly written obj"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,122,"ssertTrue(message.indexOf(""Crap"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,124,"ssertTrue(contextedException.getValue(""crap"") == null);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,125,"ssertTrue(contextedException.getValue(""test Poorly written obj"") instanceof ObjectWithFaultyToString);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,127,ssertTrue(contextedException.getLabelSet().size() == 1);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,128,"ssertTrue(contextedException.getLabelSet().contains(""test Poorly written obj""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,130,"ssertTrue(!contextedException.getLabelSet().contains(""crap""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,132,"ontextedException.replaceValue(""test Poorly written obj"", ""replacement"");"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,134,ssertTrue(contextedException.getLabelSet().size() == 1);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,136,tring contextMessage = contextedException.getFormattedExceptionMessage(null);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,137,ssertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,138,ssertTrue(contextedException.getMessage().endsWith(contextMessage));
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,142,"ontextedException = new ContextedException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), null)"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,143,"addValue(""test1"", null)"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,144,"addValue(""test2"", ""some value"")"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,145,"addValue(""test Date"", new Date())"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,146,"addValue(""test Nbr"", new Integer(5))"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,147,"addValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,80,"exceptionContext = new ContextedException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), null)"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,81,".addContextValue(""test1"", null)"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,82,".addContextValue(""test2"", ""some value"")"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,83,".addContextValue(""test Date"", new Date())"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,84,".addContextValue(""test Nbr"", new Integer(5))"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,85,".addContextValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,149,tring message = contextedException.getMessage();
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,87,String message = exceptionContext.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,153,tatic class ObjectWithFaultyToString implements Serializable {
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,155,rivate static final long serialVersionUID = 3495843995332310458L;
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,157,Override
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,158,ublic String toString() {
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,159,"hrow new RuntimeException(""Crap"");"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,21,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,24,mport org.apache.commons.lang3.exception.ContextedExceptionTest.ObjectWithFaultyToString;
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,30,ublic class ContextedRuntimeExceptionTest extends TestCase {
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,27,public class ContextedRuntimeExceptionTest extends AbstractExceptionContextTest<ContextedRuntimeException> {
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,32,"rivate static final String TEST_MESSAGE_2 = ""This is monotonous"";"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,33,"rivate static final String TEST_MESSAGE = ""Test Message"";"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,34,rivate ContextedRuntimeException contextedRuntimeException;
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,29,@Override
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,30,protected void setUp() throws Exception {
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,31,exceptionContext = new ContextedRuntimeException(new Exception(TEST_MESSAGE));
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,32,super.setUp();
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,37,ontextedRuntimeException = new ContextedRuntimeException();
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,38,tring message = contextedRuntimeException.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,39,tring trace = ExceptionUtils.getStackTrace(contextedRuntimeException);
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,36,exceptionContext = new ContextedRuntimeException();
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,37,String message = exceptionContext.getMessage();
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,38,String trace = ExceptionUtils.getStackTrace(exceptionContext);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,45,ontextedRuntimeException = new ContextedRuntimeException(TEST_MESSAGE);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,46,"ssertEquals(TEST_MESSAGE, contextedRuntimeException.getMessage());"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,44,exceptionContext = new ContextedRuntimeException(TEST_MESSAGE);
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,45,"assertEquals(TEST_MESSAGE, exceptionContext.getMessage());"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,48,tring trace = ExceptionUtils.getStackTrace(contextedRuntimeException);
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,47,String trace = ExceptionUtils.getStackTrace(exceptionContext);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,53,ontextedRuntimeException = new ContextedRuntimeException(new Exception(TEST_MESSAGE));
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,54,tring message = contextedRuntimeException.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,55,tring trace = ExceptionUtils.getStackTrace(contextedRuntimeException);
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,52,exceptionContext = new ContextedRuntimeException(new Exception(TEST_MESSAGE));
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,53,String message = exceptionContext.getMessage();
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,54,String trace = ExceptionUtils.getStackTrace(exceptionContext);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,62,"ontextedRuntimeException = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,63,tring message = contextedRuntimeException.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,64,tring trace = ExceptionUtils.getStackTrace(contextedRuntimeException);
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,61,"exceptionContext = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE));"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,62,String message = exceptionContext.getMessage();
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,63,String trace = ExceptionUtils.getStackTrace(exceptionContext);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,72,"ontextedRuntimeException = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), new DefaultExceptionContext());"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,73,tring message = contextedRuntimeException.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,74,tring trace = ExceptionUtils.getStackTrace(contextedRuntimeException);
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,71,"exceptionContext = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), new DefaultExceptionContext() {});"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,72,String message = exceptionContext.getMessage();
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,73,String trace = ExceptionUtils.getStackTrace(exceptionContext);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,81,ublic void testAddValue() {
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,82,ontextedRuntimeException = new ContextedRuntimeException(new Exception(TEST_MESSAGE))
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,83,"addValue(""test1"", null)"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,84,"addValue(""test2"", ""some value"")"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,85,"addValue(""test Date"", new Date())"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,86,"addValue(""test Nbr"", new Integer(5));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,88,tring message = contextedRuntimeException.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,89,ssertTrue(message.indexOf(TEST_MESSAGE)>=0);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,90,"ssertTrue(message.indexOf(""test1"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,91,"ssertTrue(message.indexOf(""test2"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,92,"ssertTrue(message.indexOf(""test Date"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,93,"ssertTrue(message.indexOf(""test Nbr"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,94,"ssertTrue(message.indexOf(""some value"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,95,"ssertTrue(message.indexOf(""5"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,97,"ssertTrue(contextedRuntimeException.getValue(""test1"") == null);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,98,"ssertTrue(contextedRuntimeException.getValue(""test2"").equals(""some value""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,100,ssertTrue(contextedRuntimeException.getLabelSet().size() == 4);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,101,"ssertTrue(contextedRuntimeException.getLabelSet().contains(""test1""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,102,"ssertTrue(contextedRuntimeException.getLabelSet().contains(""test2""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,103,"ssertTrue(contextedRuntimeException.getLabelSet().contains(""test Date""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,104,"ssertTrue(contextedRuntimeException.getLabelSet().contains(""test Nbr""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,106,"ontextedRuntimeException.addValue(""test2"", ""different value"");"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,107,ssertTrue(contextedRuntimeException.getLabelSet().size() == 5);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,108,"ssertTrue(contextedRuntimeException.getLabelSet().contains(""test2""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,109,"ssertTrue(contextedRuntimeException.getLabelSet().contains(""test2[1]""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,111,tring contextMessage = contextedRuntimeException.getFormattedExceptionMessage(null);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,112,ssertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,113,ssertTrue(contextedRuntimeException.getMessage().endsWith(contextMessage));
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,116,ublic void testReplaceValue() {
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,117,ontextedRuntimeException = new ContextedRuntimeException(new Exception(TEST_MESSAGE))
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,118,"addValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,120,tring message = contextedRuntimeException.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,121,ssertTrue(message.indexOf(TEST_MESSAGE)>=0);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,122,"ssertTrue(message.indexOf(""test Poorly written obj"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,123,"ssertTrue(message.indexOf(""Crap"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,125,"ssertTrue(contextedRuntimeException.getValue(""crap"") == null);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,126,"ssertTrue(contextedRuntimeException.getValue(""test Poorly written obj"") instanceof ObjectWithFaultyToString);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,128,ssertTrue(contextedRuntimeException.getLabelSet().size() == 1);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,129,"ssertTrue(contextedRuntimeException.getLabelSet().contains(""test Poorly written obj""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,131,"ssertTrue(!contextedRuntimeException.getLabelSet().contains(""crap""));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,133,"ontextedRuntimeException.replaceValue(""test Poorly written obj"", ""replacement"");"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,135,ssertTrue(contextedRuntimeException.getLabelSet().size() == 1);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,137,tring contextMessage = contextedRuntimeException.getFormattedExceptionMessage(null);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,138,ssertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,139,ssertTrue(contextedRuntimeException.getMessage().endsWith(contextMessage));
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,143,"ontextedRuntimeException = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), null)"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,144,"addValue(""test1"", null)"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,145,"addValue(""test2"", ""some value"")"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,146,"addValue(""test Date"", new Date())"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,147,"addValue(""test Nbr"", new Integer(5))"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,148,"addValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,81,"exceptionContext = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), null)"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,82,".addContextValue(""test1"", null)"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,83,".addContextValue(""test2"", ""some value"")"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,84,".addContextValue(""test Date"", new Date())"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,85,".addContextValue(""test Nbr"", new Integer(5))"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,86,".addContextValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,150,tring message = contextedRuntimeException.getMessage();
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,88,String message = exceptionContext.getMessage();
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,19,mport java.util.Date;
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,21,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,23,mport org.apache.commons.lang3.exception.ContextedExceptionTest.ObjectWithFaultyToString;
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,29,ublic class DefaultExceptionContextTest extends TestCase {
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,31,rivate ExceptionContext defaultExceptionContext;
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,33,ublic DefaultExceptionContextTest(String name) {
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,34,uper(name);
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,23,public class DefaultExceptionContextTest extends AbstractExceptionContextTest<DefaultExceptionContext> {
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,38,ublic void setUp() {
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,39,efaultExceptionContext = new DefaultExceptionContext()
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,40,"addValue(""test1"", null)"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,41,"addValue(""test2"", ""some value"")"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,42,"addValue(""test Date"", new Date())"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,43,"addValue(""test Nbr"", new Integer(5))"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,44,"addValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,47,ublic void testAddValue() {
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,48,"efaultExceptionContext.addValue(""test2"", ""different value"");"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,50,"tring message = defaultExceptionContext.getFormattedExceptionMessage(""This is an error"");"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,51,"ssertTrue(message.indexOf(""This is an error"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,52,"ssertTrue(message.indexOf(""test1"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,53,"ssertTrue(message.indexOf(""test2"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,54,"ssertTrue(message.indexOf(""test2[1]"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,55,"ssertTrue(message.indexOf(""test Date"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,56,"ssertTrue(message.indexOf(""test Nbr"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,57,"ssertTrue(message.indexOf(""test Poorly written obj"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,58,"ssertTrue(message.indexOf(""some value"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,59,"ssertTrue(message.indexOf(""different value"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,60,"ssertTrue(message.indexOf(""5"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,61,"ssertTrue(message.indexOf(""Crap"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,26,public void setUp() throws Exception {
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,27,exceptionContext = new DefaultExceptionContext();
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,28,super.setUp();
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,64,ublic void testReplaceValue() {
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,65,"efaultExceptionContext.replaceValue(""test2"", ""different value"");"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,66,"efaultExceptionContext.replaceValue(""test3"", ""3"");"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,68,"tring message = defaultExceptionContext.getFormattedExceptionMessage(""This is an error"");"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,69,"ssertTrue(message.indexOf(""This is an error"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,70,"ssertTrue(message.indexOf(""test1"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,71,"ssertTrue(message.indexOf(""test2"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,72,"ssertTrue(message.indexOf(""test3"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,73,"ssertTrue(message.indexOf(""test Date"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,74,"ssertTrue(message.indexOf(""test Nbr"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,75,"ssertTrue(message.indexOf(""test Poorly written obj"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,76,"ssertTrue(message.indexOf(""different value"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,77,"ssertTrue(message.indexOf(""5"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,78,"ssertTrue(message.indexOf(""Crap"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,80,"ssertTrue(message.indexOf(""test2[1]"")<0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,81,"ssertTrue(message.indexOf(""some value"")<0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,85,efaultExceptionContext = new DefaultExceptionContext();
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,86,efaultExceptionContext.getFormattedExceptionMessage(null);
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,89,ublic void testGetValue() {
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,90,"ssertTrue(defaultExceptionContext.getValue(""test1"") == null);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,91,"ssertTrue(defaultExceptionContext.getValue(""test2"").equals(""some value""));"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,92,"ssertTrue(defaultExceptionContext.getValue(""crap"") == null);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,93,"ssertTrue(defaultExceptionContext.getValue(""test Poorly written obj"") instanceof ObjectWithFaultyToString);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,96,ublic void testGetLabelSet() {
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,97,ssertTrue(defaultExceptionContext.getLabelSet().size() == 5);
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,98,"ssertTrue(defaultExceptionContext.getLabelSet().contains(""test1""));"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,99,"ssertTrue(defaultExceptionContext.getLabelSet().contains(""test2""));"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,100,"ssertTrue(defaultExceptionContext.getLabelSet().contains(""test Date""));"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,101,"ssertTrue(defaultExceptionContext.getLabelSet().contains(""test Nbr""));"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,102,"ssertTrue(defaultExceptionContext.getLabelSet().contains(""test Poorly written obj""));"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,104,"ssertTrue(!defaultExceptionContext.getLabelSet().contains(""crap""));"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,32,exceptionContext = new DefaultExceptionContext();
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,33,exceptionContext.getFormattedExceptionMessage(null);
