is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,59,ublic static final Class[] EMPTY_CLASS_ARRAY = new Class[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,59,public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,236,ublic static Map toMap(Object[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,236,"public static Map<Object, Object> toMap(Object[] array) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,240,inal Map map = new HashMap((int) (array.length * 1.5));
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,240,"final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,452,lass type = array.getClass().getComponentType();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,452,Class<?> type = array.getClass().getComponentType();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3232,lass type = array != null ? array.getClass() : (element != null ? element.getClass() : Object.class);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3232,Class<?> type = array != null ? array.getClass() : (element != null ? element.getClass() : Object.class);
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3463,"rivate static Object copyArrayGrow1(Object array, Class newArrayComponentType) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3463,"private static Object copyArrayGrow1(Object array, Class<?> newArrayComponentType) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3502,lass clss = null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3502,Class<?> clss = null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3773,"rivate static Object add(Object array, int index, Object element, Class clss) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3773,"private static Object add(Object array, int index, Object element, Class<?> clss) {"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,72,rivate static final Map primitiveWrapperMap = new HashMap();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,72,"private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,88,rivate static final Map wrapperPrimitiveMap = new HashMap();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,88,"private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,90,or (Iterator it = primitiveWrapperMap.keySet().iterator(); it.hasNext();) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,91,lass primitiveClass = (Class) it.next();
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,92,lass wrapperClass = (Class) primitiveWrapperMap.get(primitiveClass);
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,90,for (Iterator<Class<?>> it = primitiveWrapperMap.keySet().iterator(); it.hasNext();) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,91,Class<?> primitiveClass = it.next();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,92,Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,102,rivate static final Map abbreviationMap = new HashMap();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,102,"private static final Map<String, String> abbreviationMap = new HashMap<String, String>();"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,107,rivate static final Map reverseAbbreviationMap = new HashMap();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,107,"private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,168,ublic static String getShortClassName(Class cls) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,168,public static String getShortClassName(Class<?> cls) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,223,ublic static String getPackageName(Class cls) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,223,public static String getPackageName(Class<?> cls) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,285,ublic static List getAllInterfaces(Class cls) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,285,public static List<Class<?>> getAllInterfaces(Class<?> cls) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,289,ist list = new ArrayList();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,289,List<Class<?>> list = new ArrayList<Class<?>>();
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,291,lass[] interfaces = cls.getInterfaces();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,291,Class<?>[] interfaces = cls.getInterfaces();
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,296,ist superInterfaces = getAllInterfaces(interfaces[i]);
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,297,or (Iterator it = superInterfaces.iterator(); it.hasNext();) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,298,lass intface = (Class) it.next();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,296,List<Class<?>> superInterfaces = getAllInterfaces(interfaces[i]);
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,297,for (Iterator<Class<?>> it = superInterfaces.iterator(); it.hasNext();) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,298,Class<?> intface = it.next();
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,323,ublic static List convertClassNamesToClasses(List classNames) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,323,public static List<Class<?>> convertClassNamesToClasses(List<String> classNames) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,327,ist classes = new ArrayList(classNames.size());
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,328,or (Iterator it = classNames.iterator(); it.hasNext();) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,329,tring className = (String) it.next();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,327,List<Class<?>> classes = new ArrayList<Class<?>>(classNames.size());
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,328,for (Iterator<String> it = classNames.iterator(); it.hasNext();) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,329,String className = it.next();
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,351,ublic static List convertClassesToClassNames(List classes) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,351,public static List<String> convertClassesToClassNames(List<Class<?>> classes) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,355,ist classNames = new ArrayList(classes.size());
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,356,or (Iterator it = classes.iterator(); it.hasNext();) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,357,lass cls = (Class) it.next();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,355,List<String> classNames = new ArrayList<String>(classes.size());
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,356,for (Iterator<Class<?>> it = classes.iterator(); it.hasNext();) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,357,Class<?> cls = it.next();
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,401,"ublic static boolean isAssignable(Class[] classArray, Class[] toClassArray) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,401,"public static boolean isAssignable(Class<?>[] classArray, Class<?>[] toClassArray) {"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,437,"ublic static boolean isAssignable(Class[] classArray, Class[] toClassArray, boolean autoboxing) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,437,"public static boolean isAssignable(Class<?>[] classArray, Class<?>[] toClassArray, boolean autoboxing) {"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,482,"ublic static boolean isAssignable(Class cls, Class toClass) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,482,"public static boolean isAssignable(Class<?> cls, Class<?> toClass) {"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,513,"ublic static boolean isAssignable(Class cls, Class toClass, boolean autoboxing) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,513,"public static boolean isAssignable(Class<?> cls, Class<?> toClass, boolean autoboxing) {"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,598,ublic static Class primitiveToWrapper(Class cls) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,599,lass convertedClass = cls;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,598,public static Class<?> primitiveToWrapper(Class<?> cls) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,599,Class<?> convertedClass = cls;
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,601,onvertedClass = (Class) primitiveWrapperMap.get(cls);
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,601,convertedClass = primitiveWrapperMap.get(cls);
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,616,ublic static Class[] primitivesToWrappers(Class[] classes) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,616,public static Class<?>[] primitivesToWrappers(Class<?>[] classes) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,625,lass[] convertedClasses = new Class[classes.length];
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,625,Class<?>[] convertedClasses = new Class[classes.length];
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,648,ublic static Class wrapperToPrimitive(Class cls) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,649,eturn (Class) wrapperPrimitiveMap.get(cls);
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,648,public static Class<?> wrapperToPrimitive(Class<?> cls) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,649,return wrapperPrimitiveMap.get(cls);
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,666,ublic static Class[] wrappersToPrimitives(Class[] classes) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,666,public static Class<?>[] wrappersToPrimitives(Class<?>[] classes) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,675,lass[] convertedClasses = new Class[classes.length];
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,675,Class<?>[] convertedClasses = new Class[classes.length];
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,691,ublic static boolean isInnerClass(Class cls) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,691,public static boolean isInnerClass(Class<?> cls) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,711,ublic static Class getClass(
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,711,public static Class<?> getClass(
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,713,lass clazz;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,713,Class<?> clazz;
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,734,"ublic static Class getClass(ClassLoader classLoader, String className) throws ClassNotFoundException {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,734,"public static Class<?> getClass(ClassLoader classLoader, String className) throws ClassNotFoundException {"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,748,ublic static Class getClass(String className) throws ClassNotFoundException {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,748,public static Class<?> getClass(String className) throws ClassNotFoundException {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,763,"ublic static Class getClass(String className, boolean initialize) throws ClassNotFoundException {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,763,"public static Class<?> getClass(String className, boolean initialize) throws ClassNotFoundException {"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,792,"ublic static Method getPublicMethod(Class cls, String methodName, Class parameterTypes[])"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,792,"public static Method getPublicMethod(Class<?> cls, String methodName, Class<?> parameterTypes[])"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,800,ist candidateClasses = new ArrayList();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,800,List<Class<?>> candidateClasses = new ArrayList<Class<?>>();
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,804,or (Iterator it = candidateClasses.iterator(); it.hasNext(); ) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,805,lass candidateClass = (Class) it.next();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,804,for (Iterator<Class<?>> it = candidateClasses.iterator(); it.hasNext(); ) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,805,Class<?> candidateClass = it.next();
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,841,tring abbreviation = (String) abbreviationMap.get(className);
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,841,String abbreviation = abbreviationMap.get(className);
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,861,ublic static Class[] toClass(Object[] array) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,861,public static Class<?>[] toClass(Object[] array) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,867,lass[] classes = new Class[array.length];
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,867,Class<?>[] classes = new Class[array.length];
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,898,ublic static String getShortCanonicalName(Class cls) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,898,public static String getShortCanonicalName(Class<?> cls) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,942,ublic static String getPackageCanonicalName(Class cls) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,942,public static String getPackageCanonicalName(Class<?> cls) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,1000,lassName = (String) reverseAbbreviationMap.get(
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,1001,"lassName.substring(0, 1));"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,1000,"className = reverseAbbreviationMap.get(className.substring(0, 1));"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,453,rivate final Map mapNameToValue = new HashMap();
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,453,"private final Map<String, Integer> mapNameToValue = new HashMap<String, Integer>();"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,485,rotected Map mapNameToValue;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,485,"protected Map<String, Integer> mapNameToValue;"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,487,rotected Map mapValueToName;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,487,"protected Map<Integer, String> mapValueToName;"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,501,eturn (String) mapValueToName.get(new Integer(value));
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,501,return mapValueToName.get(new Integer(value));
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,521,apNameToValue = new HashMap();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,522,apValueToName = new HashMap();
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,521,"mapNameToValue = new HashMap<String, Integer>();"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,522,"mapValueToName = new HashMap<Integer, String>();"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,531,apNameToValue = new TreeMap();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,532,apValueToName = new TreeMap();
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,531,"mapNameToValue = new TreeMap<String, Integer>();"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,532,"mapValueToName = new TreeMap<Integer, String>();"
False,src/java/org/apache/commons/lang/IllegalClassException.java,src/java/org/apache/commons/lang/IllegalClassException.java,61,"ublic IllegalClassException(Class expected, Object actual) {"
True,src/java/org/apache/commons/lang/IllegalClassException.java,src/java/org/apache/commons/lang/IllegalClassException.java,61,"public IllegalClassException(Class<?> expected, Object actual) {"
False,src/java/org/apache/commons/lang/IllegalClassException.java,src/java/org/apache/commons/lang/IllegalClassException.java,75,"ublic IllegalClassException(Class expected, Class actual) {"
True,src/java/org/apache/commons/lang/IllegalClassException.java,src/java/org/apache/commons/lang/IllegalClassException.java,75,"public IllegalClassException(Class<?> expected, Class<?> actual) {"
False,src/java/org/apache/commons/lang/IllegalClassException.java,src/java/org/apache/commons/lang/IllegalClassException.java,99,rivate static final String safeGetClassName(Class cls) {
True,src/java/org/apache/commons/lang/IllegalClassException.java,src/java/org/apache/commons/lang/IllegalClassException.java,99,private static final String safeGetClassName(Class<?> cls) {
False,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,206,"ublic static int reflectionCompare(Object lhs, Object rhs, Collection /*String*/ excludeFields) {"
True,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,206,"public static int reflectionCompare(Object lhs, Object rhs, Collection<String> excludeFields) {"
False,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,275,lass reflectUpToClass)
True,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,275,Class<?> reflectUpToClass)
False,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,316,"lass reflectUpToClass,"
True,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,316,"Class<?> reflectUpToClass,"
False,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,325,lass lhsClazz = lhs.getClass();
True,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,325,Class<?> lhsClazz = lhs.getClass();
False,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,352,"lass clazz,"
True,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,src/java/org/apache/commons/lang/builder/CompareToBuilder.java,352,"Class<?> clazz,"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,147,"ublic static boolean reflectionEquals(Object lhs, Object rhs, Collection /*String*/ excludeFields) {"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,147,"public static boolean reflectionEquals(Object lhs, Object rhs, Collection<String> excludeFields) {"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,223,"ublic static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients, Class reflectUpToClass) {"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,223,"public static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients, Class<?> reflectUpToClass) {"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,253,"ublic static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients, Class reflectUpToClass,"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,253,"public static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients, Class<?> reflectUpToClass,"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,265,lass lhsClass = lhs.getClass();
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,266,lass rhsClass = rhs.getClass();
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,267,lass testClass;
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,265,Class<?> lhsClass = lhs.getClass();
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,266,Class<?> rhsClass = rhs.getClass();
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,267,Class<?> testClass;
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,316,"lass clazz,"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,316,"Class<?> clazz,"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,378,lass lhsClass = lhs.getClass();
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,378,Class<?> lhsClass = lhs.getClass();
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,105,rivate static final ThreadLocal registry = new ThreadLocal() {
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,105,private static final ThreadLocal<Set<IDKey>> registry = new ThreadLocal<Set<IDKey>>() {
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,107,rotected Object initialValue() {
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,107,protected Set<IDKey> initialValue() {
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,110,eturn new HashSet();
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,110,return new HashSet<IDKey>();
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,139,tatic Set getRegistry() {
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,140,eturn (Set) registry.get();
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,139,static Set<IDKey> getRegistry() {
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,140,return registry.get();
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,174,"rivate static void reflectionAppend(Object object, Class clazz, HashCodeBuilder builder, boolean useTransients,"
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,174,"private static void reflectionAppend(Object object, Class<?> clazz, HashCodeBuilder builder, boolean useTransients,"
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,308,"oolean testTransients, Class reflectUpToClass) {"
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,308,"boolean testTransients, Class<?> reflectUpToClass) {"
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,359,"oolean testTransients, Class reflectUpToClass, String[] excludeFields) {"
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,359,"boolean testTransients, Class<?> reflectUpToClass, String[] excludeFields) {"
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,365,lass clazz = object.getClass();
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,365,Class<?> clazz = object.getClass();
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,476,"ublic static int reflectionHashCode(Object object, Collection /* String */excludeFields) {"
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,476,"public static int reflectionHashCode(Object object, Collection<String> excludeFields) {"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,286,lass reflectUpToClass) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,286,Class<?> reflectUpToClass) {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,313,"ublic static String toStringExclude(Object object, Collection /*String*/ excludeFieldNames) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,313,"public static String toStringExclude(Object object, Collection<String> excludeFieldNames) {"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,326,tatic String[] toNoNullStringArray(Collection collection) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,326,static String[] toNoNullStringArray(Collection<String> collection) {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,343,rrayList list = new ArrayList(array.length);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,343,ArrayList<String> list = new ArrayList<String>(array.length);
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,350,eturn (String[]) list.toArray(ArrayUtils.EMPTY_STRING_ARRAY);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,350,return list.toArray(ArrayUtils.EMPTY_STRING_ARRAY);
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,385,rivate Class upToClass = null;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,385,private Class<?> upToClass = null;
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,468,"ublic ReflectionToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer, Class reflectUpToClass,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,468,"public ReflectionToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer, Class<?> reflectUpToClass,"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,522,rotected void appendFieldsIn(Class clazz) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,522,protected void appendFieldsIn(Class<?> clazz) {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,563,ublic Class getUpToClass() {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,563,public Class<?> getUpToClass() {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,674,ublic void setUpToClass(Class clazz) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,674,public void setUpToClass(Class<?> clazz) {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,690,lass clazz = this.getObject().getClass();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,690,Class<?> clazz = this.getObject().getClass();
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,136,rivate static final ThreadLocal registry = new ThreadLocal() {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,136,private static final ThreadLocal<Set<Object>> registry = new ThreadLocal<Set<Object>>() {
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,138,rotected Object initialValue() {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,138,protected Set<Object> initialValue() {
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,141,eturn new HashSet();
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,141,return new HashSet<Object>();
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,153,tatic Set getRegistry() {
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,154,eturn (Set) registry.get();
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,153,static Set<Object> getRegistry() {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,154,return registry.get();
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,84,"ublic static Object invokeConstructor(Class cls, Object arg)"
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,84,"public static Object invokeConstructor(Class<?> cls, Object arg)"
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,108,"ublic static Object invokeConstructor(Class cls, Object[] args)"
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,108,"public static Object invokeConstructor(Class<?> cls, Object[] args)"
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,114,lass parameterTypes[] = new Class[args.length];
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,114,Class<?> parameterTypes[] = new Class[args.length];
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,138,"ublic static Object invokeConstructor(Class cls, Object[] args,"
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,139,"lass[] parameterTypes) throws NoSuchMethodException,"
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,138,"public static Object invokeConstructor(Class<?> cls, Object[] args,"
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,139,"Class<?>[] parameterTypes) throws NoSuchMethodException,"
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,175,"ublic static Object invokeExactConstructor(Class cls, Object arg)"
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,175,"public static Object invokeExactConstructor(Class<?> cls, Object arg)"
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,199,"ublic static Object invokeExactConstructor(Class cls, Object[] args)"
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,199,"public static Object invokeExactConstructor(Class<?> cls, Object[] args)"
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,206,lass parameterTypes[] = new Class[arguments];
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,206,Class<?> parameterTypes[] = new Class[arguments];
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,231,"ublic static Object invokeExactConstructor(Class cls, Object[] args,"
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,232,"lass[] parameterTypes) throws NoSuchMethodException,"
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,231,"public static Object invokeExactConstructor(Class<?> cls, Object[] args,"
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,232,"Class<?>[] parameterTypes) throws NoSuchMethodException,"
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,258,"ublic static Constructor getAccessibleConstructor(Class cls,"
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,259,lass parameterType) {
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,258,"public static Constructor getAccessibleConstructor(Class<?> cls,"
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,259,Class<?> parameterType) {
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,271,"ublic static Constructor getAccessibleConstructor(Class cls,"
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,272,lass[] parameterTypes) {
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,271,"public static Constructor getAccessibleConstructor(Class<?> cls,"
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,272,Class<?>[] parameterTypes) {
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,307,"ublic static Constructor getMatchingAccessibleConstructor(Class cls,"
False,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,308,lass[] parameterTypes) {
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,307,"public static Constructor getMatchingAccessibleConstructor(Class<?> cls,"
True,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,src/java/org/apache/commons/lang/reflect/ConstructorUtils.java,308,Class<?>[] parameterTypes) {
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,59,"ublic static Field getField(Class cls, String fieldName) {"
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,59,"public static Field getField(Class<?> cls, String fieldName) {"
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,77,"ublic static Field getField(final Class cls, String fieldName, boolean forceAccess) {"
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,77,"public static Field getField(final Class<?> cls, String fieldName, boolean forceAccess) {"
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,98,or (Class acls = cls; acls != null; acls = acls.getSuperclass()) {
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,98,for (Class<?> acls = cls; acls != null; acls = acls.getSuperclass()) {
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,119,or (Iterator intf = ClassUtils.getAllInterfaces(cls).iterator(); intf
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,119,for (Iterator<Class<?>> intf = ClassUtils.getAllInterfaces(cls).iterator(); intf
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,122,ield test = ((Class) intf.next()).getField(fieldName);
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,122,Field test = ((Class<?>) intf.next()).getField(fieldName);
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,148,"ublic static Field getDeclaredField(Class cls, String fieldName) {"
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,148,"public static Field getDeclaredField(Class<?> cls, String fieldName) {"
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,163,"ublic static Field getDeclaredField(Class cls, String fieldName, boolean forceAccess) {"
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,163,"public static Field getDeclaredField(Class<?> cls, String fieldName, boolean forceAccess) {"
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,224,"ublic static Object readStaticField(Class cls, String fieldName) throws IllegalAccessException {"
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,224,"public static Object readStaticField(Class<?> cls, String fieldName) throws IllegalAccessException {"
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,239,"ublic static Object readStaticField(Class cls, String fieldName, boolean forceAccess) throws IllegalAccessException {"
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,239,"public static Object readStaticField(Class<?> cls, String fieldName, boolean forceAccess) throws IllegalAccessException {"
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,258,"ublic static Object readDeclaredStaticField(Class cls, String fieldName) throws IllegalAccessException {"
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,258,"public static Object readDeclaredStaticField(Class<?> cls, String fieldName) throws IllegalAccessException {"
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,275,"ublic static Object readDeclaredStaticField(Class cls, String fieldName, boolean forceAccess)"
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,275,"public static Object readDeclaredStaticField(Class<?> cls, String fieldName, boolean forceAccess)"
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,346,lass cls = target.getClass();
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,346,Class<?> cls = target.getClass();
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,384,lass cls = target.getClass();
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,384,Class<?> cls = target.getClass();
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,432,"ublic static void writeStaticField(Class cls, String fieldName, Object value) throws IllegalAccessException {"
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,432,"public static void writeStaticField(Class<?> cls, String fieldName, Object value) throws IllegalAccessException {"
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,447,"ublic static void writeStaticField(Class cls, String fieldName, Object value, boolean forceAccess)"
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,447,"public static void writeStaticField(Class<?> cls, String fieldName, Object value, boolean forceAccess)"
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,465,"ublic static void writeDeclaredStaticField(Class cls, String fieldName, Object value)"
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,465,"public static void writeDeclaredStaticField(Class<?> cls, String fieldName, Object value)"
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,481,"ublic static void writeDeclaredStaticField(Class cls, String fieldName, Object value, boolean forceAccess)"
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,481,"public static void writeDeclaredStaticField(Class<?> cls, String fieldName, Object value, boolean forceAccess)"
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,554,lass cls = target.getClass();
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,554,Class<?> cls = target.getClass();
False,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,591,lass cls = target.getClass();
True,src/java/org/apache/commons/lang/reflect/FieldUtils.java,src/java/org/apache/commons/lang/reflect/FieldUtils.java,591,Class<?> cls = target.getClass();
False,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,57,"rivate static final Class[] ORDERED_PRIMITIVE_TYPES = { Byte.TYPE,"
True,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,57,"private static final Class<?>[] ORDERED_PRIMITIVE_TYPES = { Byte.TYPE,"
False,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,131,"tatic int compareParameterTypes(Class[] left, Class[] right, Class[] actual) {"
True,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,131,"static int compareParameterTypes(Class<?>[] left, Class<?>[] right, Class<?>[] actual) {"
False,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,144,"rivate static float getTotalTransformationCost(Class[] srcArgs,"
False,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,145,lass[] destArgs) {
True,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,144,"private static float getTotalTransformationCost(Class<?>[] srcArgs,"
True,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,145,Class<?>[] destArgs) {
False,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,148,"lass srcClass, destClass;"
True,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,148,"Class<?> srcClass, destClass;"
False,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,164,"rivate static float getObjectTransformationCost(Class srcClass,"
False,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,165,lass destClass) {
True,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,164,"private static float getObjectTransformationCost(Class<?> srcClass,"
True,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,165,Class<?> destClass) {
False,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,200,"rivate static float getPrimitivePromotionCost(final Class srcClass,"
False,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,201,inal Class destClass) {
True,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,200,"private static float getPrimitivePromotionCost(final Class<?> srcClass,"
True,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,201,final Class<?> destClass) {
False,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,203,lass cls = srcClass;
True,src/java/org/apache/commons/lang/reflect/MemberUtils.java,src/java/org/apache/commons/lang/reflect/MemberUtils.java,203,Class<?> cls = srcClass;
False,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,536,"rivate int substitute(StrBuilder buf, int offset, int length, List priorVariables) {"
True,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,536,"private int substitute(StrBuilder buf, int offset, int length, List<String> priorVariables) {"
False,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,578,riorVariables = new ArrayList();
True,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,578,priorVariables = new ArrayList<String>();
False,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,621,"rivate void checkCyclicSubstitution(String varName, List priorVariables) {"
True,src/java/org/apache/commons/lang/text/StrSubstitutor.java,src/java/org/apache/commons/lang/text/StrSubstitutor.java,621,"private void checkCyclicSubstitution(String varName, List<String> priorVariables) {"
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,111,rivate static final Map cInstanceCache = new HashMap(7);
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,112,rivate static final Map cDateInstanceCache = new HashMap(7);
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,113,rivate static final Map cTimeInstanceCache = new HashMap(7);
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,114,rivate static final Map cDateTimeInstanceCache = new HashMap(7);
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,115,rivate static final Map cTimeZoneDisplayCache = new HashMap(7);
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,111,"private static final Map<FastDateFormat, FastDateFormat> cInstanceCache = new HashMap<FastDateFormat, FastDateFormat>(7);"
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,112,"private static final Map<Object, FastDateFormat> cDateInstanceCache = new HashMap<Object, FastDateFormat>(7);"
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,113,"private static final Map<Object, FastDateFormat> cTimeInstanceCache = new HashMap<Object, FastDateFormat>(7);"
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,114,"private static final Map<Object, FastDateFormat> cDateTimeInstanceCache = new HashMap<Object, FastDateFormat>(7);"
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,115,"private static final Map<Object, String> cTimeZoneDisplayCache = new HashMap<Object, String>(7);"
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,214,astDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat);
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,214,FastDateFormat format = cInstanceCache.get(emptyFormat);
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,281,bject key = new Integer(style);
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,281,Object key = Integer.valueOf(style);
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,292,astDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,292,FastDateFormat format = cDateInstanceCache.get(key);
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,366,bject key = new Integer(style);
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,366,Object key = Integer.valueOf(style);
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,374,astDateFormat format = (FastDateFormat) cTimeInstanceCache.get(key);
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,374,FastDateFormat format = cTimeInstanceCache.get(key);
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,460,"bject key = new Pair(new Integer(dateStyle), new Integer(timeStyle));"
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,460,"Object key = new Pair(Integer.valueOf(dateStyle), Integer.valueOf(timeStyle));"
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,469,astDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,469,FastDateFormat format = cDateTimeInstanceCache.get(key);
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,498,tring value = (String) cTimeZoneDisplayCache.get(key);
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,498,String value = cTimeZoneDisplayCache.get(key);
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,558,ist rulesList = parsePattern();
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,559,Rules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]);
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,558,List<Rule> rulesList = parsePattern();
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,559,mRules = rulesList.toArray(new Rule[rulesList.size()]);
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,577,rotected List parsePattern() {
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,577,protected List<Rule> parsePattern() {
False,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,579,ist rules = new ArrayList();
True,src/java/org/apache/commons/lang/time/FastDateFormat.java,src/java/org/apache/commons/lang/time/FastDateFormat.java,579,List<Rule> rules = new ArrayList<Rule>();
