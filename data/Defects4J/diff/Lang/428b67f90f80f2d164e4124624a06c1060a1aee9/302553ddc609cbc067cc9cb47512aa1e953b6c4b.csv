is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,20,import java.util.Formattable;
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,26,import org.apache.commons.lang3.util.FormattableUtils;
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,43,"ublic abstract class Pair<L, R> implements Map.Entry<L, R>, Comparable<Pair<L, R>>, Serializable {"
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,45,"public abstract class Pair<L, R> implements Map.Entry<L, R>, Comparable<Pair<L, R>>, Formattable, Serializable {"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,48, The default format for the toString method.
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,51,* Basic format pattern.
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,50,"rivate static final String DEFAULT_FORMAT_STRING = ""(%2$s,%3$s)"";"
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,53,"private static final String DEFAULT_FORMAT_STRING = ""(%1$s,%2$s)"";"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,157," <p>Returns a String representation of the Pair in the form: (L,R).</p>"
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,160,* <p>Returns a String representation of this Pair as completed by
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,161,"* {@link #formatTo(Formatter, int, int, int)}.</p>"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,163,eturn toString(DEFAULT_FORMAT_STRING);
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,167,return FormattableUtils.toString(this);
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,167, <p>Returns a String representation in the given format.</p>
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,169, <p>The format specified uses the syntax from {@link Formatter}.
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,170, There are three arguments available:</p>
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,171, <ol>
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,172, <li>The simple class name</li>
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,173, <li>The left object</li>
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,174, <li>The right object</li>
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,175, </ol>
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,171,"* <p>Format this {@link Pair}.  Basic format is in the form: (L,R).</p>"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,177," @param format  the format suitable for use with {@code Formatter}, not null"
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,178," @return a string describing for this object, not null"
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,173,* @param formatter target
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,174,* @param flags for output format
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,175,* @param width of output
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,176,* @param precision of output
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,180,ublic String toString(String format) {
False,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,181,"eturn String.format(format, getClass().getSimpleName(), getLeft(), getRight());"
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,178,"public void formatTo(Formatter formatter, int flags, int width, int precision) {"
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,179,"FormattableUtils.append(String.format(DEFAULT_FORMAT_STRING, getLeft(), getRight()),"
True,src/main/java/org/apache/commons/lang3/tuple/Pair.java,src/main/java/org/apache/commons/lang3/tuple/Pair.java,180,"formatter, flags, width, precision);"
False,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,99,Test
False,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,100,ublic void testToStringFormat() throws Exception {
False,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,101,"air<String, String> pair = Pair.of(""Key"", ""Value"");"
False,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,102,"ssertEquals(""ImmutablePair"", pair.toString(""%1$s""));"
False,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,103,"ssertEquals(""Key"", pair.toString(""%2$s""));"
False,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,104,"ssertEquals(""Value"", pair.toString(""%3$s""));"
False,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,105,"ssertEquals(""Key: Value"", pair.toString(""%2$s: %3$s""));"
False,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,106,"air = Pair.of(null, null);"
False,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,src/test/java/org/apache/commons/lang3/tuple/PairTest.java,107,"ssertEquals(""null: null"", pair.toString(""%2$s: %3$s""));"
