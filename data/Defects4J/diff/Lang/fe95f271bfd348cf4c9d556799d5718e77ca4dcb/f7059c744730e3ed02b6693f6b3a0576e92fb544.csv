is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,18,package org.apache.commons.lang3.builder;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,20,import java.util.ArrayList;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,21,import java.util.Collection;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,22,import java.util.LinkedList;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,23,import java.util.List;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,24,import java.util.concurrent.Callable;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,25,import java.util.concurrent.CopyOnWriteArrayList;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,26,import java.util.concurrent.ExecutionException;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,27,import java.util.concurrent.ExecutorService;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,28,import java.util.concurrent.Executors;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,29,import java.util.concurrent.Future;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,31,import org.junit.Test;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,34,* Tests concurrent access for the default {@link ToStringStyle}.
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,35,* <p>
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,36,* The {@link ToStringStyle} class includes a registry to avoid infinite loops for objects with circular references. We
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,37,* want to make sure that we do not get concurrency exceptions accessing this registry.
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,38,* </p>
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,39,* <p>
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,40,* This test passes but only tests one aspect of the issue.
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,41,* </p>
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,43,"* @see <a href=""https://issues.apache.org/jira/browse/LANG-762"">[LANG-762] Handle or document ReflectionToStringBuilder"
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,44,*      and ToStringBuilder for collections that are not thread safe</a>
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,45,* @since 3.0.2
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,47,public class ToStringStyleConcurrencyTest {
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,49,static class CollectionHolder<T extends Collection<?>> {
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,50,T collection;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,52,CollectionHolder(T collection) {
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,53,this.collection = collection;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,57,private static final List<Integer> LIST;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,58,private static final int LIST_SIZE = 100000;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,59,private static final int REPEAT = 100;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,61,static {
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,62,LIST = new ArrayList<Integer>(LIST_SIZE);
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,63,for (int i = 0; i < LIST_SIZE; i++) {
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,64,LIST.add(Integer.valueOf(i));
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,68,@Test
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,69,"public void testLinkedList() throws InterruptedException, ExecutionException {"
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,70,this.testConcurrency(new CollectionHolder<List<Integer>>(new LinkedList<Integer>()));
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,73,@Test
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,74,"public void testArrayList() throws InterruptedException, ExecutionException {"
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,75,this.testConcurrency(new CollectionHolder<List<Integer>>(new ArrayList<Integer>()));
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,78,@Test
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,79,"public void testCopyOnWriteArrayList() throws InterruptedException, ExecutionException {"
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,80,this.testConcurrency(new CollectionHolder<List<Integer>>(new CopyOnWriteArrayList<Integer>()));
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,83,"private void testConcurrency(final CollectionHolder<List<Integer>> holder) throws InterruptedException,"
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,84,ExecutionException {
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,85,final List<Integer> list = holder.collection;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,86,// make a big array that takes a long time to toString()
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,87,list.addAll(LIST);
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,88,// Create a thread pool with two threads to cause the most contention on the underlying resource.
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,89,final ExecutorService threadPool = Executors.newFixedThreadPool(2);
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,90,// Consumes toStrings
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,91,Callable<Integer> consumer = new Callable<Integer>() {
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,92,public Integer call() {
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,93,for (int i = 0; i < REPEAT; i++) {
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,94,// Calls ToStringStyle
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,95,new ToStringBuilder(holder).append(holder.collection);
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,97,return REPEAT;
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,100,Collection<Callable<Integer>> tasks = new ArrayList<Callable<Integer>>();
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,101,tasks.add(consumer);
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,102,tasks.add(consumer);
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,103,final List<Future<Integer>> futures = threadPool.invokeAll(tasks);
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,104,for (Future<Integer> future : futures) {
True,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,105,future.get();
