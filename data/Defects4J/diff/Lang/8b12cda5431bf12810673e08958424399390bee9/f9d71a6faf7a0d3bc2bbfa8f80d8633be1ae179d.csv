is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,57,import java.util.HashMap;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,60,import java.util.Map;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,69,* @author Norm Deane
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,68," @version $Id: ClassUtils.java,v 1.22 2003/09/07 14:32:34 psteitz Exp $"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,71,"* @version $Id: ClassUtils.java,v 1.23 2003/10/23 21:03:43 scolebourne Exp $"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,96,* Maps primitive <code>Class</code>es to their corresponding wrapper <code>Class</code>.
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,98,private static Map  primitiveWrapperMap = new HashMap();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,99,static {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,100,"primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,101,"primitiveWrapperMap.put(Byte.TYPE, Byte.class);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,102,"primitiveWrapperMap.put(Character.TYPE, Character.class);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,103,"primitiveWrapperMap.put(Short.TYPE, Short.class);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,104,"primitiveWrapperMap.put(Integer.TYPE, Integer.class);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,105,"primitiveWrapperMap.put(Long.TYPE, Long.class);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,106,"primitiveWrapperMap.put(Double.TYPE, Double.class);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,107,"primitiveWrapperMap.put(Float.TYPE, Float.class);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,536,* <p>Converts the specified primitive Class object to its corresponding
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,537,* wrapper Class object.</p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,539,"* @param cls  the class to convert, may be null"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,540,* @return the wrapper class for <code>cls</code> or <code>cls</code> if
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,541,* <code>cls</code> is not a primitive. <code>null</code> if null input.
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,543,public static Class primitiveToWrapper(Class cls) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,544,Class convertedClass = cls;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,545,if (cls != null && cls.isPrimitive()) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,546,convertedClass = (Class) primitiveWrapperMap.get(cls);
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,548,return convertedClass;
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,522, @param cls  the class to check
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,556,"* @param cls  the class to check, may be null"
False,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,71," @version $Id: ClassUtilsTest.java,v 1.6 2003/08/18 02:22:25 bayard Exp $"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,71,"* @version $Id: ClassUtilsTest.java,v 1.7 2003/10/23 21:03:44 scolebourne Exp $"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,382,public void testPrimitiveToWrapper() {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,384,// test primitive classes
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,385,"assertEquals(""boolean -> Boolean.class"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,386,"Boolean.class, ClassUtils.primitiveToWrapper(Boolean.TYPE));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,387,"assertEquals(""byte -> Byte.class"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,388,"Byte.class, ClassUtils.primitiveToWrapper(Byte.TYPE));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,389,"assertEquals(""char -> Character.class"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,390,"Character.class, ClassUtils.primitiveToWrapper(Character.TYPE));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,391,"assertEquals(""short -> Short.class"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,392,"Short.class, ClassUtils.primitiveToWrapper(Short.TYPE));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,393,"assertEquals(""int -> Integer.class"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,394,"Integer.class, ClassUtils.primitiveToWrapper(Integer.TYPE));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,395,"assertEquals(""long -> Long.class"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,396,"Long.class, ClassUtils.primitiveToWrapper(Long.TYPE));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,397,"assertEquals(""double -> Double.class"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,398,"Double.class, ClassUtils.primitiveToWrapper(Double.TYPE));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,399,"assertEquals(""float -> Float.class"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,400,"Float.class, ClassUtils.primitiveToWrapper(Float.TYPE));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,402,// test a few other classes
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,403,"assertEquals(""String.class -> String.class"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,404,"String.class, ClassUtils.primitiveToWrapper(String.class));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,405,"assertEquals(""ClassUtils.class -> ClassUtils.class"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,406,"org.apache.commons.lang.ClassUtils.class,"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,407,ClassUtils.primitiveToWrapper(org.apache.commons.lang.ClassUtils.class));
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,409,// test null
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,410,"assertNull(""null -> null"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,411,ClassUtils.primitiveToWrapper(null));
