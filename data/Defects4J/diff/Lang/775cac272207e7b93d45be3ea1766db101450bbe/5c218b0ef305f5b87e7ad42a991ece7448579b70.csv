is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,17,package org.apache.commons.lang3;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,19,import java.util.BitSet;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,20,import java.util.HashSet;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,22,import org.junit.Assert;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,23,import org.junit.Test;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,26,* Test to show whether using BitSet for removeAll() methods is faster than using HashSet.
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,28,public class HashSetvBitSetTest {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,30,private static final int LOOPS = 2000; // number of times to invoke methods
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,32,@Test
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,33,public void testTimes() {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,34,timeHashSet(10); // warmup
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,35,timeBitSet(10); // warmup
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,36,printTimes(0);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,37,printTimes(5);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,38,printTimes(10);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,39,printTimes(200);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,40,printTimes(50);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,41,printTimes(100);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,42,printTimes(1000);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,43,printTimes(2000);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,45,private void printTimes(int count) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,46,long hashSet = timeHashSet(count);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,47,long bitSet = timeBitSet(count);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,48,"// If percent is less than 100, then bitset is faster"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,49,"System.out.println(""Ratio=""+(bitSet*100/hashSet)+""% count=""+count+"" hash=""+hashSet+"" bits=""+bitSet);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,52,private static long timeHashSet(int count) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,53,int [] result = new int[0];
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,54,long start = System.nanoTime();
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,55,for (int i = 0; i < LOOPS; i++) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,56,result = testHashSet(count);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,58,long elapsed = System.nanoTime() - start;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,59,"Assert.assertEquals(count, result.length);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,60,return elapsed;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,63,private static long timeBitSet(int count) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,64,int [] result = new int[0];
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,65,long start = System.nanoTime();
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,66,for (int i = 0; i < LOOPS; i++) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,67,result = testBitSet(count);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,69,long elapsed = System.nanoTime() - start;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,70,"Assert.assertEquals(count, result.length);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,71,return elapsed;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,74,"@SuppressWarnings(""boxing"")"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,75,private static int[] testHashSet(int count) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,76,HashSet<Integer> toRemove = new HashSet<Integer>();
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,77,int found = 0;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,78,for (int i = 0; i < count; i++) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,79,toRemove.add(found++);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,81,return extractIndices(toRemove);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,84,private static int[] testBitSet(int count) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,85,BitSet toRemove = new BitSet();
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,86,int found = 0;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,87,for (int i = 0; i < count; i++) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,88,toRemove.set(found++);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,90,return extractIndices(toRemove);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,94,private static int[] extractIndices(HashSet<Integer> coll) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,95,int[] result = new int[coll.size()];
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,96,int i = 0;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,97,for (Integer index : coll) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,98,result[i++] = index.intValue();
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,100,return result;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,103,private static int[] extractIndices(BitSet coll) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,104,int[] result = new int[coll.cardinality()];
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,105,int i = 0;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,106,int j=0;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,107,while((j=coll.nextSetBit(j)) != -1) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,108,result[i++] = j++;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,110,return result;
