is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,20,import java.lang.reflect.Method;
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1892,// Methods on StringUtils that are immutable in spirit (i.e. calculate the length)
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1893,// should take a CharSequence parameter. Methods that are mutable in spirit (i.e. capitalize)
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1894,// should take a String or String[] parameter and return String or String[].
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1895,// This test enforces that this is done.
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1896,public void testStringUtilsCharSequenceContract() {
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1897,Class c = StringUtils.class;
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1898,Method[] methods = c.getMethods();
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1899,for (int i=0; i<methods.length; i++) {
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1900,Method m = methods[i];
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1901,if (m.getReturnType() == String.class || m.getReturnType() == String[].class) {
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1902,// Assume this is mutable and ensure the first parameter is not CharSequence.
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1903,"// It may be String or it may be something else (String[], Object, Object[]) so"
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1904,// don't actively test for that.
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1905,Class[] params = m.getParameterTypes();
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1906,if ( params.length > 0 && (params[0] == CharSequence.class || params[0] == CharSequence[].class)) {
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1907,"fail(""The method "" + m + "" appears to be mutable in spirit and therefore must not accept a CharSequence"");"
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1909,} else {
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1910,// Assume this is immutable in spirit and ensure the first parameter is not String.
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1911,"// As above, it may be something other than CharSequence."
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1912,Class[] params = m.getParameterTypes();
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1913,if ( params.length > 0 && (params[0] == String.class || params[0] == String[].class)) {
True,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1914,"fail(""The method "" + m + "" appears to be immutable in spirit and therefore must not accept a String"");"
