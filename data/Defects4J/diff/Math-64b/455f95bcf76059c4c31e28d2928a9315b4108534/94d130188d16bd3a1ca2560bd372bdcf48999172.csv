is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,24, @version $Revision: 1.4 $ $Date: 2004/05/24 05:29:05 $
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,24,* @version $Revision: 1.5 $ $Date: 2004/06/02 13:08:55 $
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,65,"  {@link #tTest(double, double[])} with <code>mu = 0</code> and the sample array"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,66,  consisting of the signed differences between corresponding elements of
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,65,"* {@link #tTest(double, double[])} with <code>mu = 0</code> and the sample"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,66,* array consisting of the signed differences between corresponding elements of
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,72," <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,72,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,73,* here</a>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,89, Performs a paired t-test</a> evaluating that null hypothesis that the
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,90,* Performs a paired t-test</a> evaluating the null hypothesis that the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,102," <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,103,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,104,* here</a>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,105, <li>The input array lengths must be the same and their common length must be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,107,* <li>The input array lengths must be the same and their common length
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,108,* must be at least 2.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,141, t statistic </a> to use in comparing the dataset described by <code>sampleStats</code>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,142,  to <code>mu</code>.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,144,* t statistic </a> to use in comparing the mean of the dataset described by
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,145,* <code>sampleStats</code> to <code>mu</code>.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,160," 2-sample t statistic </a>, without the assumption of equal sample variances."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,163,* 2-sample t statistic. </a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,168,"* If <code>equalVariances</code> is <code>true</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,169,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,170,* (1) &nbsp;&nbsp;<code>  t = (m1 - m2) / (sqrt(1/n1 +1/n2) sqrt(var))</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,171,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,172,* where <strong><code>n1</code></strong> is the size of first sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,173,* <strong><code> n2</code></strong> is the size of second sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,174,* <strong><code> m1</code></strong> is the mean of first sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,175,* <strong><code> m2</code></strong> is the mean of second sample</li>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,176,* </ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,177,* and <strong><code>var</code></strong> is the pooled variance estimate:
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,178,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,179,* <code>var = sqrt(((n1 - 1)var1 + (n2 - 1)var2) / ((n1-1) + (n2-1)))</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,180,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,181,* with <strong><code>var1<code></strong> the variance of the first sample and
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,182,* <strong><code>var2</code></strong> the variance of the second sample.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,183,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,184,"* If <code>equalVariances</code> is <code>false</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,185,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,186,* (2) &nbsp;&nbsp; <code>  t = (m1 - m2) / sqrt(var1/n1 + var2/n2)</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,187,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,194,* @param equalVariances are the sample variances assumed equal?
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,176,"ouble t(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,200,"double t(double[] sample1, double[] sample2, boolean equalVariances)"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,182, by two {@link StatisticalSummary} instances without the assumption of equal sample variances.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,206,* by two {@link StatisticalSummary} instances.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,210,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,211,"* If <code>equalVariances</code> is <code>true</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,212,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,213,* (1) &nbsp;&nbsp;<code>  t = (m1 - m2) / (sqrt(1/n1 +1/n2) sqrt(var))</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,214,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,215,* where <strong><code>n1</code></strong> is the size of first sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,216,* <strong><code> n2</code></strong> is the size of second sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,217,* <strong><code> m1</code></strong> is the mean of first sample;
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,218,* <strong><code> m2</code></strong> is the mean of second sample</li>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,219,* </ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,220,* and <strong><code>var</code></strong> is the pooled variance estimate:
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,221,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,222,* <code>var = sqrt(((n1 - 1)var1 + (n2 - 1)var2) / ((n1-1) + (n2-1)))</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,223,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,224,* with <strong><code>var1<code></strong> the variance of the first sample and
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,225,* <strong><code>var2</code></strong> the variance of the second sample.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,226,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,227,"* If <code>equalVariances</code> is <code>false</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,228,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,229,* (2) &nbsp;&nbsp; <code>  t = (m1 - m2) / sqrt(var1/n1 + var2/n2)</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,238,* @param equalVariances are the sample variances assumed equal?
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,197,"ouble t(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,242,"double t(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,243,boolean equalVariances)
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,348, The test does not assume that the underlying popuation variances are
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,349, equal and it uses approximated degrees of freedom computed from the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,350, sample data as described
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,351," <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,394,"* If the <code>equalVariances</code> parameter is <code>false,</code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,395,* the test does not assume that the underlying popuation variances are
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,396,* equal  and it uses approximated degrees of freedom computed from the
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,397,"* sample data to compute the p-value.  In this case, formula (1) for the"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,398,"* {@link #t(double[], double[], boolean)} statistic is used"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,399,"* and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,400,* as described
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,401,"* <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,402,* here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,403,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,404,"* If <code>equalVariances</code> is <code>true</code>, a pooled variance"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,405,* estimate is used to compute the t-statistic (formula (2)) and the sum of the
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,406,* sample sizes minus 2 is used as the degrees of freedom.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,356," <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,411,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,412,* here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,420,* @param equalVariances are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,368,"ouble tTest(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,425,"double tTest(double[] sample1, double[] sample2, boolean equalVariances)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,438,"* If the <code>equalVariances</code> parameter is <code>false,</code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,439,* the test does not assume that the underlying popuation variances are
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,440,* equal  and it uses approximated degrees of freedom computed from the
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,441,"* sample data to compute the p-value.  In this case, formula (1) for the"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,442,"* {@link #t(double[], double[], boolean)} statistic is used"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,443,"* and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,444,* as described
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,445,"* <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,446,* here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,447,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,448,"* If <code>equalVariances</code> is <code>true</code>, a pooled variance"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,449,* estimate is used to compute the t-statistic (formula (2)) and the sum of the
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,450,* sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,451,* <p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,383," the 95% level, use <br><code>tTest(sample1, sample2, 0.05) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,454,"* the 95% level, under the assumption of equal subpopulation variances,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,455,"* use <br><code>tTest(sample1, sample2, 0.05, true) </code>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,386," at the 99% level, first verify that the measured mean of"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,387, <code>sample 1</code> is less than the mean of <code>sample 2</code>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,388," and then use <br><code>tTest(sample1, sample2, 0.005) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,458,"* at the 99% level without assuming equal variances, first verify that the measured"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,459,* mean of <code>sample 1</code> is less than the mean of <code>sample 2</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,460,"* and then use <br><code>tTest(sample1, sample2, 0.005, false) </code>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,391, The test does not assume that the underlying popuation variances are
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,392, equal and it uses approximated degrees of freedom computed from the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,393, sample data as described
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,394," <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">here</a>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,395, <p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,399," <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,466,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,467,* here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,478,* @param equalVariances are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,415,"oolean tTest(double[] sample1, double[] sample2, double alpha)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,484,"boolean tTest(double[] sample1, double[] sample2, double alpha,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,485,boolean equalVariances)
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,429, The test does not assume that the underlying popuation variances are
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,430, equal and it uses approximated degrees of freedom computed from the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,431, sample data as described
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,432," <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,499,"* If the <code>equalVariances</code> parameter is <code>false,</code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,500,* the test does not assume that the underlying popuation variances are
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,501,* equal  and it uses approximated degrees of freedom computed from the
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,502,"* sample data to compute the p-value.  In this case, formula (1) for the"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,503,"* {@link #t(double[], double[], boolean)} statistic is used"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,504,"* and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,505,* as described
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,506,"* <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,507,* here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,508,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,509,"* If <code>equalVariances</code> is <code>true</code>, a pooled variance"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,510,* estimate is used to compute the t-statistic (formula (2)) and the sum of the
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,511,* sample sizes minus 2 is used as the degrees of freedom.
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,444, @param sampleStats1 StatisticalSummary describing data from the first sample
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,445, @param sampleStats2 StatisticalSummary describing data from the second sample
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,523,* @param sampleStats1  StatisticalSummary describing data from the first sample
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,524,* @param sampleStats2  StatisticalSummary describing data from the second sample
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,525,* @param equalVariances  are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,450,"ouble tTest(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2)"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,530,"double tTest(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,531,boolean equalVariances)
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,544,"* If the <code>equalVariances</code> parameter is <code>false,</code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,545,* the test does not assume that the underlying popuation variances are
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,546,* equal  and it uses approximated degrees of freedom computed from the
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,547,"* sample data to compute the p-value.  In this case, formula (1) for the"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,548,"* {@link #t(double[], double[], boolean)} statistic is used"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,549,"* and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,550,* as described
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,551,"* <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,552,* here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,553,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,554,"* If <code>equalVariances</code> is <code>true</code>, a pooled variance"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,555,* estimate is used to compute the t-statistic (formula (2)) and the sum of the
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,556,* sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,557,* <p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,465," the 95% level, use"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,466," <br><code>tTest(sampleStats1, sampleStats2, 0.05) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,560,"* the 95% level under the assumption of equal subpopulation variances, use"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,561,"* <br><code>tTest(sampleStats1, sampleStats2, 0.05, true) </code>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,469," at the 99% level, first verify that the measured mean of"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,470, <code>sample 1</code> is less than the mean of <code>sample 2</code>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,471," and then use <br><code>tTest(sampleStats1, sampleStats2, 0.005) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,564,"* at the 99% level without assuming that subpopulation variances are equal,"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,565,* first verify that the measured mean of  <code>sample 1</code> is less than
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,566,* the mean of <code>sample 2</code> and then use
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,567,"* <br><code>tTest(sampleStats1, sampleStats2, 0.005, false) </code>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,474, The test does not assume that the underlying popuation variances are
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,475, equal and it uses approximated degrees of freedom computed from the
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,476, sample data as described
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,477," <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">here</a>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,478, <p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,482," <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,573,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,574,* here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,586,* @param equalVariances  are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,500,ouble alpha)
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,593,"double alpha, boolean equalVariances)"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,18,mport java.io.Serializable;
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,29, @version $Revision: 1.4 $ $Date: 2004/06/01 00:44:24 $
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,27,* @version $Revision: 1.5 $ $Date: 2004/06/02 13:08:55 $
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,31,"ublic class TTestImpl implements TTest, Serializable {"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,29,public class TTestImpl implements TTest  {
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,33,** Serializable version identifier */
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,34,tatic final long serialVersionUID = 3003851743922752186L;
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,40,/----------------------------------------------- Protected methods
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,43, Computes approximate degrees of freedom for 2-sample t-test.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,45, @param v1 first sample variance
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,46, @param v2 second sample variance
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,47, @param n1 first sample n
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,48, @param n2 second sample n
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,49, @return approximate degrees of freedom
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,51,"rotected double df(double v1, double v2, double n1, double n2) {"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,52,eturn (((v1 / n1) + (v2 / n2)) * ((v1 / n1) + (v2 / n2))) /
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,53,(v1 * v1) / (n1 * n1 * (n1 - 1d)) + (v2 * v2) /
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,54,n2 * n2 * (n2 - 1d)));
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,57,* (non-Javadoc)
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,58," @see org.apache.commons.math.stat.inference.TTest#pairedT(double[], double[])"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,36,"* Computes a paired, 2-sample t-statistic based on the data in the input"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,37,* arrays.  The t-statistic returned is equivalent to what would be returned by
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,38,"* computing the one-sample t-statistic {@link #t(double, double[])}, with"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,39,* <code>mu = 0</code> and the sample array consisting of the (signed)
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,40,* differences between corresponding entries in <code>sample1</code> and
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,41,* <code>sample2.</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,42,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,43,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,44,* <li>The input arrays must have the same length and their common length
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,45,* must be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,46,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,48,* @param sample1 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,49,* @param sample2 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,50,* @return t statistic
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,51,* @throws IllegalArgumentException if the precondition is not met
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,52,* @throws MathException if the statistic can not be computed do to a
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,53,*         convergence or other numerical error.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,72,* (non-Javadoc)
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,73," @see org.apache.commons.math.stat.inference.TTest#pairedTTest(double[], double[])"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,68,"* Returns the <i>observed significance level</i>, or"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,69,"* <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,70,"* p-value</a>, associated with a paired, two-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,71,* based on the data in the input arrays.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,72,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,73,* The number returned is the smallest significance level
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,74,* at which one can reject the null hypothesis that the mean of the paired
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,75,* differences is 0 in favor of the two-sided alternative that the mean paired
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,76,"* difference is not equal to 0. For a one-sided test, divide the returned"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,77,* value by 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,78,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,79,* This test is equivalent to a one-sample t-test computed using
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,80,"* {@link #tTest(double, double[])} with <code>mu = 0</code> and the sample"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,81,* array consisting of the signed differences between corresponding elements of
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,82,* <code>sample1</code> and <code>sample2.</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,83,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,84,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,85,* The validity of the p-value depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,86,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,87,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,88,* here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,89,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,90,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,91,* <li>The input array lengths must be the same and their common length must
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,92,* be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,93,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,95,* @param sample1 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,96,* @param sample2 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,97,* @return p-value for t-test
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,98,* @throws IllegalArgumentException if the precondition is not met
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,99,* @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,84, Performs a paired t-test</a> evaluating that null hypothesis that the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,110,* Performs a paired t-test</a> evaluating the null hypothesis that the
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,124, Computes t test statistic for 1-sample t-test.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,126, @param m sample mean
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,127, @param mu constant to test against
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,128, @param v sample variance
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,129, @param n sample n
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,130, @return t test statistic
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,132,"rotected double t(double m, double mu, double v, double n) {"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,133,eturn (m - mu) / Math.sqrt(v / n);
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,137, Computes t test statistic for 2-sample t-test.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,139, @param m1 first sample mean
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,140, @param m2 second sample mean
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,141, @param v1 first sample variance
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,142, @param v2 second sample variance
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,143, @param n1 first sample n
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,144, @param n2 second sample n
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,145, @return t test statistic
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,147,"rotected double t(double m1, double m2,  double v1, double v2, double n1,double n2)  {"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,148,eturn (m1 - m2) / Math.sqrt((v1 / n1) + (v2 / n2));
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,150,"* Computes a <a href=""http://www.itl.nist.gov/div898/handbook/prc/section2/prc22.htm#formula"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,151,* t statistic </a> given observed values and a comparison constant.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,152,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,153,* This statistic can be used to perform a one sample t-test for the mean.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,154,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,155,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,156,* <li>The observed array length must be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,157,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,173,"* Computes a <a href=""http://www.itl.nist.gov/div898/handbook/prc/section2/prc22.htm#formula"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,174,* t statistic </a> to use in comparing the mean of the dataset described by
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,175,* <code>sampleStats</code> to <code>mu</code>.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,176,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,177,* This statistic can be used to perform a one sample t-test for the mean.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,178,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,179,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,180,* <li><code>observed.getN() > = 2</code>.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,181,* </li></ul>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,167, @param sampleStats StatisticalSummary holding sample summary statitstics
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,184,* @param sampleStats DescriptiveStatistics holding sample summary statitstics
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,197,"* Computes a <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,198,* 2-sample t statistic. </a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,199,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,200,* This statistic can be used to perform a two-sample t-test to compare
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,201,* sample means.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,202,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,203,"* If <code>equalVariances</code> is <code>true</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,204,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,205,* (1) &nbsp;&nbsp;<code>  t = (m1 - m2) / (sqrt(1/n1 +1/n2) sqrt(var))</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,206,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,207,* where <strong><code>n1</code></strong> is the size of first sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,208,* <strong><code> n2</code></strong> is the size of second sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,209,* <strong><code> m1</code></strong> is the mean of first sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,210,* <strong><code> m2</code></strong> is the mean of second sample</li>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,211,* </ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,212,* and <strong><code>var</code></strong> is the pooled variance estimate:
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,213,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,214,* <code>var = sqrt(((n1 - 1)var1 + (n2 - 1)var2) / ((n1-1) + (n2-1)))</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,215,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,216,* with <strong><code>var1<code></strong> the variance of the first sample and
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,217,* <strong><code>var2</code></strong> the variance of the second sample.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,218,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,219,"* If <code>equalVariances</code> is <code>false</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,220,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,221,* (2) &nbsp;&nbsp; <code>  t = (m1 - m2) / sqrt(var1/n1 + var2/n2)</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,222,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,223,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,224,* <li>The observed array lengths must both be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,225,* </li></ul>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,182, @return t-statistic
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,229,* @param equalVariances are the sample variances assumed equal?
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,230,* @return t statistic
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,232,* @throws MathException if the statistic can not be computed do to a
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,233,*         convergence or other numerical error.
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,185,"ublic double t(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,235,"public double t(double[] sample1, double[] sample2, boolean equalVariances)"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,192,"tatUtils.variance(sample2),  (double) sample1.length, (double) sample2.length);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,242,"StatUtils.variance(sample2),  (double) sample1.length,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,243,"(double) sample2.length, equalVariances);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,247,"* Computes a <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,248,"* 2-sample t statistic </a>, comparing the means of the datasets described"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,249,* by two {@link StatisticalSummary} instances.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,250,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,251,* This statistic can be used to perform a two-sample t-test to compare
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,252,* sample means.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,253,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,254,"* If <code>equalVariances</code> is <code>true</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,255,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,256,* (1) &nbsp;&nbsp;<code>  t = (m1 - m2) / (sqrt(1/n1 +1/n2) sqrt(var))</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,257,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,258,* where <strong><code>n1</code></strong> is the size of first sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,259,* <strong><code> n2</code></strong> is the size of second sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,260,* <strong><code> m1</code></strong> is the mean of first sample;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,261,* <strong><code> m2</code></strong> is the mean of second sample</li>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,262,* </ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,263,* and <strong><code>var</code></strong> is the pooled variance estimate:
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,264,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,265,* <code>var = sqrt(((n1 - 1)var1 + (n2 - 1)var2) / ((n1-1) + (n2-1)))</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,266,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,267,* with <strong><code>var1<code></strong> the variance of the first sample and
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,268,* <strong><code>var2</code></strong> the variance of the second sample.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,269,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,270,"* If <code>equalVariances</code> is <code>false</code>,  the t-statisitc is"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,271,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,272,* (2) &nbsp;&nbsp; <code>  t = (m1 - m2) / sqrt(var1/n1 + var2/n2)</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,273,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,274,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,275,* <li>The datasets described by the two Univariates must each contain
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,276,* at least 2 observations.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,277,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,281,* @param equalVariances are the sample variances assumed equal?
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,201,"ublic double t(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,285,"public double t(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,286,boolean equalVariances)
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,209,"ampleStats2.getVariance(), (double) sampleStats1.getN(), (double) sampleStats2.getN());"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,213," Computes p-value for 2-sided, 1-sample t-test."
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,215, @param m sample mean
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,216, @param mu constant to test against
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,217, @param v sample variance
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,218, @param n sample n
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,219, @return p-value
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,220, @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,222,"rotected double tTest(double m, double mu, double v, double n)"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,223,hrows MathException {
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,224,"ouble t = Math.abs(t(m, mu, v, n));"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,225,Distribution tDistribution =
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,226,istributionFactory.newInstance().createTDistribution(n - 1);
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,227,"eturn 1.0 - tDistribution.cumulativeProbability(-t, t);"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,231," Computes p-value for 2-sided, 2-sample t-test."
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,233, @param m1 first sample mean
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,234, @param m2 second sample mean
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,235, @param v1 first sample variance
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,236, @param v2 second sample variance
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,237, @param n1 first sample n
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,238, @param n2 second sample n
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,239, @return p-value
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,240, @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,242,"rotected double tTest(double m1, double m2, double v1, double v2, double n1, double n2)"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,243,hrows MathException {
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,244,"ouble t = Math.abs(t(m1, m2, v1, v2, n1, n2));"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,245,Distribution tDistribution =
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,246,"istributionFactory.newInstance().createTDistribution(df(v1, v2, n1, n2));"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,247,"eturn 1.0 - tDistribution.cumulativeProbability(-t, t);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,294,"sampleStats2.getVariance(), (double) sampleStats1.getN(),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,295,"(double) sampleStats2.getN(), equalVariances);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,299,"* Returns the <i>observed significance level</i>, or"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,300,"* <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,301,"* p-value</a>, associated with a one-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,302,* comparing the mean of the input array with the constant <code>mu</code>.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,303,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,304,* The number returned is the smallest significance level
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,305,* at which one can reject the null hypothesis that the mean equals
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,306,* <code>mu</code> in favor of the two-sided alternative that the mean
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,307,"* is different from <code>mu</code>. For a one-sided test, divide the"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,308,* returned value by 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,309,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,310,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,311,* The validity of the test depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,312,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,313,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,314,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,315,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,316,* <li>The observed array length must be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,317,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,334,"* Performs a <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,335,* two-sided t-test</a> evaluating the null hypothesis that the mean of the population from
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,336,*  which <code>sample</code> is drawn equals <code>mu</code>.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,337,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,338,* Returns <code>true</code> iff the null hypothesis can be
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,339,* rejected with confidence <code>1 - alpha</code>.  To
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,340,"* perform a 1-sided test, use <code>alpha / 2</code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,341,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,342,* <strong>Examples:</strong><br><ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,343,* <li>To test the (2-sided) hypothesis <code>sample mean = mu </code> at
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,344,"* the 95% level, use <br><code>tTest(mu, sample, 0.05) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,345,* </li>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,346,* <li>To test the (one-sided) hypothesis <code> sample mean < mu </code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,347,"* at the 99% level, first verify that the measured sample mean is less"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,348,* than <code>mu</code> and then use
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,349,"* <br><code>tTest(mu, sample, 0.005) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,350,* </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,351,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,352,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,353,* The validity of the test depends on the assumptions of the one-sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,354,"* parametric t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,355,"* <a href=""http://www.basic.nwu.edu/statguidefiles/sg_glos.html#one-sample"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,356,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,357,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,358,* <li>The observed array length must be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,359,* </li></ul>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,271, @throws MathException if an error occurs computing the p-value
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,366,* @throws MathException if an error computing the p-value
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,377,"* Returns the <i>observed significance level</i>, or"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,378,"* <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,379,"* p-value</a>, associated with a one-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,380,* comparing the mean of the dataset described by <code>sampleStats</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,381,* with the constant <code>mu</code>.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,382,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,383,* The number returned is the smallest significance level
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,384,* at which one can reject the null hypothesis that the mean equals
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,385,* <code>mu</code> in favor of the two-sided alternative that the mean
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,386,"* is different from <code>mu</code>. For a one-sided test, divide the"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,387,* returned value by 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,388,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,389,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,390,* The validity of the test depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,391,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,392,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,393,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,394,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,395,* <li>The sample must contain at least 2 observations.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,396,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,413,"* Performs a <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,414,* two-sided t-test</a> evaluating the null hypothesis that the mean of the population from
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,415,* which the dataset described by <code>stats</code> is drawn equals <code>mu</code>.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,416,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,417,* Returns <code>true</code> iff the null hypothesis can be
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,418,* rejected with confidence <code>1 - alpha</code>.  To
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,419,"* perform a 1-sided test, use <code>alpha / 2</code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,420,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,421,* <strong>Examples:</strong><br><ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,422,* <li>To test the (2-sided) hypothesis <code>sample mean = mu </code> at
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,423,"* the 95% level, use <br><code>tTest(mu, sampleStats, 0.05) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,424,* </li>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,425,* <li>To test the (one-sided) hypothesis <code> sample mean < mu </code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,426,"* at the 99% level, first verify that the measured sample mean is less"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,427,* than <code>mu</code> and then use
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,428,"* <br><code>tTest(mu, sampleStats, 0.005) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,429,* </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,430,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,431,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,432,* The validity of the test depends on the assumptions of the one-sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,433,"* parametric t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,434,"* <a href=""http://www.basic.nwu.edu/statguidefiles/sg_glos.html#one-sample"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,435,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,436,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,437,* <li>The sample must include at least 2 observations.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,438,* </li></ul>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,304,"ublic boolean tTest( double mu, StatisticalSummary sampleStats,double alpha)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,447,"public boolean tTest( double mu, StatisticalSummary sampleStats, double alpha)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,456,"* Returns the <i>observed significance level</i>, or"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,457,"* <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,458,"* p-value</a>, associated with a two-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,459,* comparing the means of the input arrays.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,460,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,461,* The number returned is the smallest significance level
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,462,* at which one can reject the null hypothesis that the two means are
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,463,* equal in favor of the two-sided alternative that they are different.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,464,"* For a one-sided test, divide the returned value by 2."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,465,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,466,"* If the <code>equalVariances</code> parameter is <code>false,</code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,467,* the test does not assume that the underlying popuation variances are
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,468,* equal  and it uses approximated degrees of freedom computed from the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,469,"* sample data to compute the p-value.  In this case, formula (1) for the"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,470,"* {@link #t(double[], double[], boolean)} statistic is used"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,471,"* and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,472,* as described
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,473,"* <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,474,* here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,475,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,476,"* If <code>equalVariances</code> is <code>true</code>, a pooled variance"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,477,* estimate is used to compute the t-statistic (formula (2)) and the sum of the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,478,* sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,479,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,480,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,481,* The validity of the p-value depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,482,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,483,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,484,* here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,485,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,486,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,487,* <li>The observed array lengths must both be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,488,* </li></ul>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,316, @return tTest p-value
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,492,* @param equalVariances are sample variances assumed to be equal?
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,493,* @return p-value for t-test
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,320,"ublic double tTest(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,497,"public double tTest(double[] sample1, double[] sample2, boolean equalVariances)"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,327,"tatUtils.variance(sample2), (double) sample1.length, (double) sample2.length);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,504,"StatUtils.variance(sample2), (double) sample1.length,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,505,"(double) sample2.length, equalVariances);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,509,"* Performs a <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,510,* two-sided t-test</a> evaluating the null hypothesis that <code>sample1</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,511,"* and <code>sample2</code> are drawn from populations with the same mean,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,512,* with significance level <code>alpha</code>.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,513,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,514,* Returns <code>true</code> iff the null hypothesis that the means are
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,515,* equal can be rejected with confidence <code>1 - alpha</code>.  To
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,516,"* perform a 1-sided test, use <code>alpha / 2</code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,517,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,518,"* If the <code>equalVariances</code> parameter is <code>false,</code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,519,* the test does not assume that the underlying popuation variances are
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,520,* equal  and it uses approximated degrees of freedom computed from the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,521,"* sample data to compute the p-value.  In this case, formula (1) for the"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,522,"* {@link #t(double[], double[], boolean)} statistic is used"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,523,"* and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,524,* as described
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,525,"* <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,526,* here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,527,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,528,"* If <code>equalVariances</code> is <code>true</code>, a pooled variance"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,529,* estimate is used to compute the t-statistic (formula (2)) and the sum of the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,530,* sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,531,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,532,* <strong>Examples:</strong><br><ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,533,* <li>To test the (2-sided) hypothesis <code>mean 1 = mean 2 </code> at
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,534,"* the 95% level, under the assumption of equal subpopulation variances,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,535,"* use <br><code>tTest(sample1, sample2, 0.05, true) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,536,* </li>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,537,* <li>To test the (one-sided) hypothesis <code> mean 1 < mean 2 </code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,538,"* at the 99% level without assuming equal variances, first verify that the measured"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,539,* mean of <code>sample 1</code> is less than the mean of <code>sample 2</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,540,"* and then use <br><code>tTest(sample1, sample2, 0.005, false) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,541,* </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,542,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,543,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,544,* The validity of the test depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,545,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,546,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,547,* here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,548,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,549,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,550,* <li>The observed array lengths must both be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,551,* </li>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,552,* <li> <code> 0 < alpha < 0.5 </code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,553,* </li></ul>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,333, @param alpha significance level
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,557,* @param alpha significance level of the test
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,558,* @param equalVariances are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,335,     confidence 1 - alpha
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,560,* confidence 1 - alpha
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,339,"ublic boolean tTest(double[] sample1, double[] sample2, double alpha)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,564,"public boolean tTest(double[] sample1, double[] sample2, double alpha,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,565,boolean equalVariances)
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,344,"eturn (tTest(sample1, sample2) < alpha);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,570,"return (tTest(sample1, sample2, equalVariances) < alpha);"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,348, @param sampleStats1 StatisticalSummary describing data from the first sample
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,349, @param sampleStats2 StatisticalSummary describing data from the second sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,574,"* Returns the <i>observed significance level</i>, or"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,575,"* <a href=""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,576,"* p-value</a>, associated with a two-sample, two-tailed t-test"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,577,* comparing the means of the datasets described by two Univariates.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,578,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,579,* The number returned is the smallest significance level
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,580,* at which one can reject the null hypothesis that the two means are
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,581,* equal in favor of the two-sided alternative that they are different.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,582,"* For a one-sided test, divide the returned value by 2."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,583,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,584,"* If the <code>equalVariances</code> parameter is <code>false,</code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,585,* the test does not assume that the underlying popuation variances are
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,586,* equal  and it uses approximated degrees of freedom computed from the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,587,"* sample data to compute the p-value.  In this case, formula (1) for the"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,588,"* {@link #t(double[], double[], boolean)} statistic is used"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,589,"* and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,590,* as described
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,591,"* <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,592,* here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,593,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,594,"* If <code>equalVariances</code> is <code>true</code>, a pooled variance"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,595,* estimate is used to compute the t-statistic (formula (2)) and the sum of the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,596,* sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,597,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,598,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,599,* The validity of the p-value depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,600,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,601,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">here</a>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,602,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,603,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,604,* <li>The datasets described by the two Univariates must each contain
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,605,* at least 2 observations.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,606,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,608,* @param sampleStats1  StatisticalSummary describing data from the first sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,609,* @param sampleStats2  StatisticalSummary describing data from the second sample
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,610,* @param equalVariances  are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,354,"ublic double tTest(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,615,"public double tTest(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,616,boolean equalVariances)
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,361,"ampleStats2.getVariance(), (double) sampleStats1.getN(), (double) sampleStats2.getN());"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,623,"sampleStats2.getVariance(), (double) sampleStats1.getN(),"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,624,"(double) sampleStats2.getN(), equalVariances);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,628,"* Performs a <a href=""http://www.itl.nist.gov/div898/handbook/eda/section3/eda353.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,629,* two-sided t-test</a> evaluating the null hypothesis that <code>sampleStats1</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,630,* and <code>sampleStats2</code> describe datasets drawn from populations with the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,631,"* same mean, with significance level <code>alpha</code>."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,632,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,633,* Returns <code>true</code> iff the null hypothesis that the means are
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,634,* equal can be rejected with confidence <code>1 - alpha</code>.  To
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,635,"* perform a 1-sided test, use <code>alpha / 2</code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,636,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,637,"* If the <code>equalVariances</code> parameter is <code>false,</code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,638,* the test does not assume that the underlying popuation variances are
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,639,* equal  and it uses approximated degrees of freedom computed from the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,640,"* sample data to compute the p-value.  In this case, formula (1) for the"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,641,"* {@link #t(double[], double[], boolean)} statistic is used"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,642,"* and the Welch-Satterthwaite approximation to the degrees of freedom is used,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,643,* as described
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,644,"* <a href=""http://www.itl.nist.gov/div898/handbook/prc/section3/prc31.htm"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,645,* here.</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,646,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,647,"* If <code>equalVariances</code> is <code>true</code>, a pooled variance"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,648,* estimate is used to compute the t-statistic (formula (2)) and the sum of the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,649,* sample sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,650,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,651,* <strong>Examples:</strong><br><ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,652,* <li>To test the (2-sided) hypothesis <code>mean 1 = mean 2 </code> at
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,653,"* the 95% level under the assumption of equal subpopulation variances, use"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,654,"* <br><code>tTest(sampleStats1, sampleStats2, 0.05, true) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,655,* </li>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,656,* <li>To test the (one-sided) hypothesis <code> mean 1 < mean 2 </code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,657,"* at the 99% level without assuming that subpopulation variances are equal,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,658,* first verify that the measured mean of  <code>sample 1</code> is less than
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,659,* the mean of <code>sample 2</code> and then use
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,660,"* <br><code>tTest(sampleStats1, sampleStats2, 0.005, false) </code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,661,* </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,662,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,663,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,664,* The validity of the test depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,665,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,666,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,667,* here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,668,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,669,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,670,* <li>The datasets described by the two Univariates must each contain
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,671,* at least 2 observations.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,672,* </li>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,673,* <li> <code> 0 < alpha < 0.5 </code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,674,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,679,* @param equalVariances  are sample variances assumed to be equal?
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,369,     confidence 1 - alpha
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,681,* confidence 1 - alpha
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,374,ouble alpha)
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,686,"double alpha, boolean equalVariances)"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,379,"eturn (tTest(sampleStats1, sampleStats2) < alpha);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,691,"return (tTest(sampleStats1, sampleStats2, equalVariances) < alpha);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,694,//----------------------------------------------- Protected methods
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,697,* Computes approximate degrees of freedom for 2-sample t-test.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,699,* @param v1 first sample variance
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,700,* @param v2 second sample variance
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,701,* @param n1 first sample n
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,702,* @param n2 second sample n
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,703,* @return approximate degrees of freedom
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,705,"protected double df(double v1, double v2, double n1, double n2) {"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,706,return (((v1 / n1) + (v2 / n2)) * ((v1 / n1) + (v2 / n2))) /
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,707,((v1 * v1) / (n1 * n1 * (n1 - 1d)) + (v2 * v2) /
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,708,(n2 * n2 * (n2 - 1d)));
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,712,* Computes t test statistic for 1-sample t-test.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,714,* @param m sample mean
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,715,* @param mu constant to test against
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,716,* @param v sample variance
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,717,* @param n sample n
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,718,* @return t test statistic
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,720,"protected double t(double m, double mu, double v, double n) {"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,721,return (m - mu) / Math.sqrt(v / n);
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,725,* Computes t test statistic for 2-sample t-test.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,726,"* If equalVariance is true,  the pooled variance"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,727,* estimate is computed and used.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,729,* @param m1 first sample mean
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,730,* @param m2 second sample mean
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,731,* @param v1 first sample variance
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,732,* @param v2 second sample variance
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,733,* @param n1 first sample n
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,734,* @param n2 second sample n
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,735,* @return t test statistic
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,737,"protected double t(double m1, double m2,  double v1, double v2, double n1,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,738,"double n2, boolean equalVariances)  {"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,739,if (equalVariances) {
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,740,double pooledVariance = ((n1  - 1) * v1 + (n2 -1) * v2 ) / (n1 + n2 - 2);
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,741,return (m1 - m2) / Math.sqrt(pooledVariance * (1d / n1 + 1d / n2));
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,742,} else {
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,743,return (m1 - m2) / Math.sqrt((v1 / n1) + (v2 / n2));
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,748,"* Computes p-value for 2-sided, 1-sample t-test."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,750,* @param m sample mean
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,751,* @param mu constant to test against
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,752,* @param v sample variance
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,753,* @param n sample n
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,754,* @return p-value
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,755,* @throws MathException if an error occurs computing the p-value
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,757,"protected double tTest(double m, double mu, double v, double n)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,758,throws MathException {
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,759,"double t = Math.abs(t(m, mu, v, n));"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,760,TDistribution tDistribution =
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,761,DistributionFactory.newInstance().createTDistribution(n - 1);
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,762,"return 1.0 - tDistribution.cumulativeProbability(-t, t);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,766,"* Computes p-value for 2-sided, 2-sample t-test."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,767,"* If equalVariances is true, the sum of the sample sizes minus 2"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,768,* is used as df; otherwise df is approximated from the data.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,770,* @param m1 first sample mean
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,771,* @param m2 second sample mean
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,772,* @param v1 first sample variance
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,773,* @param v2 second sample variance
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,774,* @param n1 first sample n
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,775,* @param n2 second sample n
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,776,* @param equalVariances  are variances assumed equal?
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,777,* @return p-value
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,778,* @throws MathException if an error occurs computing the p-value
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,780,"protected double tTest(double m1, double m2, double v1, double v2,"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,781,"double n1, double n2, boolean equalVariances)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,782,throws MathException {
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,783,"double t = Math.abs(t(m1, m2, v1, v2, n1, n2, equalVariances));"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,784,double degreesOfFreedom = 0;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,785,if (equalVariances) {
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,786,degreesOfFreedom = (double) (n1 + n2 - 2);
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,787,} else {
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,788,"degreesOfFreedom= df(v1, v2, n1, n2);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,790,TDistribution tDistribution =
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,791,DistributionFactory.newInstance().createTDistribution(degreesOfFreedom);
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,792,"return 1.0 - tDistribution.cumulativeProbability(-t, t);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,26, @version $Revision: 1.4 $ $Date: 2004/06/01 00:44:24 $
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,26,* @version $Revision: 1.5 $ $Date: 2004/06/02 13:08:55 $
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,33,private double[] tooShortObs = { 1.0 };
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,34,private double[] nullObserved = null;
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,35,private double[] emptyObs = {};
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,36,private SummaryStatistics emptyStats = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,37,private SummaryStatistics nullStats = null;
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,38,SummaryStatistics tooShortStats = null;
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,45,tooShortStats = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,46,tooShortStats.addValue(0d);
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,46,ublic void testT() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,55,public void testOneSampleT() throws Exception {
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,59,ouble[] nullObserved = null;
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,67,ummaryStatistics nullStats = null;
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,75,ouble[] emptyObs = {};
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,83,ummaryStatistics emptyStats =SummaryStatistics.newInstance();
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,91,ouble[] tooShortObs = { 1.0 };
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,105,ummaryStatistics tooShortStats = SummaryStatistics.newInstance();
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,106,ooShortStats.addValue(0d);
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,123,public void testOneSampleTTest() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,155,public void testTwoSampleTHeterscedastic() throws Exception {
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,161,"ssertEquals(""two sample t stat"", 1.6037, testStatistic.t(sample1, sample2), 10E-4);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,162,"ssertEquals(""two sample t stat"", 1.6037, testStatistic.t(sampleStats1, sampleStats2), 10E-4);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,163,"ssertEquals(""two sample p value"", 0.0644, testStatistic.tTest(sample1, sample2) / 2d, 10E-4);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,164,"ssertEquals(""two sample p value"", 0.0644, testStatistic.tTest(sampleStats1, sampleStats2) / 2d, 10E-4);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,166,"ssertTrue(""two sample t-test reject"", testStatistic.tTest(sample1, sample2, 0.2));"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,167,"ssertTrue(""two sample t-test reject"", testStatistic.tTest(sampleStats1, sampleStats2, 0.2));"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,168,"ssertTrue(""two sample t-test accept"", !testStatistic.tTest(sample1, sample2, 0.1));"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,169,"ssertTrue(""two sample t-test accept"", !testStatistic.tTest(sampleStats1, sampleStats2, 0.1));"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,168,"assertEquals(""two sample heteroscedastic t stat"", 1.603717,"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,169,"testStatistic.t(sample1, sample2, false), 1E-6);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,170,"assertEquals(""two sample heteroscedastic t stat"", 1.603717,"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,171,"testStatistic.t(sampleStats1, sampleStats2, false), 1E-6);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,172,"assertEquals(""two sample heteroscedastic p value"", 0.1288394,"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,173,"testStatistic.tTest(sample1, sample2, false), 1E-7);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,174,"assertEquals(""two sample heteroscedastic p value"", 0.1288394,"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,175,"testStatistic.tTest(sampleStats1, sampleStats2, false), 1E-7);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,176,"assertTrue(""two sample heteroscedastic t-test reject"","
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,177,"testStatistic.tTest(sample1, sample2, 0.2, false));"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,178,"assertTrue(""two sample heteroscedastic t-test reject"","
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,179,"testStatistic.tTest(sampleStats1, sampleStats2, 0.2, false));"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,180,"assertTrue(""two sample heteroscedastic t-test accept"","
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,181,"!testStatistic.tTest(sample1, sample2, 0.1, false));"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,182,"assertTrue(""two sample heteroscedastic t-test accept"","
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,183,"!testStatistic.tTest(sampleStats1, sampleStats2, 0.1, false));"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,172,"estStatistic.tTest(sample1, sample2, 95);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,186,"testStatistic.tTest(sample1, sample2, .95, false);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,179,"estStatistic.tTest(sampleStats1, sampleStats2, 95);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,193,"testStatistic.tTest(sampleStats1, sampleStats2, .95, false);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,186,"estStatistic.tTest(sample1, tooShortObs, .01);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,200,"testStatistic.tTest(sample1, tooShortObs, .01, false);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,193,"estStatistic.tTest(sampleStats1, tooShortStats, .01);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,207,"testStatistic.tTest(sampleStats1, tooShortStats, .01, false);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,200,"estStatistic.tTest(sample1, tooShortObs);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,214,"testStatistic.tTest(sample1, tooShortObs, false);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,207,"estStatistic.tTest(sampleStats1, tooShortStats);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,221,"testStatistic.tTest(sampleStats1, tooShortStats, false);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,214,"estStatistic.t(sample1, tooShortObs);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,228,"testStatistic.t(sample1, tooShortObs, false);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,221,"estStatistic.t(sampleStats1, tooShortStats);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,235,"testStatistic.t(sampleStats1, tooShortStats, false);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,241,public void testTwoSampleTHomoscedastic() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,242,"double[] sample1 ={2, 4, 6, 8, 10};"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,243,"double[] sample2 = {4, 6, 8, 10, 16};"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,244,SummaryStatistics sampleStats1 = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,245,for (int i = 0; i < sample1.length; i++) {
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,246,sampleStats1.addValue(sample1[i]);
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,248,SummaryStatistics sampleStats2 = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,249,for (int i = 0; i < sample2.length; i++) {
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,250,sampleStats2.addValue(sample2[i]);
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,253,// Target comparison values computed using R version 1.8.1 (Linux version)
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,254,"assertEquals(""two sample homoscedastic t stat"", -1.120897,"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,255,"testStatistic.t(sample1, sample2, true), 10E-6);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,256,"assertEquals(""two sample homoscedastic p value"", 0.2948490,"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,257,"testStatistic.tTest(sampleStats1, sampleStats2, true), 1E-6);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,258,"assertTrue(""two sample homoscedastic t-test reject"","
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,259,"testStatistic.tTest(sample1, sample2, 0.3, true));"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,260,"assertTrue(""two sample homoscedastic t-test accept"","
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,261,"!testStatistic.tTest(sample1, sample2, 0.2, true));"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,233,"ssertEquals(-2.2361, testStatistic.t(sample1, sample2), 1E-4);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,234,"ssertEquals(0.1987, testStatistic.tTest(sample1, sample2), 1E-4);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,269,"assertEquals(-2.2361, testStatistic.t(sample1, sample2, false), 1E-4);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,270,"assertEquals(0.1987, testStatistic.tTest(sample1, sample2, false), 1E-4);"
