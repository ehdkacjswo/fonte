is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,157,/** Perform some sanity checks on the integration parameters.
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,158,* @param equations differential equations set
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,159,* @param t0 start time
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,160,* @param y0 state vector at t0
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,161,* @param t target time for the integration
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,162,* @param y placeholder where to put the state vector
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,163,* @exception IntegratorException if some inconsistency is detected
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,165,"protected void sanityChecks(FirstOrderDifferentialEquations equations,"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,166,"double t0, double[] y0, double t, double[] y)"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,167,throws IntegratorException {
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,168,if (equations.getDimension() != y0.length) {
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,169,"throw new IntegratorException(""dimensions mismatch: ODE problem has dimension {0},"""
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,170,"+ "" initial state vector has dimension {1}"","
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,171,new String[] {
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,172,"Integer.toString(equations.getDimension()),"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,173,Integer.toString(y0.length)
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,176,if (equations.getDimension() != y.length) {
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,177,"throw new IntegratorException(""dimensions mismatch: ODE problem has dimension {0},"""
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,178,"+ "" final state vector has dimension {1}"","
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,179,new String[] {
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,180,"Integer.toString(equations.getDimension()),"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,181,Integer.toString(y.length)
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,184,if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != y0.length)) {
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,185,"throw new IntegratorException(""dimensions mismatch: state vector has dimension {0},"""
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,186,"+ "" absolute tolerance vector has dimension {1}"","
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,187,new String[] {
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,188,"Integer.toString(y0.length),"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,189,Integer.toString(vecAbsoluteTolerance.length)
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,192,if ((vecRelativeTolerance != null) && (vecRelativeTolerance.length != y0.length)) {
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,193,"throw new IntegratorException(""dimensions mismatch: state vector has dimension {0},"""
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,194,"+ "" relative tolerance vector has dimension {1}"","
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,195,new String[] {
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,196,"Integer.toString(y0.length),"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,197,Integer.toString(vecRelativeTolerance.length)
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,200,"if (Math.abs(t - t0) <= 1.0e-12 * Math.max(Math.abs(t0), Math.abs(t))) {"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,201,"throw new IntegratorException(""too small integration interval: length = {0}"","
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,202,new String[] {
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,203,Double.toString(Math.abs(t - t0))
False,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,511,/ sanity check
False,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,512,f (equations.getDimension() != y0.length) {
False,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,513,"hrow new IntegratorException(""dimensions mismatch: """
False,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,514," ""ODE problem has dimension {0}"""
False,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,515," "", state vector has dimension {1}"","
False,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,516,ew String[] {
False,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,517,"nteger.toString(equations.getDimension()),"
False,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,518,nteger.toString(y0.length)
False,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,521,"f (Math.abs(t - t0) <= 1.0e-12 * Math.max(Math.abs(t0), Math.abs(t))) {"
False,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,522,"hrow new IntegratorException(""too small integration interval: length = {0}"","
False,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,523,ew String[] {
False,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,524,ouble.toString(Math.abs(t - t0))
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,511,"sanityChecks(equations, t0, y0, t, y);"
False,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,165,/ sanity check
False,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,166,f (equations.getDimension() != y0.length) {
False,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,167,"hrow new IntegratorException(""dimensions mismatch: ODE problem has dimension {0},"""
False,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,168," "" state vector has dimension {1}"","
False,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,169,ew String[] {
False,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,170,"nteger.toString(equations.getDimension()),"
False,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,171,nteger.toString(y0.length)
False,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,174,"f (Math.abs(t - t0) <= 1.0e-12 * Math.max(Math.abs(t0), Math.abs(t))) {"
False,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,175,"hrow new IntegratorException(""too small integration interval: length = {0}"","
False,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,176,ew String[] {
False,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,177,ouble.toString(Math.abs(t - t0))
True,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,165,"sanityChecks(equations, t0, y0, t, y);"
False,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,117,"ublic void integrate(FirstOrderDifferentialEquations equations,"
False,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,118,"ouble t0, double[] y0,"
False,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,119,"ouble t, double[] y)"
False,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,120,"hrows DerivativeException, IntegratorException {"
False,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,122,/ sanity check
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,117,/** Perform some sanity checks on the integration parameters.
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,118,* @param equations differential equations set
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,119,* @param t0 start time
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,120,* @param y0 state vector at t0
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,121,* @param t target time for the integration
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,122,* @param y placeholder where to put the state vector
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,123,* @exception IntegratorException if some inconsistency is detected
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,125,"private void sanityChecks(FirstOrderDifferentialEquations equations,"
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,126,"double t0, double[] y0, double t, double[] y)"
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,127,throws IntegratorException {
False,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,125," "" state vector has dimension {1}"","
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,130,"+ "" initial state vector has dimension {1}"","
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,136,if (equations.getDimension() != y.length) {
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,137,"throw new IntegratorException(""dimensions mismatch: ODE problem has dimension {0},"""
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,138,"+ "" final state vector has dimension {1}"","
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,139,new String[] {
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,140,"Integer.toString(equations.getDimension()),"
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,141,Integer.toString(y.length)
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,152,"public void integrate(FirstOrderDifferentialEquations equations,"
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,153,"double t0, double[] y0,"
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,154,"double t, double[] y)"
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,155,"throws DerivativeException, IntegratorException {"
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,157,"sanityChecks(equations, t0, y0, t, y);"
