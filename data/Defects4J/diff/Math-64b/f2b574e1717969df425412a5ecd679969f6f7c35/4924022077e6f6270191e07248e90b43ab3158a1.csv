is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,241,inal long curN = current.getN();
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,241,final double curN = current.getN();
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,81,* Test aggregate function by randomly generating a dataset of 10-100 values
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,82,"* from [-100, 100], dividing it into 2-5 partitions, computing stats for each"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,83,* partition and comparing the result of aggregate(...) applied to the collection
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,84,* of per-partition SummaryStatistics with a single SummaryStatistics computed
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,85,* over the full sample.
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,87,* @throws Exception
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,121,public void testAggregateDegenerate() throws Exception {
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,122,"double[] totalSample = {1, 2, 3, 4, 5};"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,123,"double[][] subSamples = {{1}, {2}, {3}, {4}, {5}};"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,125,// Compute combined stats directly
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,126,SummaryStatistics totalStats = new SummaryStatistics();
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,127,for (int i = 0; i < totalSample.length; i++) {
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,128,totalStats.addValue(totalSample[i]);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,131,// Now compute subsample stats individually and aggregate
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,132,SummaryStatistics[] subSampleStats = new SummaryStatistics[5];
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,133,for (int i = 0; i < 5; i++) {
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,134,subSampleStats[i] = new SummaryStatistics();
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,136,Collection<SummaryStatistics> aggregate = new ArrayList<SummaryStatistics>();
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,137,for (int i = 0; i < 5; i++) {
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,138,for (int j = 0; j < subSamples[i].length; j++) {
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,139,subSampleStats[i].addValue(subSamples[i][j]);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,141,aggregate.add(subSampleStats[i]);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,144,// Compare values
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,145,StatisticalSummaryValues aggregatedStats = AggregateSummaryStatistics.aggregate(aggregate);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,146,"assertEquals(totalStats.getSummary(), aggregatedStats, 10E-12);"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,149,public void testAggregateSpecialValues() throws Exception {
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,150,"double[] totalSample = {Double.POSITIVE_INFINITY, 2, 3, Double.NaN, 5};"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,151,"double[][] subSamples = {{Double.POSITIVE_INFINITY, 2}, {3}, {Double.NaN}, {5}};"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,153,// Compute combined stats directly
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,154,SummaryStatistics totalStats = new SummaryStatistics();
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,155,for (int i = 0; i < totalSample.length; i++) {
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,156,totalStats.addValue(totalSample[i]);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,159,// Now compute subsample stats individually and aggregate
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,160,SummaryStatistics[] subSampleStats = new SummaryStatistics[5];
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,161,for (int i = 0; i < 4; i++) {
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,162,subSampleStats[i] = new SummaryStatistics();
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,164,Collection<SummaryStatistics> aggregate = new ArrayList<SummaryStatistics>();
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,165,for (int i = 0; i < 4; i++) {
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,166,for (int j = 0; j < subSamples[i].length; j++) {
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,167,subSampleStats[i].addValue(subSamples[i][j]);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,169,aggregate.add(subSampleStats[i]);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,172,// Compare values
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,173,StatisticalSummaryValues aggregatedStats = AggregateSummaryStatistics.aggregate(aggregate);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,174,"assertEquals(totalStats.getSummary(), aggregatedStats, 10E-12);"
