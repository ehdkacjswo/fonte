is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,275,"f (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {"
False,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,276,f (row == null) {
False,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,277,ow = i;
False,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,278, else {
False,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,279,eturn null;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,275,"if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {"
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,276,row = i;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,277,"} else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {"
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,278,return null;
True,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,67,@Test
True,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,68,public void testSingleVariableAndConstraint() throws OptimizationException {
True,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,69,"LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 3 }, 0);"
True,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,70,Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
True,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,71,"constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.LEQ, 10));"
True,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,73,SimplexSolver solver = new SimplexSolver();
True,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,74,"RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);"
True,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,75,"assertEquals(10.0, solution.getPoint()[0], 0.0);"
True,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,76,"assertEquals(30.0, solution.getValue(), 0.0);"
