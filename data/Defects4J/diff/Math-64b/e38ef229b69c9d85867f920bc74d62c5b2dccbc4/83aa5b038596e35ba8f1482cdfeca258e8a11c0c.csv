is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,17,package org.apache.commons.math.exception;
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,19,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,20,import org.apache.commons.math.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,23,* Exception to be thrown when zero is provided where it is not allowed.
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,25,* @since 2.2
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,28,public class ZeroNotAllowedException extends MathIllegalNumberException {
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,30,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,31,private static final long serialVersionUID = -1960874856936000015L;
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,34,* Construct the exception.
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,36,public ZeroNotAllowedException() {
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,37,this(null);
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,41,* Construct the exception with a specific context.
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,43,* @param specific Specific contexte pattern .
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,45,public ZeroNotAllowedException(Localizable specific) {
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,46,"super(specific, LocalizedFormats.ZERO_NOT_ALLOWED, 0);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,18,package org.apache.commons.math.optimization.fitting;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,20,import java.io.Serializable;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,22,import org.apache.commons.math.FunctionEvaluationException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,23,import org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,24,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,25,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,26,import org.apache.commons.math.exception.ZeroNotAllowedException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,27,import org.apache.commons.math.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,30,* The derivative of {@link GaussianFunction}.  Specifically:
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,31,* <p>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,32,* <tt>f'(x) = (-b / (d^2)) * (x - c) * exp(-((x - c)^2) / (2*(d^2)))</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,33,* <p>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,34,* Notation key:
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,35,* <ul>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,36,* <li><tt>x^n</tt>: <tt>x</tt> raised to the power of <tt>n</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,37,* <li><tt>exp(x)</tt>: <i>e</i><tt>^x</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,38,* </ul>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,40,* @since 2.2
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,41,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,43,"public class GaussianDerivativeFunction implements UnivariateRealFunction, Serializable {"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,45,/** Serializable version identifier. */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,46,private static final long serialVersionUID = -6500229089670174766L;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,48,/** Parameter b of this function. */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,49,private final double b;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,51,/** Parameter c of this function. */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,52,private final double c;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,54,/** Square of the parameter d of this function. */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,55,private final double d2;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,58,* Constructs an instance with the specified parameters.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,60,* @param b <tt>b</tt> parameter value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,61,* @param c <tt>c</tt> parameter value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,62,* @param d <tt>d</tt> parameter value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,64,* @throws IllegalArgumentException if <code>d</code> is 0
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,66,"public GaussianDerivativeFunction(double b, double c, double d) {"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,67,if (d == 0.0) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,68,throw new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,70,this.b = b;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,71,this.c = c;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,72,this.d2 = d * d;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,76,* Constructs an instance with the specified parameters.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,78,"* @param parameters <tt>b</tt>, <tt>c</tt>, and <tt>d</tt> parameter values"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,80,"* @throws IllegalArgumentException if <code>parameters</code> is null,"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,81,"*         <code>parameters</code> length is not 3, or if"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,82,*         <code>parameters[2]</code> is 0
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,84,public GaussianDerivativeFunction(double[] parameters) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,85,if (parameters == null) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,86,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,88,if (parameters.length != 3) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,89,"throw new DimensionMismatchException(3, parameters.length);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,91,if (parameters[2] == 0.0) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,92,throw new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,94,this.b = parameters[0];
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,95,this.c = parameters[1];
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,96,this.d2 = parameters[2] * parameters[2];
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,99,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,100,public double value(double x) throws FunctionEvaluationException {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,101,final double xMc = x - c;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,102,return (-b / d2) * xMc * Math.exp(-(xMc * xMc) / (2.0 * d2));
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,18,package org.apache.commons.math.optimization.fitting;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,20,import org.apache.commons.math.FunctionEvaluationException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,21,import org.apache.commons.math.optimization.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,22,DifferentiableMultivariateVectorialOptimizer;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,23,import org.apache.commons.math.optimization.OptimizationException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,24,import org.apache.commons.math.optimization.fitting.CurveFitter;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,25,import org.apache.commons.math.optimization.fitting.WeightedObservedPoint;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,28,"* Fits points to a Gaussian function (that is, a {@link GaussianFunction})."
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,29,* <p>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,30,* Usage example:
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,31,* <pre>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,32,*   GaussianFitter fitter = new GaussianFitter(
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,33,*     new LevenbergMarquardtOptimizer());
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,34,"*   fitter.addObservedPoint(4.0254623,  531026.0);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,35,"*   fitter.addObservedPoint(4.03128248, 984167.0);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,36,"*   fitter.addObservedPoint(4.03839603, 1887233.0);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,37,"*   fitter.addObservedPoint(4.04421621, 2687152.0);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,38,"*   fitter.addObservedPoint(4.05132976, 3461228.0);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,39,"*   fitter.addObservedPoint(4.05326982, 3580526.0);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,40,"*   fitter.addObservedPoint(4.05779662, 3439750.0);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,41,"*   fitter.addObservedPoint(4.0636168,  2877648.0);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,42,"*   fitter.addObservedPoint(4.06943698, 2175960.0);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,43,"*   fitter.addObservedPoint(4.07525716, 1447024.0);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,44,"*   fitter.addObservedPoint(4.08237071, 717104.0);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,45,"*   fitter.addObservedPoint(4.08366408, 620014.0);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,46,*  GaussianFunction fitFunction = fitter.fit();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,47,* </pre>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,49,* @see ParametricGaussianFunction
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,50,* @since 2.2
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,51,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,53,public class GaussianFitter {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,55,/** Fitter used for fitting. */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,56,private final CurveFitter fitter;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,59,* Constructs an instance using the specified optimizer.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,61,* @param optimizer optimizer to use for the fitting
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,63,public GaussianFitter(DifferentiableMultivariateVectorialOptimizer optimizer) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,64,fitter = new CurveFitter(optimizer);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,68,"* Adds point (<code>x</code>, <code>y</code>) to list of observed points"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,69,* with a weight of 1.0.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,71,* @param x <tt>x</tt> point value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,72,* @param y <tt>y</tt> point value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,74,"public void addObservedPoint(double x, double y) {"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,75,"addObservedPoint(1.0, x, y);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,79,"* Adds point (<code>x</code>, <code>y</code>) to list of observed points"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,80,* with a weight of <code>weight</code>.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,82,* @param weight weight assigned to point
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,83,* @param x <tt>x</tt> point value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,84,* @param y <tt>y</tt> point value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,86,"public void addObservedPoint(double weight, double x, double y) {"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,87,"fitter.addObservedPoint(weight, x, y);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,91,* Fits Gaussian function to the observed points.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,93,* @return Gaussian function best fitting the observed points
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,95,* @throws FunctionEvaluationException if <code>CurveFitter.fit</code>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,96,*         throws it
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,97,* @throws OptimizationException if <code>CurveFitter.fit</code> throws it
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,98,* @throws IllegalArgumentException if <code>CurveFitter.fit</code> throws
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,99,*         it
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,101,* @see CurveFitter
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,103,public GaussianFunction fit()
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,104,"throws FunctionEvaluationException, OptimizationException {"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,105,"return new GaussianFunction(fitter.fit(new ParametricGaussianFunction(),"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,106,createParametersGuesser(fitter.getObservations()).guess()));
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,110,* Factory method to create a <code>GaussianParametersGuesser</code>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,111,* instance initialized with the specified observations.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,113,* @param observations points used to initialize the created
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,114,*        <code>GaussianParametersGuesser</code> instance
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,116,* @return new <code>GaussianParametersGuesser</code> instance
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,118,protected GaussianParametersGuesser createParametersGuesser(WeightedObservedPoint[] observations) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,119,return new GaussianParametersGuesser(observations);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,18,package org.apache.commons.math.optimization.fitting;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,20,import java.io.Serializable;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,22,import org.apache.commons.math.FunctionEvaluationException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,23,import org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,24,import org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,25,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,26,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,27,import org.apache.commons.math.exception.ZeroNotAllowedException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,28,import org.apache.commons.math.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,31,* A Gaussian function.  Specifically:
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,32,* <p>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,33,* <tt>f(x) = a + b*exp(-((x - c)^2 / (2*d^2)))</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,34,* <p>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,35,* Notation key:
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,36,* <ul>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,37,* <li><tt>x^n</tt>: <tt>x</tt> raised to the power of <tt>n</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,38,* <li><tt>exp(x)</tt>: <i>e</i><tt>^x</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,39,* </ul>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,40,* References:
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,41,* <ul>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,42,"* <li><a href=""http://en.wikipedia.org/wiki/Gaussian_function"">Wikipedia:"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,43,*   Gaussian function</a>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,44,* </ul>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,46,* @see GaussianDerivativeFunction
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,47,* @see ParametricGaussianFunction
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,48,* @since 2.2
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,49,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,51,"public class GaussianFunction implements DifferentiableUnivariateRealFunction, Serializable {"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,53,/** Serializable version identifier. */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,54,private static final long serialVersionUID = -3195385616125629512L;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,56,/** Parameter a of this function. */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,57,private final double a;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,59,/** Parameter b of this function. */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,60,private final double b;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,62,/** Parameter c of this function. */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,63,private final double c;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,65,/** Parameter d of this function. */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,66,private final double d;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,69,* Constructs an instance with the specified parameters.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,71,* @param a <tt>a</tt> parameter value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,72,* @param b <tt>b</tt> parameter value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,73,* @param c <tt>c</tt> parameter value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,74,* @param d <tt>d</tt> parameter value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,76,* @throws IllegalArgumentException if <code>d</code> is 0
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,78,"public GaussianFunction(double a, double b, double c, double d) {"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,79,if (d == 0.0) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,80,throw new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,82,this.a = a;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,83,this.b = b;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,84,this.c = c;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,85,this.d = d;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,89,* Constructs an instance with the specified parameters.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,91,"* @param parameters <tt>a</tt>, <tt>b</tt>, <tt>c</tt>, and <tt>d</tt>"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,92,*        parameter values
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,94,"* @throws IllegalArgumentException if <code>parameters</code> is null,"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,95,"*         <code>parameters</code> length is not 4, or if"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,96,*         <code>parameters[3]</code> is 0
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,98,public GaussianFunction(double[] parameters) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,99,if (parameters == null) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,100,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,102,if (parameters.length != 4) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,103,"throw new DimensionMismatchException(4, parameters.length);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,105,if (parameters[3] == 0.0) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,106,throw new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,108,this.a = parameters[0];
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,109,this.b = parameters[1];
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,110,this.c = parameters[2];
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,111,this.d = parameters[3];
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,114,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,115,public UnivariateRealFunction derivative() {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,116,"return new GaussianDerivativeFunction(b, c, d);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,119,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,120,public double value(double x) throws FunctionEvaluationException {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,121,final double xMc = x - c;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,122,return a + b * Math.exp(-xMc * xMc / (2.0 * (d * d)));
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,126,* Gets <tt>a</tt> parameter value.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,128,* @return <tt>a</tt> parameter value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,130,public double getA() {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,131,return a;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,135,* Gets <tt>b</tt> parameter value.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,137,* @return <tt>b</tt> parameter value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,139,public double getB() {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,140,return b;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,144,* Gets <tt>c</tt> parameter value.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,146,* @return <tt>c</tt> parameter value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,148,public double getC() {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,149,return c;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,153,* Gets <tt>d</tt> parameter value.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,155,* @return <tt>d</tt> parameter value
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,157,public double getD() {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,158,return d;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,18,package org.apache.commons.math.optimization.fitting;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,20,import java.util.Arrays;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,21,import java.util.Comparator;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,23,import org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,24,import org.apache.commons.math.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,25,import org.apache.commons.math.exception.OutOfRangeException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,26,import org.apache.commons.math.exception.ZeroNotAllowedException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,27,import org.apache.commons.math.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,30,"* Guesses the parameters (<tt>a</tt>, <tt>b</tt>, <tt>c</tt>, and <tt>d</tt>)"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,31,* of a {@link ParametricGaussianFunction} based on the specified observed
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,32,* points.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,34,* @since 2.2
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,35,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,37,public class GaussianParametersGuesser {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,39,/** Observed points. */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,40,private final WeightedObservedPoint[] observations;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,42,/** Resulting guessed parameters. */
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,43,private double[] parameters;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,46,* Constructs instance with the specified observed points.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,48,* @param observations observed points upon which should base guess
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,50,public GaussianParametersGuesser(WeightedObservedPoint[] observations) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,51,if (observations == null) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,52,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,54,if (observations.length < 3) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,55,"throw new NumberIsTooSmallException(observations.length, 3, true);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,57,this.observations = observations.clone();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,61,* Guesses the parameters based on the observed points.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,63,"* @return guessed parameters array <code>{a, b, c, d}</code>"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,65,public double[] guess() {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,66,if (parameters == null) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,67,parameters = basicGuess(observations);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,69,return parameters.clone();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,73,* Guesses the parameters based on the specified observed points.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,75,* @param points observed points upon which should base guess
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,77,"* @return guessed parameters array <code>{a, b, c, d}</code>"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,79,private double[] basicGuess(WeightedObservedPoint[] points) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,80,"Arrays.sort(points, createWeightedObservedPointComparator());"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,81,double[] params = new double[4];
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,83,int minYIdx = findMinY(points);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,84,params[0] = points[minYIdx].getY();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,86,int maxYIdx = findMaxY(points);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,87,params[1] = points[maxYIdx].getY();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,88,params[2] = points[maxYIdx].getX();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,90,double fwhmApprox;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,91,try {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,92,double halfY = params[0] + ((params[1] - params[0]) / 2.0);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,93,"double fwhmX1 = interpolateXAtY(points, maxYIdx, -1, halfY);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,94,"double fwhmX2 = interpolateXAtY(points, maxYIdx, +1, halfY);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,95,fwhmApprox = fwhmX2 - fwhmX1;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,96,} catch (OutOfRangeException e) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,97,fwhmApprox = points[points.length - 1].getX() - points[0].getX();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,99,params[3] = fwhmApprox / (2.0 * Math.sqrt(2.0 * Math.log(2.0)));
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,101,return params;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,105,* Finds index of point in specified points with the smallest Y.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,107,* @param points points to search
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,109,* @return index in specified points array
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,111,private int findMinY(WeightedObservedPoint[] points) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,112,int minYIdx = 0;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,113,for (int i = 1; i < points.length; i++) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,114,if (points[i].getY() < points[minYIdx].getY()) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,115,minYIdx = i;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,118,return minYIdx;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,122,* Finds index of point in specified points with the largest Y.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,124,* @param points points to search
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,126,* @return index in specified points array
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,128,private int findMaxY(WeightedObservedPoint[] points) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,129,int maxYIdx = 0;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,130,for (int i = 1; i < points.length; i++) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,131,if (points[i].getY() > points[maxYIdx].getY()) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,132,maxYIdx = i;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,135,return maxYIdx;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,139,* Interpolates using the specified points to determine X at the specified
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,140,* Y.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,142,* @param points points to use for interpolation
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,143,* @param startIdx index within points from which to start search for
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,144,*        interpolation bounds points
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,145,* @param idxStep index step for search for interpolation bounds points
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,146,* @param y Y value for which X should be determined
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,148,* @return value of X at the specified Y
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,150,* @throws IllegalArgumentException if idxStep is 0
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,151,* @throws OutOfRangeException if specified <code>y</code> is not within the
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,152,*         range of the specified <code>points</code>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,154,"private double interpolateXAtY(WeightedObservedPoint[] points,"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,155,"int startIdx, int idxStep, double y) throws OutOfRangeException {"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,156,if (idxStep == 0) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,157,throw new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,159,"WeightedObservedPoint[] twoPoints = getInterpolationPointsForY(points, startIdx, idxStep, y);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,160,WeightedObservedPoint pointA = twoPoints[0];
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,161,WeightedObservedPoint pointB = twoPoints[1];
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,162,if (pointA.getY() == y) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,163,return pointA.getX();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,165,if (pointB.getY() == y) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,166,return pointB.getX();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,168,return pointA.getX() +
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,169,(((y - pointA.getY()) * (pointB.getX() - pointA.getX())) / (pointB.getY() - pointA.getY()));
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,173,* Gets the two bounding interpolation points from the specified points
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,174,* suitable for determining X at the specified Y.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,176,* @param points points to use for interpolation
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,177,* @param startIdx index within points from which to start search for
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,178,*        interpolation bounds points
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,179,* @param idxStep index step for search for interpolation bounds points
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,180,* @param y Y value for which X should be determined
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,182,* @return array containing two points suitable for determining X at the
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,183,*         specified Y
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,185,* @throws IllegalArgumentException if idxStep is 0
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,186,* @throws OutOfRangeException if specified <code>y</code> is not within the
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,187,*         range of the specified <code>points</code>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,189,"private WeightedObservedPoint[] getInterpolationPointsForY(WeightedObservedPoint[] points,"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,190,"int startIdx, int idxStep, double y)"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,191,throws OutOfRangeException {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,192,if (idxStep == 0) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,193,throw new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,195,for (int i = startIdx;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,196,(idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,197,i += idxStep) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,198,"if (isBetween(y, points[i].getY(), points[i + idxStep].getY())) {"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,199,return (idxStep < 0) ?
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,200,"new WeightedObservedPoint[] { points[i + idxStep], points[i] } :"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,201,"new WeightedObservedPoint[] { points[i], points[i + idxStep] };"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,205,double minY = Double.POSITIVE_INFINITY;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,206,double maxY = Double.NEGATIVE_INFINITY;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,207,for (final WeightedObservedPoint point : points) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,208,"minY = Math.min(minY, point.getY());"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,209,"maxY = Math.max(maxY, point.getY());"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,211,"throw new OutOfRangeException(y, minY, maxY);"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,216,* Determines whether a value is between two other values.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,218,* @param value value to determine whether is between <code>boundary1</code>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,219,*        and <code>boundary2</code>
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,220,* @param boundary1 one end of the range
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,221,* @param boundary2 other end of the range
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,223,* @return true if <code>value</code> is between <code>boundary1</code> and
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,224,*         <code>boundary2</code> (inclusive); false otherwise
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,226,"private boolean isBetween(double value, double boundary1, double boundary2) {"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,227,return (value >= boundary1 && value <= boundary2) ||
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,228,(value >= boundary2 && value <= boundary1);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,232,* Factory method creating <code>Comparator</code> for comparing
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,233,* <code>WeightedObservedPoint</code> instances.
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,235,* @return new <code>Comparator</code> instance
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,237,private Comparator<WeightedObservedPoint> createWeightedObservedPointComparator() {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,238,return new Comparator<WeightedObservedPoint>() {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,239,"public int compare(WeightedObservedPoint p1, WeightedObservedPoint p2) {"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,240,if (p1 == null && p2 == null) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,241,return 0;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,243,if (p1 == null) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,244,return -1;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,246,if (p2 == null) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,247,return 1;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,249,if (p1.getX() < p2.getX()) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,250,return -1;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,252,if (p1.getX() > p2.getX()) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,253,return 1;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,255,if (p1.getY() < p2.getY()) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,256,return -1;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,258,if (p1.getY() > p2.getY()) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,259,return 1;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,261,if (p1.getWeight() < p2.getWeight()) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,262,return -1;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,264,if (p1.getWeight() > p2.getWeight()) {
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,265,return 1;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,267,return 0;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,18,package org.apache.commons.math.optimization.fitting;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,20,import java.io.Serializable;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,22,import org.apache.commons.math.FunctionEvaluationException;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,23,import org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,24,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,25,import org.apache.commons.math.exception.ZeroNotAllowedException;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,26,import org.apache.commons.math.optimization.fitting.ParametricRealFunction;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,27,import org.apache.commons.math.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,30,* A Gaussian function.  Specifically:
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,31,* <p>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,32,* <tt>f(x) = a + b*exp(-((x - c)^2 / (2*d^2)))</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,33,* <p>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,34,* The parameters have the following meaning:
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,35,* <ul>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,36,* <li><tt>a</tt> is a constant offset that shifts <tt>f(x)</tt> up or down
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,37,* <li><tt>b</tt> is the height of the peak
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,38,* <li><tt>c</tt> is the position of the center of the peak
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,39,* <li><tt>d</tt> is related to the FWHM by <tt>FWHM = 2*sqrt(2*ln(2))*d</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,40,* </ul>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,41,* Notation key:
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,42,* <ul>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,43,* <li><tt>x^n</tt>: <tt>x</tt> raised to the power of <tt>n</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,44,* <li><tt>exp(x)</tt>: <i>e</i><tt>^x</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,45,* <li><tt>sqrt(x)</tt>: the square root of <tt>x</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,46,* <li><tt>ln(x)</tt>: the natural logarithm of <tt>x</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,47,* </ul>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,48,* References:
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,49,* <ul>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,50,"* <li><a href=""http://en.wikipedia.org/wiki/Gaussian_function"">Wikipedia:"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,51,*   Gaussian function</a>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,52,* </ul>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,54,* @since 2.2
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,55,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,57,"public class ParametricGaussianFunction implements ParametricRealFunction, Serializable {"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,59,/** Serializable version Id. */
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,60,private static final long serialVersionUID = -3875578602503903233L;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,63,* Constructs an instance.
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,65,public ParametricGaussianFunction() {
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,69,* Computes value of function <tt>f(x)</tt> for the specified <tt>x</tt> and
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,70,"* parameters <tt>a</tt>, <tt>b</tt>, <tt>c</tt>, and <tt>d</tt>."
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,72,* @param x <tt>x</tt> value
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,73,"* @param parameters values of <tt>a</tt>, <tt>b</tt>, <tt>c</tt>, and"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,74,*        <tt>d</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,76,* @return value of <tt>f(x)</tt> evaluated at <tt>x</tt> with the specified
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,77,*         parameters
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,79,* @throws IllegalArgumentException if <code>parameters</code> is invalid as
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,80,*         determined by {@link #validateParameters(double[])}
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,81,* @throws FunctionEvaluationException if <code>parameters</code> values are
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,82,*         invalid as determined by {@link #validateParameters(double[])}
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,84,"public double value(double x, double[] parameters) throws FunctionEvaluationException {"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,85,validateParameters(parameters);
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,86,final double a = parameters[0];
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,87,final double b = parameters[1];
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,88,final double c = parameters[2];
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,89,final double d = parameters[3];
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,90,final double xMc = x - c;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,91,return a + b * Math.exp(-xMc * xMc / (2.0 * (d * d)));
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,95,* Computes the gradient vector for a four variable version of the function
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,96,"* where the parameters, <tt>a</tt>, <tt>b</tt>, <tt>c</tt>, and <tt>d</tt>,"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,97,"* are considered the variables, not <tt>x</tt>.  That is, instead of"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,98,* computing the gradient vector for the function <tt>f(x)</tt> (which would
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,99,* just be the derivative of <tt>f(x)</tt> with respect to <tt>x</tt> since
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,100,"* it's a one-dimensional function), computes the gradient vector for the"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,101,"* function <tt>f(a, b, c, d) = a + b*exp(-((x - c)^2 / (2*d^2)))</tt>"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,102,* treating the specified <tt>x</tt> as a constant.
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,103,* <p>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,104,* The components of the computed gradient vector are the partial
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,105,"* derivatives of <tt>f(a, b, c, d)</tt> with respect to each variable."
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,106,"* That is, the partial derivative of <tt>f(a, b, c, d)</tt> with respect to"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,107,"* <tt>a</tt>, the partial derivative of <tt>f(a, b, c, d)</tt> with respect"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,108,"* to <tt>b</tt>, the partial derivative of <tt>f(a, b, c, d)</tt> with"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,109,"* respect to <tt>c</tt>, and the partial derivative of <tt>f(a, b, c,"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,110,* d)</tt> with respect to <tt>d</tt>.
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,112,"* @param x <tt>x</tt> value to be used as constant in <tt>f(a, b, c,"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,113,*        d)</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,114,"* @param parameters values of <tt>a</tt>, <tt>b</tt>, <tt>c</tt>, and"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,115,"*        <tt>d</tt> for computation of gradient vector of <tt>f(a, b, c,"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,116,*        d)</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,118,"* @return gradient vector of <tt>f(a, b, c, d)</tt>"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,120,* @throws IllegalArgumentException if <code>parameters</code> is invalid as
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,121,*         determined by {@link #validateParameters(double[])}
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,122,* @throws FunctionEvaluationException if <code>parameters</code> values are
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,123,*         invalid as determined by {@link #validateParameters(double[])}
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,125,"public double[] gradient(double x, double[] parameters) throws FunctionEvaluationException {"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,127,validateParameters(parameters);
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,128,final double b = parameters[1];
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,129,final double c = parameters[2];
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,130,final double d = parameters[3];
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,132,final double xMc  = x - c;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,133,final double d2   = d * d;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,134,final double exp  = Math.exp(-xMc * xMc / (2 * d2));
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,135,final double f    = b * exp * xMc / d2;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,137,"return new double[] { 1.0, exp, f, f * xMc / d };"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,142,* Validates parameters to ensure they are appropriate for the evaluation of
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,143,* the <code>value</code> and <code>gradient</code> methods.
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,145,"* @param parameters values of <tt>a</tt>, <tt>b</tt>, <tt>c</tt>, and"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,146,*        <tt>d</tt>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,148,* @throws IllegalArgumentException if <code>parameters</code> is
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,149,*         <code>null</code> or if <code>parameters</code> does not have
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,150,*         length == 4
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,151,* @throws FunctionEvaluationException if <code>parameters[3]</code>
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,152,*         (<tt>d</tt>) is 0
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,154,private void validateParameters(double[] parameters) throws FunctionEvaluationException {
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,155,if (parameters == null) {
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,156,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,158,if (parameters.length != 4) {
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,159,"throw new DimensionMismatchException(4, parameters.length);"
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,161,if (parameters[3] == 0.0) {
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,162,throw new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,43,// CHECKSTYLE: stop JavadocVariable
False,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,293,"ERO_NORM_FOR_ROTATION_DEFINING_VECTOR(""zero norm for rotation defining vector"");"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,294,"ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR(""zero norm for rotation defining vector""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,295,"ZERO_NOT_ALLOWED(""zero not allowed here"");"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,297,// CHECKSTYLE: resume JavadocVariable
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,18,package org.apache.commons.math.optimization.fitting;
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,20,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,22,import org.apache.commons.math.FunctionEvaluationException;
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,23,import org.apache.commons.math.optimization.OptimizationException;
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,24,import org.apache.commons.math.optimization.general.
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,25,LevenbergMarquardtOptimizer;
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,26,import org.junit.Test;
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,29,* Tests {@link GaussianFitter}.
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,31,* @since 2.2
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,32,* @version $Revision$ $Date$
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,34,public class GaussianFitterTest {
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,35,/** Good data. */
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,36,protected static final double[][] DATASET1 = new double[][] {
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,37,"{4.0254623,  531026.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,38,"{4.02804905, 664002.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,39,"{4.02934242, 787079.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,40,"{4.03128248, 984167.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,41,"{4.03386923, 1294546.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,42,"{4.03580929, 1560230.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,43,"{4.03839603, 1887233.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,44,"{4.0396894,  2113240.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,45,"{4.04162946, 2375211.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,46,"{4.04421621, 2687152.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,47,"{4.04550958, 2862644.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,48,"{4.04744964, 3078898.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,49,"{4.05003639, 3327238.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,50,"{4.05132976, 3461228.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,51,"{4.05326982, 3580526.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,52,"{4.05585657, 3576946.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,53,"{4.05779662, 3439750.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,54,"{4.06038337, 3220296.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,55,"{4.06167674, 3070073.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,56,"{4.0636168,  2877648.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,57,"{4.06620355, 2595848.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,58,"{4.06749692, 2390157.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,59,"{4.06943698, 2175960.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,60,"{4.07202373, 1895104.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,61,"{4.0733171,  1687576.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,62,"{4.07525716, 1447024.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,63,"{4.0778439,  1130879.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,64,"{4.07978396, 904900.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,65,"{4.08237071, 717104.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,66,"{4.08366408, 620014.0}"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,68,/** Poor data: right of peak not symmetric with left of peak. */
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,69,protected static final double[][] DATASET2 = new double[][] {
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,70,"{-20.15,   1523.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,71,"{-19.65,   1566.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,72,"{-19.15,   1592.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,73,"{-18.65,   1927.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,74,"{-18.15,   3089.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,75,"{-17.65,   6068.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,76,"{-17.15,  14239.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,77,"{-16.65,  34124.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,78,"{-16.15,  64097.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,79,"{-15.65, 110352.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,80,"{-15.15, 164742.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,81,"{-14.65, 209499.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,82,"{-14.15, 267274.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,83,"{-13.65, 283290.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,84,"{-13.15, 275363.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,85,"{-12.65, 258014.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,86,"{-12.15, 225000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,87,"{-11.65, 200000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,88,"{-11.15, 190000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,89,"{-10.65, 185000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,90,"{-10.15, 180000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,91,"{ -9.65, 179000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,92,"{ -9.15, 178000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,93,"{ -8.65, 177000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,94,"{ -8.15, 176000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,95,"{ -7.65, 175000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,96,"{ -7.15, 174000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,97,"{ -6.65, 173000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,98,"{ -6.15, 172000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,99,"{ -5.65, 171000.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,100,"{ -5.15, 170000.0}"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,102,/** Poor data: long tails. */
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,103,protected static final double[][] DATASET3 = new double[][] {
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,104,"{-90.15,   1513.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,105,"{-80.15,   1514.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,106,"{-70.15,   1513.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,107,"{-60.15,   1514.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,108,"{-50.15,   1513.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,109,"{-40.15,   1514.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,110,"{-30.15,   1513.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,111,"{-20.15,   1523.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,112,"{-19.65,   1566.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,113,"{-19.15,   1592.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,114,"{-18.65,   1927.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,115,"{-18.15,   3089.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,116,"{-17.65,   6068.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,117,"{-17.15,  14239.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,118,"{-16.65,  34124.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,119,"{-16.15,  64097.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,120,"{-15.65, 110352.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,121,"{-15.15, 164742.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,122,"{-14.65, 209499.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,123,"{-14.15, 267274.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,124,"{-13.65, 283290.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,125,"{-13.15, 275363.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,126,"{-12.65, 258014.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,127,"{-12.15, 214073.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,128,"{-11.65, 182244.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,129,"{-11.15, 136419.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,130,"{-10.65,  97823.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,131,"{-10.15,  58930.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,132,"{ -9.65,  35404.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,133,"{ -9.15,  16120.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,134,"{ -8.65,   9823.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,135,"{ -8.15,   5064.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,136,"{ -7.65,   2575.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,137,"{ -7.15,   1642.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,138,"{ -6.65,   1101.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,139,"{ -6.15,    812.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,140,"{ -5.65,    690.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,141,"{ -5.15,    565.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,142,"{  5.15,    564.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,143,"{ 15.15,    565.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,144,"{ 25.15,    564.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,145,"{ 35.15,    565.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,146,"{ 45.15,    564.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,147,"{ 55.15,    565.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,148,"{ 65.15,    564.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,149,"{ 75.15,    565.0}"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,151,/** Poor data: right of peak is missing. */
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,152,protected static final double[][] DATASET4 = new double[][] {
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,153,"{-20.15,   1523.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,154,"{-19.65,   1566.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,155,"{-19.15,   1592.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,156,"{-18.65,   1927.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,157,"{-18.15,   3089.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,158,"{-17.65,   6068.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,159,"{-17.15,  14239.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,160,"{-16.65,  34124.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,161,"{-16.15,  64097.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,162,"{-15.65, 110352.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,163,"{-15.15, 164742.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,164,"{-14.65, 209499.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,165,"{-14.15, 267274.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,166,"{-13.65, 283290.0}"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,168,"/** Good data, but few points. */"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,169,protected static final double[][] DATASET5 = new double[][] {
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,170,"{4.0254623,  531026.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,171,"{4.03128248, 984167.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,172,"{4.03839603, 1887233.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,173,"{4.04421621, 2687152.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,174,"{4.05132976, 3461228.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,175,"{4.05326982, 3580526.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,176,"{4.05779662, 3439750.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,177,"{4.0636168,  2877648.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,178,"{4.06943698, 2175960.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,179,"{4.07525716, 1447024.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,180,"{4.08237071, 717104.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,181,"{4.08366408, 620014.0}"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,185,* Basic.
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,187,* @throws OptimizationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,188,* @throws FunctionEvaluationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,190,@Test
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,191,public void testFit01()
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,192,"throws OptimizationException, FunctionEvaluationException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,193,GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,194,"addDatasetToGaussianFitter(DATASET1, fitter);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,195,GaussianFunction fitFunction = fitter.fit();
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,196,"assertEquals(99200.86969833552, fitFunction.getA(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,197,"assertEquals(3410515.285208688, fitFunction.getB(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,198,"assertEquals(4.054928275302832, fitFunction.getC(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,199,"assertEquals(0.014609868872574, fitFunction.getD(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,203,* Zero points is not enough observed points.
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,205,* @throws OptimizationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,206,* @throws FunctionEvaluationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,208,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,209,public void testFit02()
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,210,"throws OptimizationException, FunctionEvaluationException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,211,GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,212,fitter.fit();
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,216,* Two points is not enough observed points.
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,218,* @throws OptimizationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,219,* @throws FunctionEvaluationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,221,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,222,public void testFit03()
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,223,"throws OptimizationException, FunctionEvaluationException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,224,GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,225,addDatasetToGaussianFitter(new double[][] {
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,226,"{4.0254623,  531026.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,227,"{4.02804905, 664002.0}},"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,228,fitter);
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,229,fitter.fit();
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,233,* Poor data: right of peak not symmetric with left of peak.
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,235,* @throws OptimizationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,236,* @throws FunctionEvaluationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,238,@Test
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,239,public void testFit04()
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,240,"throws OptimizationException, FunctionEvaluationException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,241,GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,242,"addDatasetToGaussianFitter(DATASET2, fitter);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,243,GaussianFunction fitFunction = fitter.fit();
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,244,"assertEquals(-256534.689445631, fitFunction.getA(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,245,"assertEquals(481328.2181530679, fitFunction.getB(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,246,"assertEquals(-10.5217226891099, fitFunction.getC(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,247,"assertEquals(-7.64248239366800, fitFunction.getD(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,251,* Poor data: long tails.
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,253,* @throws OptimizationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,254,* @throws FunctionEvaluationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,256,@Test
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,257,public void testFit05()
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,258,"throws OptimizationException, FunctionEvaluationException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,259,GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,260,"addDatasetToGaussianFitter(DATASET3, fitter);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,261,GaussianFunction fitFunction = fitter.fit();
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,262,"assertEquals(491.6310079258938, fitFunction.getA(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,263,"assertEquals(283508.6800413632, fitFunction.getB(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,264,"assertEquals(-13.2966857238057, fitFunction.getC(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,265,"assertEquals(1.725590356962981, fitFunction.getD(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,269,* Poor data: right of peak is missing.
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,271,* @throws OptimizationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,272,* @throws FunctionEvaluationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,274,@Test
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,275,public void testFit06()
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,276,"throws OptimizationException, FunctionEvaluationException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,277,GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,278,"addDatasetToGaussianFitter(DATASET4, fitter);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,279,GaussianFunction fitFunction = fitter.fit();
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,280,"assertEquals(530.3649792355617, fitFunction.getA(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,281,"assertEquals(284517.0835567514, fitFunction.getB(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,282,"assertEquals(-13.5355534565105, fitFunction.getC(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,283,"assertEquals(1.512353018625465, fitFunction.getD(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,287,* Basic with smaller dataset.
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,289,* @throws OptimizationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,290,* @throws FunctionEvaluationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,292,@Test
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,293,public void testFit07()
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,294,"throws OptimizationException, FunctionEvaluationException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,295,GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,296,"addDatasetToGaussianFitter(DATASET5, fitter);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,297,GaussianFunction fitFunction = fitter.fit();
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,298,"assertEquals(176748.1400947575, fitFunction.getA(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,299,"assertEquals(3361537.018813906, fitFunction.getB(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,300,"assertEquals(4.054949992747176, fitFunction.getC(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,301,"assertEquals(0.014192380137002, fitFunction.getD(), 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,305,* Adds the specified points to specified <code>GaussianFitter</code>
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,306,* instance.
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,308,* @param points data points where first dimension is a point index and
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,309,*        second dimension is an array of length two representing the point
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,310,*        with the first value corresponding to X and the second value
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,311,*        corresponding to Y
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,312,* @param fitter fitter to which the points in <code>points</code> should be
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,313,*        added as observed points
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,315,"protected static void addDatasetToGaussianFitter(double[][] points,"
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,316,GaussianFitter fitter) {
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,317,for (int i = 0; i < points.length; i++) {
True,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,318,"fitter.addObservedPoint(points[i][0], points[i][1]);"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,18,package org.apache.commons.math.optimization.fitting;
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,20,import org.apache.commons.math.FunctionEvaluationException;
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,21,import org.apache.commons.math.exception.ZeroNotAllowedException;
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,22,import org.apache.commons.math.optimization.OptimizationException;
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,23,import org.apache.commons.math.optimization.fitting.CurveFitter;
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,24,import org.apache.commons.math.optimization.general.
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,25,LevenbergMarquardtOptimizer;
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,26,import org.junit.Test;
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,28,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,31,* Tests {@link ParametricGaussianFunction}.
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,33,* @since 2.2
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,34,* @version $Revision$ $Date$
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,36,public class ParametricGaussianFunctionTest {
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,37,/** Dataset 1 used by some test cases. */
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,38,protected static final double[][] DATASET1 = new double[][] {
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,39,"{4.0254623,  531026.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,40,"{4.02804905, 664002.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,41,"{4.02934242, 787079.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,42,"{4.03128248, 984167.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,43,"{4.03386923, 1294546.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,44,"{4.03580929, 1560230.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,45,"{4.03839603, 1887233.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,46,"{4.0396894,  2113240.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,47,"{4.04162946, 2375211.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,48,"{4.04421621, 2687152.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,49,"{4.04550958, 2862644.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,50,"{4.04744964, 3078898.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,51,"{4.05003639, 3327238.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,52,"{4.05132976, 3461228.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,53,"{4.05326982, 3580526.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,54,"{4.05585657, 3576946.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,55,"{4.05779662, 3439750.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,56,"{4.06038337, 3220296.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,57,"{4.06167674, 3070073.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,58,"{4.0636168,  2877648.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,59,"{4.06620355, 2595848.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,60,"{4.06749692, 2390157.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,61,"{4.06943698, 2175960.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,62,"{4.07202373, 1895104.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,63,"{4.0733171,  1687576.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,64,"{4.07525716, 1447024.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,65,"{4.0778439,  1130879.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,66,"{4.07978396, 904900.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,67,"{4.08237071, 717104.0},"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,68,"{4.08366408, 620014.0}"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,72,* Using not-so-good initial parameters.
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,74,* @throws OptimizationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,75,* @throws FunctionEvaluationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,77,@Test
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,78,public void testFit01()
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,79,"throws OptimizationException, FunctionEvaluationException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,80,CurveFitter fitter = new CurveFitter(new LevenbergMarquardtOptimizer());
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,81,"addDatasetToCurveFitter(DATASET1, fitter);"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,82,"double[] parameters = fitter.fit(new ParametricGaussianFunction(),"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,83,"new double[] {8.64753e3, 3.483323e6, 4.06322, 1.946857e-2});"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,84,"assertEquals(99200.94715858076, parameters[0], 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,85,"assertEquals(3410515.221897707, parameters[1], 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,86,"assertEquals(4.054928275257894, parameters[2], 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,87,"assertEquals(0.014609868499860, parameters[3], 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,91,* Using eye-balled guesses for initial parameters.
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,93,* @throws OptimizationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,94,* @throws FunctionEvaluationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,96,@Test
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,97,public void testFit02()
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,98,"throws OptimizationException, FunctionEvaluationException {"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,99,CurveFitter fitter = new CurveFitter(new LevenbergMarquardtOptimizer());
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,100,"addDatasetToCurveFitter(DATASET1, fitter);"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,101,"double[] parameters = fitter.fit(new ParametricGaussianFunction(),"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,102,"new double[] {500000.0, 3500000.0, 4.055, 0.025479654});"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,103,"assertEquals(99200.81836264656, parameters[0], 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,104,"assertEquals(3410515.327151986, parameters[1], 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,105,"assertEquals(4.054928275377392, parameters[2], 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,106,"assertEquals(0.014609869119806, parameters[3], 1e-4);"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,110,* The parameters array is null.
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,112,* @throws FunctionEvaluationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,114,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,115,public void testValue01() throws FunctionEvaluationException {
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,116,ParametricGaussianFunction f = new ParametricGaussianFunction();
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,117,"f.value(0.0, null);"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,121,* The parameters array length is not 4.
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,123,* @throws FunctionEvaluationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,125,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,126,public void testValue02() throws FunctionEvaluationException {
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,127,ParametricGaussianFunction f = new ParametricGaussianFunction();
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,128,"f.value(0.0, new double[] {0.0, 1.0});"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,132,* The parameters d is 0.
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,134,* @throws FunctionEvaluationException in the event of a test case error
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,136,@Test(expected=ZeroNotAllowedException.class)
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,137,public void testValue03() throws FunctionEvaluationException {
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,138,ParametricGaussianFunction f = new ParametricGaussianFunction();
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,139,"f.value(0.0, new double[] {0.0, 1.0, 1.0, 0.0});"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,143,* Adds the specified points to specified <code>CurveFitter</code> instance.
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,145,* @param points data points where first dimension is a point index and
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,146,*        second dimension is an array of length two representing the point
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,147,*        with the first value corresponding to X and the second value
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,148,*        corresponding to Y
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,149,* @param fitter fitter to which the points in <code>points</code> should be
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,150,*        added as observed points
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,152,"protected static void addDatasetToCurveFitter(double[][] points,"
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,153,CurveFitter fitter) {
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,154,for (int i = 0; i < points.length; i++) {
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,155,"fitter.addObservedPoint(points[i][0], points[i][1]);"
