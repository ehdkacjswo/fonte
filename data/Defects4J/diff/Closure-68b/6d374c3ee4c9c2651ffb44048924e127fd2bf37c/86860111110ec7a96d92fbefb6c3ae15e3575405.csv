is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,21,mport com.google.common.base.Join;
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,21,import com.google.common.base.Joiner;
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,1073,"ut.println(""\nLoop "" + i + "":\n"" + Join.join(""\n"", loop));"
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,1073,"out.println(""\nLoop "" + i + "":\n"" + Joiner.on(""\n"").join(loop));"
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,19,mport com.google.common.base.Join;
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,19,import com.google.common.base.Joiner;
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,210,omputeRelatedTypes(p.type);
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,250,private BitSet getRelatedTypesOnNonUnion(JSType type) {
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,251,// All of the types we encounter should have been added to the
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,252,// relatedBitsets via computeRelatedTypes.
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,253,if (relatedBitsets.containsKey(type)) {
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,254,return relatedBitsets.get(type);
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,255,} else {
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,256,"throw new RuntimeException(""Related types should have been computed for"""
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,257,"+ "" type: "" + type + "" but have not been."");"
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,345,eturn !getRelated(prop.type).intersects(typesInSet);
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,355,return !prop.relatedTypesSet.intersects(typesInSet);
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,355,ypesRelatedToSet.or(getRelated(prop.type));
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,365,typesRelatedToSet.or(prop.relatedTypesSet);
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,366,"etRelatedTypesOnNonUnion(alt, relatedTypes);"
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,376,"intersectRelatedTypesOnNonUnion(alt, relatedTypes);"
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,369,"etRelatedTypesOnNonUnion(type, relatedTypes);"
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,379,"intersectRelatedTypesOnNonUnion(type, relatedTypes);"
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,375, Finds all types related to the provided type and returns a BitSet with
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,376, their bits to true.  Expects a non-union type.
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,385,* Finds all types related to the provided type and intersects them with
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,386,* the given BitSet. Expects a non-union type.
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,378,rivate void getRelatedTypesOnNonUnion(
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,388,private void intersectRelatedTypesOnNonUnion(
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,380,/ All of the types we encounter should have been added to the
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,381,/ relatedBitsets via computeRelatedTypes.
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,382,f (relatedBitsets.containsKey(type)) {
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,383,elatedTypes.or(relatedBitsets.get(type));
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,384, else {
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,385,"hrow new RuntimeException(""Related types should have been computed for"""
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,386," ""type: "" + type + "" but have not been."");"
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,390,relatedTypes.or(getRelatedTypesOnNonUnion(type));
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,549,SType type;
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,556,JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,590,f (type == null) {
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,591,ype = newType;
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,592, else {
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,593,/ TODO(nicksantos): This line doesn't make sense. It only works if
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,594,/ we assume that the type hierarchy is a tree (and thus has a
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,595,/ single root). It doesn't work with an arbitrary lattice.
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,597,/ Consider a class Chimay that extends Beer and implements Expensive.
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,598,"/ supremum(Chimay, Expensive) == Expensive"
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,599,/ according to the lattice's supremum op (getLeastSupertype).
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,601,"/ And since related types are computed from this result, this"
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,602,"/ means that we will treat Beer as unrelated to Chimay, which is"
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,603,/ clearly not correct.
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,604,ype = type.getLeastSupertype(newType);
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,593,int typeInt = getIntForType(newType);
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,594,if (!typesSet.get(typeInt)) {
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,595,computeRelatedTypes(newType);
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,596,typesSet.set(typeInt);
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,597,relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,607,ypesSet.set(getIntForType(newType));
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,604,private static final long serialVersionUID = 1L;
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,634,"eturn Join.join("" && "", types);"
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,626,"return Joiner.on("" && "").join(types);"
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,19,mport com.google.common.base.Join;
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,19,import com.google.common.base.Joiner;
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,29,import com.google.javascript.jscomp.graph.DiGraph.DiGraphNode;
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,31,import com.google.javascript.jscomp.graph.GraphColoring.GreedyGraphColoring;
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,33,mport com.google.javascript.jscomp.graph.DiGraph.DiGraphNode;
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,34,mport com.google.javascript.jscomp.graph.GraphColoring.GreedyGraphColoring;
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,176,"seudoName = Join.join(""_"", allMergedNames);"
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,176,"pseudoName = Joiner.on(""_"").join(allMergedNames);"
False,src/com/google/javascript/jscomp/ConcreteType.java,src/com/google/javascript/jscomp/ConcreteType.java,18,mport com.google.common.base.Join;
True,src/com/google/javascript/jscomp/ConcreteType.java,src/com/google/javascript/jscomp/ConcreteType.java,18,import com.google.common.base.Joiner;
False,src/com/google/javascript/jscomp/ConcreteType.java,src/com/google/javascript/jscomp/ConcreteType.java,634,"eturn ""("" + Join.join("","", names) + "")"";"
True,src/com/google/javascript/jscomp/ConcreteType.java,src/com/google/javascript/jscomp/ConcreteType.java,633,"return ""("" + Joiner.on("","").join(names) + "")"";"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,19,mport com.google.common.base.Join;
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,19,import com.google.common.base.Joiner;
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,204,"ut.append(Join.join("", "", refersTo));"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,204,"out.append(Joiner.on("", "").join(refersTo));"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,209,"ut.append(Join.join("", "", referencedBy));"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,209,"out.append(Joiner.on("", "").join(referencedBy));"
False,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,20,mport com.google.common.base.Join;
False,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,21,mport javax.annotation.Nullable;
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,20,import com.google.common.base.Joiner;
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,27,import javax.annotation.Nullable;
False,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,198,".setString(Join.join(""-"", parts));"
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,198,"n.setString(Joiner.on(""-"").join(parts));"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,508,FunctionType propType = null;
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,509,tring propName = lvalueNode.getLastChild().getString();
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,510,SType propType = ownerType.getPropertyType(propName);
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,511,f (propType instanceof FunctionType) {
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,512,unctionType =
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,513,ew FunctionTypeBuilder(
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,514,"ame, compiler, errorRoot, sourceName, scope)"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,515,setSourceNode(fnRoot)
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,516,inferFromOverriddenFunction(
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,517,"FunctionType) propType, parametersNode)"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,518,"inferThisType(info, owner)"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,519,buildAndRegister();
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,510,propType = findOverriddenFunction(
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,511,"ownerType, lvalueNode.getLastChild().getString());"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,514,if (propType != null) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,515,functionType =
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,516,new FunctionTypeBuilder(
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,517,"name, compiler, errorRoot, sourceName, scope)"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,518,.setSourceNode(fnRoot)
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,519,".inferFromOverriddenFunction(propType, parametersNode)"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,520,".inferThisType(info, owner)"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,521,.buildAndRegister();
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,551,"* Find the function that's being overridden on this type, if any."
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,553,private FunctionType findOverriddenFunction(
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,554,"ObjectType ownerType, String propName) {"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,555,"// First, check to see if the property is implemented"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,556,// on a superclass.
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,557,JSType propType = ownerType.getPropertyType(propName);
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,558,if (propType instanceof FunctionType) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,559,return (FunctionType) propType;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,560,} else {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,561,"// If it's not, then check to see if it's implemented"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,562,// on an implemented interface.
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,563,for (ObjectType iface :
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,564,ownerType.getCtorImplementedInterfaces()) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,565,propType = iface.getPropertyType(propName);
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,566,if (propType instanceof FunctionType) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,567,return (FunctionType) propType;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,572,return null;
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,92,terable<ObjectType> getCtorImplementedInterfaces() {
True,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,92,public Iterable<ObjectType> getCtorImplementedInterfaces() {
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,176,terable<ObjectType> getCtorImplementedInterfaces() {
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,176,public Iterable<ObjectType> getCtorImplementedInterfaces() {
False,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,447,terable<ObjectType> getCtorImplementedInterfaces() {
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,447,public Iterable<ObjectType> getCtorImplementedInterfaces() {
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,154,terable<ObjectType> getCtorImplementedInterfaces() {
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,154,public Iterable<ObjectType> getCtorImplementedInterfaces() {
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,408,public void testImplementsAndExtends() {
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,409,"String js = """""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,410,"+ ""/** @interface */ function Foo() {}\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,411,"+ ""/**\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,412,"+ "" * @constructor\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,413,"+ "" */\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,414,"+ ""function Bar(){}\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,415,"+ ""Bar.prototype.y = function() { return 3; };\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,416,"+ ""/**\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,417,"+ "" * @constructor\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,418,"+ "" * @extends {Bar}\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,419,"+ "" * @implements {Foo}\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,420,"+ "" */\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,421,"+ ""function SubBar(){ }\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,422,"+ ""/** @param {Foo} x */ function f(x) { x.z = 3; }\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,423,"+ ""/** @param {SubBar} x */ function g(x) { x.z = 3; }"";"
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,424,"String output = """""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,425,"+ ""function Foo(){}\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,426,"+ ""function Bar(){}\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,427,"+ ""Bar.prototype.b = function() { return 3; };\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,428,"+ ""function SubBar(){}\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,429,"+ ""function f(x) { x.a = 3; }\n"""
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,430,"+ ""function g(x) { x.a = 3; }"";"
True,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,test/com/google/javascript/jscomp/AmbiguatePropertiesTest.java,431,"test(js, output);"
False,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,19,mport com.google.common.base.Join;
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,19,import com.google.common.base.Joiner;
False,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,211,"Errors: \n"" + Join.join(""\n"", compiler.getErrors()) +"
False,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,212,"Warnings: \n"" + Join.join(""\n"", compiler.getWarnings()),"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,211,"""Errors: \n"" + Joiner.on(""\n"").join(compiler.getErrors()) +"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,212,"""Warnings: \n"" + Joiner.on(""\n"").join(compiler.getWarnings()),"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,19,mport com.google.common.base.Join;
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,19,import com.google.common.base.Joiner;
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,614,"oin.join(""\n"", compiler.getErrors()), root != null);"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,614,"Joiner.on(""\n"").join(compiler.getErrors()), root != null);"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,676,"Unexpected error(s): "" + Join.join(""\n"", compiler.getErrors()),"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,676,"""Unexpected error(s): "" + Joiner.on(""\n"").join(compiler.getErrors()),"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,696,"oin.join(""\n"", stErrors),"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,696,"Joiner.on(""\n"").join(stErrors),"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,702,"Unexpected warning(s): "" + Join.join(""\n"", aggregateWarnings),"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,702,"""Unexpected warning(s): "" + Joiner.on(""\n"").join(aggregateWarnings),"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,749,"ssertEquals(Join.join("""", expected), compiler.toSource(mainRoot));"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,749,assertEquals(
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,750,"Joiner.on("""").join(expected), compiler.toSource(mainRoot));"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,802,"oin.join(""\n"", compiler.getErrors()), root != null);"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,803,"Joiner.on(""\n"").join(compiler.getErrors()), root != null);"
False,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,19,mport com.google.common.base.Join;
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,19,import com.google.common.base.Joiner;
False,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,61,"eturn Join.join(""\n"", parts);"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,61,"return Joiner.on(""\n"").join(parts);"
False,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,68,"eturn Join.join("";"", parts);"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,68,"return Joiner.on("";"").join(parts);"
False,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,595,"oin.join("""","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,595,"Joiner.on("""").join("
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,18,mport com.google.common.base.Join;
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,18,import com.google.common.base.Joiner;
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,944,"oin.join(""\n"", compiler.getErrors()), root != null);"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,943,"Joiner.on(""\n"").join(compiler.getErrors()), root != null);"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,19,mport com.google.common.base.Join;
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,19,import com.google.common.base.Joiner;
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3906,public void testIssue86() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3907,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3908,"""/** @interface */ function I() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3909,"""/** @return {number} */ I.prototype.get = function(){};"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3910,"""/** @constructor \n * @implements {I} */ function F() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3911,"""/** @override */ F.prototype.get = function() { return true; };"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3912,"""inconsistent return type\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3913,"""found   : boolean\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3914,"""required: number"");"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6597,"oin.join("", "", compiler.getErrors()), 0, compiler.getErrorCount());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6607,"Joiner.on("", "").join(compiler.getErrors()),"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6608,"0, compiler.getErrorCount());"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6617,"unexpected warning(s) : "" + Join.join("", "", compiler.getWarnings()),"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6628,"""unexpected warning(s) : "" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6629,"Joiner.on("", "").join(compiler.getWarnings()),"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6642,"ail(""unexpected error(s):\n"" + Join.join(""\n"", errors));"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6654,"fail(""unexpected error(s):\n"" + Joiner.on(""\n"").join(errors));"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6653,"ail(""unexpected warnings(s):\n"" + Join.join(""\n"", warnings));"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6665,"fail(""unexpected warnings(s):\n"" + Joiner.on(""\n"").join(warnings));"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6684,"oin.join("", "", compiler.getErrors()), 0, compiler.getErrorCount());"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6696,"Joiner.on("", "").join(compiler.getErrors()),"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6697,"0, compiler.getErrorCount());"
False,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,32,mport com.google.common.base.Join;
True,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,32,import com.google.common.base.Joiner;
False,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,35,mport com.google.javascript.rhino.jstype.JSType;
True,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,35,import com.google.javascript.rhino.Node;
True,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,38,import com.google.javascript.rhino.jstype.JSType;
False,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,41,mport com.google.javascript.rhino.Node;
False,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,79,"oin.join("", "", compiler.getErrors()), 0, compiler.getErrorCount());"
True,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,79,"Joiner.on("", "").join(compiler.getErrors()),"
True,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,80,"0, compiler.getErrorCount());"
