is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,23,import com.google.javascript.rhino.JSDocInfo;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,72,inal Node firstVarNode;
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,73,final Node startNode;
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,76,* Last node (non-inclusive) of the chain of nodes to collapse.
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,78,final Node endNode;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,77,"ollapse(Node firstVarNode, Node parent) {"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,78,his.firstVarNode = firstVarNode;
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,83,"Collapse(Node startNode, Node endNode, Node parent) {"
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,84,this.startNode = startNode;
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,85,this.endNode = endNode;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,113, Gathers all of the variable declarations that should be collapsed into one.
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,120,* Gathers all of the variable declarations / assignments that should be
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,121,* collapsed into one.
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,128,// TODO(user): This is purely a subtree peep hole optimization. We
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,129,// can rewrite this so it no longer have a sperate gather and merge stage.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,121,f (n.getType() != Token.VAR) return;
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,133,"if (n.getType() != Token.VAR && !canBeRedeclared(n, t.getScope())) return;"
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,144,boolean hasVar = n.getType() == Token.VAR;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,136,hile (n != null && n.getType() == Token.VAR) {
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,151,while (n != null &&
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,152,"(n.getType() == Token.VAR || canBeRedeclared(n, t.getScope()))) {"
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,154,if (NodeUtil.isVar(n)) {
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,155,hasVar = true;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,143,f (hasNodesToCollapse) {
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,164,if (hasNodesToCollapse && hasVar) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,145,"ollapses.add(new Collapse(varNode, parent));"
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,166,"collapses.add(new Collapse(varNode, n, parent));"
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,171,"private boolean canBeRedeclared(Node n, Scope s) {"
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,172,if (!NodeUtil.isExprAssign(n)) {
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,173,return false;
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,175,Node assign = n.getFirstChild();
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,176,Node lhs = assign.getFirstChild();
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,178,if (!NodeUtil.isName(lhs)) {
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,179,return false;
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,182,"return s.isDeclared(lhs.getString(), false);"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,153,ode first = collapse.firstVarNode;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,154,hile (first.getNext() != null &&
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,155,irst.getNext().getType() == Token.VAR) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,156,ode next = collapse.parent.removeChildAfter(first);
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,158,/ Move all children of the next var node into the first one.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,159,irst.addChildrenToBack(next.removeChildren());
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,188,Node var = new Node(Token.VAR);
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,189,var.copyInformationFrom(collapse.startNode);
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,190,"collapse.parent.addChildBefore(var, collapse.startNode);"
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,192,boolean redeclaration = false;
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,193,for (Node n = collapse.startNode; n != collapse.endNode;) {
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,194,Node next = n.getNext();
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,196,Preconditions.checkState(var.getNext() == n);
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,197,collapse.parent.removeChildAfter(var);
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,199,if (NodeUtil.isVar(n)) {
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,200,while(n.hasChildren()) {
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,201,var.addChildToBack(n.removeFirstChild());
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,203,} else {
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,204,Node assign = n.getFirstChild();
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,205,Node lhs = assign.getFirstChild();
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,206,Preconditions.checkState(NodeUtil.isName(lhs));
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,207,Node rhs = assign.getLastChild();
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,208,lhs.addChildToBack(rhs.detachFromParent());
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,209,var.addChildToBack(lhs.detachFromParent());
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,210,redeclaration = true;
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,212,n = next;
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,215,if (redeclaration) {
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,216,JSDocInfo info = new JSDocInfo();
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,217,"info.addSuppression(""duplicate"");"
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,218,var.setJSDocInfo(info);
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,544,oid addSuppression(String suppression) {
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,544,public void addSuppression(String suppression) {
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,46,"estSame(""if (x) var a = 1; else var a = 2;"");"
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,46,"testSame(""if (x) var a = 1; else var b = 2;"");"
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,49,public void testAggressiveRedeclaration() {
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,50,"test(""var x = 2; foo(x);     x = 3; var y = 2;"","
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,51,"""var x = 2; foo(x); var x = 3,     y = 2;"");"
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,53,"test(""var x = 2; foo(x);     x = 3; x = 1; var y = 2;"","
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,54,"""var x = 2; foo(x); var x = 3, x = 1,     y = 2;"");"
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,56,"test(""var x = 2; foo(x);     x = 3; x = 1; var y = 2; var z = 4"","
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,57,"""var x = 2; foo(x); var x = 3, x = 1,     y = 2,     z = 4"");"
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,59,"test(""var x = 2; foo(x);     x = 3; x = 1; var y = 2; var z = 4; x = 5"","
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,60,"""var x = 2; foo(x); var x = 3, x = 1,     y = 2,     z = 4, x = 5"");"
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,63,public void testAggressiveRedeclarationInFor() {
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,64,"testSame(""for(var x = 1; x = 2; x = 3) {x = 4}"");"
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,65,"testSame(""for(var x = 1; y = 2; z = 3) {var a = 4}"");"
True,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,66,"testSame(""var x; for(x = 1; x = 2; z = 3) {x = 4}"");"
