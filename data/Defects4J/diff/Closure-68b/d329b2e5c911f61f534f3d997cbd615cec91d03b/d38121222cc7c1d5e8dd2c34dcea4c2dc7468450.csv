is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,256,"/** Aliases literal keywords (e.g., null) with variable names. */"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,257,private class VoidKeywordAliasSpecification extends AliasSpecification {
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,258,"VoidKeywordAliasSpecification(String aliasName, int tokenId) {"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,259,"super(aliasName, tokenId);"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,262,@Override
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,263,"public void visit(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,264,Node value = n.getFirstChild();
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,265,if (value.getType() == Token.NUMBER && value.getDouble() == 0) {
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,266,"super.visit(n, parent);"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,270,@Override
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,271,protected int minOccurrencesRequiredToAlias() {
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,272,return MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL;
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,275,@Override
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,276,"protected void aliasNode(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,277,Node aliasNode = NodeUtil.newName(
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,278,"compiler.getCodingConvention(), getAliasName(), n, getAliasName());"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,279,"parent.replaceChild(n, aliasNode);"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,282,@Override
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,284,* Create the alias declaration (e.g. var $$ALIAS_VOID=void 0;).
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,286,protected void insertAliasDeclaration(Node codeRoot) {
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,287,Node varNode = new Node(Token.VAR);
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,288,"Node value = new Node(Token.VOID, Node.newNumber(0));"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,289,Node name = NodeUtil.newName(
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,290,"compiler.getCodingConvention(), getAliasName(),"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,291,"varNode, getAliasName());"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,292,name.addChildToBack(value);
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,293,varNode.addChildToBack(name);
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,294,codeRoot.addChildrenToFront(varNode);
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,303,"static final String ALIAS_VOID = ""JSCompiler_alias_VOID"";"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,451,"l.add(new VoidKeywordAliasSpecification(ALIAS_VOID, Token.VOID));"
False,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,30, AliasKeywords.MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW;
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,30,= AliasKeywords.MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW;
False,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,32, ENOUGH_TO_ALIAS_THROW - 1;
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,32,= ENOUGH_TO_ALIAS_THROW - 1;
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,106,"testSame(generateCode(""void 0"", TOO_FEW_TO_ALIAS_LITERAL));"
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,109,"// Don't alias void nodes other than ""void 0""."
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,110,"testSame(generateCode(""void 1"", ENOUGH_TO_ALIAS_LITERAL));"
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,111,"testSame(generateCode(""void x"", ENOUGH_TO_ALIAS_LITERAL));"
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,112,"testSame(generateCode(""void f()"", ENOUGH_TO_ALIAS_LITERAL));"
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,132,"test(generateCode(""void 0"", ENOUGH_TO_ALIAS_LITERAL),"
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,133,"generateCode(AliasKeywords.ALIAS_VOID, ENOUGH_TO_ALIAS_LITERAL,"
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,134,"""var JSCompiler_alias_VOID=void 0;""));"
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,145,"actual.append(generateCode(""void 0"", ENOUGH_TO_ALIAS_LITERAL));"
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,149,"""var JSCompiler_alias_VOID=void 0;"" +"
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,159,expected.append(
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,160,"generateCode(AliasKeywords.ALIAS_VOID, ENOUGH_TO_ALIAS_LITERAL));"
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,178,// expected exception
False,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,165,/ expected
