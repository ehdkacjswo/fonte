is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,45, AbstractCompilerRunner encapsulates the logic required to run the Compiler.
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,46, This class is designed to be extended and used to create other Java classes
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,47, that behave the same as running the Compiler. Example:
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,45,* Implementations of AbstractCompilerRunner translate flags into Java
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,46,* API calls on the Compiler. AbstractCompiler contains common flags and logic
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,47,* to make that happen.
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,49,* This class may be extended and used to create other Java classes
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,50,* that behave the same as running the Compiler from the command line. Example:
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,77,"ublic abstract class AbstractCompilerRunner<A extends Compiler,"
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,80,"abstract class AbstractCompilerRunner<A extends Compiler,"
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,82,ublic static final Flag<Boolean> FLAG_print_tree = Flag.value(false);
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,85,static final Flag<Boolean> FLAG_print_tree = Flag.value(false);
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,87,ublic static final Flag<Boolean> FLAG_compute_phase_ordering =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,90,static final Flag<Boolean> FLAG_compute_phase_ordering =
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,93,ublic static final Flag<Boolean> FLAG_print_ast = Flag.value(false);
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,96,static final Flag<Boolean> FLAG_print_ast = Flag.value(false);
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,97,ublic static final Flag<CompilerOptions.DevMode> FLAG_jscomp_dev_mode =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,100,static final Flag<CompilerOptions.DevMode> FLAG_jscomp_dev_mode =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,103,// TODO(nicksantos): Make the next 2 flags package-private.
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,112,ublic static final Flag<List<String>> FLAG_js = Flag.stringCollector();
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,116,static final Flag<List<String>> FLAG_js = Flag.stringCollector();
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,124,ublic static final Flag<List<String>> FLAG_module = Flag.stringCollector();
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,128,static final Flag<List<String>> FLAG_module = Flag.stringCollector();
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,128,ublic static final Flag<String> FLAG_variable_map_input_file =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,132,static final Flag<String> FLAG_variable_map_input_file =
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,134,ublic static final Flag<String> FLAG_property_map_input_file =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,138,static final Flag<String> FLAG_property_map_input_file =
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,140,ublic static final Flag<String> FLAG_variable_map_output_file =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,144,static final Flag<String> FLAG_variable_map_output_file =
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,149,ublic static final Flag<Boolean> FLAG_create_name_map_files =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,153,static final Flag<Boolean> FLAG_create_name_map_files =
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,154,ublic static final Flag<String> FLAG_property_map_output_file =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,158,static final Flag<String> FLAG_property_map_output_file =
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,159,ublic static final Flag<Boolean> FLAG_third_party = Flag.value(false);
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,163,static final Flag<Boolean> FLAG_third_party = Flag.value(false);
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,167,ublic static final Flag<Integer> FLAG_summary_detail_level = Flag.value(1);
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,171,static final Flag<Integer> FLAG_summary_detail_level = Flag.value(1);
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,171,"ublic static final Flag<String> FLAG_output_wrapper = Flag.value("""");"
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,175,"static final Flag<String> FLAG_output_wrapper = Flag.value("""");"
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,175,ublic static final Flag<String> FLAG_output_wrapper_marker =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,179,static final Flag<String> FLAG_output_wrapper_marker =
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,182,ublic static final Flag<List<String>> FLAG_module_wrapper =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,186,static final Flag<List<String>> FLAG_module_wrapper =
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,188,ublic static final Flag<String> FLAG_module_output_path_prefix =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,192,static final Flag<String> FLAG_module_output_path_prefix =
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,196,ublic static final Flag<String> FLAG_create_source_map =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,200,static final Flag<String> FLAG_create_source_map =
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,201,ublic static final Flag<List<String>> FLAG_jscomp_error =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,205,static final Flag<List<String>> FLAG_jscomp_error =
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,206,ublic static final Flag<List<String>> FLAG_jscomp_warning =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,210,static final Flag<List<String>> FLAG_jscomp_warning =
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,211,ublic static final Flag<List<String>> FLAG_jscomp_off =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,215,static final Flag<List<String>> FLAG_jscomp_off =
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,220,ublic static final Flag<List<String>> FLAG_define = Flag.stringCollector();
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,224,static final Flag<List<String>> FLAG_define = Flag.stringCollector();
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,236,ublic AbstractCompilerRunner(String[] args) {
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,240,AbstractCompilerRunner(String[] args) {
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,240,"ublic AbstractCompilerRunner(String[] args, PrintStream out,"
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,244,"AbstractCompilerRunner(String[] args, PrintStream out,"
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,355,ublic static class FlagUsageException extends Exception {
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,359,static class FlagUsageException extends Exception {
False,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,32, CompilerRunner encapsulates the logic required to run the Compiler.
False,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,33, This class is designed to be extended and used to create other Java classes
False,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,34, that behave the same as running the Compiler from the command line. Example:
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,32,* CompilerRunner translates flags into Java API calls on the Compiler.
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,34,* This class may be extended and used to create other Java classes
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,35,* that behave the same as running the Compiler from the command line. If you
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,36,"* want to run the compiler in-process in Java, you should look at this class"
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,37,"* for hints on what API calls to make, but you should not use this class directly."
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,39,* Example:
False,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,52,ublic class CompilerRunner extends
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,57,class CompilerRunner extends
False,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,105,ublic CompilerRunner(String[] args) {
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,110,CompilerRunner(String[] args) {
False,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,109,"ublic CompilerRunner(String[] args, PrintStream out, PrintStream err) {"
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,114,"CompilerRunner(String[] args, PrintStream out, PrintStream err) {"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1551,ode.copyInformationFrom(basisNode);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1551,node.copyInformationFromForTree(basisNode);
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,614,ewNode = makeVarDeclNode(ns);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,614,"newNode = makeVarDeclNode(ns, node);"
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,644, makeVarDeclNode(prefixNs)
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,644,"? makeVarDeclNode(prefixNs, node)"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,657,* @param sourceNode The node to get source information from.
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,658,rivate Node makeVarDeclNode(String namespace) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,659,"private Node makeVarDeclNode(String namespace, Node sourceNode) {"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,672,decl.copyInformationFromForTree(sourceNode);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,690,decl.copyInformationFromForTree(node);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,760,varNode.copyInformationFrom(replacementCandidate);
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,24,mport com.google.javascript.jscomp.CompilerRunner;
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,232,nputStream input = CompilerRunner.class.getResourceAsStream(
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,231,InputStream input = Compiler.class.getResourceAsStream(
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1805,* Copies source file and name information from the other node to the
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1806,* entire tree rooted at this node.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1808,public void copyInformationFromForTree(Node other) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1809,copyInformationFrom(other);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1810,for (Node child = getFirstChild();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1811,child != null; child = child.getNext()) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1812,child.copyInformationFromForTree(other);
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,65,/** Whether to check that all line number information is preserved. */
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,66,private boolean checkLineNumbers = false;
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,183,* Check to make sure that line numbers were preserved.
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,185,public void enableLineNumberCheck(boolean newVal) {
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,186,checkLineNumbers = newVal;
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,671,if (checkLineNumbers) {
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,672,"(new LineNumberCheck(compiler)).process(externsRoot, mainRoot);"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,44,public ProcessClosurePrimitivesTest() {
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,45,enableLineNumberCheck(true);
