is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CheckRegExp.java,src/com/google/javascript/jscomp/CheckRegExp.java,19,mport com.google.javascript.jscomp.mozilla.rhino.Token;
True,src/com/google/javascript/jscomp/CheckRegExp.java,src/com/google/javascript/jscomp/CheckRegExp.java,19,import com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/CheckRegExp.java,src/com/google/javascript/jscomp/CheckRegExp.java,57,f (parent.getType() != Token.NEW || n != parent.getFirstChild()) {
True,src/com/google/javascript/jscomp/CheckRegExp.java,src/com/google/javascript/jscomp/CheckRegExp.java,57,int parentType = parent.getType();
True,src/com/google/javascript/jscomp/CheckRegExp.java,src/com/google/javascript/jscomp/CheckRegExp.java,58,boolean first = (n == parent.getFirstChild());
True,src/com/google/javascript/jscomp/CheckRegExp.java,src/com/google/javascript/jscomp/CheckRegExp.java,59,if (!((parentType == Token.NEW && first)
True,src/com/google/javascript/jscomp/CheckRegExp.java,src/com/google/javascript/jscomp/CheckRegExp.java,60,|| (parentType == Token.CALL && first)
True,src/com/google/javascript/jscomp/CheckRegExp.java,src/com/google/javascript/jscomp/CheckRegExp.java,61,|| (parentType == Token.INSTANCEOF && !first))) {
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,374,"ode assign = new Node(Token.ASSIGN, name, value);"
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,374,"Node assign = new Node(Token.ASSIGN, name, value)"
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,375,.copyInformationFrom(name);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,39,import java.util.Iterator;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1060,or (CompilerInput input : inputs) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1061,List<CompilerInput> annotatedExterns = Lists.newArrayList();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1062,Iterator<CompilerInput> inputIterator = inputs.iterator();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1063,while (inputIterator.hasNext()) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1064,CompilerInput input = inputIterator.next();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1075,if (n.getJSDocInfo() != null && n.getJSDocInfo().isExterns()) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1076,"// If the input file is explicitly marked as an externs file, then"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1077,// assume the programmer made a mistake and throw it into
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1078,// the externs pile anyways.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1079,externsRoot.addChildToBack(n);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1080,input.setIsExtern(true);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1081,inputIterator.remove();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1082,externs.add(input);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1083,continue;
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,19,import com.google.common.base.Preconditions;
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,117,/ Nodes which are 1 of many children of a VAR need to be moved
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,118,"/ carefully. We must dissect them out of the VAR, and create a new"
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,119,/ VAR to hold them.
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,118,// VAR Nodes are normalized to have only one child.
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,121,f (declParent.getType() == Token.VAR &&
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,122,eclParent.getChildCount() > 1) {
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,123,eclParent.removeChild(decl.node);
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,125,/ Make a new node
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,126,"ode var = new Node(Token.VAR, decl.node);"
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,127,estParent.addChildToFront(var);
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,128, else {
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,129,/ Remove it
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,130,eclParent.detachFromParent();
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,132,/ Add it to the new spot
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,133,estParent.addChildToFront(declParent);
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,120,Preconditions.checkState(
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,121,"declParent.getType() != Token.VAR || declParent.hasOneChild(),"
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,122,"""AST not normalized."");"
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,124,// Remove it
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,125,declParent.detachFromParent();
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,127,// Add it to the new spot
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,128,destParent.addChildToFront(declParent);
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,147,"ode.newString(Token.NAME, STUB_METHOD_NAME),"
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,148,ode.newNumber(stubId)));
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,147,"Node.newString(Token.NAME, STUB_METHOD_NAME),"
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,148,Node.newNumber(stubId))
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,149,.copyInformationFromForTree(value));
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,163,alue))));
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,164,value)))
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,165,.copyInformationFromForTree(value));
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,206,"arent.replaceChild(n, new Node(Token.VOID, Node.newNumber(0)));"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,206,"parent.replaceChild(n,"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,207,"new Node(Token.VOID, Node.newNumber(0).copyInformationFrom(n)));"
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,116,"ode var = new Node(Token.VAR, Node.newString(Token.NAME, prototypeAlias));"
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,117,ompiler.getNodeForCodeInsertion(null).addChildrenToFront(var);
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,116,Node injectionPoint = compiler.getNodeForCodeInsertion(null);
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,118,"Node var = NodeUtil.newVarNode(prototypeAlias, null)"
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,119,.copyInformationFromForTree(injectionPoint);
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,121,injectionPoint.addChildrenToFront(var);
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,132,tring className = instance.declarations.getFirst().qualifiedClassName;
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,133,"ode stmt = new Node(instance.declarations.getFirst().node.getType(),"
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,136,PrototypeMemberDeclaration first = instance.declarations.getFirst();
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,137,String className = first.qualifiedClassName;
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,138,"Node stmt = new Node(first.node.getType(),"
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,137,"nstance.parent, className + "".prototype"")));"
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,142,"instance.parent, className + "".prototype"")))"
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,143,.copyInformationFromForTree(first.node);
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,139,"nstance.parent.addChildBefore(stmt, instance.declarations.getFirst().node);"
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,145,"instance.parent.addChildBefore(stmt, first.node);"
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,31,import com.google.javascript.rhino.jstype.FunctionBuilder;
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,480,nType = typeRegistry.createMethodTypeWithTypeTemplate(
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,481,"nName, sourceNode,"
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,482,"arametersNode, returnType, thisType, templateTypeName);"
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,481,fnType = new FunctionBuilder(typeRegistry)
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,482,.withName(fnName)
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,483,.withSourceNode(sourceNode)
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,484,.withParamsNode(parametersNode)
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,485,.withReturnType(returnType)
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,486,.withTypeOfThis(thisType)
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,487,.withTemplateName(templateTypeName)
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,488,.build();
False,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,53,"uper(registry, name, null,"
False,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,54,egistry.createOptionalParameters(
False,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,55,"egistry.getNativeType(ALL_TYPE),"
False,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,56,"egistry.getNativeType(ALL_TYPE),"
False,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,57,"egistry.getNativeType(ALL_TYPE)),"
False,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,58,"ull, null, null, true, true);"
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,53,super(
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,54,"registry, name, null,"
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,55,registry.createArrowType(
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,56,registry.createOptionalParameters(
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,57,"registry.getNativeType(ALL_TYPE),"
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,58,"registry.getNativeType(ALL_TYPE),"
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,59,"registry.getNativeType(ALL_TYPE)),"
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,60,"null),"
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,61,"null, null, true, true);"
False,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,61,Override
False,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,62,ublic JSType getReturnType() {
False,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,63,eturn getInstanceType();
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,63,// NOTE(nicksantos): Errors have the weird behavior in that they can
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,64,"// be called as functions, and they will return instances of themselves."
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,65,// Error('x') instanceof Error => true
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,67,"// In user-defined types, we would deal with this case by creating"
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,68,"// a NamedType with the name ""Error"" and then resolve it later."
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,70,"// For native types, we don't really want the native types to"
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,71,// depend on type-resolution. So we just set the return type manually
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,72,// at the end of construction.
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,74,// There's similar logic in JSTypeRegistry for Array and RegExp.
True,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,src/com/google/javascript/rhino/jstype/ErrorFunctionType.java,75,getInternalArrowType().returnType = getInstanceType();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,3,* ***** BEGIN LICENSE BLOCK *****
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,4,* Version: MPL 1.1/GPL 2.0
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,8,* the License. You may obtain a copy of the License at
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,9,* http://www.mozilla.org/MPL/
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,13,* for the specific language governing rights and limitations under the
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,14,* License.
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,16,"* The Original Code is Rhino code, released"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,17,"* May 6, 1999."
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,19,* The Initial Developer of the Original Code is
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,20,* Netscape Communications Corporation.
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,22,* the Initial Developer. All Rights Reserved.
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,24,* Contributor(s):
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,25,*   Bob Jervis
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,26,*   Google Inc.
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,28,"* Alternatively, the contents of this file may be used under the terms of"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,29,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,30,* case the provisions of the GPL are applicable instead of those above. If
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,31,* you wish to allow use of your version of this file only under the terms of
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,32,* the GPL and not to allow others to use your version of this file under the
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,33,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,34,* them with the notice and other provisions required by the GPL. If you do
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,35,"* not delete the provisions above, a recipient may use your version of this"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,36,* file under either the MPL or the GPL.
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,38,* ***** END LICENSE BLOCK ***** */
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,40,package com.google.javascript.rhino.jstype;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,42,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,45,* A builder class for function and arrow types.
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,47,"* If you need to build an interface constructor,"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,48,* use {@link JSTypeRegistry#createInterfaceType}.
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,50,* @author nicksantos@google.com (Nick Santos)
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,52,public final class FunctionBuilder {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,53,private final JSTypeRegistry registry;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,54,private String name = null;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,55,private Node sourceNode = null;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,56,private Node parametersNode = null;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,57,private JSType returnType = null;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,58,private ObjectType typeOfThis = null;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,59,private String templateTypeName = null;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,60,private boolean isConstructor = false;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,61,private boolean isNativeType = false;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,63,public FunctionBuilder(JSTypeRegistry registry) {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,64,this.registry = registry;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,67,/** Set the name of the function type. */
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,68,public FunctionBuilder withName(String name) {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,69,this.name = name;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,70,return this;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,73,/** Set the source node of the function type. */
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,74,public FunctionBuilder withSourceNode(Node sourceNode) {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,75,this.sourceNode = sourceNode;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,76,return this;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,79,/** Set the parameters of the function type from a FunctionParamBuilder. */
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,80,public FunctionBuilder withParams(FunctionParamBuilder params) {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,81,this.parametersNode = params.build();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,82,return this;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,86,* Set the parameters of the function type with a specially-formatted node.
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,88,public FunctionBuilder withParamsNode(Node parametersNode) {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,89,this.parametersNode = parametersNode;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,90,return this;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,93,/** Set the return type. */
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,94,public FunctionBuilder withReturnType(JSType returnType) {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,95,this.returnType = returnType;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,96,return this;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,99,"/** Set the ""this"" type. */"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,100,public FunctionBuilder withTypeOfThis(ObjectType typeOfThis) {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,101,this.typeOfThis = typeOfThis;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,102,return this;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,105,/** Set the template name. */
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,106,public FunctionBuilder withTemplateName(String templateTypeName) {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,107,this.templateTypeName = templateTypeName;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,108,return this;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,111,/** Make this a constructor. */
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,112,public FunctionBuilder forConstructor() {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,113,this.isConstructor = true;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,114,return this;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,117,/** Make this a native type. */
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,118,FunctionBuilder forNativeType() {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,119,this.isNativeType = true;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,120,return this;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,123,/** Copies all the information from another function type. */
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,124,public FunctionBuilder copyFromOtherFunction(FunctionType otherType) {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,125,this.name = otherType.getReferenceName();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,126,this.sourceNode = otherType.getSource();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,127,this.parametersNode = otherType.getParametersNode();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,128,this.returnType = otherType.getReturnType();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,129,this.typeOfThis = otherType.getTypeOfThis();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,130,this.templateTypeName = otherType.getTemplateTypeName();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,131,this.isConstructor = otherType.isConstructor();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,132,this.isNativeType = otherType.isNativeObjectType();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,133,return this;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,136,/** Construct a new function type. */
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,137,public FunctionType build() {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,138,"return new FunctionType(registry, name, sourceNode,"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,139,"registry.createArrowType(parametersNode, returnType),"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,140,"typeOfThis, templateTypeName, isConstructor, isNativeType);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,125, Creates a function type.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,126, @param registry the owner registry for this type
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,127, @param name the function's name or {@code null} to indicate that the
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,128,        function is anonymous.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,129, @param source the node defining this function. Its type
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,130,        ({@link Node#getType()}) must be {@link Token#FUNCTION}.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,131, @param parameters the function's parameters or {@code null}
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,132,        to indicate that the parameter types are unknown.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,133, @param returnType the function's return type or {@code null} to indicate
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,134,        that the return type is unknown.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,136,"unctionType(JSTypeRegistry registry, String name, Node source,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,137,"ode parameters, JSType returnType) {"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,138,"his(registry, name, source, parameters, returnType, null, null, false,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,139,alse);
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,143, Creates a function type.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,144, @param registry the owner registry for this type
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,145, @param name the function's name or {@code null} to indicate that the
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,146,        function is anonymous.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,147, @param source the node defining this function. Its type
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,148,        ({@link Node#getType()}) must be {@link Token#FUNCTION}.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,149, @param parameters the function's parameters or {@code null}
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,150,        to indicate that the parameter types are unknown.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,151, @param returnType the function's return type or {@code null} to indicate
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,152,        that the return type is unknown.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,153, @param typeOfThis The type of {@code this} in non-constructors.  May be
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,154,        {@code null} to indicate that the type of {@code this} is unknown.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,156,"unctionType(JSTypeRegistry registry, String name, Node source,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,157,"ode parameters, JSType returnType, ObjectType typeOfThis) {"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,158,"his(registry, name, source, parameters, returnType, typeOfThis,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,159,"ull, false, false);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,163, Creates a function type.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,164, @param registry the owner registry for this type
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,165, @param name the function's name or {@code null} to indicate that the
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,166,        function is anonymous.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,167, @param source the node defining this function. Its type
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,168,        ({@link Node#getType()}) must be {@link Token#FUNCTION}.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,169, @param parameters the function's parameters or {@code null}
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,170,        to indicate that the parameter types are unknown.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,171, @param returnType the function's return type or {@code null} to indicate
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,172,        that the return type is unknown.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,173, @param typeOfThis The type of {@code this} in non-constructors.  May be
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,174,        {@code null} to indicate that the type of {@code this} is unknown.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,175, @param templateTypeName The template type name or {@code null}.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,177,"unctionType(JSTypeRegistry registry, String name, Node source,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,178,"ode parameters, JSType returnType, ObjectType typeOfThis,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,179,tring templateTypeName) {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,180,"his(registry, name, source, parameters, returnType, typeOfThis,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,181,"emplateTypeName, false, false);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,186,"ode parameters, JSType returnType, ObjectType typeOfThis,"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,126,"ArrowType arrowType, ObjectType typeOfThis,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,203,"/ The call type should be set up last because we are calling getReturnType,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,204,/ which may be overloaded and depend on other properties being set.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,205,"his.call = new ArrowType(registry, parameters,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,206,returnType == null ? getReturnType() : returnType));
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,143,this.call = arrowType;
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,211,"unctionType(JSTypeRegistry registry, String name, Node source) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,148,"private FunctionType(JSTypeRegistry registry, String name, Node source) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,160,/** Creates an instance for a function that is an interface. */
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,161,static FunctionType forInterface(
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,162,"JSTypeRegistry registry, String name, Node source) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,163,"return new FunctionType(registry, name, source);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,247,/** Gets the internal arrow type. For use by subclasses only. */
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,248,ArrowType getInternalArrowType() {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,249,return call;
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,429,"ew FunctionType(registry, null, null,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,430,"ull, getReturnType()),"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,377,new FunctionBuilder(registry)
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,378,.withReturnType(getReturnType())
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,379,".build(),"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,441,"ew FunctionType(registry, null, null,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,442,"arams, getReturnType()),"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,390,new FunctionBuilder(registry)
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,391,.withParamsNode(params)
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,392,.withReturnType(getReturnType())
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,393,".build(),"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,459,"ew FunctionType(registry, null, null,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,460,"uilder.build(), getReturnType()),"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,410,new FunctionBuilder(registry)
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,411,.withParams(builder)
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,412,.withReturnType(getReturnType())
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,413,".build(),"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,808,// A helper method for creating arrow types.
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,809,"private ArrowType createArrowType(Node parameters, JSType returnType) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,810,"return registry.createArrowType(parameters, returnType);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,216,"reateOptionalParameters(ALL_TYPE), UNKNOWN_TYPE,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,216,"createArrowType(createOptionalParameters(ALL_TYPE), UNKNOWN_TYPE),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,231,"reateParametersWithVarArgs(ALL_TYPE), UNKNOWN_TYPE,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,231,createArrowType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,232,"createParametersWithVarArgs(ALL_TYPE), UNKNOWN_TYPE),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,249,"reateParametersWithVarArgs(ALL_TYPE), null, null, null, true, true) {"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,250,rivate static final long serialVersionUID = 1L;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,250,"createArrowType(createParametersWithVarArgs(ALL_TYPE), null),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,251,"null, null, true, true);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,252,ARRAY_FUNCTION_TYPE.getInternalArrowType().returnType =
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,253,ARRAY_FUNCTION_TYPE.getInstanceType();
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,252,Override
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,253,ublic JSType getReturnType() {
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,254,eturn getInstanceType();
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,266,"reateParameters(false, ALL_TYPE), BOOLEAN_TYPE, null, null, true,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,267,rue);
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,264,"createArrowType(createParameters(false, ALL_TYPE), BOOLEAN_TYPE),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,265,"null, null, true, true);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,279,"reateOptionalParameters(UNKNOWN_TYPE, UNKNOWN_TYPE, UNKNOWN_TYPE,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,280,"NKNOWN_TYPE, UNKNOWN_TYPE, UNKNOWN_TYPE, UNKNOWN_TYPE),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,281,"TRING_TYPE, null, null, true, true);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,277,createArrowType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,278,"createOptionalParameters(UNKNOWN_TYPE, UNKNOWN_TYPE, UNKNOWN_TYPE,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,279,"UNKNOWN_TYPE, UNKNOWN_TYPE, UNKNOWN_TYPE, UNKNOWN_TYPE),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,280,"STRING_TYPE),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,281,"null, null, true, true);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,358,"ew FunctionType(this, ""Number"", null, createParameters(false, ALL_TYPE),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,359,"UMBER_TYPE, null, null, true, true);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,358,"new FunctionType(this, ""Number"", null,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,359,"createArrowType(createParameters(false, ALL_TYPE), NUMBER_TYPE),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,360,"null, null, true, true);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,371,"reateOptionalParameters(ALL_TYPE, ALL_TYPE),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,372,"ull, null, null, true, true) {"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,373,rivate static final long serialVersionUID = 1L;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,372,"createArrowType(createOptionalParameters(ALL_TYPE, ALL_TYPE)),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,373,"null, null, true, true);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,374,REGEXP_FUNCTION_TYPE.getInternalArrowType().returnType =
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,375,REGEXP_FUNCTION_TYPE.getInstanceType();
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,375,Override
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,376,ublic JSType getReturnType() {
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,377,eturn getInstanceType();
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,388,"ew FunctionType(this, ""String"", null, createParameters(false, ALL_TYPE),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,389,"TRING_TYPE, null, null, true, true);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,385,"new FunctionType(this, ""String"", null,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,386,"createArrowType(createParameters(false, ALL_TYPE), STRING_TYPE),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,387,"null, null, true, true);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,447,reateParametersWithVarArgs(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,448,"NKNOWN_TYPE), UNKNOWN_TYPE, NO_OBJECT_TYPE, null, true, true) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,445,createArrowType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,446,"createParametersWithVarArgs(UNKNOWN_TYPE),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,447,"UNKNOWN_TYPE),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,448,"NO_OBJECT_TYPE, null, true, true) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,829,"* Creates an arrow type, an abstract representation of the parameters"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,830,* and return value of a function.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,832,"* @param parametersNode the parameters' types, formatted as a Node with"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,833,*     param names and optionality info.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,834,* @param returnType the function's return type
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,836,"ArrowType createArrowType(Node parametersNode, JSType returnType) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,837,"return new ArrowType(this, parametersNode, returnType);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,841,* Creates an arrow type with an unknown return type.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,843,"* @param parametersNode the parameters' types, formatted as a Node with"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,844,*     param names and optionality info.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,846,ArrowType createArrowType(Node parametersNode) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,847,"return new ArrowType(this, parametersNode, null);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,836,eturn new FunctionType(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,837,"his, null, null, createParameters(parameterTypes), returnType);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,858,"return createFunctionType(returnType, createParameters(parameterTypes));"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,849,eturn new FunctionType(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,850,"his, null, null, createParametersWithVarArgs(parameterTypes),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,851,eturnType);
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,870,return createFunctionType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,871,"returnType, createParametersWithVarArgs(parameterTypes));"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,862,eturn new FunctionType(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,863,"his, null, null, createParameters(parameterTypes), returnType);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,882,"return createFunctionType(returnType, createParameters(parameterTypes));"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,875,eturn new FunctionType(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,876,"his, null, null, createParametersWithVarArgs(parameterTypes), returnType);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,894,return createFunctionType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,895,"returnType, createParametersWithVarArgs(parameterTypes));"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,913,"eturn new FunctionType(this, null, null, createParameters(parameterTypes),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,914,"eturnType, instanceType);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,932,return new FunctionBuilder(this)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,933,.withParamsNode(createParameters(parameterTypes))
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,934,.withReturnType(returnType)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,935,.withTypeOfThis(instanceType)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,936,.build();
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,928,"eturn new FunctionType(this, null, null,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,929,"reateParametersWithVarArgs(parameterTypes), returnType, instanceType);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,950,return new FunctionBuilder(this)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,951,.withParamsNode(createParametersWithVarArgs(parameterTypes))
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,952,.withReturnType(returnType)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,953,.withTypeOfThis(instanceType)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,954,.build();
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1035,eturn new FunctionType(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1036,"his,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1037,"xistingFunctionType.getReferenceName(),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1038,"xistingFunctionType.getSource(),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1039,"xistingFunctionType.getParametersNode(),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1040,"eturnType,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1041,"xistingFunctionType.getTypeOfThis(),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1042,xistingFunctionType.getTemplateTypeName());
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1060,return new FunctionBuilder(this)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1061,.copyFromOtherFunction(existingFunctionType)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1062,.withReturnType(returnType)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1063,.build();
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1053,eturn new FunctionType(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1054,"his,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1055,"xistingFunctionType.getReferenceName(),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1056,"xistingFunctionType.getSource(),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1057,"xistingFunctionType.getParametersNode(),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1058,"xistingFunctionType.getReturnType(),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1059,"hisType,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1060,xistingFunctionType.getTemplateTypeName());
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1074,return new FunctionBuilder(this)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1075,.copyFromOtherFunction(existingFunctionType)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1076,.withTypeOfThis(thisType)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1077,.build();
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1071,"eturn new FunctionType(this, null, null, parameters, returnType);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1075, @param name the function's name or {@code null} to indicate that the
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1076,        function is anonymous.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1077, @param source the node defining this function. Its type
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1078,        ({@link Node#getType()}) must be {@link Token#FUNCTION}.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1079, @param parameters the function's parameters or {@code null}
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1080,        to indicate that the parameter types are unknown.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1081, @param returnType the function's return type or {@code null} to indicate
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1082,        that the return type is unknown.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1083, @param typeOfThis The type of {@code this} in non-constructors.  May be
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1084,        {@code null} to indicate that the type of {@code this} is unknown.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1085, @param templateTypeName The template type name or {@code null}.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1087,"ublic FunctionType createMethodTypeWithTypeTemplate(String name, Node source,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1088,"ode parameters, JSType returnType, ObjectType typeOfThis,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1089,tring templateTypeName) {
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1090,"eturn new FunctionType(this, name, source, parameters, returnType,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1091,"ypeOfThis, templateTypeName);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1095, @param name the function's name or {@code null} to indicate that the
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1096,        function is anonymous.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1097, @param source the node defining this function. Its type
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1098,        ({@link Node#getType()}) must be {@link Token#FUNCTION}.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1099, @param parameters the function's parameters or {@code null}
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1100,        to indicate that the parameter types are unknown.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1101, @param returnType the function's return type or {@code null} to indicate
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1102,        that the return type is unknown.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1103, @param typeOfThis The type of {@code this} in non-constructors.  May be
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1104,        {@code null} to indicate that the type of {@code this} is unknown.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1106,"ublic FunctionType createMethodType(String name, Node source,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1107,"ode parameters, JSType returnType, ObjectType typeOfThis) {"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1108,"eturn new FunctionType(this, name, source, parameters, returnType,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1109,ypeOfThis);
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1113, @param parameters the function's parameters or {@code null}
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1114,        to indicate that the parameter types are unknown.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1115, @param returnType the function's return type or {@code null} to indicate
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1116,        that the return type is unknown.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1117, @param typeOfThis The type of {@code this} in non-constructors.  May be
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1118,        {@code null} to indicate that the type of {@code this} is unknown.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1120,ublic FunctionType createMethodType(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1121,"SType returnType, Node parameters, ObjectType typeOfThis) {"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1122,"eturn new FunctionType(this, null, null, parameters,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1123,"eturnType, typeOfThis);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1088,return new FunctionBuilder(this)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1089,.withParamsNode(parameters)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1090,.withReturnType(returnType)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1091,.build();
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1187,"eturn new FunctionType(this, name, source, parameters, returnType, null,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1155,"return new FunctionType(this, name, source,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1156,"createArrowType(parameters, returnType), null,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1198,"eturn new FunctionType(this, name, source);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1167,"return FunctionType.forInterface(this, name, source);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1402,"eturn new FunctionType(this, null, null, paramBuilder.build(),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1403,"eturnType, thisType, null);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1371,return new FunctionBuilder(this)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1372,.withParams(paramBuilder)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1373,.withReturnType(returnType)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1374,.withTypeOfThis(thisType)
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1375,.build();
False,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,211,"uper(registry, null, null, null, null, null, null, true, true);"
False,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,214,Override
False,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,215,ublic JSType getReturnType() {
False,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,216,eturn this;
False,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,219,Override
False,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,220,ublic ObjectType getInstanceType() {
False,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,221,eturn this;
True,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,211,"super(registry, null, null,"
True,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,212,"registry.createArrowType(null, null),"
True,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,213,"null, null, true, true);"
True,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,214,getInternalArrowType().returnType = this;
True,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,215,this.setInstanceType(this);
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,44,import com.google.javascript.rhino.jstype.FunctionBuilder;
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,384,"egistry.createMethodType(returnType, null, null), true);"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,384,"new FunctionBuilder(registry).withReturnType(returnType).build(), true);"
False,test/com/google/javascript/jscomp/CheckRegExpTest.java,test/com/google/javascript/jscomp/CheckRegExpTest.java,43,/ creating regexp's is ok
True,test/com/google/javascript/jscomp/CheckRegExpTest.java,test/com/google/javascript/jscomp/CheckRegExpTest.java,43,// Creating regexp's is ok
True,test/com/google/javascript/jscomp/CheckRegExpTest.java,test/com/google/javascript/jscomp/CheckRegExpTest.java,44,"testReference(""RegExp();"", false);"
True,test/com/google/javascript/jscomp/CheckRegExpTest.java,test/com/google/javascript/jscomp/CheckRegExpTest.java,45,"testReference(""var x = RegExp();"", false);"
True,test/com/google/javascript/jscomp/CheckRegExpTest.java,test/com/google/javascript/jscomp/CheckRegExpTest.java,49,"// Checking for RegExp instances is ok, as well."
True,test/com/google/javascript/jscomp/CheckRegExpTest.java,test/com/google/javascript/jscomp/CheckRegExpTest.java,50,"testReference(""x instanceof RegExp;"", false);"
True,test/com/google/javascript/jscomp/CheckRegExpTest.java,test/com/google/javascript/jscomp/CheckRegExpTest.java,58,"testReference(""delete RegExp;"", true);"
True,test/com/google/javascript/jscomp/CheckRegExpTest.java,test/com/google/javascript/jscomp/CheckRegExpTest.java,62,"testReference(""f(RegExp);"", true);"
True,test/com/google/javascript/jscomp/CheckRegExpTest.java,test/com/google/javascript/jscomp/CheckRegExpTest.java,63,"testReference(""new f(RegExp);"", true);"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,39,super.enableLineNumberCheck(true);
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,238,public void testExternsLifting1() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,239,"test(new String[] {""/** @externs */ function f() {}""},"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,240,new String[] {});
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,243,public void testExternsLifting2() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,244,"args.add(""--warning_level=VERBOSE"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,245,"test(new String[] {""/** @externs */ function f() {}"", ""f(3);""},"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,246,"new String[] {""f(3);""},"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,247,TypeCheck.WRONG_ARGUMENT_COUNT);
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,269,"test(original, compiled, null);"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,273,"* Asserts that when compiling with the given compiler options,"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,274,* {@code original} is transformed into {@code compiled}.
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,275,"* If {@code warning} is non-null, we will also check if the given"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,276,* warning type was emitted.
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,278,"private void test(String[] original, String[] compiled,"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,279,DiagnosticType warning) {
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,258,"ssertEquals(""Expected no warnings or errors\n"" +"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,259,"Errors: \n"" + Joiner.on(""\n"").join(compiler.getErrors()) +"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,260,"Warnings: \n"" + Joiner.on(""\n"").join(compiler.getWarnings()),"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,261,", compiler.getErrors().length + compiler.getWarnings().length);"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,282,if (warning == null) {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,283,"assertEquals(""Expected no warnings or errors\n"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,284,"""Errors: \n"" + Joiner.on(""\n"").join(compiler.getErrors()) +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,285,"""Warnings: \n"" + Joiner.on(""\n"").join(compiler.getWarnings()),"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,286,"0, compiler.getErrors().length + compiler.getWarnings().length);"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,287,} else {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,288,"assertEquals(1, compiler.getWarnings().length);"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,289,"assertEquals(warning, compiler.getWarnings()[0].getType());"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,321,"assertEquals(1, compiler.getErrors().length);"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,324,"assertEquals(1, compiler.getWarnings().length);"
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,24,static final String ACTIVE_X_OBJECT_DEF =
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,25,"""/**\n"" +"
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,26,""" * @param {string} progId\n"" +"
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,27,""" * @param {string=} opt_location\n"" +"
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,28,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,29,""" * @see http://msdn.microsoft.com/en-us/library/7sw4ddf8.aspx\n"" +"
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,30,""" */\n"" +"
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,31,"""function ActiveXObject(progId, opt_location) {}\n"";"
False,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,47,"/** @type {number} */ Array.prototype.length;"";"
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,56,"""/** @type {number} */ Array.prototype.length;"" + ACTIVE_X_OBJECT_DEF;"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,32,@Override
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,33,public void setUp() {
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,34,super.enableLineNumberCheck(true);
False,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,532,"var a = 0, b = 1, c = 2;"","
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,537,"""var a = 0; var b = 1; var c = 2;"","
False,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,539,"var a = 0, c = 2;"","
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,544,"""var a = 0; var c = 2;"","
False,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,550,"var a = 0, b = 1;"","
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,555,"""var a = 0; var b = 1;"","
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,45,super.enableLineNumberCheck(true);
False,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,364,/ Module 2
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,365,// Module 2
False,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,381,/ Module 2
False,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,382,"Foo.prototype.baz = JSCompiler_unstubMethod("" +"
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,382,// Module 2
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,383,"""Foo.prototype.baz = JSCompiler_unstubMethod("" +"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,32,@Override
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,33,public void setUp() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,34,super.enableLineNumberCheck(true);
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,27,@Override
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,28,protected void setUp() {
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,29,super.enableLineNumberCheck(true);
False,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,39,ublic void testExtractingSingleClassPrototype() {
False,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,40,"xtract(generatePrototypeDeclarations(""x"", 7),"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,44,public void testExtractingSingleClassPrototype() {
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,45,"extract(generatePrototypeDeclarations(""x"", 7),"
False,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,45,ublic void testExtractingTwoClassPrototype() {
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,50,public void testExtractingTwoClassPrototype() {
False,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,55,ublic void testExtractingTwoClassPrototypeInDifferentBlocks() {
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,60,public void testExtractingTwoClassPrototypeInDifferentBlocks() {
False,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,69,ublic void testNoMemberDeclarations() {
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,74,public void testNoMemberDeclarations() {
False,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,76,ublic void testExtractingPrototypeWithQName() {
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,81,public void testExtractingPrototypeWithQName() {
False,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,78,"eneratePrototypeDeclarations(""com.google.javascript.jscomp.x"", 7),"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,83,"generatePrototypeDeclarations(""com.google.javascript.jscomp.x"", 7),"
False,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,152,"ublic String generatePrototypeDeclaration(String className, String member,"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,157,"public String generatePrototypeDeclaration(String className, String member,"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6834,public void testActiveXObject() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6835,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6836,"""/** @type {Object} */ var x = new ActiveXObject();"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6837,"""/** @type { {impossibleProperty} } */ var y = new ActiveXObject();"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,49,private static final String ACTIVE_X_OBJECT_DEF =
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,50,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,51,""" * @param {string} progId\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,52,""" * @param {string=} opt_location\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,53,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,54,""" * @see http://msdn.microsoft.com/en-us/library/7sw4ddf8.aspx\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,55,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,56,"""function ActiveXObject(progId, opt_location) {}\n"";"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,688,public void testActiveXObject() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,689,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,690,"CompilerTypeTestCase.ACTIVE_X_OBJECT_DEF,"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,691,"""var x = new ActiveXObject();"", null);"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,692,assertEquals(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,693,"""NoObject"","
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,694,"findNameType(""x"", globalScope).toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,52,import com.google.javascript.rhino.jstype.ArrowType;
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,102,"unctionType = new FunctionType(registry, null, null, null, NUMBER_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,103,"ateMethod = new FunctionType(registry, null, null, new Node(Token.LP),"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,104,"UMBER_TYPE, DATE_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,103,functionType = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,104,.withReturnType(NUMBER_TYPE)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,105,.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,106,dateMethod = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,107,.withParamsNode(new Node(Token.LP))
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,108,.withReturnType(NUMBER_TYPE)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,109,.withTypeOfThis(DATE_TYPE)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,110,.build();
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,110,"ew FunctionType(registry, null, null, null, null, null, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,111,"rue, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,116,"new FunctionType(registry, null, null, createArrowType(null),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,117,"null, null, true, false);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,115,"nterfaceType = new FunctionType(registry, ""Interface"", null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,121,"interfaceType = FunctionType.forInterface(registry, ""Interface"", null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2735,"ew FunctionType(registry, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2736,"ull,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2737,"ew JSTypeRegistry(null).createParameters(NUMBER_TYPE),"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2738,"UMBER_STRING_BOOLEAN,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2739,ATE_TYPE).toString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2741,new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2742,.withParamsNode(registry.createParameters(NUMBER_TYPE))
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2743,.withReturnType(NUMBER_STRING_BOOLEAN)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2744,.withTypeOfThis(DATE_TYPE)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2745,.build().toString());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2746,"unctionType dateMethodEmpty = new FunctionType(registry, null, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2747,"ull, null, DATE_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2748,"unctionType dateMethodWithParam = new FunctionType(registry, null, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2749,"ew JSTypeRegistry(null).createParameters(NUMBER_TYPE), null, DATE_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2750,"unctionType dateMethodWithReturn = new FunctionType(registry, null, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2751,"ull, NUMBER_TYPE, DATE_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2752,"unctionType stringMethodEmpty = new FunctionType(registry, null, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2753,"ull, null, STRING_OBJECT_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2754,"unctionType stringMethodWithParam = new FunctionType(registry, null, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2755,"ew JSTypeRegistry(null).createParameters(NUMBER_TYPE), null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2756,TRING_OBJECT_TYPE);
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2757,"unctionType stringMethodWithReturn = new FunctionType(registry, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2758,"ull, null, NUMBER_TYPE, STRING_OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2752,FunctionType dateMethodEmpty = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2753,.withTypeOfThis(DATE_TYPE).build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2754,FunctionType dateMethodWithParam = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2755,.withParamsNode(registry.createParameters(NUMBER_TYPE))
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2756,.withTypeOfThis(DATE_TYPE).build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2757,FunctionType dateMethodWithReturn = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2758,.withReturnType(NUMBER_TYPE)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2759,.withTypeOfThis(DATE_TYPE).build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2760,FunctionType stringMethodEmpty = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2761,.withTypeOfThis(STRING_OBJECT_TYPE).build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2762,FunctionType stringMethodWithParam = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2763,.withParamsNode(registry.createParameters(NUMBER_TYPE))
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2764,.withTypeOfThis(STRING_OBJECT_TYPE).build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2765,FunctionType stringMethodWithReturn = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2766,.withReturnType(NUMBER_TYPE)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2767,.withTypeOfThis(STRING_OBJECT_TYPE).build();
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2796,"unctionType googBarMethod = new FunctionType(registry, null, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2797,"ull, null, googBar);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2798,"unctionType googBarParamFn = new FunctionType(registry, null, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2799,"ew JSTypeRegistry(null).createParameters(googBar), null, null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2800,"unctionType googBarReturnFn = new FunctionType(registry, null, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2801,"ull, googBar, null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2802,"unctionType googSubBarMethod = new FunctionType(registry, null, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2803,"ull, null, googSubBar);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2804,"unctionType googSubBarParamFn = new FunctionType(registry, null, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2805,"ew JSTypeRegistry(null).createParameters(googSubBar), null, null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2806,"unctionType googSubBarReturnFn = new FunctionType(registry, null, null,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2807,"ull, googSubBar, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2805,FunctionType googBarMethod = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2806,.withTypeOfThis(googBar).build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2807,FunctionType googBarParamFn = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2808,.withParamsNode(registry.createParameters(googBar)).build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2809,FunctionType googBarReturnFn = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2810,.withReturnType(googBar).build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2811,FunctionType googSubBarMethod = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2812,.withTypeOfThis(googSubBar).build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2813,FunctionType googSubBarParamFn = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2814,.withParamsNode(registry.createParameters(googSubBar)).build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2815,FunctionType googSubBarReturnFn = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2816,.withReturnType(googSubBar).build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5229,private ArrowType createArrowType(Node params) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5230,return registry.createArrowType(params);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5233,"private ArrowType createArrowType(Node params, JSType retType) {"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5234,"return registry.createArrowType(params, retType);"
