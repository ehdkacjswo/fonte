is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,12,import java.util.regex.Pattern;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,13,import java.util.regex.PatternSyntaxException;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,591,* Find elements whose text matches the supplied regular expression.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,592,* @param pattern regular expression to match text against
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,593,* @return elements matching the supplied regular expression.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,595,public Elements getElementsMatchingText(Pattern pattern) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,596,"return Collector.collect(new Evaluator.Matches(pattern), this);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,600,* Find elements whose text matches the supplied regular expression.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,601,* @param regex regular expression to match text against
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,602,* @return elements matching the supplied regular expression.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,604,public Elements getElementsMatchingText(String regex) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,605,Pattern pattern;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,606,try {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,607,pattern = Pattern.compile(regex);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,608,} catch (PatternSyntaxException e) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,609,"throw new IllegalArgumentException(""Pattern syntax error: "" + regex, e);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,611,return getElementsMatchingText(pattern);
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,3,import java.util.regex.Matcher;
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,4,import java.util.regex.Pattern;
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,185,static final class Matches extends Evaluator {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,186,private Pattern pattern;
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,187,Matches(Pattern pattern) {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,188,this.pattern = pattern;
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,191,public boolean matches(Element element) {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,192,Matcher m = pattern.matcher(element.text());
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,193,return m.find();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,3,mport org.apache.commons.lang.NotImplementedException;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,45,"<tr><td><code>E:matches(<em>regex</em>)</code></td><td>an Element whose text matches the specified regular expression. The text may appear in the found Element, or any of its descendants.</td><td><code>td:matches(\\d+)</code> finds table cells containing digits. <code>div:matches((?i)login)</code> finds divs containing the text, case insensitively.</td></tr>"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,167,"} else if (tq.matches("":matches("")) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,168,return matches();
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,264,"/ todo: allow escaped ) in there. probably do a balanced match, for convenience of caller"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,275,// :matches(regex)
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,276,private Elements matches() {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,277,"tq.consume("":matches"");"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,278,"String regex = tq.chompBalanced('(', ')'); // don't unescape, as regex bits will be escaped"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,279,"Validate.notEmpty(regex, "":matches(regex) query must not be empty"");"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,281,return root.getElementsMatchingText(regex);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,409,@Test public void testMatches() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,410,"Document doc = Jsoup.parse(""<p id=1>The <i>Rain</i></p> <p id=2>There are 99 bottles.</p> <p id=3>Harder (this)</p> <p id=4>Rain</p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,412,"Elements p1 = doc.select(""p:matches(The rain)""); // no match, case sensitive"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,413,"assertEquals(0, p1.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,415,"Elements p2 = doc.select(""p:matches((?i)the rain)""); // case insense. should include root, html, body"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,416,"assertEquals(1, p2.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,417,"assertEquals(""1"", p2.first().id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,419,"Elements p4 = doc.select(""p:matches((?i)^rain$)""); // bounding"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,420,"assertEquals(1, p4.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,421,"assertEquals(""4"", p4.first().id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,423,"Elements p5 = doc.select(""p:matches(\\d+)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,424,"assertEquals(1, p5.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,425,"assertEquals(""2"", p5.first().id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,427,"Elements p6 = doc.select(""p:matches(\\w+\\s+\\(\\w+\\))""); // test bracket matching"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,428,"assertEquals(1, p6.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,429,"assertEquals(""3"", p6.first().id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,431,"Elements p7 = doc.select(""p:matches((?i)the):has(i)""); // multi"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,432,"assertEquals(1, p7.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,433,"assertEquals(""1"", p7.first().id());"
