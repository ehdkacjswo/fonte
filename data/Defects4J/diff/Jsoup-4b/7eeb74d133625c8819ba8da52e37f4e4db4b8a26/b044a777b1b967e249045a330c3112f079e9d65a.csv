is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,4,import org.jsoup.nodes.Document;
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,5,import org.jsoup.nodes.Element;
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,10,import java.nio.ByteBuffer;
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,11,import java.nio.charset.Charset;
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,12,import java.util.regex.Matcher;
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,13,import java.util.regex.Pattern;
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,20,"private static final Pattern charsetPattern = Pattern.compile(""(?i)\\bcharset=([^\\s;]*)"");"
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,21,"private static final String defaultCharset = ""UTF-8""; // used if not found in header or http-equiv"
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,22,private static final int bufferSize = 0x20000; // ~130K.
False,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,56,"tring charSet = ""UTF-8""; // todo[must]: get from content-encoding, or http-equiv (two-pass?)"
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,65,"String charSet = getCharsetFromContentType(contentType); // may be null, readInputStream deals with it"
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,72,"// reads bytes first into a buffer, then decodes with the appropriate charset. done this way to support"
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,73,// switching the chartset midstream when a meta http-equiv tag defines the charset.
False,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,64,har[] buffer = new char[0x20000]; // ~ 130K
False,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,65,tringBuilder data = new StringBuilder(0x20000);
False,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,66,"eader inReader = new InputStreamReader(inStream, charsetName);"
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,75,byte[] buffer = new byte[bufferSize];
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,76,ByteArrayOutputStream outStream = new ByteArrayOutputStream(bufferSize);
False,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,68,o {
False,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,69,"ead = inReader.read(buffer, 0, buffer.length);"
False,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,70,f (read > 0) {
False,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,71,"ata.append(buffer, 0, read);"
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,78,while(true) {
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,79,read  = inStream.read(buffer);
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,80,if (read == -1) break;
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,81,"outStream.write(buffer, 0, read);"
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,83,ByteBuffer byteData = ByteBuffer.wrap(outStream.toByteArray());
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,85,String docData;
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,86,if (charsetName == null) { // determine from http-equiv. safe parse as UTF-8
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,87,docData = Charset.forName(defaultCharset).decode(byteData).toString();
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,88,Document doc = Jsoup.parse(docData);
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,89,"Element httpEquiv = doc.select(""meta[http-equiv]"").first();"
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,90,"if (httpEquiv != null) { // if not found, will keep utf-8 as best attempt"
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,91,"String foundCharset = getCharsetFromContentType(httpEquiv.attr(""content""));"
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,92,if (foundCharset != null && !foundCharset.equals(defaultCharset)) { // need to re-decode
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,93,byteData.rewind();
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,94,docData = Charset.forName(foundCharset).decode(byteData).toString();
False,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,74, while (read >= 0);
False,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,76,eturn data.toString();
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,97,} else { // specified by content type header (or by user on file load)
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,98,docData = Charset.forName(charsetName).decode(byteData).toString();
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,100,return docData;
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,104,* Parse out a charset from a content type header.
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,105,"* @param contentType e.g. ""text/html; charset=EUC-JP"""
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,106,"* @return ""EUC-JP"", or null if not found. Charset is trimmed and uppercased."
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,108,static String getCharsetFromContentType(String contentType) {
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,109,if (contentType == null) return null;
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,111,Matcher m = charsetPattern.matcher(contentType);
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,112,if (m.find()) {
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,113,return m.group(1).trim().toUpperCase();
True,src/main/java/org/jsoup/DataUtil.java,src/main/java/org/jsoup/DataUtil.java,115,return null;
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,46,<p>
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,47,"The encoding character set is determined by the content-type header or http-equiv meta tag, or falls back to {@code UTF-8}."
False,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,63,"param charsetName character set of file contents. If you don't know the charset, generally the best guess is {@code UTF-8}."
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,65,"@param charsetName (optional) character set of file contents. Set to null to determine from http-equiv meta tag, if"
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,66,"present, or fall back to {@code UTF-8} (which is often safe to do)."
False,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,78,"param charsetName character set of file contents. If you don't know the charset, generally the best guess is {@code UTF-8}."
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,81,"@param charsetName (optional) character set of file contents. Set to null to determine from http-equiv meta tag, if"
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,82,"present, or fall back to {@code UTF-8} (which is often safe to do)."
True,src/test/java/org/jsoup/DataUtilTest.java,src/test/java/org/jsoup/DataUtilTest.java,1,package org.jsoup;
True,src/test/java/org/jsoup/DataUtilTest.java,src/test/java/org/jsoup/DataUtilTest.java,3,import org.junit.Test;
True,src/test/java/org/jsoup/DataUtilTest.java,src/test/java/org/jsoup/DataUtilTest.java,5,import static org.junit.Assert.*;
True,src/test/java/org/jsoup/DataUtilTest.java,src/test/java/org/jsoup/DataUtilTest.java,7,public class DataUtilTest {
True,src/test/java/org/jsoup/DataUtilTest.java,src/test/java/org/jsoup/DataUtilTest.java,8,@Test public void testCharset() {
True,src/test/java/org/jsoup/DataUtilTest.java,src/test/java/org/jsoup/DataUtilTest.java,9,"assertEquals(""UTF-8"", DataUtil.getCharsetFromContentType(""text/html;charset=utf-8 ""));"
True,src/test/java/org/jsoup/DataUtilTest.java,src/test/java/org/jsoup/DataUtilTest.java,10,"assertEquals(""UTF-8"", DataUtil.getCharsetFromContentType(""text/html; charset=UTF-8""));"
True,src/test/java/org/jsoup/DataUtilTest.java,src/test/java/org/jsoup/DataUtilTest.java,11,"assertEquals(""ISO-8859-1"", DataUtil.getCharsetFromContentType(""text/html; charset=ISO-8859-1""));"
True,src/test/java/org/jsoup/DataUtilTest.java,src/test/java/org/jsoup/DataUtilTest.java,12,"assertEquals(null, DataUtil.getCharsetFromContentType(""text/html""));"
True,src/test/java/org/jsoup/DataUtilTest.java,src/test/java/org/jsoup/DataUtilTest.java,13,"assertEquals(null, DataUtil.getCharsetFromContentType(null));"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,78,@Test public void testBaidu() throws IOException {
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,79,"File in = getFile(""/htmltests/baidu-cn-home.html"");"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,80,"Document doc = Jsoup.parse(in, null, ""http://www.baidu.com/""); // http charset is gb2312, but NOT specifying it, to test http-equiv parse"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,81,"Element submit = doc.select(""#su"").first();"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,82,"assertEquals(""百度一下"", submit.attr(""value""));"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,84,// test from attribute match
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,85,"submit = doc.select(""input[value=百度一下]"").first();"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,86,"assertEquals(""su"", submit.id());"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,87,"Element newsLink = doc.select(""a:contains(新)"").first();"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,88,"assertEquals(""http://news.baidu.com"", newsLink.absUrl(""href""));"
