is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,33,indent(accum);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,706,if (isBlock() || (parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0))
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,707,indent(accum);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,716,f (tag.canContainBlock())
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,717,"ccum.append(""\n"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,718,if (tag.canContainBlock()) indent(accum);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,720,f (tag.isBlock())
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,721,"ccum.append(""\n"");"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,5,import org.apache.commons.lang.StringUtils;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,227,protected int nodeDepth() {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,228,if (parentNode == null)
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,229,return 0;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,230,else
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,231,return parentNode.nodeDepth() + 1;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,271,* Get the list index of this node in its node sibling list. I.e. if this is the first node
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,272,"* sibling, returns 0."
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,273,* @return position in node sibling list
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,274,* @see org.jsoup.nodes.Element#elementSiblingIndex()
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,276,public Integer siblingIndex() {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,277,"return indexInList(this, parent().childNodes);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,312,protected void indent(StringBuilder accum) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,313,"accum.append(""\n"").append(StringUtils.leftPad("""", nodeDepth() -1 * 2));"
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,52,if (!isBlank() && parentNode instanceof Element && ((Element) parentNode).tag().canContainBlock()  && siblingIndex() == 0)
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,53,indent(accum);
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,211,"reateInline(""SCRIPT"").setAncestor(""HEAD"", ""BODY"").setContainDataOnly();"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,212,"reateInline(""NOSCRIPT"").setAncestor(""HEAD"", ""BODY"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,213,"reateInline(""STYLE"").setAncestor(""HEAD"", ""BODY"").setContainDataOnly();"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,214,"reateInline(""META"").setAncestor(""HEAD"", ""BODY"").setEmpty();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,211,"createBlock(""SCRIPT"").setAncestor(""HEAD"", ""BODY"").setContainDataOnly();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,212,"createBlock(""NOSCRIPT"").setAncestor(""HEAD"", ""BODY"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,213,"createBlock(""STYLE"").setAncestor(""HEAD"", ""BODY"").setContainDataOnly();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,214,"createBlock(""META"").setAncestor(""HEAD"", ""BODY"").setEmpty();"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,217,"reateInline(""TITLE"").setAncestor(""HEAD"", ""BODY"").setContainDataOnly();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,217,"createBlock(""TITLE"").setAncestor(""HEAD"", ""BODY"").setContainDataOnly();"
False,src/test/java/org/jsoup/TextUtil.java,src/test/java/org/jsoup/TextUtil.java,9,"ext = text.replaceAll(""[\\n\\r]"", """");"
True,src/test/java/org/jsoup/TextUtil.java,src/test/java/org/jsoup/TextUtil.java,9,"text = text.replaceAll(""\\n\\s*"", """");"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,179,"ssertEquals(""<html>\n<head>\n</head>\n<body>\n<div>\n<p>Hello</p>\n</div>\n</body>\n</html>"", doc.html());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,179,"assertEquals(""<html>\n<head>\n</head>\n<body>\n <div>\n  <p>Hello</p>\n </div>\n</body>\n</html>"", doc.html());"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,214,"ssertEquals(""<p>Hello</p>\n there &amp; now &gt;"", div.html());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,214,"assertEquals(""<p>Hello</p> there &amp; now &gt;"", TextUtil.stripNewlines(div.html()));"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,222,"ssertEquals(""there &amp; now &gt; <p>Hello</p>"", div.html());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,222,"assertEquals(""there &amp; now &gt; <p>Hello</p>"", TextUtil.stripNewlines(div.html()));"
False,src/test/java/org/jsoup/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/org/jsoup/safety/CleanerTest.java,18,"ssertEquals(""Hello <b>there</b>!"", cleanHtml);"
True,src/test/java/org/jsoup/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/org/jsoup/safety/CleanerTest.java,18,"assertEquals(""Hello <b>there</b>!"", TextUtil.stripNewlines(cleanHtml));"
False,src/test/java/org/jsoup/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/org/jsoup/safety/CleanerTest.java,25,"ssertEquals(""Hello <b>there</b>!"", cleanHtml);"
True,src/test/java/org/jsoup/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/org/jsoup/safety/CleanerTest.java,25,"assertEquals(""Hello <b>there</b>!"", TextUtil.stripNewlines(cleanHtml));"
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,249,extUtil.stripNewlines(doc.html()));
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,249,TextUtil.stripNewlines(doc.html())); // is spaced OK if not newline & space stripped
