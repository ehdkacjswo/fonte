is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,158,ublic void consumeWhitespace() {
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,158,public boolean consumeWhitespace() {
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,159,boolean seen = false;
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,162,seen = true;
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,164,return seen;
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,196,or (Character character : queue) {
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,197,ccum.append(character);
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,199,while (!queue.isEmpty()) {
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,200,accum.append(consume());
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,65,q.consumeWhitespace();
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,67,"/ hierarchy (todo: implement >, +, ~)"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,68,f (!tq.isEmpty()) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,66,"// hierarchy (todo: implement +, ~)"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,67,boolean seenWhite = tq.consumeWhitespace();
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,68,if (!tq.isEmpty()) {
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,76,"lements candidateChildren = new Elements(select(tq.remainder(), elements));"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,77,"eturn filterForChildren(elements, candidateChildren);"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,78," else { // ancestor descendant (AND, really)"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,79,"eturn new Elements(select(tq.remainder(), elements));"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,76,"Elements candidates = new Elements(select(tq.remainder(), elements));"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,77,"return filterForChildren(elements, candidates);"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,78,} else if (seenWhite) { // ancestor descendant
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,79,"Elements candidates = new Elements(select(tq.remainder(), elements));"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,80,"return filterForDescendants(elements, candidates);"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,81,"} else { // E.class, E#id, E[attr] etc. AND"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,82,"Elements candidates = new Elements(select(tq.remainder(), elements));"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,83,"return filterForSelf(elements, candidates);"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,134,"rivate static Elements filterForChildren(Collection<Element> parents, Collection<Element> candidateChildren) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,138,// direct child descendants
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,139,"private static Elements filterForChildren(Collection<Element> parents, Collection<Element> candidates) {"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,136,HILDREN: for (Element c : candidateChildren) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,141,CHILD: for (Element c : candidates) {
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,140,ontinue CHILDREN;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,145,continue CHILD;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,149,return children;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,152,"// children or lower descendants. input candidates stemmed from found elements, so are either a descendant"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,153,// or the original element; so check that parent is not child
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,154,"private static Elements filterForDescendants(Collection<Element> parents, Collection<Element> candidates) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,155,Elements children = new Elements();
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,156,CHILD: for (Element c : candidates) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,157,boolean found = false;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,158,for (Element p : parents) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,159,if (c.equals(p)) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,160,found = true;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,161,continue CHILD;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,164,if (!found)
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,165,children.add(c);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,167,return children;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,170,"// union of both sets, for e.class type selectors"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,171,"private static Elements filterForSelf(Collection<Element> parents, Collection<Element> candidates) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,172,Elements children = new Elements();
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,173,CHILD: for (Element c : candidates) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,174,for (Element p : parents) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,175,if (c.equals(p)) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,176,children.add(c);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,177,continue CHILD;
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,60,"lements allDiv = doc.select(""div *"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,60,"Elements allUnderDiv = doc.select(""div *"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,62,"ssertEquals(4, allDiv.size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,63,"ssertEquals(""div"", allDiv.get(0).tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,62,"assertEquals(3, allUnderDiv.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,63,"assertEquals(""p"", allUnderDiv.first().tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,66,@Test public void testAllWithClass() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,67,"String h = ""<p class=first>One<p class=first>Two<p>Three"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,68,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,69,"Elements ps = doc.select(""*.first"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,70,"assertEquals(2, ps.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,113,@Test public void and() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,114,"String h = ""<div id=1 class=foo title=bar><p class=foo title=bar>Hello</p></div"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,115,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,117,"Elements div = doc.select(""div.foo"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,118,"assertEquals(1, div.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,119,"assertEquals(""div"", div.first().tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,121,"Elements p = doc.select(""div .foo""); // space indicates like ""div *.foo"""
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,122,"assertEquals(1, p.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,123,"assertEquals(""p"", p.first().tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,125,"Elements div2 = doc.select(""div#1.foo[title=bar]""); // very specific!"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,126,"assertEquals(1, div2.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,127,"assertEquals(""div"", div2.first().tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,129,"Elements p2 = doc.select(""div *.foo""); // space indicates like ""div *.foo"""
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,130,"assertEquals(1, p2.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,131,"assertEquals(""p"", p2.first().tagName());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,107,"tring h = ""<div class=head><p class=first>Hello</div><div class=head><h1 class=first>Another</h1><p>Again</div>"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,135,"String h = ""<div class=head><p><span class=first>Hello</div><div class=head><p class=first><span>Another</span><p>Again</div>"";"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,110,"ssertEquals(""Hello"", els.get(0).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,138,"assertEquals(""Hello"", els.first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,139,"assertEquals(""span"", els.first().tagName());"
