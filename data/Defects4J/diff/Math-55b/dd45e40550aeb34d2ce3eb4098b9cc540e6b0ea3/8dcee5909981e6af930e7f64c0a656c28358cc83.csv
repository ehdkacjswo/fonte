is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,2,* Copyright 2004 The Apache Software Foundation.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,16,package org.apache.commons.math.distribution;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,18,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,19,import org.apache.commons.math.TestUtils;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,22,* Abstract base class for {@link ContinuousDistribution} tests.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,23,* <p>
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,24,"* To create a concrete test class for a continuous distribution implementation,"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,25,*  implement makeDistribution() to return a distribution instance to use in
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,26,"*  tests and each of the test data generation methods below.  In each case, the"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,27,*  test points and test values arrays returned represent parallel arrays of
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,28,*  inputs and expected values for the distribution returned by makeDistribution().
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,29,*  <p>
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,30,*  makeCumulativeTestPoints() -- arguments used to test cumulative probabilities
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,31,*  makeCumulativeTestValues() -- expected cumulative probabilites
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,32,*  makeInverseCumulativeTestPoints() -- arguments used to test inverse cdf evaluation
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,33,*  makeInverseCumulativeTestValues() -- expected inverse cdf values
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,34,* <p>
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,35,"*  To implement additional test cases with different distribution instances and test data,"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,36,*  use the setXxx methods for the instance data in test cases and call the verifyXxx methods
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,37,*  to verify results.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,38,* <p>
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,39,*  Error tolerance can be overriden by implementing getTolerance().
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,41,* @version $Revision: 1.1 $ $Date: 2004/05/29 22:51:32 $
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,43,public abstract class ContinuousDistributionAbstractTest extends TestCase {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,45,//-------------------- Private test instance data -------------------------
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,46,/** Discrete distribution instance used to perform tests */
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,47,private ContinuousDistribution distribution;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,49,/** Tolerance used in comparing expected and returned values */
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,50,private double tolerance = 1E-4;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,52,/** Arguments used to test cumulative probability density calculations */
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,53,private double[] cumulativeTestPoints;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,55,/** Values used to test cumulative probability density calculations */
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,56,private double[] cumulativeTestValues;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,58,/** Arguments used to test inverse cumulative probability density calculations */
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,59,private double[] inverseCumulativeTestPoints;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,61,/** Values used to test inverse cumulative probability density calculations */
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,62,private double[] inverseCumulativeTestValues;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,67,* Constructor for DiscreteDistributionAbstractTest.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,68,* @param name
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,70,public ContinuousDistributionAbstractTest(String name) {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,71,super(name);
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,74,//-------------------- Abstract methods -----------------------------------
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,76,/** Creates the default continuous distribution instance to use in tests. */
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,77,public abstract ContinuousDistribution makeDistribution();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,79,/** Creates the default cumulative probability density test input values */
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,80,public abstract double[] makeCumulativeTestPoints();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,82,/** Creates the default cumulative probability density test expected values */
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,83,public abstract double[] makeCumulativeTestValues();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,85,//---- Default implementations of inverse test data generation methods ----
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,87,/** Creates the default inverse cumulative probability test input values */
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,88,public double[] makeInverseCumulativeTestPoints() {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,89,return makeCumulativeTestValues();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,92,/** Creates the default inverse cumulative probability density test expected values */
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,93,public double[] makeInverseCumulativeTestValues() {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,94,return makeCumulativeTestPoints();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,97,//-------------------- Setup / tear down ----------------------------------
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,100,* Setup sets all test instance data to default values
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,102,protected void setUp() throws Exception {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,103,super.setUp();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,104,distribution = makeDistribution();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,105,cumulativeTestPoints = makeCumulativeTestPoints();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,106,cumulativeTestValues = makeCumulativeTestValues();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,107,inverseCumulativeTestPoints = makeInverseCumulativeTestPoints();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,108,inverseCumulativeTestValues = makeInverseCumulativeTestValues();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,112,* Cleans up test instance data
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,114,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,115,super.tearDown();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,116,distribution = null;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,117,cumulativeTestPoints = null;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,118,cumulativeTestValues = null;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,119,inverseCumulativeTestPoints = null;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,120,inverseCumulativeTestValues = null;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,123,//-------------------- Verification methods -------------------------------
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,126,* Verifies that cumulative probability density calculations match expected values
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,127,* using current test instance data
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,129,protected void verifyCumulativeProbabilities() throws Exception {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,130,for (int i = 0; i < cumulativeTestPoints.length; i++) {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,131,"TestUtils.assertEquals(""Incorrect cumulative probability value returned for """
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,132,"+ cumulativeTestPoints[i], cumulativeTestValues[i],"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,133,"distribution.cumulativeProbability(cumulativeTestPoints[i]),"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,134,getTolerance());
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,139,* Verifies that inverse cumulative probability density calculations match exptected values
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,140,* using current test instance data
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,142,protected void verifyInverseCumulativeProbabilities() throws Exception {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,143,for (int i = 0; i < inverseCumulativeTestPoints.length; i++) {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,144,"TestUtils.assertEquals(""Incorrect inverse cumulative probability value returned for """
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,145,"+ inverseCumulativeTestPoints[i], inverseCumulativeTestValues[i],"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,146,"distribution.inverseCumulativeProbability(inverseCumulativeTestPoints[i]),"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,147,getTolerance());
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,151,//------------------------ Default test cases -----------------------------
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,154,* Verifies that cumulative probability density calculations match exptected values
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,155,* using default test instance data
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,157,public void testCumulativeProbabilities() throws Exception {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,158,verifyCumulativeProbabilities();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,162,* Verifies that inverse cumulative probability density calculations match exptected values
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,163,* using default test instance data
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,165,public void testInverseCumulativeProbabilities() throws Exception {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,166,verifyInverseCumulativeProbabilities();
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,170,* Verifies that probability computations are consistent
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,172,public void testConsistency() throws Exception {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,173,for (int i=1; i < cumulativeTestPoints.length; i++) {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,175,"// check that cdf(x, x) = 0"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,176,"TestUtils.assertEquals(0d,"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,177,distribution.cumulativeProbability
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,178,"(cumulativeTestPoints[i], cumulativeTestPoints[i]), tolerance);"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,180,// check that P(a < X < b) = P(X < b) - P(X < a)
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,181,"double upper = Math.max(cumulativeTestPoints[i], cumulativeTestPoints[i -1]);"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,182,"double lower = Math.min(cumulativeTestPoints[i], cumulativeTestPoints[i -1]);"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,183,double diff = distribution.cumulativeProbability(upper) -
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,184,distribution.cumulativeProbability(lower);
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,185,"double direct = distribution.cumulativeProbability(lower, upper);"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,186,"TestUtils.assertEquals(""Inconsistent cumulative probabilities for ("""
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,187,"+ lower + "","" + upper + "")"", diff, direct, tolerance);"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,192,* Verifies that illegal arguments are correctly handled
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,194,public void testIllegalArguments() throws Exception {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,195,try {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,196,"distribution.cumulativeProbability(1, 0);"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,197,"fail(""Expecting IllegalArgumentException for bad cumulativeProbability interval"");"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,198,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,199,// expected
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,201,try {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,202,distribution.inverseCumulativeProbability(-1);
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,203,"fail(""Expecting IllegalArgumentException for p = -1"");"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,204,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,205,// expected
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,207,try {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,208,distribution.inverseCumulativeProbability(2);
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,209,"fail(""Expecting IllegalArgumentException for p = 2"");"
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,210,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,211,// expected
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,215,//------------------ Getters / Setters for test instance data -----------
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,217,* @return Returns the cumulativeTestPoints.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,219,protected double[] getCumulativeTestPoints() {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,220,return cumulativeTestPoints;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,224,* @param cumulativeTestPoints The cumulativeTestPoints to set.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,226,protected void setCumulativeTestPoints(double[] cumulativeTestPoints) {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,227,this.cumulativeTestPoints = cumulativeTestPoints;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,231,* @return Returns the cumulativeTestValues.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,233,protected double[] getCumulativeTestValues() {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,234,return cumulativeTestValues;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,238,* @param cumulativeTestValues The cumulativeTestValues to set.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,240,protected void setCumulativeTestValues(double[] cumulativeTestValues) {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,241,this.cumulativeTestValues = cumulativeTestValues;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,245,* @return Returns the distribution.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,247,protected ContinuousDistribution getDistribution() {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,248,return distribution;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,252,* @param distribution The distribution to set.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,254,protected void setDistribution(ContinuousDistribution distribution) {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,255,this.distribution = distribution;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,259,* @return Returns the inverseCumulativeTestPoints.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,261,protected double[] getInverseCumulativeTestPoints() {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,262,return inverseCumulativeTestPoints;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,266,* @param inverseCumulativeTestPoints The inverseCumulativeTestPoints to set.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,268,protected void setInverseCumulativeTestPoints(double[] inverseCumulativeTestPoints) {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,269,this.inverseCumulativeTestPoints = inverseCumulativeTestPoints;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,273,* @return Returns the inverseCumulativeTestValues.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,275,protected double[] getInverseCumulativeTestValues() {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,276,return inverseCumulativeTestValues;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,280,* @param inverseCumulativeTestValues The inverseCumulativeTestValues to set.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,282,protected void setInverseCumulativeTestValues(double[] inverseCumulativeTestValues) {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,283,this.inverseCumulativeTestValues = inverseCumulativeTestValues;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,287,* @return Returns the tolerance.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,289,protected double getTolerance() {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,290,return tolerance;
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,294,* @param tolerance The tolerance to set.
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,296,protected void setTolerance(double tolerance) {
True,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,297,this.tolerance = tolerance;
