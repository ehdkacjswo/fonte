is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,903,igFraction ret = ZERO;
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,905,f (getNumeratorAsInt() != 0 && fraction.getNumeratorAsInt() != 0) {
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,906,"et = new BigFraction(numerator.multiply(fraction.numerator), denominator.multiply(fraction.denominator));"
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,903,if (numerator.equals(BigInteger.ZERO) ||
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,904,fraction.numerator.equals(BigInteger.ZERO)) {
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,905,return ZERO;
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,909,eturn ret;
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,907,"return new BigFraction(numerator.multiply(fraction.numerator),"
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,908,denominator.multiply(fraction.denominator));
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,554,public void testMath340() {
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,555,BigFraction fractionA = new BigFraction(0.00131);
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,556,BigFraction fractionB = new BigFraction(.37).reciprocal();
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,557,BigFraction errorResult = fractionA.multiply(fractionB);
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,558,"BigFraction correctResult = new BigFraction(fractionA.getNumerator().multiply(fractionB.getNumerator()),"
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,559,fractionA.getDenominator().multiply(fractionB.getDenominator()));
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,560,"assertEquals(correctResult, errorResult);"
