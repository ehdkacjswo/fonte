is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,20,mport java.io.Serializable;
False,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,38,"ublic abstract class AbstractFieldMatrix<T extends FieldElement<T>> implements FieldMatrix<T>, Serializable {"
True,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,37,public abstract class AbstractFieldMatrix<T extends FieldElement<T>> implements FieldMatrix<T> {
False,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,40,** Serializable version identifier. */
False,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,41,rivate static final long serialVersionUID = -3665653040524315561L;
True,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,120,* Constructor for use with Serializable
True,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,122,protected AbstractFieldMatrix() {
True,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,123,field = null;
True,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,20,import java.io.Serializable;
False,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,64,ublic class DenseFieldMatrix<T extends FieldElement<T>> extends AbstractFieldMatrix<T> {
True,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,66,public class DenseFieldMatrix<T extends FieldElement<T>> extends AbstractFieldMatrix<T> implements Serializable {
False,src/java/org/apache/commons/math/linear/FieldMatrix.java,src/java/org/apache/commons/math/linear/FieldMatrix.java,20,mport java.io.Serializable;
False,src/java/org/apache/commons/math/linear/FieldMatrix.java,src/java/org/apache/commons/math/linear/FieldMatrix.java,35,"ublic interface FieldMatrix<T extends FieldElement<T>> extends AnyMatrix, Serializable {"
True,src/java/org/apache/commons/math/linear/FieldMatrix.java,src/java/org/apache/commons/math/linear/FieldMatrix.java,34,public interface FieldMatrix<T extends FieldElement<T>> extends AnyMatrix {
True,src/java/org/apache/commons/math/linear/FieldMatrixImpl.java,src/java/org/apache/commons/math/linear/FieldMatrixImpl.java,20,import java.io.Serializable;
False,src/java/org/apache/commons/math/linear/FieldMatrixImpl.java,src/java/org/apache/commons/math/linear/FieldMatrixImpl.java,35,ublic class FieldMatrixImpl<T extends FieldElement<T>> extends AbstractFieldMatrix<T> {
True,src/java/org/apache/commons/math/linear/FieldMatrixImpl.java,src/java/org/apache/commons/math/linear/FieldMatrixImpl.java,37,public class FieldMatrixImpl<T extends FieldElement<T>> extends AbstractFieldMatrix<T> implements Serializable {
False,src/java/org/apache/commons/math/linear/FieldVector.java,src/java/org/apache/commons/math/linear/FieldVector.java,19,mport java.io.Serializable;
False,src/java/org/apache/commons/math/linear/FieldVector.java,src/java/org/apache/commons/math/linear/FieldVector.java,48,ublic interface FieldVector<T extends FieldElement<T>> extends Serializable {
True,src/java/org/apache/commons/math/linear/FieldVector.java,src/java/org/apache/commons/math/linear/FieldVector.java,46,public interface FieldVector<T extends FieldElement<T>>  {
True,src/java/org/apache/commons/math/linear/FieldVectorImpl.java,src/java/org/apache/commons/math/linear/FieldVectorImpl.java,19,import java.io.Serializable;
False,src/java/org/apache/commons/math/linear/FieldVectorImpl.java,src/java/org/apache/commons/math/linear/FieldVectorImpl.java,32,ublic class FieldVectorImpl<T extends FieldElement<T>> implements FieldVector<T> {
True,src/java/org/apache/commons/math/linear/FieldVectorImpl.java,src/java/org/apache/commons/math/linear/FieldVectorImpl.java,33,"public class FieldVectorImpl<T extends FieldElement<T>> implements FieldVector<T>, Serializable {"
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,19,import java.io.Serializable;
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,31,ublic class SparseFieldVector<T extends FieldElement<T>> implements FieldVector<T> {
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,32,"public class SparseFieldVector<T extends FieldElement<T>> implements FieldVector<T>, Serializable {"
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,19,import java.io.File;
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,20,import java.io.FileInputStream;
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,21,import java.io.FileOutputStream;
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,22,import java.io.IOException;
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,23,import java.io.ObjectInputStream;
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,24,import java.io.ObjectOutputStream;
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1255,"@SuppressWarnings(""unchecked"")"
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1256,public void testSerial()  {
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1257,try {
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1258,"File test = File.createTempFile(""DFM"","".ser"");"
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1259,ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(test));
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1260,DenseFieldMatrix<Fraction> m = new DenseFieldMatrix<Fraction>(testData);
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1261,out.writeObject(m);
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1262,out.close();
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1263,ObjectInputStream in = new ObjectInputStream(new FileInputStream(test));
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1264,DenseFieldMatrix<Fraction> nm = (DenseFieldMatrix<Fraction>)in.readObject();
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1265,in.close();
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1266,test.delete();
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1267,"assertEquals(m,nm);"
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1269,} catch (IOException e) {
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1270,"fail(""IOException: ""+e);"
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1271,} catch (ClassNotFoundException e) {
True,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java,1272,"fail(""Can't happen: ""+e);"
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,19,import java.io.File;
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,20,import java.io.FileInputStream;
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,21,import java.io.FileOutputStream;
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,22,import java.io.IOException;
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,23,import java.io.ObjectInputStream;
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,24,import java.io.ObjectOutputStream;
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,942,"@SuppressWarnings(""unchecked"")"
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,943,public void testSerial()  {
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,944,try {
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,945,"File test = File.createTempFile(""FMI"","".ser"");"
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,946,ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(test));
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,947,FieldMatrixImpl<Fraction> m = new FieldMatrixImpl<Fraction>(testData);
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,948,out.writeObject(m);
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,949,out.close();
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,950,ObjectInputStream in = new ObjectInputStream(new FileInputStream(test));
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,951,FieldMatrixImpl<Fraction> nm = (FieldMatrixImpl<Fraction>)in.readObject();
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,952,in.close();
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,953,test.delete();
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,954,"assertEquals(m,nm);"
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,956,} catch (IOException e) {
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,957,"fail(""IOException: ""+e);"
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,958,} catch (ClassNotFoundException e) {
True,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java,959,"fail(""Can't happen: ""+e);"
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,19,import java.io.File;
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,20,import java.io.FileInputStream;
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,21,import java.io.FileOutputStream;
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,22,import java.io.IOException;
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,23,import java.io.ObjectInputStream;
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,24,import java.io.ObjectOutputStream;
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,621,"@SuppressWarnings(""unchecked"")"
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,622,public void testSerial()  {
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,623,try {
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,624,"File test = File.createTempFile(""FVI"","".ser"");"
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,625,ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(test));
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,626,FieldVectorImpl<Fraction> v = new FieldVectorImpl<Fraction>(vec1);
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,627,out.writeObject(v);
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,628,out.close();
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,629,ObjectInputStream in = new ObjectInputStream(new FileInputStream(test));
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,630,FieldVectorImpl<Fraction> nv = (FieldVectorImpl<Fraction>)in.readObject();
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,631,in.close();
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,632,test.delete();
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,633,"assertEquals(v,nv);"
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,635,} catch (IOException e) {
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,636,"fail(""IOException: ""+e);"
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,637,} catch (ClassNotFoundException e) {
True,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,src/test/org/apache/commons/math/linear/FieldVectorImplTest.java,638,"fail(""Can't happen: ""+e);"
