is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/distribution/CauchyDistribution.java,src/java/org/apache/commons/math/distribution/CauchyDistribution.java,32,* @since 1.1
False,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,25, @version $Revision: 1.13 $ $Date$
True,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,25,* @since 1.1
True,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,26,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,88,* @since 1.1
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,192,* @since 1.1
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,36,* @since 1.1
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,25,* @since 1.1
False,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,67, Access alpha.
False,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,68, @return the alpha.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,68,* Access the shape parameter.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,69,* @return the shape parameter.
False,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,75, Access beta.
False,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,76, @return the beta.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,76,* Access the scale parameter.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,77,* @return the scale parameter.
False,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,110, Modify alpha.
False,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,111, @param alpha The new alpha value.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,111,* Modify the shape parameter.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,112,* @param alpha the new shape parameter value.
False,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,122, Modify beta.
False,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,123, @param beta The new beta value.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,123,* Modify the scale parameter.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,124,* @param beta the new scale parameter value.
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,25, @author Apache Software Foundation
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,25,* @since 1.1
False,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,34, @author Apache Software Foundation
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,34,* @since 1.1
False,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,28, @author Apache Software Foundation
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,28,* @since 1.1
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,29,* @since 1.1
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,24,* @since 1.1
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,103,* @since 1.1
False,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,293," <a href =""http://dmawww.epfl.ch/benarous/Pmmi/interactive/rng7.htm"">"
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,294,"* <a href=""http://irmi.epfl.ch/cmos/Pmmi/interactive/rng7.htm"">"
True,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,400,* @since 1.1
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,22,* @since 1.1
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,361,* @since 1.1
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,58,* @since 1.1
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,73,* @since 1.1
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,88,* @since 1.1
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,103,* @since 1.1
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,43,// overflow
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,44,try {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,45,"new Fraction(Integer.MIN_VALUE, -1);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,46,fail();
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,47,} catch (ArithmeticException ex) {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,48,// success
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,50,try {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,51,"new Fraction(1, Integer.MIN_VALUE);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,52,fail();
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,53,} catch (ArithmeticException ex) {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,54,// success
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,58,public void testCompareTo() {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,59,"Fraction first = new Fraction(1, 2);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,60,"Fraction second = new Fraction(1, 3);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,61,"Fraction third = new Fraction(1, 2);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,63,"assertEquals(0, first.compareTo(first));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,64,"assertEquals(0, first.compareTo(third));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,65,"assertEquals(1, first.compareTo(second));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,66,"assertEquals(-1, second.compareTo(first));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,69,public void testDoubleValue() {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,70,"Fraction first = new Fraction(1, 2);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,71,"Fraction second = new Fraction(1, 3);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,73,"assertEquals(0.5, first.doubleValue(), 0.0);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,74,"assertEquals(1.0 / 3.0, second.doubleValue(), 0.0);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,77,public void testFloatValue() {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,78,"Fraction first = new Fraction(1, 2);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,79,"Fraction second = new Fraction(1, 3);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,81,"assertEquals(0.5f, first.floatValue(), 0.0f);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,82,"assertEquals((float)(1.0 / 3.0), second.floatValue(), 0.0f);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,85,public void testIntValue() {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,86,"Fraction first = new Fraction(1, 2);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,87,"Fraction second = new Fraction(3, 2);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,89,"assertEquals(0, first.intValue());"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,90,"assertEquals(1, second.intValue());"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,93,public void testLongValue() {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,94,"Fraction first = new Fraction(1, 2);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,95,"Fraction second = new Fraction(3, 2);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,97,"assertEquals(0L, first.longValue());"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,98,"assertEquals(1L, second.longValue());"
