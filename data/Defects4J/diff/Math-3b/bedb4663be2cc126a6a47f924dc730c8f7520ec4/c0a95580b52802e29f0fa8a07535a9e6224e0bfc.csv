is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,17,package org.apache.commons.math3.userguide;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,19,import java.awt.Color;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,20,import java.awt.Dimension;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,21,import java.awt.Graphics;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,22,import java.awt.Graphics2D;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,23,import java.awt.GridBagConstraints;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,24,import java.awt.GridBagLayout;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,25,import java.awt.Insets;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,26,import java.awt.RenderingHints;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,27,import java.awt.geom.Rectangle2D;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,28,import java.util.ArrayList;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,29,import java.util.List;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,31,import javax.swing.JComponent;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,32,import javax.swing.JFrame;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,33,import javax.swing.JLabel;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,34,import javax.swing.JTextArea;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,35,import javax.swing.SwingUtilities;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,37,import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,38,import org.apache.commons.math3.random.HaltonSequenceGenerator;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,39,import org.apache.commons.math3.random.JDKRandomGenerator;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,40,import org.apache.commons.math3.random.MersenneTwister;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,41,import org.apache.commons.math3.random.RandomGenerator;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,42,import org.apache.commons.math3.random.RandomVectorGenerator;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,43,import org.apache.commons.math3.random.SobolSequenceGenerator;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,44,import org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,45,import org.apache.commons.math3.random.UniformRandomGenerator;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,46,import org.apache.commons.math3.util.FastMath;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,47,import org.apache.commons.math3.util.Pair;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,50,* Plots 2D samples drawn from various pseudo / quasi-random generators.
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,52,public class RandomVectorGeneratorExamples {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,54,"public static List<Vector2D> makeCircle(int samples, final RandomVectorGenerator generator) {"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,55,List<Vector2D> points = new ArrayList<Vector2D>();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,56,for (double i = 0; i < samples; i++) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,57,double[] vector = generator.nextVector();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,58,Vector2D point = new Vector2D(vector);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,59,points.add(point);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,62,// normalize points first
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,63,points = normalize(points);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,65,// now test if the sample is within the unit circle
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,66,List<Vector2D> circlePoints = new ArrayList<Vector2D>();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,67,for (Vector2D p : points) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,68,"double criteria = FastMath.pow(p.getX(), 2) + FastMath.pow(p.getY(), 2);"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,69,if (criteria < 1.0) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,70,circlePoints.add(p);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,74,return circlePoints;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,77,"public static List<Vector2D> makeRandom(int samples, RandomVectorGenerator generator) {"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,78,List<Vector2D> points = new ArrayList<Vector2D>();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,79,for (double i = 0; i < samples; i++) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,80,double[] vector = generator.nextVector();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,81,Vector2D point = new Vector2D(vector);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,82,points.add(point);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,85,return normalize(points);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,88,public static List<Vector2D> normalize(final List<Vector2D> input) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,89,// find the mininum and maximum x value in the dataset
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,90,double minX = Double.MAX_VALUE;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,91,double maxX = Double.MIN_VALUE;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,92,for (Vector2D p : input) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,93,"minX = FastMath.min(minX, p.getX());"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,94,"maxX = FastMath.max(maxX, p.getX());"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,97,"double minY, maxY;"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,99,"// use the minimum to detect if we either have input values in the range [0, 1] or [-sqrt(3), sqrt(3)]"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,100,if (FastMath.abs(minX) < 0.1) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,101,minX = minY = 0.0;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,102,maxX = maxY = 1.0;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,103,} else {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,104,minX = minY = -FastMath.sqrt(3);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,105,maxX = maxY = FastMath.sqrt(3);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,108,double rangeX = maxX - minX;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,109,double rangeY = maxY - minY;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,110,List<Vector2D> points = new ArrayList<Vector2D>();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,111,for (Vector2D p : input) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,112,double[] arr = p.toArray();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,113,"// normalize to the range [-1, 1]"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,114,arr[0] = (arr[0] - minX) / rangeX * 2 - 1;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,115,arr[1] = (arr[1] - minY) / rangeY * 2 - 1;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,116,points.add(new Vector2D(arr));
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,118,return points;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,121,public static class Display extends JFrame {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,123,private static final long serialVersionUID = -8846964550416589808L;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,125,public Display() {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,126,"setTitle(""Pseudo/Quasi-random examples"");"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,127,"setSize(800, 800);"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,128,setLocationRelativeTo(null);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,129,setDefaultCloseOperation(EXIT_ON_CLOSE);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,131,setLayout(new GridBagLayout());
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,133,"int[] datasets = new int[] { 256, 1000, 2500, 1000 };"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,134,"List<Pair<String, RandomVectorGenerator>> generators = new ArrayList<Pair<String, RandomVectorGenerator>>();"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,136,"generators.add(new Pair<String, RandomVectorGenerator>(""Uncorrelated\nUniform(JDK)"","
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,137,"new UncorrelatedRandomVectorGenerator(2, new UniformRandomGenerator(new JDKRandomGenerator()))));"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,138,"generators.add(new Pair<String, RandomVectorGenerator>(""Independent\nRandom(MT)"", new RandomVectorGenerator() {"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,140,RandomGenerator[] rngs = new RandomGenerator[] {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,141,"new MersenneTwister(0),"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,142,new MersenneTwister(1)
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,145,public double[] nextVector() {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,146,final double[] vector = new double[2];
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,147,vector[0] = rngs[0].nextDouble();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,148,vector[1] = rngs[1].nextDouble();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,149,return vector;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,153,"generators.add(new Pair<String, RandomVectorGenerator>(""HaltonSequence"", new HaltonSequenceGenerator(2)));"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,154,"generators.add(new Pair<String, RandomVectorGenerator>(""SobolSequence"", new SobolSequenceGenerator(2)));"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,156,GridBagConstraints c = new GridBagConstraints();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,157,c.fill = GridBagConstraints.VERTICAL;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,158,c.gridx = 1;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,159,c.gridy = 0;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,160,"c.insets = new Insets(2, 2, 2, 2);"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,162,"for (Pair<String, RandomVectorGenerator> pair : generators) {"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,163,JTextArea text = new JTextArea(pair.getFirst());
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,164,text.setEditable(false);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,165,text.setOpaque(false);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,166,"add(text, c);"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,167,c.gridx++;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,169,int saveY = ++c.gridy;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,171,c.gridx = 0;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,172,for (int type = 0; type < 4; type++) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,173,"JLabel text = new JLabel(""n="" + String.valueOf(datasets[type]));"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,174,text.setOpaque(false);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,175,"add(text, c);"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,176,c.gridy++;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,179,c.gridy = saveY;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,180,for (int type = 0; type < 4; type++) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,181,c.gridx = 1;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,183,"for (Pair<String, RandomVectorGenerator> pair : generators) {"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,184,List<Vector2D> points = null;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,185,int samples = datasets[type];
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,186,switch (type) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,187,case 0:
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,188,"points = makeRandom(samples, pair.getValue());"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,189,break;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,190,case 1:
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,191,"points = makeRandom(samples, pair.getValue());"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,192,break;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,193,case 2:
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,194,"points = makeRandom(samples, pair.getValue());"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,195,break;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,196,case 3:
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,197,"points = makeCircle(samples, pair.getValue());"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,198,break;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,200,"add(new Plot(points), c);"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,201,c.gridx++;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,204,c.gridy++;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,209,public static class Plot extends JComponent {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,211,private static final long serialVersionUID = 4546352048750419587L;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,213,private static double PAD = 10;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,215,private List<Vector2D> points;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,217,public Plot(final List<Vector2D> points) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,218,this.points = points;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,221,protected void paintComponent(Graphics g) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,222,super.paintComponent(g);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,223,Graphics2D g2 = (Graphics2D)g;
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,224,"g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,225,RenderingHints.VALUE_ANTIALIAS_ON);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,227,int w = getWidth();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,228,int h = getHeight();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,230,"g2.clearRect(0, 0, w, h);"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,232,g2.setPaint(Color.black);
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,233,"g2.drawRect(0, 0, w - 1, h - 1);"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,235,for (Vector2D point : points) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,236,"Vector2D p = transform(point, w, h);"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,237,double[] arr = p.toArray();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,238,"g2.draw(new Rectangle2D.Double(arr[0] - 1, arr[1] - 1, 2, 2));"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,242,@Override
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,243,public Dimension getPreferredSize() {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,244,"return new Dimension(140, 140);"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,247,"private Vector2D transform(Vector2D point, int width, int height) {"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,248,double[] arr = point.toArray();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,249,"return new Vector2D(new double[] { PAD + (arr[0] + 1) / 2.0 * (width - 2 * PAD),"
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,250,height - PAD - (arr[1] + 1) / 2.0 * (height - 2 * PAD) });
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,254,public static void main(String[] args) {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,255,SwingUtilities.invokeLater(new Runnable() {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,256,public void run() {
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,257,Display d = new Display();
True,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,src/test/java/org/apache/commons/math3/userguide/RandomVectorGeneratorExamples.java,258,d.setVisible(true);
