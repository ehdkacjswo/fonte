is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,42,/** Whether or not the regression model includes an intercept.  True means no intercept. */
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,43,private boolean noIntercept = false;
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,46,* @return true if the model has no intercept term; false otherwise
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,48,public boolean isNoIntercept() {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,49,return noIntercept;
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,53,* @param noIntercept true means the model is to be estimated without an intercept term
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,55,public void setNoIntercept(boolean noIntercept) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,56,this.noIntercept = noIntercept;
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,58, specifying a model including an intercept term.
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,75,"* specifying a model including an intercept term.  If {@link #isNoIntercept()} is <code>true</code>,"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,76,"* the X matrix will be created without an initial column of ""1""s; otherwise this column will"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,77,* be added.
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,85,ouble[][] x = new double[nobs][nvars + 1];
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,104,final int cols = noIntercept ? nvars: nvars + 1;
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,105,double[][] x = new double[nobs][cols];
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,89,[i][0] = 1.0d;
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,90,or (int j = 1; j < nvars + 1; j++) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,109,if (!noIntercept) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,110,x[i][0] = 1.0d;
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,112,for (int j = noIntercept ? 0 : 1; j < cols; j++) {
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,148,inal int nVars = x[0].length;
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,149,inal double[][] xAug = new double[x.length][nVars + 1];
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,150,or (int i = 0; i < x.length; i++) {
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,151,f (x[i].length != nVars) {
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,152,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,153,"ocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,154,"[i].length, nVars);"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,170,if (noIntercept) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,171,"this.X = new Array2DRowRealMatrix(x, true);"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,172,} else { // Augment design matrix with initial unitary column
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,173,final int nVars = x[0].length;
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,174,final double[][] xAug = new double[x.length][nVars + 1];
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,175,for (int i = 0; i < x.length; i++) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,176,if (x[i].length != nVars) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,177,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,178,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,179,"x[i].length, nVars);"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,181,xAug[i][0] = 1.0d;
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,182,"System.arraycopy(x[i], 0, xAug[i], 1, nVars);"
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,156,Aug[i][0] = 1.0d;
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,157,"ystem.arraycopy(x[i], 0, xAug[i], 1, nVars);"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,184,"this.X = new Array2DRowRealMatrix(xAug, false);"
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,159,"his.X = new Array2DRowRealMatrix(xAug, false);"
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,25,import org.apache.commons.math.stat.StatUtils;
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,31, <p>OLS assumes the covariance matrix of the error to be diagonal and with
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,32, equal variance.</p>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,33, <p>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,34," u ~ N(0, &sigma;<sup>2</sup>I)"
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,35, </p>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,37," <p>The regression coefficients, b, satisfy the normal equations:"
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,38, <p>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,39, X<sup>T</sup> X b = X<sup>T</sup> y
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,40, </p>
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,32,"* <p>The regression coefficients, <code>b</code>, satisfy the normal equations:"
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,33,* <pre><code> X<sup>T</sup> X b = X<sup>T</sup> y </code></pre></p>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,43, of the X matrix. (See {@link QRDecompositionImpl} for details on the
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,44, decomposition algorithm.)
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,45, </p>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,46, <p>X<sup>T</sup>X b = X<sup>T</sup> y <br/>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,47, (QR)<sup>T</sup> (QR) b = (QR)<sup>T</sup>y <br/>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,48, R<sup>T</sup> (Q<sup>T</sup>Q) R b = R<sup>T</sup> Q<sup>T</sup> y <br/>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,49, R<sup>T</sup> R b = R<sup>T</sup> Q<sup>T</sup> y <br/>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,50, (R<sup>T</sup>)<sup>-1</sup> R<sup>T</sup> R b = (R<sup>T</sup>)<sup>-1</sup> R<sup>T</sup> Q<sup>T</sup> y <br/>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,51, R b = Q<sup>T</sup> y
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,52, </p>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,53," Given Q and R, the last equation is solved by back-substitution.</p>"
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,36,* of the <code>X</code> matrix. (See {@link QRDecompositionImpl} for details on the
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,37,"* decomposition algorithm.) The <code>X</code> matrix, also known as the <i>design matrix,</i>"
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,38,* has rows corresponding to sample observations and columns corresponding to independent
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,39,* variables.  When the model is estimated using an intercept term (i.e. when
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,40,"* {@link #isNoIntercept() isNoIntercept} is false as it is by default), the <code>X</code>"
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,41,* matrix includes an initial column identically equal to 1.  We solve the normal equations
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,42,* as follows:
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,43,* <pre><code> X<sup>T</sup>X b = X<sup>T</sup> y
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,44,* (QR)<sup>T</sup> (QR) b = (QR)<sup>T</sup>y
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,45,* R<sup>T</sup> (Q<sup>T</sup>Q) R b = R<sup>T</sup> Q<sup>T</sup> y
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,46,* R<sup>T</sup> R b = R<sup>T</sup> Q<sup>T</sup> y
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,47,* (R<sup>T</sup>)<sup>-1</sup> R<sup>T</sup> R b = (R<sup>T</sup>)<sup>-1</sup> R<sup>T</sup> Q<sup>T</sup> y
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,48,* R b = Q<sup>T</sup> y </code></pre></p>
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,50,"* <p>Given <code>Q</code> and <code>R</code>, the last equation is solved by back-substitution.</p>"
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,125, Returns the sum of squared deviations of Y from its mean.
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,122,* <p>Returns the sum of squared deviations of Y from its mean.</p>
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,124,"* <p>If the model has no intercept term, <code>0</code> is used for the"
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,125,"* mean of Y - i.e., what is returned is the sum of the squared Y values.</p>"
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,127,* <p>The value returned by this method is the SSTO value used in
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,128,* the {@link #calculateRSquared() R-squared} computation.</p>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,127, @return total sum of squares
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,130,* @return SSTO - the total sum of squares
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,131,* @see #isNoIntercept()
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,130,eturn new SecondMoment().evaluate(Y.getData());
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,134,if (isNoIntercept()) {
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,135,return StatUtils.sumSq(Y.getData());
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,136,} else {
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,137,return new SecondMoment().evaluate(Y.getData());
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,157," Returns the adjusted R-squared statistic, defined by the formula <pre>"
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,165,"* <p>Returns the adjusted R-squared statistic, defined by the formula <pre>"
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,162, of observations and p is the number of parameters estimated (including the intercept).
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,170,* of observations and p is the number of parameters estimated (including the intercept).</p>
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,172,"* <p>If the regression is estimated without an intercept term, what is returned is <pre>"
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,173,* <code> 1 - (1 - {@link #calculateRSquared()}) * (n / (n - p)) </code>
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,174,* </pre></p>
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,177,* @see #isNoIntercept()
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,168,eturn 1 - (calculateResidualSumOfSquares() * (n - 1)) /
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,169,calculateTotalSumOfSquares() * (n - X.getColumnDimension()));
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,181,if (isNoIntercept()) {
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,182,return 1 - (1 - calculateRSquared()) * (n / (n - X.getColumnDimension()));
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,183,} else {
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,184,return 1 - (calculateResidualSumOfSquares() * (n - 1)) /
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,185,(calculateTotalSumOfSquares() * (n - X.getColumnDimension()));
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,174, <p>This implementation computes and caches the QR decomposition of the X matrix once it is successfully loaded.</p>
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,191,* <p>This implementation computes and caches the QR decomposition of the X matrix
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,192,* once it is successfully loaded.</p>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,193, <p>Calculates the variance on the beta by OLS.
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,211,* <p>Calculates the variance-covariance matrix of the regression parameters.
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,201, @return The beta variance
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,219,* @return The beta variance-covariance matrix
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,97,// No intercept
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,98,regression.setNoIntercept(true);
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,99,"regression.newSampleData(design, 4, 3);"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,100,flatX = regression.X.copy();
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,101,flatY = regression.Y.copy();
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,102,regression.newXSampleData(x);
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,103,regression.newYSampleData(y);
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,104,"assertEquals(flatX, regression.X);"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,105,"assertEquals(flatY, regression.Y);"
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,140,/ Transform to Y and X required by interface
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,141,nt nobs = 16;
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,142,nt nvars = 6;
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,140,final int nobs = 16;
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,141,final int nvars = 6;
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,185,// Estimate model without intercept
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,186,model.setNoIntercept(true);
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,187,"model.newSampleData(design, nobs, nvars);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,189,// Check expected beta values from R
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,190,betaHat = model.estimateRegressionParameters();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,191,"TestUtils.assertEquals(betaHat,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,192,"new double[]{-52.99357013868291, 0.07107319907358,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,193,"-0.42346585566399,-0.57256866841929,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,194,"-0.41420358884978, 48.41786562001326}, 1E-11);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,196,// Check standard errors from R
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,197,errors = model.estimateRegressionParametersStandardErrors();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,198,"TestUtils.assertEquals(new double[] {129.54486693117232, 0.03016640003786,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,199,"0.41773654056612, 0.27899087467676, 0.32128496193363,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,200,"17.68948737819961}, errors, 1E-11);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,202,// Check expected residuals from R
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,203,residuals = model.estimateResiduals();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,204,"TestUtils.assertEquals(residuals, new double[]{"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,205,"279.90274927293092, -130.32465380836874, 90.73228661967445, -401.31252201634948,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,206,"-440.46768772620027, -543.54512853774793, 201.32111639536299, 215.90889365977932,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,207,"73.09368242049943, 913.21694494481869, 424.82484953610174, -8.56475876776709,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,208,"-361.32974610842876, 27.34560497213464, 151.28955976355002, -492.49937355336846},"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,209,1E-10);
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,211,// Check regression standard error against R
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,212,"assertEquals(475.1655079819517, model.estimateRegressionStandardError(), 1E-10);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,214,// Check R-Square statistics against R
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,215,"assertEquals(0.9999670130706, model.calculateRSquared(), 1E-12);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,216,"assertEquals(0.999947220913, model.calculateAdjustedRSquared(), 1E-12);"
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,251,inal double[] betaHat = model.estimateRegressionParameters();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,284,double[] betaHat = model.estimateRegressionParameters();
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,260,inal double[] residuals = model.estimateResiduals();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,293,double[] residuals = model.estimateResiduals();
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,281,inal double[] errors = model.estimateRegressionParametersStandardErrors();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,314,double[] errors = model.estimateRegressionParametersStandardErrors();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,330,// Estimate the model with no intercept
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,331,model = new OLSMultipleLinearRegression();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,332,model.setNoIntercept(true);
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,333,"model.newSampleData(design, nobs, nvars);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,335,// Check expected beta values from R
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,336,betaHat = model.estimateRegressionParameters();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,337,"TestUtils.assertEquals(betaHat,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,338,"new double[]{0.52191832900513,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,339,"2.36588087917963,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,340,"-0.94770353802795,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,341,"0.30851985863609}, 1E-12);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,343,// Check expected residuals from R
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,344,residuals = model.estimateResiduals();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,345,"TestUtils.assertEquals(residuals, new double[]{"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,346,"44.138759883538249, 27.720705122356215, 35.873200836126799,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,347,"34.574619581211977, 26.600168342080213, 15.074636243026923, -12.704904871199814,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,348,"1.497443824078134, 2.691972687079431, 5.582798774291231, -4.422986561283165,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,349,"-9.198581600334345, 4.481765170730647, 2.273520207553216, -22.649827853221336,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,350,"-17.747900013943308, 20.298314638496436, 6.861405135329779, -8.684712790954924,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,351,"-10.298639278062371, -9.896618896845819, 4.568568616351242, -15.313570491727944,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,352,"-13.762961360873966, 7.156100301980509, 16.722282219843990, 26.716200609071898,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,353,"-1.991466398777079, -2.523342564719335, 9.776486693095093, -5.297535127628603,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,354,"-16.639070567471094, -10.302057295211819, -23.549487860816846, 1.506624392156384,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,355,"-17.939174438345930, 13.105792202765040, -1.943329906928462, -1.516005841666695,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,356,"-0.759066561832886, 20.793137744128977, -2.485236153005426, 27.588238710486976,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,357,"2.658333257106881, -15.998337823623046, -5.550742066720694, -14.219077806826615},"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,358,1E-12);
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,360,// Check standard errors from R
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,361,errors = model.estimateRegressionParametersStandardErrors();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,362,"TestUtils.assertEquals(new double[] {0.10470063765677, 0.41684100584290,"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,363,"0.43370143099691, 0.07694953606522}, errors, 1E-10);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,365,// Check regression standard error against R
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,366,"assertEquals(17.24710630547, model.estimateRegressionStandardError(), 1E-10);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,368,// Check R-Square statistics against R
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,369,"assertEquals(0.946350722085, model.calculateRSquared(), 1E-12);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,370,"assertEquals(0.9413600915813, model.calculateAdjustedRSquared(), 1E-12);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,494,// No intercept
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,495,regression.setNoIntercept(true);
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,496,"regression.newSampleData(y, x);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,497,combinedX = regression.X.copy();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,498,combinedY = regression.Y.copy();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,499,regression.newXSampleData(x);
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,500,regression.newYSampleData(y);
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,501,"assertEquals(combinedX, regression.X);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,502,"assertEquals(combinedY, regression.Y);"
