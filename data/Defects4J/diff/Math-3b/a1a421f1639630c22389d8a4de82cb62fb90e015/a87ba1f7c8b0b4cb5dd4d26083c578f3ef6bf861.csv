is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1331,** Compute log(1 + x).
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1332, @param x a number
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1333, @return log(1 + x)
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1332,* Computes log(1 + x).
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1334,* @param x Number.
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1335,* @return {@code log(1 + x)}.
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1338,eturn x/0.0;   // -Infinity
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1339,return Double.NEGATIVE_INFINITY;
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1341,f (x > 0 && 1/x == 0) { // x = Infinity
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1342,eturn x;
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1342,if (x == Double.POSITIVE_INFINITY) {
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1343,return Double.POSITIVE_INFINITY;
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1345,f (x>1e-6 || x<-1e-6) {
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1346,ouble xpa = 1.0 + x;
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1347,ouble xpb = -(xpa - 1.0 - x);
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1349,ouble hiPrec[] = new double[2];
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1346,if (x > 1e-6 ||
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1347,x < -1e-6) {
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1348,final double xpa = 1 + x;
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1349,final double xpb = -(xpa - 1 - x);
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1351,final double[] hiPrec = new double[2];
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1352,f (Double.isInfinite(lores)){ // don't allow this to be converted to NaN
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1353,if (Double.isInfinite(lores)) { // Don't allow this to be converted to NaN
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1356,* Do a taylor series expansion around xpa */
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1357,* f(x+y) = f(x) + f'(x)*y + f''(x)/2 y^2 */
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1358,ouble fx1 = xpb/xpa;
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1360,ouble epsilon = 0.5 * fx1 + 1.0;
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1361,psilon = epsilon * fx1;
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1363,eturn epsilon + hiPrec[1] + hiPrec[0];
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1357,// Do a taylor series expansion around xpa:
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1358,//   f(x+y) = f(x) + f'(x) y + f''(x)/2 y^2
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1359,final double fx1 = xpb / xpa;
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1360,final double epsilon = 0.5 * fx1 + 1;
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1361,return epsilon * fx1 + hiPrec[1] + hiPrec[0];
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1362,} else {
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1363,"// Value is small |x| < 1e6, do a Taylor series centered on 1."
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1364,final double y = (x * F_1_3 - F_1_2) * x + 1;
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1365,return y * x;
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1366,"* Value is small |x| < 1e6, do a Taylor series centered on 1.0 */"
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1367,ouble y = x * F_1_3 - F_1_2;
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1368, = y * x + 1.0;
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1369, = y * x;
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,1371,eturn y;
