is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,341,/ trigger the event
True,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,341,// get state at event time
False,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,344,"urrentEvent.stepAccepted(eventT, eventY);"
False,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,345,sLastStep = currentEvent.stop();
True,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,345,// advance all event states to current time
True,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,346,for (final EventState state : eventsStates) {
True,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,347,"state.stepAccepted(eventT, eventY);"
True,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,348,isLastStep = isLastStep || state.stop();
False,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,355,or (final EventState remaining : occuringEvents) {
False,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,356,"emaining.stepAccepted(eventT, eventY);"
False,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,361,"f (currentEvent.reset(eventT, eventY)) {"
True,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,362,boolean needReset = false;
True,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,363,for (final EventState state : eventsStates) {
True,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,364,"needReset =  needReset || state.reset(eventT, eventY);"
True,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,366,if (needReset) {
False,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,367,or (final EventState remaining : occuringEvents) {
False,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,368,"emaining.stepAccepted(eventT, eventY);"
True,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java,388,"// last part of the step, after the last event"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,336,@Test
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,337,public void testEventsScheduling() {
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,339,FirstOrderDifferentialEquations sincos = new FirstOrderDifferentialEquations() {
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,341,public int getDimension() {
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,342,return 2;
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,345,"public void computeDerivatives(double t, double[] y, double[] yDot) {"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,346,yDot[0] =  y[1];
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,347,yDot[1] = -y[0];
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,352,"SchedulingChecker sinChecker = new SchedulingChecker(0); // events at 0, PI, 2PI ..."
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,353,"SchedulingChecker cosChecker = new SchedulingChecker(1); // events at PI/2, 3PI/2, 5PI/2 ..."
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,355,FirstOrderIntegrator integ =
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,356,"new DormandPrince853Integrator(0.001, 1.0, 1.0e-12, 0.0);"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,357,"integ.addEventHandler(sinChecker, 0.01, 1.0e-7, 100);"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,358,integ.addStepHandler(sinChecker);
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,359,"integ.addEventHandler(cosChecker, 0.01, 1.0e-7, 100);"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,360,integ.addStepHandler(cosChecker);
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,361,double   t0 = 0.5;
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,362,"double[] y0 = new double[] { FastMath.sin(t0), FastMath.cos(t0) };"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,363,double   t  = 10.0;
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,364,double[] y  = new double[2];
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,365,"integ.integrate(sincos, t0, y0, t, y);"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,369,"private static class SchedulingChecker implements StepHandler, EventHandler {"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,371,int index;
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,372,double tMin;
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,374,public SchedulingChecker(int index) {
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,375,this.index = index;
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,378,"public void init(double t0, double[] y0, double t) {"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,379,tMin = t0;
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,382,"public void handleStep(StepInterpolator interpolator, boolean isLast) {"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,383,tMin = interpolator.getCurrentTime();
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,386,"public double g(double t, double[]  y) {"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,387,"// once a step has been handled by handleStep,"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,388,// events checking should only refer to dates after the step
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,389,Assert.assertTrue(t >= tMin);
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,390,return y[index];
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,393,"public Action eventOccurred(double t, double[] y, boolean increasing) {"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,394,return Action.RESET_STATE;
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,397,"public void resetState(double t, double[] y) {"
True,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java,398,"// in fact, we don't need to reset anything for the test"
