is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,33," <p>This implementation handles both, known and unknown distributions.</p>"
False,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,34, <p>Two samples tests are used when the distribution is unknown <i>a priori</i>
False,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,35, but provided by one sample. We compare the second sample against the first.</p>
True,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,34,* <p>This implementation handles both known and unknown distributions.</p>
True,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,36,* <p>Two samples tests can be used when the distribution is unknown <i>a priori</i>
True,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,37,"* but provided by one sample, or when the hypothesis under test is that the two"
True,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java,38,* samples come from the same underlying distribution.</p>
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,50,/** Singleton G-Test instance. */
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,51,private static final GTest G_TEST = new GTest();
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,369,"* @see org.apache.commons.math3.stat.inference.GTest#gValueGoodnessOfFit(double[], long[])"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,371,"public static double gValue(final double[] expected, final long[] observed)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,372,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,373,DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,374,"return G_TEST.gValueGoodnessOfFit(expected, observed);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,378,"* @see org.apache.commons.math3.stat.inference.GTest#gTestGoodnessOfFitPValue( double[],  long[] )"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,380,"public static double gTest_pValue(final double[] expected, final long[] observed)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,381,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,382,"DimensionMismatchException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,383,"return G_TEST.gTestGoodnessOfFitPValue(expected, observed);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,387,"* @see org.apache.commons.math3.stat.inference.GTest#gTestGoodnessOfFitIntrinsicPValue(double[], long[] )"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,389,"public static double gTestIntrinsic_pValue(final double[] expected, final long[] observed)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,390,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,391,"DimensionMismatchException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,392,"return G_TEST.gTestGoodnessOfFitIntrinsicPValue(expected, observed);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,396,"* @see org.apache.commons.math3.stat.inference.GTest#gTestGoodnessOfFit( double[],long[],double)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,398,"public static boolean gTest(final double[] expected, final long[] observed,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,399,final double alpha)
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,400,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,401,"DimensionMismatchException, OutOfRangeException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,402,"return G_TEST.gTestGoodnessOfFit(expected, observed, alpha);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,406,"* @see org.apache.commons.math3.stat.inference.GTest#gValueDataSetsComparison(long[], long[])"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,408,"public static double gValueDataSetsComparison(final long[] observed1,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,409,final long[] observed2)
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,410,"throws DimensionMismatchException, NotPositiveException, ZeroException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,411,"return G_TEST.gValueDataSetsComparison(observed1, observed2);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,415,"* @see org.apache.commons.math3.stat.inference.GTest#rootLogLikelihoodRatio(long, long, long, long)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,417,"public static double rootLogLikelihoodRatio(final long k11, final long k12, final long k21, final long k22)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,418,"throws DimensionMismatchException, NotPositiveException, ZeroException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,419,"return G_TEST.rootLogLikelihoodRatio(k11, k12, k21, k22);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,424,"* @see org.apache.commons.math3.stat.inference.ChiSquareTest#gTestDataSetsComparisonPValue(long[], long[])"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,427,"public static double gTestDataSetsComparison_pValue(final long[] observed1,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,428,final long[] observed2)
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,429,"throws DimensionMismatchException, NotPositiveException, ZeroException,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,430,MaxCountExceededException {
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,431,"return G_TEST.gTestDataSetsComparisonPValue(observed1, observed2);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,435,"* @see org.apache.commons.math3.stat.inference.ChiSquareTest#gTestDataSetsComparison(double[],long[],double)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,437,"public static boolean gTestDataSetsComparison(final long[] observed1,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,438,"final long[] observed2,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,439,final double alpha)
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,440,"throws DimensionMismatchException, NotPositiveException,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,441,"ZeroException, OutOfRangeException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,442,"return G_TEST.gTestDataSetsComparison(observed1, observed2, alpha);"
