is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,77,"ew ElitisticListPopulation(this.getPopulationLimit(), this.getElitismRate());"
True,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,77,"new ElitisticListPopulation(getPopulationLimit(), getElitismRate());"
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,79,ist<Chromosome> oldChromosomes = this.getChromosomes();
True,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,79,final List<Chromosome> oldChromosomes = getChromosomeList();
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,83,nt boundIndex = (int) FastMath.ceil((1.0 - this.getElitismRate()) * oldChromosomes.size());
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,84,or (int i=boundIndex; i<oldChromosomes.size(); i++) {
True,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,83,int boundIndex = (int) FastMath.ceil((1.0 - getElitismRate()) * oldChromosomes.size());
True,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,84,for (int i = boundIndex; i < oldChromosomes.size(); i++) {
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,20,import java.util.Collection;
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,21,import java.util.Collections;
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,27,import org.apache.commons.math3.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,29,import org.apache.commons.math3.exception.NumberIsTooSmallException;
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,43, Creates a new ListPopulation instance.
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,46,* Creates a new ListPopulation instance and initializes its inner chromosome list.
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,45, @param chromosomes list of chromosomes in the population
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,47, @throws NumberIsTooLargeException if the list of chromosomes exceeds the population limit
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,50,"ublic ListPopulation(final List<Chromosome> chromosomes, final int populationLimit) {"
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,51,f (chromosomes.size() > populationLimit) {
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,52,"hrow new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,"
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,53,"hromosomes.size(), populationLimit, false);"
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,55,f (populationLimit <= 0) {
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,56,"hrow new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit);"
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,59,his.chromosomes = chromosomes;
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,60,his.populationLimit = populationLimit;
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,51,public ListPopulation(final int populationLimit) {
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,52,"this(Collections.<Chromosome> emptyList(), populationLimit);"
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,64, Creates a new ListPopulation instance and initializes its inner chromosome list.
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,56,* Creates a new ListPopulation instance.
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,57,* <p>Note: the chromosomes of the specified list are added to the population.</p>
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,58,* @param chromosomes list of chromosomes to be added to the population
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,60,* @throws NullArgumentException if the list of chromosomes is {@code null}
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,62,* @throws NumberIsTooLargeException if the list of chromosomes exceeds the population limit
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,69,ublic ListPopulation(final int populationLimit) {
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,64,"public ListPopulation(final List<Chromosome> chromosomes, final int populationLimit) {"
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,65,if (chromosomes == null) {
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,66,throw new NullArgumentException();
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,71,if (chromosomes.size() > populationLimit) {
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,72,"throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,"
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,73,"chromosomes.size(), populationLimit, false);"
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,77,this.chromosomes.addAll(chromosomes);
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,82,* <p>Note: this method removed all existing chromosomes in the population and adds all chromosomes
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,83,* of the specified list to the population.</p>
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,85,* @throws NullArgumentException if the list of chromosomes is {@code null}
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,86,* @throws NumberIsTooLargeException if the list of chromosomes exceeds the population limit
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,87,* @deprecated use {@link #addChromosomes(Collection)} instead
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,82,his.chromosomes = chromosomes;
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,90,if (chromosomes == null) {
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,91,throw new NullArgumentException();
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,93,if (chromosomes.size() > populationLimit) {
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,94,"throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,"
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,95,"chromosomes.size(), populationLimit, false);"
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,97,this.chromosomes.clear();
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,98,this.chromosomes.addAll(chromosomes);
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,86, Access the list of chromosomes.
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,102,* Add a {@link Collection} of chromosomes to this {@link Population}.
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,103,* @param chromosomeColl a {@link Collection} of chromosomes
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,104,* @throws NumberIsTooLargeException if the population would exceed the population limit when
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,105,* adding this chromosome
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,107,public void addChromosomes(final Collection<Chromosome> chromosomeColl) {
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,108,if (chromosomes.size() + chromosomeColl.size() > populationLimit) {
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,109,"throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,"
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,110,"chromosomes.size(), populationLimit, false);"
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,112,this.chromosomes.addAll(chromosomeColl);
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,116,* Returns an unmodifiable list of the chromosomes in this population.
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,120,return Collections.unmodifiableList(chromosomes);
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,124,* Access the list of chromosomes.
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,125,* @return the list of chromosomes
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,127,protected List<Chromosome> getChromosomeList() {
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,134,* @throws NumberIsTooLargeException if the population would exceed the {@code populationLimit} after
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,135,* adding this chromosome
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,138,if (chromosomes.size() >= populationLimit) {
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,139,"throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,"
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,140,"chromosomes.size(), populationLimit, false);"
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,172,* @throws NotPositiveException if the population limit is not a positive number (&lt; 1)
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,173,* @throws NumberIsTooSmallException if the new population size is smaller than the current number
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,174,* of chromosomes in the population
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,177,if (populationLimit <= 0) {
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,178,"throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit);"
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,180,if (populationLimit < chromosomes.size()) {
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,181,"throw new NumberIsTooSmallException(populationLimit, chromosomes.size(), true);"
True,src/main/java/org/apache/commons/math3/genetics/Population.java,src/main/java/org/apache/commons/math3/genetics/Population.java,48,* @throws org.apache.commons.math3.exception.NumberIsTooLargeException if the population would exceed
True,src/main/java/org/apache/commons/math3/genetics/Population.java,src/main/java/org/apache/commons/math3/genetics/Population.java,49,* the population limit when adding this chromosome
False,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,54, @param population the population from which the chromosomes are choosen.
True,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,54,* @param population the population from which the chromosomes are chosen.
False,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,59,ournament((ListPopulation)population));
True,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,59,tournament((ListPopulation) population));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,22,import org.apache.commons.math3.exception.NotPositiveException;
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,23,import org.apache.commons.math3.exception.NumberIsTooLargeException;
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,24,import org.apache.commons.math3.exception.NumberIsTooSmallException;
False,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,50,"istPopulation population = new ListPopulation(chromosomes,10) {"
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,53,"ListPopulation population = new ListPopulation(chromosomes, 10) {"
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,63,@Test
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,64,public void testChromosomes() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,65,final ArrayList<Chromosome> chromosomes = new ArrayList<Chromosome> ();
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,66,chromosomes.add(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,67,chromosomes.add(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,68,chromosomes.add(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,70,final ListPopulation population = new ListPopulation(10) {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,71,public Population nextGeneration() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,72,// not important
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,73,return null;
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,77,population.addChromosomes(chromosomes);
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,79,"Assert.assertEquals(chromosomes, population.getChromosomes());"
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,80,"Assert.assertEquals(chromosomes.toString(), population.toString());"
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,82,population.setPopulationLimit(50);
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,83,"Assert.assertEquals(50, population.getPopulationLimit());"
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,86,@Test(expected = NotPositiveException.class)
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,87,public void testSetPopulationLimit() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,88,final ListPopulation population = new ListPopulation(10) {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,89,public Population nextGeneration() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,90,// not important
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,91,return null;
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,95,population.setPopulationLimit(-50);
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,98,@Test(expected = NotPositiveException.class)
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,99,public void testConstructorPopulationLimitNotPositive() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,100,new ListPopulation(-10) {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,101,public Population nextGeneration() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,102,// not important
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,103,return null;
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,108,@Test(expected = NotPositiveException.class)
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,109,public void testChromosomeListConstructorPopulationLimitNotPositive() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,110,final ArrayList<Chromosome> chromosomes = new ArrayList<Chromosome> ();
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,111,chromosomes.add(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,112,"new ListPopulation(chromosomes, -10) {"
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,113,public Population nextGeneration() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,114,// not important
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,115,return null;
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,120,@Test(expected = NumberIsTooLargeException.class)
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,121,public void testConstructorListOfChromosomesBiggerThanPopulationSize() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,122,final ArrayList<Chromosome> chromosomes = new ArrayList<Chromosome> ();
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,123,chromosomes.add(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,124,chromosomes.add(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,125,chromosomes.add(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,126,"new ListPopulation(chromosomes, 1) {"
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,127,public Population nextGeneration() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,128,// not important
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,129,return null;
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,134,@Test(expected=NumberIsTooLargeException.class)
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,135,public void testAddTooManyChromosomes() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,136,final ArrayList<Chromosome> chromosomes = new ArrayList<Chromosome> ();
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,137,chromosomes.add(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,138,chromosomes.add(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,139,chromosomes.add(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,141,final ListPopulation population = new ListPopulation(2) {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,142,public Population nextGeneration() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,143,// not important
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,144,return null;
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,148,population.addChromosomes(chromosomes);
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,151,@Test(expected=NumberIsTooLargeException.class)
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,152,public void testAddTooManyChromosomesSingleCall() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,154,final ListPopulation population = new ListPopulation(2) {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,155,public Population nextGeneration() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,156,// not important
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,157,return null;
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,161,for (int i = 0; i <= population.getPopulationLimit(); i++) {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,162,population.addChromosome(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,166,@Test(expected=NumberIsTooSmallException.class)
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,167,public void testSetPopulationLimitTooSmall() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,168,final ArrayList<Chromosome> chromosomes = new ArrayList<Chromosome> ();
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,169,chromosomes.add(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,170,chromosomes.add(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,171,chromosomes.add(new DummyBinaryChromosome(BinaryChromosome.randomBinaryRepresentation(3)));
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,173,"final ListPopulation population = new ListPopulation(chromosomes, 3) {"
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,174,public Population nextGeneration() {
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,175,// not important
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,176,return null;
True,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java,180,population.setPopulationLimit(2);
