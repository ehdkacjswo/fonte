is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,103,/** Whether the matrix is symmetric. */
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,104,private final boolean isSymmetric;
False,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,116,"f (isSymmetric(matrix, false)) {"
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,118,"isSymmetric = isSymmetric(matrix, false);"
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,119,if (isSymmetric) {
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,155,isSymmetric = true;
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,393,* Computes the square-root of the matrix.
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,394,* This implementation assumes that the matrix is symmetric and postive
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,395,* definite.
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,397,* @return the square-root of the matrix.
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,398,* @throws MathUnsupportedOperationException if the matrix is not
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,399,* symmetric or not positive definite.
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,401,public RealMatrix getSquareRoot() {
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,402,if (!isSymmetric) {
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,403,throw new MathUnsupportedOperationException();
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,406,final double[] sqrtEigenValues = new double[realEigenvalues.length];
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,407,for (int i = 0; i < realEigenvalues.length; i++) {
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,408,final double eigen = realEigenvalues[i];
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,409,if (eigen <= 0) {
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,410,throw new MathUnsupportedOperationException();
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,412,sqrtEigenValues[i] = FastMath.sqrt(eigen);
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,414,final RealMatrix sqrtEigen = MatrixUtils.createRealDiagonalMatrix(sqrtEigenValues);
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,415,final RealMatrix v = getV();
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,416,final RealMatrix vT = getVT();
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,418,return v.multiply(sqrtEigen).multiply(vT);
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,27,import org.apache.commons.math3.exception.MathUnsupportedOperationException;
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,340,@Test
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,341,public void testSquareRoot() {
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,342,final double[][] data = {
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,343,"{ 33, 24,  7 },"
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,344,"{ 24, 57, 11 },"
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,345,"{  7, 11,  9 }"
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,348,final EigenDecomposition dec = new EigenDecomposition(MatrixUtils.createRealMatrix(data));
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,349,final RealMatrix sqrtM = dec.getSquareRoot();
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,351,// Reconstruct initial matrix.
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,352,final RealMatrix m = sqrtM.multiply(sqrtM);
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,354,final int dim = data.length;
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,355,for (int r = 0; r < dim; r++) {
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,356,for (int c = 0; c < dim; c++) {
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,357,"Assert.assertEquals(""m["" + r + ""]["" + c + ""]"","
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,358,"data[r][c], m.getEntry(r, c), 1e-13);"
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,363,@Test(expected=MathUnsupportedOperationException.class)
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,364,public void testSquareRootNonSymmetric() {
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,365,final double[][] data = {
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,366,"{ 1,  2, 4 },"
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,367,"{ 2,  3, 5 },"
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,368,"{ 11, 5, 9 }"
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,371,final EigenDecomposition dec = new EigenDecomposition(MatrixUtils.createRealMatrix(data));
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,372,final RealMatrix sqrtM = dec.getSquareRoot();
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,375,@Test(expected=MathUnsupportedOperationException.class)
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,376,public void testSquareRootNonPositiveDefinite() {
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,377,final double[][] data = {
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,378,"{ 1, 2,  4 },"
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,379,"{ 2, 3,  5 },"
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,380,"{ 4, 5, -9 }"
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,383,final EigenDecomposition dec = new EigenDecomposition(MatrixUtils.createRealMatrix(data));
True,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java,384,final RealMatrix sqrtM = dec.getSquareRoot();
