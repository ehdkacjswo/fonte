is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java,src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java,90, @param maxIter Maximum iteration count. Setting it to a negative
False,src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java,src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java,91, value will disable this stopping criterion.
True,src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java,src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java,90,* @param maxIter Maximum iteration count.
False,src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java,src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java,88, @param maxIter Maximum iteration count. Setting it to a negative
False,src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java,src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java,89, value will disable this stopping criterion.
True,src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java,src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java,88,* @param maxIter Maximum iteration count.
False,src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java,src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java,90, @param maxIter Maximum iteration count. Setting it to a negative
False,src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java,src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java,91, value will disable this stopping criterion.
True,src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java,src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java,90,* @param maxIter Maximum iteration count.
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,17,package org.apache.commons.math3.optimization;
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,19,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,20,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,21,import org.junit.Assert;
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,23,public class SimplePointCheckerTest {
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,24,@Test(expected=NotStrictlyPositiveException.class)
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,25,public void testIterationCheckPrecondition() {
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,26,"new SimplePointChecker<PointValuePair>(1e-1, 1e-2, 0);"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,29,@Test
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,30,public void testIterationCheck() {
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,31,final int max = 10;
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,32,final SimplePointChecker<PointValuePair> checker
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,33,"= new SimplePointChecker<PointValuePair>(1e-1, 1e-2, max);"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,34,"Assert.assertTrue(checker.converged(max, null, null));"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,35,"Assert.assertTrue(checker.converged(max + 1, null, null));"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,38,@Test
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,39,public void testIterationCheckDisabled() {
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,40,final SimplePointChecker<PointValuePair> checker
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,41,"= new SimplePointChecker<PointValuePair>(1e-8, 1e-8);"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,43,"final PointValuePair a = new PointValuePair(new double[] { 1d }, 1d);"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,44,"final PointValuePair b = new PointValuePair(new double[] { 10d }, 10d);"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,46,"Assert.assertFalse(checker.converged(-1, a, b));"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,47,"Assert.assertFalse(checker.converged(0, a, b));"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,48,"Assert.assertFalse(checker.converged(1000000, a, b));"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,50,"Assert.assertTrue(checker.converged(-1, a, a));"
True,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java,51,"Assert.assertTrue(checker.converged(-1, b, b));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,17,package org.apache.commons.math3.optimization;
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,19,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,20,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,21,import org.junit.Assert;
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,23,public class SimpleValueCheckerTest {
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,24,@Test(expected=NotStrictlyPositiveException.class)
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,25,public void testIterationCheckPrecondition() {
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,26,"new SimpleValueChecker(1e-1, 1e-2, 0);"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,29,@Test
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,30,public void testIterationCheck() {
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,31,final int max = 10;
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,32,"final SimpleValueChecker checker = new SimpleValueChecker(1e-1, 1e-2, max);"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,33,"Assert.assertTrue(checker.converged(max, null, null));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,34,"Assert.assertTrue(checker.converged(max + 1, null, null));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,37,@Test
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,38,public void testIterationCheckDisabled() {
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,39,"final SimpleValueChecker checker = new SimpleValueChecker(1e-8, 1e-8);"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,41,"final PointValuePair a = new PointValuePair(new double[] { 1d }, 1d);"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,42,"final PointValuePair b = new PointValuePair(new double[] { 10d }, 10d);"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,44,"Assert.assertFalse(checker.converged(-1, a, b));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,45,"Assert.assertFalse(checker.converged(0, a, b));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,46,"Assert.assertFalse(checker.converged(1000000, a, b));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,48,"Assert.assertTrue(checker.converged(-1, a, a));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java,49,"Assert.assertTrue(checker.converged(-1, b, b));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,17,package org.apache.commons.math3.optimization;
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,19,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,20,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,21,import org.junit.Assert;
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,23,public class SimpleVectorValueCheckerTest {
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,24,@Test(expected=NotStrictlyPositiveException.class)
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,25,public void testIterationCheckPrecondition() {
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,26,"new SimpleVectorValueChecker(1e-1, 1e-2, 0);"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,29,@Test
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,30,public void testIterationCheck() {
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,31,final int max = 10;
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,32,"final SimpleVectorValueChecker checker = new SimpleVectorValueChecker(1e-1, 1e-2, max);"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,33,"Assert.assertTrue(checker.converged(max, null, null));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,34,"Assert.assertTrue(checker.converged(max + 1, null, null));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,37,@Test
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,38,public void testIterationCheckDisabled() {
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,39,"final SimpleVectorValueChecker checker = new SimpleVectorValueChecker(1e-8, 1e-8);"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,41,"final PointVectorValuePair a = new PointVectorValuePair(new double[] { 1d },"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,42,new double[] { 1d });
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,43,"final PointVectorValuePair b = new PointVectorValuePair(new double[] { 10d },"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,44,new double[] { 10d });
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,46,"Assert.assertFalse(checker.converged(-1, a, b));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,47,"Assert.assertFalse(checker.converged(0, a, b));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,48,"Assert.assertFalse(checker.converged(1000000, a, b));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,50,"Assert.assertTrue(checker.converged(-1, a, a));"
True,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java,51,"Assert.assertTrue(checker.converged(-1, b, b));"
