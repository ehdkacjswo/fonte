is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/transform/DctNormalization.java,src/main/java/org/apache/commons/math3/transform/DctNormalization.java,30, <p>
False,src/main/java/org/apache/commons/math3/transform/DctNormalization.java,src/main/java/org/apache/commons/math3/transform/DctNormalization.java,46, </p>
False,src/main/java/org/apache/commons/math3/transform/DctNormalization.java,src/main/java/org/apache/commons/math3/transform/DctNormalization.java,51, <p>
False,src/main/java/org/apache/commons/math3/transform/DftNormalization.java,src/main/java/org/apache/commons/math3/transform/DftNormalization.java,30, <p>
False,src/main/java/org/apache/commons/math3/transform/DftNormalization.java,src/main/java/org/apache/commons/math3/transform/DftNormalization.java,41, </p>
False,src/main/java/org/apache/commons/math3/transform/DftNormalization.java,src/main/java/org/apache/commons/math3/transform/DftNormalization.java,46, <p>
False,src/main/java/org/apache/commons/math3/transform/DftNormalization.java,src/main/java/org/apache/commons/math3/transform/DftNormalization.java,58, </p>
False,src/main/java/org/apache/commons/math3/transform/DstNormalization.java,src/main/java/org/apache/commons/math3/transform/DstNormalization.java,30, <p>
False,src/main/java/org/apache/commons/math3/transform/DstNormalization.java,src/main/java/org/apache/commons/math3/transform/DstNormalization.java,41, </p>
False,src/main/java/org/apache/commons/math3/transform/DstNormalization.java,src/main/java/org/apache/commons/math3/transform/DstNormalization.java,46, <p>
False,src/main/java/org/apache/commons/math3/transform/DstNormalization.java,src/main/java/org/apache/commons/math3/transform/DstNormalization.java,58, </p>
False,src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java,30, <p>
False,src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java,34, </p>
False,src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java,39, </p>
False,src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java,51, </p>
False,src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java,61, </p>
False,src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java,67, </p>
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,34, <p>
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,38, </p>
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,43, </p>
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,52, </p>
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,165," @param type the type of transform (forward, inverse) which resulted in the"
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,166, specified data
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,161,"* @param type the type of transform (forward, inverse) which resulted in the specified data"
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,208," <li>{@code dataRI[0][i]} is the real part of the {@code i}-th data point,"
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,209, </li>
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,210, <li>{@code dataRI[1][i]} is the imaginary part of the {@code i}-th data
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,211, point.</li>
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,203,"*   <li>{@code dataRI[0][i]} is the real part of the {@code i}-th data point,</li>"
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,204,*   <li>{@code dataRI[1][i]} is the imaginary part of the {@code i}-th data point.</li>
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,214, @param dataRI the two dimensional array of real and imaginary parts of
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,215, the data
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,216, @param normalization the normalization to be applied to the transformed
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,217, data
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,207,* @param dataRI the two dimensional array of real and imaginary parts of the data
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,208,* @param normalization the normalization to be applied to the transformed data
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,220," array is not two, or the array is not rectangular"
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,211,"*   array is not two, or the array is not rectangular"
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,222, a power of two
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,213,*   a power of two
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,377, @throws MathIllegalArgumentException if the length of the data array is
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,378, not a power of two
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,368,* @throws MathIllegalArgumentException if the length of the data array is not a power of two
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,401," if the lower bound is greater than, or equal to the upper bound"
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,391,"*   if the lower bound is greater than, or equal to the upper bound"
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,403, if the number of sample points {@code n} is negative
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,393,*   if the number of sample points {@code n} is negative
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,405, {@code n} is not a power of two
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,395,*   {@code n} is not a power of two
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,408,"inal double min, final double max, final int n,"
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,409,inal TransformType type) {
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,398,"final double min, final double max, final int n,"
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,399,final TransformType type) {
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,416," Returns the (forward, inverse) transform of the specified complex data"
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,417, set.
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,406,"* Returns the (forward, inverse) transform of the specified complex data set."
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,422, @throws MathIllegalArgumentException if the length of the data array is
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,423, not a power of two
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,411,* @throws MathIllegalArgumentException if the length of the data array is not a power of two
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,442, @param mdca Multi-Dimensional Complex Array id est
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,443, {@code Complex[][][][]}
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,430,"* @param mdca Multi-Dimensional Complex Array, i.e. {@code Complex[][][][]}"
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,445, @return transform of {@code mdca} as a Multi-Dimensional Complex Array
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,446, id est {@code Complex[][][][]}
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,432,"* @return transform of {@code mdca} as a Multi-Dimensional Complex Array, i.e. {@code Complex[][][][]}"
False,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,30," <p>In addition to transformation of real vectors, the Hadamard transform can"
True,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,30,* <p>
True,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,31,"* In addition to transformation of real vectors, the Hadamard transform can"
False,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,34," vector (1/2, -1/2, 0, 0).</p>"
True,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,35,"* vector (1/2, -1/2, 0, 0)."
False,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,60," if the lower bound is greater than, or equal to the upper bound"
True,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,62,"*   if the lower bound is greater than, or equal to the upper bound"
False,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,62, if the number of sample points is negative
False,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,63, @throws MathIllegalArgumentException if the number of sample points is
False,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,64, not a power of two
True,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,64,*   if the number of sample points is negative
True,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,65,* @throws MathIllegalArgumentException if the number of sample points is not a power of two
False,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,80, @throws MathIllegalArgumentException if the length of the data array is
False,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,81, not a power of two
True,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,81,* @throws MathIllegalArgumentException if the length of the data array is not a power of two
False,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,227, @throws MathIllegalArgumentException if the length of the data array is
False,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,228, not a power of two
True,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,227,* @throws MathIllegalArgumentException if the length of the data array is not a power of two
False,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,279, @throws MathIllegalArgumentException if the length of the data array is
False,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,280, not a power of two
True,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java,278,* @throws MathIllegalArgumentException if the length of the data array is not a power of two
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,30, <p>
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,34, </p>
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,41, </p>
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,54, </p>
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,64, </p>
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,72, </p>
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,86," Creates a new instance of this class, with various normalization"
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,87, conventions.
True,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,80,"* Creates a new instance of this class, with various normalization conventions."
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,89, @param normalization the type of normalization to be applied to the
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,90, transformed data
True,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,82,* @param normalization the type of normalization to be applied to the transformed data
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,102," not a power of two, or the first element of the data array is not zero"
True,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,94,"*   not a power of two, or the first element of the data array is not zero"
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,122," if the lower bound is greater than, or equal to the upper bound"
True,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,114,"*   if the lower bound is greater than, or equal to the upper bound"
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,124, if the number of sample points is negative
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,125, @throws MathIllegalArgumentException if the number of sample points is
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,126, not a power of two
True,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,116,*   if the number of sample points is negative
True,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,117,* @throws MathIllegalArgumentException if the number of sample points is not a power of two
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,144," not a power of two, or the first element of the data array is not zero"
True,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,135,"*   not a power of two, or the first element of the data array is not zero"
False,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,25, <p>Interface for one-dimensional data sets transformations producing real
False,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,26, results.</p>
False,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,27," <p>Such transforms include {@link FastSineTransformer sine transform},"
True,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,25,* Interface for one-dimensional data sets transformations producing real results.
True,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,26,* <p>
True,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,27,"* Such transforms include {@link FastSineTransformer sine transform},"
False,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,32, results instead of real ones.</p>
True,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,32,* results instead of real ones.
False,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,46," with the given type (this may be for example due to array size, which is"
False,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,47, constrained in some transforms)
True,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,46,"*   with the given type (this may be for example due to array size, which is"
True,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,47,*   constrained in some transforms)
False,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,61," @throws NonMonotonicSequenceException if the lower bound is greater than,"
False,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,62, or equal to the upper bound
True,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,61,"* @throws NonMonotonicSequenceException if the lower bound is greater than, or equal to the upper bound"
False,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,65," with the given type (this may be for example due to sample size, which is"
False,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,66, constrained in some transforms)
True,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,64,"*   with the given type (this may be for example due to sample size, which is"
True,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,src/main/java/org/apache/commons/math3/transform/RealTransformer.java,65,*   constrained in some transforms)
False,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,96, of the specified complex input
True,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,96,*   of the specified complex input
False,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,120, @return an array of {@link Complex} with specified real and imaginary
False,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,121, parts.
True,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,120,* @return an array of {@link Complex} with specified real and imaginary parts.
False,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,123," array is not two, or the array is not rectangular"
True,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,src/main/java/org/apache/commons/math3/transform/TransformUtils.java,122,"*   array is not two, or the array is not rectangular"
