is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,489,final RealVector xFromListener = new ArrayRealVector(n);
True,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,510,final IterativeLinearSolverEvent ilse = (IterativeLinearSolverEvent) e;
True,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,511,"xFromListener.setSubVector(0, ilse.getSolution());"
False,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,518,"olver.solve(a, b);"
True,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,521,"final RealVector xFromSolver = solver.solve(a, b);"
True,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,527,"*  Check that solution is not ""over-refined"". When the last iteration has"
True,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,528,"*  occurred, no further refinement should be performed."
True,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,530,for (int i = 0; i < n; i++){
True,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,531,"msg = String.format(""row %d, column %d"", i, j);"
True,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,532,final double expected = xFromSolver.getEntry(i);
True,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,533,final double actual = xFromListener.getEntry(i);
True,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,src/test/java/org/apache/commons/math3/linear/SymmLQTest.java,534,"Assert.assertEquals(msg, expected, actual, 0.0);"
