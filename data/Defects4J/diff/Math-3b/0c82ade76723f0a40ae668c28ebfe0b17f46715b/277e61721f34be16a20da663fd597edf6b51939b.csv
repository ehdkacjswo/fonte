is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,17,package org.apache.commons.math3.analysis.integration;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,19,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,20,import org.apache.commons.math3.exception.MaxCountExceededException;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,21,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,22,import org.apache.commons.math3.exception.NumberIsTooLargeException;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,23,import org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,24,import org.apache.commons.math3.exception.TooManyEvaluationsException;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,25,import org.apache.commons.math3.util.FastMath;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,28,"* Implements the <a href=""http://en.wikipedia.org/wiki/Midpoint_method"">"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,29,* Midpoint Rule</a> for integration of real univariate functions. For
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,30,"* reference, see <b>Numerical Mathematics</b>, ISBN 0387989595,"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,31,* chapter 9.2.
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,32,* <p>
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,33,* The function should be integrable.</p>
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,35,* @version $Id$
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,36,* @since 3.3
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,38,public class MidPointIntegrator extends BaseAbstractUnivariateIntegrator {
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,40,/** Maximum number of iterations for midpoint. */
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,41,public static final int MIDPOINT_MAX_ITERATIONS_COUNT = 64;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,43,/** Intermediate result. */
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,44,private double s;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,47,* Build a midpoint integrator with given accuracies and iterations counts.
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,48,* @param relativeAccuracy relative accuracy of the result
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,49,* @param absoluteAccuracy absolute accuracy of the result
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,50,* @param minimalIterationCount minimum number of iterations
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,51,* @param maximalIterationCount maximum number of iterations
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,52,* (must be less than or equal to {@link #MIDPOINT_MAX_ITERATIONS_COUNT}
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,53,* @exception NotStrictlyPositiveException if minimal number of iterations
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,54,* is not strictly positive
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,55,* @exception NumberIsTooSmallException if maximal number of iterations
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,56,* is lesser than or equal to the minimal number of iterations
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,57,* @exception NumberIsTooLargeException if maximal number of iterations
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,58,* is greater than {@link #MIDPOINT_MAX_ITERATIONS_COUNT}
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,60,"public MidPointIntegrator(final double relativeAccuracy,"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,61,"final double absoluteAccuracy,"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,62,"final int minimalIterationCount,"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,63,final int maximalIterationCount)
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,64,"throws NotStrictlyPositiveException, NumberIsTooSmallException, NumberIsTooLargeException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,65,"super(relativeAccuracy, absoluteAccuracy, minimalIterationCount, maximalIterationCount);"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,66,if (maximalIterationCount > MIDPOINT_MAX_ITERATIONS_COUNT) {
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,67,"throw new NumberIsTooLargeException(maximalIterationCount,"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,68,"MIDPOINT_MAX_ITERATIONS_COUNT, false);"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,73,* Build a midpoint integrator with given iteration counts.
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,74,* @param minimalIterationCount minimum number of iterations
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,75,* @param maximalIterationCount maximum number of iterations
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,76,* (must be less than or equal to {@link #MIDPOINT_MAX_ITERATIONS_COUNT}
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,77,* @exception NotStrictlyPositiveException if minimal number of iterations
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,78,* is not strictly positive
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,79,* @exception NumberIsTooSmallException if maximal number of iterations
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,80,* is lesser than or equal to the minimal number of iterations
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,81,* @exception NumberIsTooLargeException if maximal number of iterations
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,82,* is greater than {@link #MIDPOINT_MAX_ITERATIONS_COUNT}
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,84,"public MidPointIntegrator(final int minimalIterationCount,"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,85,final int maximalIterationCount)
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,86,"throws NotStrictlyPositiveException, NumberIsTooSmallException, NumberIsTooLargeException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,87,"super(minimalIterationCount, maximalIterationCount);"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,88,if (maximalIterationCount > MIDPOINT_MAX_ITERATIONS_COUNT) {
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,89,"throw new NumberIsTooLargeException(maximalIterationCount,"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,90,"MIDPOINT_MAX_ITERATIONS_COUNT, false);"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,95,* Construct a midpoint integrator with default settings.
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,96,* (max iteration count set to {@link #MIDPOINT_MAX_ITERATIONS_COUNT})
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,98,public MidPointIntegrator() {
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,99,"super(DEFAULT_MIN_ITERATIONS_COUNT, MIDPOINT_MAX_ITERATIONS_COUNT);"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,103,* Compute the n-th stage integral of midpoint rule.
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,104,* This function should only be called by API <code>integrate()</code> in the package.
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,105,* To save time it does not verify arguments - caller does.
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,106,* <p>
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,107,* The interval is divided equally into 2^n sections rather than an
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,108,* arbitrary m sections because this configuration can best utilize the
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,109,* already computed values.</p>
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,111,"* @param n the stage of 1/2 refinement, n = 0 is no refinement"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,112,* @return the value of n-th stage integral
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,113,* @throws TooManyEvaluationsException if the maximal number of evaluations
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,114,* is exceeded.
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,116,private double stage(final int n)
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,117,throws TooManyEvaluationsException {
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,119,final double max = getMax();
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,120,final double min = getMin();
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,122,if (n == 0) {
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,123,final double midPoint = 0.5 * (max - min);
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,124,s = (max - min) * computeObjectiveValue(midPoint);
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,125,return s;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,126,} else {
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,127,final long np = 1L << (n - 1);           // number of new points in this stage
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,128,double sum = 0;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,129,// spacing between adjacent new points
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,130,final double spacing = (max - min) / np;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,131,double x = min + 0.5 * spacing;    // the first new point
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,132,for (long i = 0; i < np; i++) {
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,133,sum += computeObjectiveValue(x);
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,134,x += spacing;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,136,// add the new sum to previously calculated result
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,137,s = 0.5 * (s + sum * spacing);
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,138,return s;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,142,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,143,protected double doIntegrate()
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,144,"throws MathIllegalArgumentException, TooManyEvaluationsException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,146,double oldt = stage(0);
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,147,iterations.incrementCount();
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,148,while (true) {
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,149,final int i = iterations.getCount();
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,150,final double t = stage(i);
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,151,if (i >= getMinimalIterationCount()) {
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,152,final double delta = FastMath.abs(t - oldt);
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,153,final double rLimit =
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,154,getRelativeAccuracy() * (FastMath.abs(oldt) + FastMath.abs(t)) * 0.5;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,155,if ((delta <= rLimit) || (delta <= getAbsoluteAccuracy())) {
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,156,return t;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,159,oldt = t;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,160,iterations.incrementCount();
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,17,package org.apache.commons.math3.analysis.integration;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,19,import org.apache.commons.math3.analysis.QuinticFunction;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,20,import org.apache.commons.math3.analysis.UnivariateFunction;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,21,import org.apache.commons.math3.analysis.function.Sin;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,22,import org.apache.commons.math3.exception.NumberIsTooLargeException;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,23,import org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,24,import org.apache.commons.math3.util.FastMath;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,25,import org.junit.Assert;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,26,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,29,* Test case for midpoint integrator.
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,30,* <p>
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,31,"* Test runs show that for a default relative accuracy of 1E-6, it generally"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,32,* takes 10 to 15 iterations for the integral to converge.
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,34,* @version $Id: MidPointIntegratorTest.java 1374632 2012-08-18 18:11:11Z luc $
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,36,public final class MidPointIntegratorTest {
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,39,* Test of integrator for the sine function.
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,41,@Test
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,42,public void testSinFunction() {
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,43,UnivariateFunction f = new Sin();
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,44,UnivariateIntegrator integrator = new MidPointIntegrator();
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,46,double min = 0;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,47,double max = FastMath.PI;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,48,double expected = 2;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,49,double tolerance = FastMath.abs(expected * integrator.getRelativeAccuracy());
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,50,"double result = integrator.integrate(Integer.MAX_VALUE, f, min, max);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,51,Assert.assertTrue(integrator.getEvaluations() < Integer.MAX_VALUE / 2);
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,52,Assert.assertTrue(integrator.getIterations() < MidPointIntegrator.MIDPOINT_MAX_ITERATIONS_COUNT / 2);
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,53,"Assert.assertEquals(expected, result, tolerance);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,55,min = -FastMath.PI/3;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,56,max = 0;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,57,expected = -0.5;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,58,tolerance = FastMath.abs(expected * integrator.getRelativeAccuracy());
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,59,"result = integrator.integrate(Integer.MAX_VALUE, f, min, max);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,60,Assert.assertTrue(integrator.getEvaluations() < Integer.MAX_VALUE / 2);
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,61,Assert.assertTrue(integrator.getIterations() < MidPointIntegrator.MIDPOINT_MAX_ITERATIONS_COUNT / 2);
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,62,"Assert.assertEquals(expected, result, tolerance);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,67,* Test of integrator for the quintic function.
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,69,@Test
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,70,public void testQuinticFunction() {
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,71,UnivariateFunction f = new QuinticFunction();
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,72,UnivariateIntegrator integrator = new MidPointIntegrator();
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,74,double min = 0;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,75,double max = 1;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,76,double expected = -1.0 / 48;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,77,double tolerance = FastMath.abs(expected * integrator.getRelativeAccuracy());
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,78,"double result = integrator.integrate(Integer.MAX_VALUE, f, min, max);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,79,Assert.assertTrue(integrator.getEvaluations() < Integer.MAX_VALUE / 2);
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,80,Assert.assertTrue(integrator.getIterations() < MidPointIntegrator.MIDPOINT_MAX_ITERATIONS_COUNT / 2);
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,81,"Assert.assertEquals(expected, result, tolerance);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,83,min = 0;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,84,max = 0.5;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,85,expected = 11.0 / 768;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,86,tolerance = FastMath.abs(expected * integrator.getRelativeAccuracy());
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,87,"result = integrator.integrate(Integer.MAX_VALUE, f, min, max);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,88,Assert.assertTrue(integrator.getEvaluations() < Integer.MAX_VALUE / 2);
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,89,Assert.assertTrue(integrator.getIterations() < MidPointIntegrator.MIDPOINT_MAX_ITERATIONS_COUNT / 2);
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,90,"Assert.assertEquals(expected, result, tolerance);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,92,min = -1;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,93,max = 4;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,94,expected = 2048 / 3.0 - 78 + 1.0 / 48;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,95,tolerance = FastMath.abs(expected * integrator.getRelativeAccuracy());
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,96,"result = integrator.integrate(Integer.MAX_VALUE, f, min, max);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,97,Assert.assertTrue(integrator.getEvaluations() < Integer.MAX_VALUE / 2);
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,98,Assert.assertTrue(integrator.getIterations() < MidPointIntegrator.MIDPOINT_MAX_ITERATIONS_COUNT / 2);
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,99,"Assert.assertEquals(expected, result, tolerance);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,104,* Test of parameters for the integrator.
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,106,@Test
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,107,public void testParameters() {
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,108,UnivariateFunction f = new Sin();
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,110,try {
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,111,// bad interval
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,112,"new MidPointIntegrator().integrate(1000, f, 1, -1);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,113,"Assert.fail(""Expecting NumberIsTooLargeException - bad interval"");"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,114,} catch (NumberIsTooLargeException ex) {
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,115,// expected
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,117,try {
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,118,// bad iteration limits
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,119,"new MidPointIntegrator(5, 4);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,120,"Assert.fail(""Expecting NumberIsTooSmallException - bad iteration limits"");"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,121,} catch (NumberIsTooSmallException ex) {
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,122,// expected
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,124,try {
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,125,// bad iteration limits
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,126,"new MidPointIntegrator(10, 99);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,127,"Assert.fail(""Expecting NumberIsTooLargeException - bad iteration limits"");"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,128,} catch (NumberIsTooLargeException ex) {
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,129,// expected
