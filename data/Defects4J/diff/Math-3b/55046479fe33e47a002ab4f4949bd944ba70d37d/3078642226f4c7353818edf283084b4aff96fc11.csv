is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,21,import org.apache.commons.math3.exception.TooManyEvaluationsException;
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,63,* <p>
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,64,* Note that if there are bounds constraints (see {@link #getLowerBound()}
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,65,"* and {@link #getUpperBound()}), then a simple rejection algorithm is used"
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,66,* at each restart. This implies that the random vector generator should have
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,67,"* a good probability to generate vectors in the bounded domain, otherwise the"
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,68,* rejection algorithm will hit the {@link #getMaxEvaluations()} count without
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,69,* generating a proper restart point. Users must be take great care of the <a
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,70,"* href=""http://en.wikipedia.org/wiki/Curse_of_dimensionality"">curse of dimensionality</a>."
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,71,* </p>
False,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,160,inal double[] min = getLowerBound(); // XXX Should be used to enforce bounds (see below).
False,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,161,inal double[] max = getUpperBound(); // XXX Should be used to enforce bounds (see below).
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,169,final double[] min = getLowerBound();
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,170,final double[] max = getUpperBound();
False,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,171,inal double[] s = (i == 0) ?
False,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,172,tartPoint :
False,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,173,enerator.nextVector(); // XXX This does not enforce bounds!
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,180,double[] s = null;
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,181,if (i == 0) {
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,182,s = startPoint;
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,183,} else {
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,184,int attempts = 0;
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,185,while (s == null) {
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,186,if (attempts++ >= getMaxEvaluations()) {
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,187,throw new TooManyEvaluationsException(getMaxEvaluations());
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,189,s = generator.nextVector();
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,190,for (int k = 0; s != null && k < s.length; ++k) {
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,191,if ((min != null && s[k] < min[k]) || (max != null && s[k] > max[k])) {
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,192,// reject the vector
True,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,193,s = null;
False,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,19,mport org.apache.commons.math3.analysis.MultivariateVectorFunction;
False,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,21,mport org.apache.commons.math3.exception.MathIllegalStateException;
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,20,import org.apache.commons.math3.analysis.MultivariateVectorFunction;
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,21,import org.apache.commons.math3.exception.TooManyEvaluationsException;
False,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,24,mport org.apache.commons.math3.optim.MaxEval;
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,25,import org.apache.commons.math3.optim.MaxEval;
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,26,import org.apache.commons.math3.optim.OptimizationData;
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,28,import org.apache.commons.math3.optim.SimpleBounds;
False,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,101,inearProblem problem
False,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,102," new LinearProblem(new double[][] { { 2 } }, new double[] { 3 });"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,150,@Test
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,151,public void testIssue914() {
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,152,"LinearProblem problem = new LinearProblem(new double[][] { { 2 } }, new double[] { 3 });"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,153,JacobianMultivariateVectorOptimizer underlyingOptimizer =
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,154,"new GaussNewtonOptimizer(true, new SimpleVectorValueChecker(1e-6, 1e-6)) {"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,155,public PointVectorValuePair optimize(OptimizationData... optData) {
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,156,"// filter out simple bounds, as they are not supported"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,157,"// by the underlying optimizer, and we don't really care for this test"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,158,OptimizationData[] filtered = optData.clone();
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,159,for (int i = 0; i < filtered.length; ++i) {
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,160,if (filtered[i] instanceof SimpleBounds) {
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,161,filtered[i] = null;
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,164,return super.optimize(filtered);
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,167,JDKRandomGenerator g = new JDKRandomGenerator();
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,168,g.setSeed(16069223052l);
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,169,RandomVectorGenerator generator =
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,170,"new UncorrelatedRandomVectorGenerator(1, new GaussianRandomGenerator(g));"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,171,MultiStartMultivariateVectorOptimizer optimizer =
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,172,"new MultiStartMultivariateVectorOptimizer(underlyingOptimizer, 10, generator);"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,174,"optimizer.optimize(new MaxEval(100),"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,175,"problem.getModelFunction(),"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,176,"problem.getModelFunctionJacobian(),"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,177,"problem.getTarget(),"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,178,"new Weight(new double[] { 1 }),"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,179,"new InitialGuess(new double[] { 0 }),"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,180,"new SimpleBounds(new double[] { -1.0e-10 }, new double[] {  1.0e-10 }));"
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,181,PointVectorValuePair[] optima = optimizer.getOptima();
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,182,// only the first start should have succeeded
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,183,"Assert.assertEquals(1, optima.length);"
False,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,149, Test demonstrating that the user exception is fnally thrown if none
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,188,* Test demonstrating that the user exception is finally thrown if none
False,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,173,rivate static class TestException extends RuntimeException {}
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,212,private static class TestException extends RuntimeException {
True,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java,214,private static final long serialVersionUID = 1L;}
