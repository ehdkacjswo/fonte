is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,33, Smallest positive number such that {@code 1 - EPSILON} is not
False,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,34, numerically equal to 1.
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,33,* Largest double-precision floating-point number such that
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,34,* {@code 1 + EPSILON} is numerically equal to 1.
True,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,492,@Test
True,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,493,public void testMath843() {
True,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,494,"final double afterEpsilon = FastMath.nextAfter(Precision.EPSILON,"
True,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,495,Double.POSITIVE_INFINITY);
True,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,497,// a) 1 + EPSILON is equal to 1.
True,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,498,Assert.assertTrue(1 + Precision.EPSILON == 1);
True,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,500,"// b) 1 + ""the number after EPSILON"" is not equal to 1."
True,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,src/test/java/org/apache/commons/math3/util/PrecisionTest.java,501,Assert.assertFalse(1 + afterEpsilon == 1);
