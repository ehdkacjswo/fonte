is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,17,package org.apache.commons.math3.ml.clustering;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,19,import java.util.ArrayList;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,20,import java.util.Collection;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,21,import java.util.Collections;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,22,import java.util.List;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,24,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,25,import org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,26,import org.apache.commons.math3.linear.MatrixUtils;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,27,import org.apache.commons.math3.linear.RealMatrix;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,28,import org.apache.commons.math3.ml.distance.DistanceMeasure;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,29,import org.apache.commons.math3.ml.distance.EuclideanDistance;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,30,import org.apache.commons.math3.random.JDKRandomGenerator;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,31,import org.apache.commons.math3.random.RandomGenerator;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,32,import org.apache.commons.math3.util.FastMath;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,33,import org.apache.commons.math3.util.MathArrays;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,34,import org.apache.commons.math3.util.MathUtils;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,37,* Fuzzy K-Means algorithm.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,38,* <p>
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,39,* TODO
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,40,* <p>
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,41,* The algorithm requires two parameters:
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,42,* <ul>
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,43,* <li>k: the number of clusters
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,44,* <li>fuzzyness: ...
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,45,* </ul>
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,47,* @param <T> type of the points to cluster
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,48,* @version $Id$
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,49,* @since 4.0
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,51,public class FuzzyKMeansClusterer<T extends Clusterable> extends Clusterer<T> {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,53,/** The default value for the convergence criteria. */
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,54,private static final double DEFAULT_EPSILON = 1e-3;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,56,/** The number of clusters. */
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,57,private final int k;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,59,/** The maximum number of iterations. */
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,60,private final int maxIterations;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,62,/** The fuzzyness factor. */
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,63,private final double fuzzyness;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,65,/** The convergence criteria. */
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,66,private final double epsilon;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,68,/** Random generator for choosing initial centers. */
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,69,private final RandomGenerator random;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,71,/** The membership matrix. */
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,72,private double[][] membershipMatrix;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,74,/** The list of points used in the last call to {@link #cluster(Collection)}. */
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,75,private List<T> points;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,77,/** The list of clusters resulting from the last call to {@link #cluster(Collection)}. */
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,78,private List<CentroidCluster<T>> clusters;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,81,* Creates a new instance of a FuzzyKMeansClusterer.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,82,* <p>
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,83,* The euclidean distance will be used as default distance measure.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,85,* @param k the number of clusters to split the data into
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,86,"* @param fuzzyness the fuzzyness factor, must be &gt; 1.0"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,87,* @throws NumberIsTooSmallException if {@code fuzzyness <= 1.0}
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,89,"public FuzzyKMeansClusterer(final int k, final double fuzzyness) throws NumberIsTooSmallException {"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,90,"this(k, fuzzyness, -1, new EuclideanDistance());"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,94,* Creates a new instance of a FuzzyKMeansClusterer.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,96,* @param k the number of clusters to split the data into
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,97,"* @param fuzzyness the fuzzyness factor, must be &gt; 1.0"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,98,* @param maxIterations the maximum number of iterations to run the algorithm for.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,99,"*   If negative, no maximum will be used."
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,100,* @param measure the distance measure to use
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,101,* @throws NumberIsTooSmallException if {@code fuzzyness <= 1.0}
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,103,"public FuzzyKMeansClusterer(final int k, final double fuzzyness,"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,104,"final int maxIterations, final DistanceMeasure measure)"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,105,throws NumberIsTooSmallException {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,106,"this(k, fuzzyness, maxIterations, measure, DEFAULT_EPSILON, new JDKRandomGenerator());"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,110,* Creates a new instance of a FuzzyKMeansClusterer.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,112,* @param k the number of clusters to split the data into
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,113,"* @param fuzzyness the fuzzyness factor, must be &gt; 1.0"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,114,* @param maxIterations the maximum number of iterations to run the algorithm for.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,115,"*   If negative, no maximum will be used."
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,116,* @param measure the distance measure to use
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,117,* @param epsilon the convergence criteria
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,118,* @param random random generator to use for choosing initial centers
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,119,* @throws NumberIsTooSmallException if {@code fuzzyness <= 1.0}
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,121,"public FuzzyKMeansClusterer(final int k, final double fuzzyness,"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,122,"final int maxIterations, final DistanceMeasure measure,"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,123,"final double epsilon, final RandomGenerator random)"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,124,throws NumberIsTooSmallException {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,126,super(measure);
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,128,if (fuzzyness <= 1.0d) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,129,"throw new NumberIsTooSmallException(fuzzyness, 1.0, false);"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,131,this.k = k;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,132,this.fuzzyness = fuzzyness;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,133,this.maxIterations = maxIterations;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,134,this.epsilon = epsilon;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,135,this.random = random;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,137,this.membershipMatrix = null;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,138,this.points = null;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,139,this.clusters = null;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,143,* Return the number of clusters this instance will use.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,144,* @return the number of clusters
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,146,public int getK() {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,147,return k;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,151,* Returns the fuzzyness factor used by this instance.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,152,* @return the fuzzyness factor
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,154,public double getFuzzyness() {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,155,return fuzzyness;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,159,* Returns the maximum number of iterations this instance will use.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,160,"* @return the maximum number of iterations, or -1 if no maximum is set"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,162,public int getMaxIterations() {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,163,return maxIterations;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,167,* Returns the random generator this instance will use.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,168,* @return the random generator
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,170,public RandomGenerator getRandomGenerator() {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,171,return random;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,175,"* Returns the {@code nxk} membership matrix, where {@code n} is the number"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,176,* of data points and {@code k} the number of clusters.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,177,* <p>
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,178,"* The element U<sub>i,j</sub> represents the membership value for data point {@code i}"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,179,* to cluster {@code j}.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,181,* @return the membership matrix
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,183,public RealMatrix getMembershipMatrix() {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,184,return MatrixUtils.createRealMatrix(membershipMatrix);
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,188,* Returns an unmodifiable list of the data points used in the last
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,189,* call to {@link #cluster(Collection)}.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,190,"* @return the list of data points, or {@code null} if {@link #cluster(Collection)} has"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,191,*   not been called before.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,193,public List<T> getDataPoints() {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,194,return points;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,198,* Returns the list of clusters resulting from the last call to {@link #cluster(Collection)}.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,199,"* @return the list of clusters, or {@code null} if {@link #cluster(Collection)} has"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,200,*   not been called before.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,202,public List<CentroidCluster<T>> getClusters() {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,203,return clusters;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,207,* Get the value of the objective function.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,208,"* @return the objective function as double value, or {@code 0.0} if {@link #cluster(Collection)}"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,209,*   has not been called before.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,211,public double getObjectiveFunctionValue() {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,212,if (points == null || clusters == null) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,213,return 0;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,216,int i = 0;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,217,double objFunction = 0.0;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,218,for (final T point : points) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,219,int j = 0;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,220,for (final CentroidCluster<T> cluster : clusters) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,221,"double dist = distance(point, cluster.getCenter());"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,222,"objFunction += (dist * dist) * FastMath.pow(membershipMatrix[i][j], fuzzyness);"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,223,j++;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,225,i++;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,227,return objFunction;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,231,* Performs Fuzzy K-Means cluster analysis.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,233,* @param dataPoints the points to cluster
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,234,* @return the list of clusters
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,235,* @throws MathIllegalArgumentException if the data points are null or the number
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,236,*     of clusters is larger than the number of data points
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,238,public List<CentroidCluster<T>> cluster(final Collection<T> dataPoints)
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,239,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,241,// sanity checks
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,242,MathUtils.checkNotNull(dataPoints);
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,244,final int size = dataPoints.size();
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,246,// number of clusters has to be smaller or equal the number of data points
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,247,if (size < k) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,248,"throw new NumberIsTooSmallException(size, k, false);"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,251,// copy the input collection to an unmodifiable list with indexed access
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,252,points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,253,clusters = new ArrayList<CentroidCluster<T>>();
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,254,membershipMatrix = new double[size][k];
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,255,final double[][] oldMatrix = new double[size][k];
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,257,"// if no points are provided, return an empty list of clusters"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,258,if (size == 0) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,259,return clusters;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,262,initializeMembershipMatrix();
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,264,// there is at least one point
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,265,final int pointDimension = points.get(0).getPoint().length;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,266,for (int i = 0; i < k; i++) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,267,clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,270,int iteration = 0;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,271,final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,272,double difference = 0.0;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,274,do {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,275,saveMembershipMatrix(oldMatrix);
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,276,updateClusterCenters();
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,277,updateMembershipMatrix();
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,278,difference = calculateMaxMembershipChange(oldMatrix);
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,279,} while (difference > epsilon && ++iteration < max);
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,281,return clusters;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,285,* Update the cluster centers.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,287,private void updateClusterCenters() {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,288,int j = 0;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,289,final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,290,for (final CentroidCluster<T> cluster : clusters) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,291,final Clusterable center = cluster.getCenter();
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,292,int i = 0;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,293,double[] arr = new double[center.getPoint().length];
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,294,double sum = 0.0;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,295,for (final T point : points) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,296,"final double u = FastMath.pow(membershipMatrix[i][j], fuzzyness);"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,297,final double[] pointArr = point.getPoint();
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,298,for (int idx = 0; idx < arr.length; idx++) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,299,arr[idx] += u * pointArr[idx];
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,301,sum += u;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,302,i++;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,304,"MathArrays.scaleInPlace(1.0 / sum, arr);"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,305,newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,306,j++;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,308,clusters.clear();
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,309,clusters = newClusters;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,313,* Updates the membership matrix and assigns the points to the cluster with
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,314,* the highest membership.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,316,private void updateMembershipMatrix() {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,317,for (int i = 0; i < points.size(); i++) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,318,final T point = points.get(i);
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,319,double maxMembership = 0.0;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,320,int newCluster = -1;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,321,for (int j = 0; j < clusters.size(); j++) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,322,double sum = 0.0;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,323,"final double distA = FastMath.abs(distance(point, clusters.get(j).getCenter()));"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,325,for (final CentroidCluster<T> c : clusters) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,326,"final double distB = FastMath.abs(distance(point, c.getCenter()));"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,327,"sum += FastMath.pow(distA / distB, 2.0 / (fuzzyness - 1.0));"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,330,membershipMatrix[i][j] = 1.0 / sum;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,332,if (membershipMatrix[i][j] > maxMembership) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,333,maxMembership = membershipMatrix[i][j];
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,334,newCluster = j;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,337,clusters.get(newCluster).addPoint(point);
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,342,* Initialize the membership matrix with random values.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,344,private void initializeMembershipMatrix() {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,345,for (int i = 0; i < points.size(); i++) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,346,for (int j = 0; j < k; j++) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,347,membershipMatrix[i][j] = random.nextDouble();
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,349,"membershipMatrix[i] = MathArrays.normalizeArray(membershipMatrix[i], 1.0);"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,354,* Calculate the maximum element-by-element change of the membership matrix
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,355,* for the current iteration.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,357,* @param matrix the membership matrix of the previous iteration
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,358,* @return the maximum membership matrix change
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,360,private double calculateMaxMembershipChange(final double[][] matrix) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,361,double maxMembership = 0.0;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,362,for (int i = 0; i < points.size(); i++) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,363,for (int j = 0; j < clusters.size(); j++) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,364,double v = FastMath.abs(membershipMatrix[i][j] - matrix[i][j]);
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,365,"maxMembership = FastMath.max(v, maxMembership);"
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,368,return maxMembership;
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,372,* Copy the membership matrix into the provided matrix.
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,374,* @param matrix the place to store the membership matrix
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,376,private void saveMembershipMatrix(final double[][] matrix) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,377,for (int i = 0; i < points.size(); i++) {
True,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java,378,"System.arraycopy(membershipMatrix[i], 0, matrix[i], 0, clusters.size());"
