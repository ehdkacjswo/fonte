is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,38, Compose functions.  The functions in the argument list are composed
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,39," sequentially, in the order given.  For example, compose(f1,f2,f3)"
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,40, acts like f1(f2(f3(x))).
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,38,* Composew functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,39,* <br/>
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,40,"* The functions in the argument list are composed sequentially, in the"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,41,"* given order.  For example, compose(f1,f2,f3) acts like f1(f2(f3(x)))."
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,59, Compose functions.  The functions in the argument list are composed
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,60," sequentially, in the order given.  For example, compose(f1,f2,f3)"
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,61, acts like f1(f2(f3(x))).
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,60,* Composes functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,61,* <br/>
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,62,"* The functions in the argument list are composed sequentially, in the"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,63,"* given order.  For example, compose(f1,f2,f3) acts like f1(f2(f3(x)))."
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,96, Add functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,98,* Adds functions.
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,115, Add functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,117,* Adds functions.
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,148, Multiply functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,150,* Multiplies functions.
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,167, Multiply functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,169,* Multiplies functions.
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,215,"inal UnivariateFunction f,"
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,216,inal UnivariateFunction g) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,217,"final UnivariateFunction f,"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,218,final UnivariateFunction g) {
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,236,"inal UnivariateFunction f,"
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,237,inal double initialValue) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,238,"final UnivariateFunction f,"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,239,final double initialValue) {
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,260,inal double initialValue) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,262,final double initialValue) {
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,265, Create a unary function by fixing the first argument of a binary function.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,267,* Creates a unary function by fixing the first argument of a binary function.
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,272,inal double fixed) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,274,final double fixed) {
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,281, Create a unary function by fixing the second argument of a binary function.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,283,* Creates a unary function by fixing the second argument of a binary function.
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,288,inal double fixed) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,290,final double fixed) {
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,298, <p>
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,300, </p>
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,301, <p>
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,301,* <br/>
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,305, </p>
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,307, @param f the function to be sampled
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,308, @param min the (inclusive) lower bound of the interval
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,309, @param max the (exclusive) upper bound of the interval
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,310, @param n the number of sample points
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,311, @return the array of samples
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,306,* @param f Function to be sampled
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,307,* @param min Lower bound of the interval (included).
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,308,* @param max Upper bound of the interval (excluded).
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,309,* @param n Number of sample points.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,310,* @return the array of samples.
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,313," greater than, or equal to the upper bound {@code max}"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,312,"* greater than, or equal to the upper bound {@code max}."
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,315, {@code n} is negative
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,314,* {@code n} is negative.
