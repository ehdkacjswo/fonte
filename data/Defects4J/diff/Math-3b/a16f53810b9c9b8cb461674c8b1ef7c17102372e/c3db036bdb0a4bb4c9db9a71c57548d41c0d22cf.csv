is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,43,"uper(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, wrong, expected);"
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,43,"super(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,44,"LocalizedFormats.DIMENSIONS_MISMATCH,"
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,45,"wrong, expected);"
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,17,package org.apache.commons.math.exception;
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,19,import org.apache.commons.math.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,22,* Exception to be thrown when either the number of rows or the number of
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,23,* columns of a matrix do not match the expected values.
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,25,* @since 3.0
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,28,public class MatrixDimensionMismatchException extends MultiDimensionMismatchException {
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,29,/** Serializable version Id. */
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,30,private static final long serialVersionUID = -8415396756375798143L;
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,33,* Construct an exception from the mismatched dimensions.
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,35,* @param wrongRowDim Wrong row dimension.
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,36,* @param wrongColDim Wrong column dimension.
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,37,* @param expectedRowDim Expected row dimension.
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,38,* @param expectedColDim Expected column dimension.
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,40,"public MatrixDimensionMismatchException(int wrongRowDim,"
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,41,"int wrongColDim,"
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,42,"int expectedRowDim,"
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,43,int expectedColDim) {
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,44,"super(LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,45,"new Integer[] { wrongRowDim, wrongColDim },"
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,46,"new Integer[] { expectedRowDim, expectedColDim });"
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,50,* @return the expected row dimension.
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,52,public int getWrongRowDimension() {
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,53,return getWrongDimensions()[0];
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,56,* @return the expected row dimension.
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,58,public int getExpectedRowDimension() {
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,59,return getExpectedDimensions()[0];
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,62,* @return the wrong column dimension.
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,64,public int getWrongColumnDimension() {
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,65,return getWrongDimensions()[1];
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,68,* @return the expected column dimension.
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,70,public int getExpectedColumnDimension() {
True,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MatrixDimensionMismatchException.java,71,return getExpectedDimensions()[1];
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,17,package org.apache.commons.math.exception;
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,19,import org.apache.commons.math.exception.util.Localizable;
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,20,import org.apache.commons.math.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,23,* Exception to be thrown when two sets of dimensions differ.
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,25,* @since 3.0
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,28,public class MultiDimensionMismatchException extends MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,29,/** Serializable version Id. */
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,30,private static final long serialVersionUID = -8415396756375798143L;
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,32,/** Wrong dimensions. */
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,33,private final Integer[] wrong;
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,34,/** Correct dimensions. */
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,35,private final Integer[] expected;
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,38,* Construct an exception from the mismatched dimensions.
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,40,* @param wrong Wrong dimensionq.
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,41,* @param expected Expected dimensionq.
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,43,"public MultiDimensionMismatchException(Integer[] wrong,"
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,44,Integer[] expected) {
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,45,"this(null, wrong, expected);"
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,49,* Construct an exception from the mismatched dimensions.
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,51,* @param specific Message pattern providing the specific context of
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,52,* the error.
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,53,* @param wrong Wrong dimensions.
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,54,* @param expected Expected dimensions.
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,56,"public MultiDimensionMismatchException(Localizable specific,"
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,57,"Integer[] wrong,"
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,58,Integer[] expected) {
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,59,"super(specific, LocalizedFormats.DIMENSIONS_MISMATCH, wrong, expected);"
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,60,this.wrong = wrong.clone();
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,61,this.expected = expected.clone();
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,65,* @return a reference to the array containing the wrong dimensions.
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,67,public Integer[] getWrongDimensions() {
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,68,return wrong;
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,71,* @return a reference to the array containing the expected dimensions.
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,73,public Integer[] getExpectedDimensions() {
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,74,return expected;
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,82,"IMENSIONS_MISMATCH_2x2(""dimensions mismatch: got {0}x{1} but expected {2}x{3}""),"
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,83,"IMENSIONS_MISMATCH_SIMPLE(""dimensions mismatch {0} != {1}""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,82,"DIMENSIONS_MISMATCH_2x2(""got {0}x{1} but expected {2}x{3}""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,83,"DIMENSIONS_MISMATCH_SIMPLE(""{0} != {1}""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,84,"DIMENSIONS_MISMATCH(""dimensions mismatch""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,66,"fmt = new MessageFormat(general.getLocalizedString(locale), locale);"
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,67,sb.append(fmt.format(arguments));
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,69,"sb.append("": "");"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,69,"b.append("": "");"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,71,"mt = new MessageFormat(general.getLocalizedString(locale), locale);"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,72,b.append(fmt.format(arguments));
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,26,import org.apache.commons.math.exception.MatrixDimensionMismatchException;
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,448,"ublic void setRowMatrix(final int row, final FieldMatrix<T> matrix)"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,449,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,449,"public void setRowMatrix(final int row, final FieldMatrix<T> matrix) {"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,455,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,456,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,457,"atrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,454,"throw new MatrixDimensionMismatchException(matrix.getRowDimension(),"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,455,"matrix.getColumnDimension(),"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,456,"1, nCols);"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,481,"ublic void setColumnMatrix(final int column, final FieldMatrix<T> matrix)"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,482,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,480,"public void setColumnMatrix(final int column, final FieldMatrix<T> matrix) {"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,488,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,489,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,490,"atrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,485,"throw new MatrixDimensionMismatchException(matrix.getRowDimension(),"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,486,"matrix.getColumnDimension(),"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,487,"nRows, 1);"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,505,"ublic void setRowVector(final int row, final FieldVector<T> vector)"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,506,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,502,"public void setRowVector(final int row, final FieldVector<T> vector) {"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,511,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,512,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,513,", vector.getDimension(), 1, nCols);"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,506,"throw new MatrixDimensionMismatchException(1, vector.getDimension(),"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,507,"1, nCols);"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,528,"ublic void setColumnVector(final int column, final FieldVector<T> vector)"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,529,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,522,"public void setColumnVector(final int column, final FieldVector<T> vector) {"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,534,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,535,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,536,"ector.getDimension(), 1, nRows, 1);"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,526,"throw new MatrixDimensionMismatchException(vector.getDimension(), 1,"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,527,"nRows, 1);"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,560,"ublic void setRow(final int row, final T[] array)"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,561,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,551,"public void setRow(final int row, final T[] array) {"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,566,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,567,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,568,", array.length, 1, nCols);"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,555,"throw new MatrixDimensionMismatchException(1, array.length, 1, nCols);"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,592,"ublic void setColumn(final int column, final T[] array)"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,593,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,579,"public void setColumn(final int column, final T[] array) {"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,598,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,599,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,600,"rray.length, 1, nRows, 1);"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,583,"throw new MatrixDimensionMismatchException(array.length, 1, nRows, 1);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,20,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,20,import org.apache.commons.math.exception.NoDataException;
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,21,import org.apache.commons.math.exception.NotStrictlyPositiveException;
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,22,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,23,import org.apache.commons.math.exception.MatrixDimensionMismatchException;
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,54, @throws IllegalArgumentException if row or column dimension is not positive
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,57,* @throws NotStrictlyPositiveException if row or column dimension is not positive
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,56,"rotected AbstractRealMatrix(final int rowDimension, final int columnDimension)"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,57,hrows IllegalArgumentException {
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,58,f (rowDimension < 1 ) {
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,59,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,60,"ocalizedFormats.INSUFFICIENT_DIMENSION, rowDimension, 1);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,59,"protected AbstractRealMatrix(final int rowDimension, final int columnDimension) {"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,60,if (rowDimension < 1) {
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,61,throw new NotStrictlyPositiveException(rowDimension);
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,62,f (columnDimension <= 0) {
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,63,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,64,"ocalizedFormats.INSUFFICIENT_DIMENSION, columnDimension, 1);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,63,if (columnDimension < 1) {
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,64,throw new NotStrictlyPositiveException(columnDimension);
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,313,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,314,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,315,"estination.length, destination[0].length,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,316,"owsCount, columnsCount);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,303,"throw new MatrixDimensionMismatchException(destination.length, destination[0].length,"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,304,"rowsCount, columnsCount);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,348,"ublic void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination)"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,349,"hrows MatrixIndexException, IllegalArgumentException {"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,335,"public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) {"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,355,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,356,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,357,"estination.length, destination[0].length,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,358,"electedRows.length, selectedColumns.length);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,341,"throw new MatrixDimensionMismatchException(destination.length, destination[0].length,"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,342,"selectedRows.length, selectedColumns.length);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,377,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_ROW);
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,360,throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,382,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,365,throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,387,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,388,"ocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,389,"Cols, subMatrix[r].length);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,370,"throw new DimensionMismatchException(nCols, subMatrix[r].length);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,424,"ublic void setRowMatrix(final int row, final RealMatrix matrix)"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,425,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,403,"public void setRowMatrix(final int row, final RealMatrix matrix) {"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,431,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,432,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,433,"atrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,408,"throw new MatrixDimensionMismatchException(matrix.getRowDimension(),"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,409,"matrix.getColumnDimension(),"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,410,"1, nCols);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,457,"ublic void setColumnMatrix(final int column, final RealMatrix matrix)"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,458,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,432,"public void setColumnMatrix(final int column, final RealMatrix matrix) {"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,464,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,465,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,466,"atrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,437,"throw new MatrixDimensionMismatchException(matrix.getRowDimension(),"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,438,"matrix.getColumnDimension(),"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,439,"nRows, 1);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,481,"ublic void setRowVector(final int row, final RealVector vector)"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,482,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,453,"public void setRowVector(final int row, final RealVector vector) {"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,487,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,488,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,489,", vector.getDimension(), 1, nCols);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,457,"throw new MatrixDimensionMismatchException(1, vector.getDimension(),"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,458,"1, nCols);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,504,"ublic void setColumnVector(final int column, final RealVector vector)"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,505,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,472,"public void setColumnVector(final int column, final RealVector vector) {"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,510,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,511,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,512,"ector.getDimension(), 1, nRows, 1);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,476,"throw new MatrixDimensionMismatchException(vector.getDimension(), 1,"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,477,"nRows, 1);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,536,"ublic void setRow(final int row, final double[] array)"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,537,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,499,"public void setRow(final int row, final double[] array) {"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,542,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,543,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,544,", array.length, 1, nCols);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,503,"throw new MatrixDimensionMismatchException(1, array.length, 1, nCols);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,568,"ublic void setColumn(final int column, final double[] array)"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,569,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,525,"public void setColumn(final int column, final double[] array) {"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,574,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,575,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,576,"rray.length, 1, nRows, 1);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,529,"throw new MatrixDimensionMismatchException(array.length, 1, nRows, 1);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,679,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,680,"ocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,681,".length, nCols);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,630,"throw new DimensionMismatchException(v.length, nCols);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,706,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,707,"ocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,708,".getDimension(), nCols);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,654,"throw new DimensionMismatchException(v.getDimension(), nCols);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,731,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,732,"ocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,733,".length, nRows);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,677,"throw new DimensionMismatchException(v.length, nRows);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,759,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,760,"ocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,761,".getDimension(), nRows);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,702,"throw new DimensionMismatchException(v.getDimension(), nRows);"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,24,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,24,import org.apache.commons.math.exception.NoDataException;
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,25,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,26,import org.apache.commons.math.exception.MatrixDimensionMismatchException;
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,174,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,175,"ocalizedFormats.WRONG_BLOCK_LENGTH,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,176,"lockData[index].length, iHeight * blockWidth(jBlock));"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,176,"throw new DimensionMismatchException(blockData[index].length,"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,177,iHeight * blockWidth(jBlock));
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,222,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,223,"ocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,224,"olumns, length);"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,223,"throw new DimensionMismatchException(columns, length);"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,813,f (refLength < 1) {
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,814,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,812,if (refLength == 0) {
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,813,throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,821,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,822,"ocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,823,"efLength, subRow.length);"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,820,"throw new DimensionMismatchException(refLength, subRow.length);"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,894,"ublic void setRowMatrix(final int row, final FieldMatrix<T> matrix)"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,895,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,891,"public void setRowMatrix(final int row, final FieldMatrix<T> matrix) {"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,911, @throws InvalidMatrixException if the matrix dimensions do not match one
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,907,* @throws MatrixDimensionMismatchException if the matrix dimensions do not match one
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,914,"ublic void setRowMatrix(final int row, final BlockFieldMatrix<T> matrix)"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,915,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,910,"public void setRowMatrix(final int row, final BlockFieldMatrix<T> matrix) {"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,921,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,922,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,923,"atrix.getRowDimension(), matrix.getColumnDimension(),"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,924,", nCols);"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,915,"throw new MatrixDimensionMismatchException(matrix.getRowDimension(),"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,916,"matrix.getColumnDimension(),"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,917,"1, nCols);"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,983,"ublic void setColumnMatrix(final int column, final FieldMatrix<T> matrix)"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,984,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,976,"public void setColumnMatrix(final int column, final FieldMatrix<T> matrix) {"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1000, @throws InvalidMatrixException if the matrix dimensions do not match one
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,992,* @throws MatrixDimensionMismatchException if the matrix dimensions do not match one
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1003,"oid setColumnMatrix(final int column, final BlockFieldMatrix<T> matrix)"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1004,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,995,"void setColumnMatrix(final int column, final BlockFieldMatrix<T> matrix) {"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1010,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1011,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1012,"atrix.getRowDimension(), matrix.getColumnDimension(),"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1013,"Rows, 1);"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1000,"throw new MatrixDimensionMismatchException(matrix.getRowDimension(),"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1001,"matrix.getColumnDimension(),"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1002,"nRows, 1);"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1062,"ublic void setRowVector(final int row, final FieldVector<T> vector)"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1063,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1050,"public void setRowVector(final int row, final FieldVector<T> vector) {"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1098,"ublic void setColumnVector(final int column, final FieldVector<T> vector)"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1099,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1085,"public void setColumnVector(final int column, final FieldVector<T> vector) {"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1132,"ublic void setRow(final int row, final T[] array)"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1133,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1118,"public void setRow(final int row, final T[] array) {"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1138,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1139,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1140,", array.length, 1, nCols);"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1122,"throw new MatrixDimensionMismatchException(1, array.length, 1, nCols);"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1183,"ublic void setColumn(final int column, final T[] array)"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1184,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1163,"public void setColumn(final int column, final T[] array) {"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1189,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1190,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1191,"rray.length, 1, nRows, 1);"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1167,"throw new MatrixDimensionMismatchException(array.length, 1, nRows, 1);"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1338,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1339,"ocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1340,".length, columns);"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1312,"throw new DimensionMismatchException(v.length, columns);"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1384,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1385,"ocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1386,".length, rows);"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1355,"throw new DimensionMismatchException(v.length, rows);"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,23,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,23,import org.apache.commons.math.exception.MatrixDimensionMismatchException;
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,24,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,25,import org.apache.commons.math.exception.NoDataException;
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,171,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,172,"ocalizedFormats.WRONG_BLOCK_LENGTH,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,173,"lockData[index].length, iHeight * blockWidth(jBlock));"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,173,"throw new DimensionMismatchException(blockData[index].length,"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,174,iHeight * blockWidth(jBlock));
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,217,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,218,"ocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,219,"olumns, length);"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,217,"throw new DimensionMismatchException(columns, length);"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,839,f (refLength < 1) {
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,840,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,824,if (refLength == 0) {
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,825,throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,847,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,848,"ocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,849,"efLength, subRow.length);"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,832,"throw new DimensionMismatchException(refLength, subRow.length);"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,920,"ublic void setRowMatrix(final int row, final RealMatrix matrix)"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,921,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,902,"public void setRowMatrix(final int row, final RealMatrix matrix) {"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,937, @throws InvalidMatrixException if the matrix dimensions do not match one
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,918,* @throws MatrixDimensionMismatchException if the matrix dimensions do not match one
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,940,"ublic void setRowMatrix(final int row, final BlockRealMatrix matrix)"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,941,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,921,"public void setRowMatrix(final int row, final BlockRealMatrix matrix) {"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,947,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,948,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,949,"atrix.getRowDimension(), matrix.getColumnDimension(),"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,950,", nCols);"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,926,"throw new MatrixDimensionMismatchException(matrix.getRowDimension(),"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,927,"matrix.getColumnDimension(),"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,928,"1, nCols);"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1009,"ublic void setColumnMatrix(final int column, final RealMatrix matrix)"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1010,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,985,"public void setColumnMatrix(final int column, final RealMatrix matrix) {"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1026, @throws InvalidMatrixException if the matrix dimensions do not match one
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1001,* @throws MatrixDimensionMismatchException if the matrix dimensions do not match one
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1029,"oid setColumnMatrix(final int column, final BlockRealMatrix matrix)"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1030,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1004,"void setColumnMatrix(final int column, final BlockRealMatrix matrix) {"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1036,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1037,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1038,"atrix.getRowDimension(), matrix.getColumnDimension(),"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1039,"Rows, 1);"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1009,"throw new MatrixDimensionMismatchException(matrix.getRowDimension(),"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1010,"matrix.getColumnDimension(),"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1011,"nRows, 1);"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1088,"ublic void setRowVector(final int row, final RealVector vector)"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1089,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1058,"public void setRowVector(final int row, final RealVector vector) {"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1124,"ublic void setColumnVector(final int column, final RealVector vector)"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1125,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1092,"public void setColumnVector(final int column, final RealVector vector) {"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1158,"ublic void setRow(final int row, final double[] array)"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1159,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1124,"public void setRow(final int row, final double[] array) {"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1164,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1165,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1166,", array.length, 1, nCols);"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1128,"throw new MatrixDimensionMismatchException(1, array.length, 1, nCols);"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1209,"ublic void setColumn(final int column, final double[] array)"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1210,"hrows MatrixIndexException, InvalidMatrixException {"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1169,"public void setColumn(final int column, final double[] array) {"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1215,hrow new InvalidMatrixException(
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1216,"ocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1217,"rray.length, 1, nRows, 1);"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1173,"throw new MatrixDimensionMismatchException(array.length, 1, nRows, 1);"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1362,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1363,"ocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1364,".length, columns);"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1316,"throw new DimensionMismatchException(v.length, columns);"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1406,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1407,"ocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1408,".length, rows);"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1357,"throw new DimensionMismatchException(v.length, rows);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,67,ieldMatrix<T> add(FieldMatrix<T> m) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,67,FieldMatrix<T> add(FieldMatrix<T> m);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,76,ieldMatrix<T> subtract(FieldMatrix<T> m) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,76,FieldMatrix<T> subtract(FieldMatrix<T> m);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,102,ieldMatrix<T> multiply(FieldMatrix<T> m) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,102,FieldMatrix<T> multiply(FieldMatrix<T> m);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,111,ieldMatrix<T> preMultiply(FieldMatrix<T> m) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,111,FieldMatrix<T> preMultiply(FieldMatrix<T> m);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,132,"ieldMatrix<T> getSubMatrix(int startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,133,hrows MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,132,"FieldMatrix<T> getSubMatrix(int startRow, int endRow, int startColumn, int endColumn);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,145,"ieldMatrix<T> getSubMatrix(int[] selectedRows, int[] selectedColumns)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,146,hrows MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,144,"FieldMatrix<T> getSubMatrix(int[] selectedRows, int[] selectedColumns);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,162,[][] destination)
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,163,"hrows MatrixIndexException, IllegalArgumentException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,160,T[][] destination);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,176,"oid copySubMatrix(int[] selectedRows, int[] selectedColumns, T[][] destination)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,177,"hrows MatrixIndexException, IllegalArgumentException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,173,"void copySubMatrix(int[] selectedRows, int[] selectedColumns, T[][] destination);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,206,"oid setSubMatrix(T[][] subMatrix, int row, int column)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,207,hrows MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,202,"void setSubMatrix(T[][] subMatrix, int row, int column);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,217,ieldMatrix<T> getRowMatrix(int row) throws MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,212,FieldMatrix<T> getRowMatrix(int row);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,227, @throws InvalidMatrixException if the matrix dimensions do not match one
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,228, instance row
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,222,* @throws org.apache.commons.math.exception.MatrixDimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,223,* if the matrix dimensions do not match one instance row.
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,230,"oid setRowMatrix(int row, FieldMatrix<T> matrix)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,231,"hrows MatrixIndexException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,225,"void setRowMatrix(int row, FieldMatrix<T> matrix);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,241,ieldMatrix<T> getColumnMatrix(int column) throws MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,235,FieldMatrix<T> getColumnMatrix(int column);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,251, @throws InvalidMatrixException if the matrix dimensions do not match one
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,252, instance column
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,245,* @throws org.apache.commons.math.exception.MatrixDimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,246,* if the matrix dimensions do not match one instance column.
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,254,"oid setColumnMatrix(int column, FieldMatrix<T> matrix)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,255,"hrows MatrixIndexException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,248,"void setColumnMatrix(int column, FieldMatrix<T> matrix);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,265,ieldVector<T> getRowVector(int row) throws MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,258,FieldVector<T> getRowVector(int row);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,275, @throws InvalidMatrixException if the vector dimension does not match one
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,276, instance row
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,268,* @throws org.apache.commons.math.exception.MatrixDimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,269,* if the vector dimension does not match one instance row.
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,278,"oid setRowVector(int row, FieldVector<T> vector)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,279,"hrows MatrixIndexException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,271,"void setRowVector(int row, FieldVector<T> vector);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,289,ieldVector<T> getColumnVector(int column) throws MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,281,FieldVector<T> getColumnVector(int column);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,298, @throws InvalidMatrixException if the vector dimension does not match one
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,299, instance column
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,290,* @throws org.apache.commons.math.exception.MatrixDimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,291,* if the vector dimension does not match one instance column.
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,301,"oid setColumnVector(int column, FieldVector<T> vector)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,302,"hrows MatrixIndexException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,293,"void setColumnVector(int column, FieldVector<T> vector);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,308, unless <code>0 <= row < rowDimension.</code></p>
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,299,* unless {@code 0 <= row < rowDimension}.</p>
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,314,[] getRow(int row) throws MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,305,T[] getRow(int row);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,323, @throws InvalidMatrixException if the array size does not match one
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,324, instance row
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,314,* @throws org.apache.commons.math.exception.MatrixDimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,315,* if the array size does not match one instance row.
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,326,"oid setRow(int row, T[] array)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,327,"hrows MatrixIndexException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,317,"void setRow(int row, T[] array);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,333, unless <code>0 <= column < columnDimension.</code></p>
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,323,* unless {@code 0 <= column < columnDimension}.</p>
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,339,[] getColumn(int column) throws MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,329,T[] getColumn(int column);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,348, @throws InvalidMatrixException if the array size does not match one
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,349, instance column
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,338,* @throws org.apache.commons.math.exception.MatrixDimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,339,* if the array size does not match one instance column.
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,351,"oid setColumn(int column, T[] array)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,352,"hrows MatrixIndexException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,341,"void setColumn(int column, T[] array);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,359, <li><code>0 <= row < rowDimension</code></li>
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,360, <li><code> 0 <= column < columnDimension</code></li>
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,348,* <li>{@code 0 <= row < rowDimension}</li>
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,349,* <li>{@code 0 <= column < columnDimension}</li>
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,369," getEntry(int row, int column) throws MatrixIndexException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,358,"T getEntry(int row, int column);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,376, <li><code>0 <= row < rowDimension</code></li>
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,377, <li><code> 0 <= column < columnDimension</code></li>
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,365,* <li>{@code 0 <= row < rowDimension}</li>
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,366,* <li>{@code 0 <= column < columnDimension}</li>
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,387,"oid setEntry(int row, int column, T value) throws MatrixIndexException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,376,"void setEntry(int row, int column, T value);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,394, <li><code>0 <= row < rowDimension</code></li>
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,395, <li><code> 0 <= column < columnDimension</code></li>
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,383,* <li>{@code 0 <= row < rowDimension}</li>
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,384,* <li>{@code 0 <= column < columnDimension}</li>
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,412, <li><code>0 <= row < rowDimension</code></li>
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,413, <li><code> 0 <= column < columnDimension</code></li>
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,401,* <li>{@code 0 <= row < rowDimension}</li>
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,402,* <li>{@code 0 <= column < columnDimension}</li>
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,423,"oid multiplyEntry(int row, int column, T factor) throws MatrixIndexException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,412,"void multiplyEntry(int row, int column, T factor);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,439, getTrace() throws NonSquareMatrixException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,428,T getTrace();
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,448,[] operate(T[] v) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,437,T[] operate(T[] v);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,457,ieldVector<T> operate(FieldVector<T> v) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,446,FieldVector<T> operate(FieldVector<T> v);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,466,[] preMultiply(T[] v) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,455,T[] preMultiply(T[] v);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,475,ieldVector<T> preMultiply(FieldVector<T> v) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,464,FieldVector<T> preMultiply(FieldVector<T> v);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,498, walkInRowOrder(FieldMatrixChangingVisitor<T> visitor)
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,499,hrows MatrixVisitorException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,487,T walkInRowOrder(FieldMatrixChangingVisitor<T> visitor);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,522, walkInRowOrder(FieldMatrixPreservingVisitor<T> visitor)
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,523,hrows MatrixVisitorException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,510,T walkInRowOrder(FieldMatrixPreservingVisitor<T> visitor);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,552,"nt startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,553,"hrows MatrixIndexException, MatrixVisitorException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,539,"int startRow, int endRow, int startColumn, int endColumn);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,582,"nt startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,583,"hrows MatrixIndexException, MatrixVisitorException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,568,"int startRow, int endRow, int startColumn, int endColumn);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,606, walkInColumnOrder(FieldMatrixChangingVisitor<T> visitor)
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,607,hrows MatrixVisitorException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,591,T walkInColumnOrder(FieldMatrixChangingVisitor<T> visitor);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,630, walkInColumnOrder(FieldMatrixPreservingVisitor<T> visitor)
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,631,hrows MatrixVisitorException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,614,T walkInColumnOrder(FieldMatrixPreservingVisitor<T> visitor);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,660,"nt startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,661,"hrows MatrixIndexException, MatrixVisitorException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,643,"int startRow, int endRow, int startColumn, int endColumn);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,690,"nt startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,691,"hrows MatrixIndexException, MatrixVisitorException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,672,"int startRow, int endRow, int startColumn, int endColumn);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,713, walkInOptimizedOrder(FieldMatrixChangingVisitor<T> visitor)
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,714,hrows MatrixVisitorException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,694,T walkInOptimizedOrder(FieldMatrixChangingVisitor<T> visitor);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,736, walkInOptimizedOrder(FieldMatrixPreservingVisitor<T> visitor)
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,737,hrows MatrixVisitorException;
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,716,T walkInOptimizedOrder(FieldMatrixPreservingVisitor<T> visitor);
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,765,"nt startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,766,"hrows MatrixIndexException, MatrixVisitorException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,744,"int startRow, int endRow, int startColumn, int endColumn);"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,794,"nt startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,795,"hrows MatrixIndexException, MatrixVisitorException;"
True,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,src/main/java/org/apache/commons/math/linear/FieldMatrix.java,772,"int startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,29,* @deprecated since 2.2. Please use the classes in the
True,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,30,* {@link org.apache.commons.math.exception} package.
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,38, @throws IllegalArgumentException if row or column dimension is not positive
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,38,* @throws org.apache.commons.math.exception.NotStrictlyPositiveException
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,39,* if row or column dimension is not positive.
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,57,ealMatrix add(RealMatrix m) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,58,RealMatrix add(RealMatrix m);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,66,ealMatrix subtract(RealMatrix m) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,67,RealMatrix subtract(RealMatrix m);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,92,ealMatrix multiply(RealMatrix m) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,93,RealMatrix multiply(RealMatrix m);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,101,ealMatrix preMultiply(RealMatrix m) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,102,RealMatrix preMultiply(RealMatrix m);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,138,"ealMatrix getSubMatrix(int startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,139,hrows MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,139,"RealMatrix getSubMatrix(int startRow, int endRow, int startColumn, int endColumn);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,151,"ealMatrix getSubMatrix(int[] selectedRows, int[] selectedColumns)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,152,hrows MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,151,"RealMatrix getSubMatrix(int[] selectedRows, int[] selectedColumns);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,168,ouble[][] destination)
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,169,"hrows MatrixIndexException, IllegalArgumentException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,167,double[][] destination);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,182,"oid copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,183,"hrows MatrixIndexException, IllegalArgumentException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,179,"void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,212,"oid setSubMatrix(double[][] subMatrix, int row, int column)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,213,hrows MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,208,"void setSubMatrix(double[][] subMatrix, int row, int column);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,223,ealMatrix getRowMatrix(int row) throws MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,218,RealMatrix getRowMatrix(int row);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,233, @throws InvalidMatrixException if the matrix dimensions do not match one
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,234, instance row
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,228,* @throws org.apache.commons.math.exception.MatrixDimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,229,* if the matrix dimensions do not match one instance row.
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,236,"oid setRowMatrix(int row, RealMatrix matrix)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,237,"hrows MatrixIndexException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,231,"void setRowMatrix(int row, RealMatrix matrix);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,247,ealMatrix getColumnMatrix(int column) throws MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,241,RealMatrix getColumnMatrix(int column);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,257, @throws InvalidMatrixException if the matrix dimensions do not match one
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,258, instance column
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,251,* @throws org.apache.commons.math.exception.MatrixDimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,252,* if the matrix dimensions do not match one instance column.
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,260,"oid setColumnMatrix(int column, RealMatrix matrix)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,261,"hrows MatrixIndexException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,254,"void setColumnMatrix(int column, RealMatrix matrix);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,271,ealVector getRowVector(int row) throws MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,264,RealVector getRowVector(int row);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,281, @throws InvalidMatrixException if the vector dimension does not match one
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,282, instance row
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,274,* @throws org.apache.commons.math.exception.MatrixDimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,275,* if the vector dimension does not match one instance row.
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,284,"oid setRowVector(int row, RealVector vector)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,285,"hrows MatrixIndexException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,277,"void setRowVector(int row, RealVector vector);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,295,ealVector getColumnVector(int column) throws MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,287,RealVector getColumnVector(int column);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,304, @throws InvalidMatrixException if the vector dimension does not match one
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,305, instance column
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,296,* @throws org.apache.commons.math.exception.MatrixDimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,297,* if the vector dimension does not match one instance column.
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,307,"oid setColumnVector(int column, RealVector vector)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,308,"hrows MatrixIndexException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,299,"void setColumnVector(int column, RealVector vector);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,314, unless <code>0 <= row < rowDimension.</code></p>
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,305,* unless {@code 0 <= row < rowDimension}.</p>
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,320,ouble[] getRow(int row) throws MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,311,double[] getRow(int row);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,329, @throws InvalidMatrixException if the array size does not match one
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,330, instance row
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,320,* @throws org.apache.commons.math.exception.MatrixDimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,321,* if the array size does not match one instance row.
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,332,"oid setRow(int row, double[] array)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,333,"hrows MatrixIndexException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,323,"void setRow(int row, double[] array);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,339, unless <code>0 <= column < columnDimension.</code></p>
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,329,* unless {@code 0 <= column < columnDimension}.</p>
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,345,ouble[] getColumn(int column) throws MatrixIndexException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,335,double[] getColumn(int column);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,354, @throws InvalidMatrixException if the array size does not match one
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,355, instance column
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,344,* @throws org.apache.commons.math.exception.MatrixDimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,345,* if the array size does not match one instance column.
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,357,"oid setColumn(int column, double[] array)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,358,"hrows MatrixIndexException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,347,"void setColumn(int column, double[] array);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,365, <li><code>0 <= row < rowDimension</code></li>
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,366, <li><code> 0 <= column < columnDimension</code></li>
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,354,* <li>{@code 0 <= row < rowDimension}</li>
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,355,* <li>{@code 0 <= column < columnDimension}</li>
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,375,"ouble getEntry(int row, int column) throws MatrixIndexException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,364,"double getEntry(int row, int column);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,382, <li><code>0 <= row < rowDimension</code></li>
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,383, <li><code> 0 <= column < columnDimension</code></li>
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,371,* <li>{@code 0 <= row < rowDimension}</li>
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,372,* <li>{@code 0 <= column < columnDimension}</li>
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,393,"oid setEntry(int row, int column, double value) throws MatrixIndexException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,382,"void setEntry(int row, int column, double value);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,400, <li><code>0 <= row < rowDimension</code></li>
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,401, <li><code> 0 <= column < columnDimension</code></li>
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,389,* <li>{@code 0 <= row < rowDimension}</li>
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,390,* <li>{@code 0 <= column < columnDimension}</li>
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,411,"oid addToEntry(int row, int column, double increment) throws MatrixIndexException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,400,"void addToEntry(int row, int column, double increment);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,418, <li><code>0 <= row < rowDimension</code></li>
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,419, <li><code> 0 <= column < columnDimension</code></li>
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,407,* <li>{@code 0 <= row < rowDimension}</li>
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,408,* <li>{@code 0 <= column < columnDimension}</li>
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,429,"oid multiplyEntry(int row, int column, double factor) throws MatrixIndexException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,418,"void multiplyEntry(int row, int column, double factor);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,442, @throws InvalidMatrixException if  this is not invertible
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,431,* @throws InvalidMatrixException if this is not invertible
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,450,ealMatrix inverse() throws InvalidMatrixException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,439,RealMatrix inverse();
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,483,ouble getTrace() throws NonSquareMatrixException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,472,double getTrace();
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,492,ouble[] operate(double[] v) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,481,double[] operate(double[] v);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,501,ealVector operate(RealVector v) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,490,RealVector operate(RealVector v);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,510,ouble[] preMultiply(double[] v) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,499,double[] preMultiply(double[] v);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,519,ealVector preMultiply(RealVector v) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,508,RealVector preMultiply(RealVector v);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,542,ouble walkInRowOrder(RealMatrixChangingVisitor visitor)
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,543,hrows MatrixVisitorException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,531,double walkInRowOrder(RealMatrixChangingVisitor visitor);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,566,ouble walkInRowOrder(RealMatrixPreservingVisitor visitor)
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,567,hrows MatrixVisitorException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,554,double walkInRowOrder(RealMatrixPreservingVisitor visitor);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,596,"nt startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,597,"hrows MatrixIndexException, MatrixVisitorException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,583,"int startRow, int endRow, int startColumn, int endColumn);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,626,"nt startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,627,"hrows MatrixIndexException, MatrixVisitorException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,612,"int startRow, int endRow, int startColumn, int endColumn);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,650,ouble walkInColumnOrder(RealMatrixChangingVisitor visitor)
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,651,hrows MatrixVisitorException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,635,double walkInColumnOrder(RealMatrixChangingVisitor visitor);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,674,ouble walkInColumnOrder(RealMatrixPreservingVisitor visitor)
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,675,hrows MatrixVisitorException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,658,double walkInColumnOrder(RealMatrixPreservingVisitor visitor);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,704,"nt startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,705,"hrows MatrixIndexException, MatrixVisitorException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,687,"int startRow, int endRow, int startColumn, int endColumn);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,734,"nt startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,735,"hrows MatrixIndexException, MatrixVisitorException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,716,"int startRow, int endRow, int startColumn, int endColumn);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,757,ouble walkInOptimizedOrder(RealMatrixChangingVisitor visitor)
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,758,hrows MatrixVisitorException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,738,double walkInOptimizedOrder(RealMatrixChangingVisitor visitor);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,780,ouble walkInOptimizedOrder(RealMatrixPreservingVisitor visitor)
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,781,hrows MatrixVisitorException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,760,double walkInOptimizedOrder(RealMatrixPreservingVisitor visitor);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,809,"nt startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,810,"hrows MatrixIndexException, MatrixVisitorException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,788,"int startRow, int endRow, int startColumn, int endColumn);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,838,"nt startRow, int endRow, int startColumn, int endColumn)"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,839,"hrows MatrixIndexException, MatrixVisitorException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,816,"int startRow, int endRow, int startColumn, int endColumn);"
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,852,"ouble[] solve(double[] b) throws IllegalArgumentException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,829,double[] solve(double[] b);
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,867,"ealMatrix solve(RealMatrix b) throws IllegalArgumentException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,844,RealMatrix solve(RealMatrix b);
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,17,package org.apache.commons.math.exception;
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,19,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,20,import org.junit.Test;
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,23,* Test for {@link MatrixDimensionMismatchException}.
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,25,* @version $Revision$ $Date$
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,27,public class MatrixDimensionMismatchExceptionTest {
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,28,@Test
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,29,public void testAccessors() {
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,30,final MatrixDimensionMismatchException e
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,31,"= new MatrixDimensionMismatchException(1, 2, 3, 4);"
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,32,"Assert.assertEquals(1, e.getWrongRowDimension());"
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,33,"Assert.assertEquals(2, e.getWrongColumnDimension());"
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,34,"Assert.assertEquals(3, e.getExpectedRowDimension());"
True,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,src/test/java/org/apache/commons/math/exception/MatrixDimensionMismatchExceptionTest.java,35,"Assert.assertEquals(4, e.getExpectedColumnDimension());"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,23,import org.apache.commons.math.exception.MatrixDimensionMismatchException;
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,515,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,516, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,516,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,517,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,557,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,558, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,558,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,559,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,597,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,598, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,598,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,599,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,637,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,638, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,638,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,639,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,682,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,683, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,683,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,684,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,722,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,723, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,723,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,724,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,956,"rotected void splitLU(RealMatrix lu, double[][] lowerData, double[][] upperData) throws InvalidMatrixException {"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,957,f (!lu.isSquare() || lowerData.length != lowerData[0].length || upperData.length != upperData[0].length ||
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,958,owerData.length != upperData.length
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,959,| lowerData.length != lu.getRowDimension()) {
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,960,"hrow new InvalidMatrixException(""incorrect dimensions"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,957,"protected void splitLU(RealMatrix lu, double[][] lowerData, double[][] upperData) {"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,958,if (!lu.isSquare() ||
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,959,lowerData.length != lowerData[0].length ||
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,960,upperData.length != upperData[0].length ||
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,961,lowerData.length != upperData.length ||
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,962,lowerData.length != lu.getRowDimension()) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,963,"throw new IllegalArgumentException(""incorrect dimensions"");"
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,27,import org.apache.commons.math.exception.MatrixDimensionMismatchException;
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,706,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,707, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,707,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,708,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,767,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,768, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,768,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,769,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,828,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,829, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,829,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,830,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,887,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,888, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,888,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,889,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,951,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,952, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,952,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,953,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1011,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1012, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1012,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1013,} catch (MatrixDimensionMismatchException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,26,import org.apache.commons.math.exception.MatrixDimensionMismatchException;
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,632,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,633, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,633,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,634,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,691,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,692, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,692,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,693,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,750,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,751, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,751,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,752,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,809,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,810, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,810,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,811,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,873,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,874, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,874,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,875,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,933,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,934, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,934,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,935,} catch (MatrixDimensionMismatchException ex) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,24,import org.apache.commons.math.exception.MatrixDimensionMismatchException;
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,501,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,502, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,502,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,503,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,543,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,544, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,544,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,545,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,583,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,584, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,584,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,585,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,623,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,624, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,624,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,625,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,668,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,669, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,669,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,670,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,708,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,709, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,709,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,710,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,961,raction[][] upperData)
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,962,hrows InvalidMatrixException {
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,962,Fraction[][] upperData) {
False,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,968,"hrow new InvalidMatrixException(""incorrect dimensions"");"
True,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,968,"throw new IllegalArgumentException(""incorrect dimensions"");"
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,23,import org.apache.commons.math.exception.MatrixDimensionMismatchException;
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,515,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,516, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,516,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,517,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,557,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,558, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,558,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,559,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,597,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,598, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,598,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,599,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,637,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,638, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,638,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,639,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,682,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,683, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,683,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,684,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,722,"ail(""Expecting InvalidMatrixException"");"
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,723, catch (InvalidMatrixException ex) {
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,723,"fail(""Expecting MatrixDimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,724,} catch (MatrixDimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,956,"rotected void splitLU(RealMatrix lu, double[][] lowerData, double[][] upperData) throws InvalidMatrixException {"
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,957,f (!lu.isSquare() || lowerData.length != lowerData[0].length || upperData.length != upperData[0].length ||
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,958,owerData.length != upperData.length
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,959,| lowerData.length != lu.getRowDimension()) {
False,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,960,"hrow new InvalidMatrixException(""incorrect dimensions"");"
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,957,"protected void splitLU(RealMatrix lu, double[][] lowerData, double[][] upperData)  {"
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,958,if (!lu.isSquare() ||
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,959,lowerData.length != lowerData[0].length ||
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,960,upperData.length != upperData[0].length ||
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,961,lowerData.length != upperData.length ||
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,962,lowerData.length != lu.getRowDimension()) {
True,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/java/org/apache/commons/math/linear/RealMatrixImplTest.java,963,"throw new IllegalArgumentException(""incorrect dimensions"");"
