is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,17,package org.apache.commons.math3;
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,19,import org.apache.commons.math3.random.RandomGenerator;
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,20,import org.apache.commons.math3.random.Well1024a;
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,21,import org.apache.commons.math3.util.FastMath;
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,22,import org.apache.commons.math3.util.MathArrays;
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,23,import org.junit.Assert;
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,24,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,26,public abstract class AbstractExtendedFieldElementTest<T extends ExtendedFieldElement<T>> {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,28,protected abstract T build(double x);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,30,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,31,public void testAddField() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,32,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,33,for (double y = -3; y < 3; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,34,"checkRelative(x + y, build(x).add(build(y)));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,39,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,40,public void testAddDouble() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,41,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,42,for (double y = -3; y < 3; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,43,"checkRelative(x + y, build(x).add(y));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,48,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,49,public void testSubtractField() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,50,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,51,for (double y = -3; y < 3; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,52,"checkRelative(x - y, build(x).subtract(build(y)));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,57,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,58,public void testSubtractDouble() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,59,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,60,for (double y = -3; y < 3; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,61,"checkRelative(x - y, build(x).subtract(y));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,66,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,67,public void testMultiplyField() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,68,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,69,for (double y = -3; y < 3; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,70,"checkRelative(x * y, build(x).multiply(build(y)));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,75,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,76,public void testMultiplyDouble() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,77,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,78,for (double y = -3; y < 3; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,79,"checkRelative(x * y, build(x).multiply(y));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,84,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,85,public void testMultiplyInt() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,86,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,87,for (int y = -10; y < 10; y += 1) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,88,"checkRelative(x * y, build(x).multiply(y));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,93,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,94,public void testDivideField() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,95,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,96,for (double y = -3; y < 3; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,97,"checkRelative(x / y, build(x).divide(build(y)));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,102,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,103,public void testDivideDouble() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,104,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,105,for (double y = -3; y < 3; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,106,"checkRelative(x / y, build(x).divide(y));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,111,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,112,public void testRemainderField() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,113,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,114,for (double y = -3; y < 3; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,115,"checkRelative(FastMath.IEEEremainder(x, y), build(x).remainder(build(y)));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,120,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,121,public void testRemainderDouble() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,122,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,123,for (double y = -3.2; y < 3.2; y += 0.25) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,124,"System.out.println(x + "" "" + y + "" "" + (x % y));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,125,"checkRelative(FastMath.IEEEremainder(x, y), build(x).remainder(y));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,130,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,131,public void testCos() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,132,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,133,"checkRelative(FastMath.cos(x), build(x).cos());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,137,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,138,public void testAcos() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,139,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,140,"checkRelative(FastMath.acos(x), build(x).acos());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,144,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,145,public void testSin() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,146,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,147,"checkRelative(FastMath.sin(x), build(x).sin());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,151,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,152,public void testAsin() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,153,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,154,"checkRelative(FastMath.asin(x), build(x).asin());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,158,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,159,public void testTan() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,160,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,161,"checkRelative(FastMath.tan(x), build(x).tan());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,165,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,166,public void testAtan() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,167,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,168,"checkRelative(FastMath.atan(x), build(x).atan());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,172,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,173,public void testAtan2() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,174,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,175,for (double y = -3; y < 3; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,176,"checkRelative(FastMath.atan2(x, y), build(x).atan2(build(y)));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,181,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,182,public void testCosh() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,183,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,184,"checkRelative(FastMath.cosh(x), build(x).cosh());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,188,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,189,public void testAcosh() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,190,for (double x = 1.1; x < 5.0; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,191,"checkRelative(FastMath.acosh(x), build(x).acosh());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,195,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,196,public void testSinh() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,197,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,198,"checkRelative(FastMath.sinh(x), build(x).sinh());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,202,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,203,public void testAsinh() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,204,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,205,"checkRelative(FastMath.asinh(x), build(x).asinh());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,209,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,210,public void testTanh() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,211,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,212,"checkRelative(FastMath.tanh(x), build(x).tanh());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,216,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,217,public void testAtanh() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,218,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,219,"checkRelative(FastMath.atanh(x), build(x).atanh());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,223,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,224,public void testSqrt() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,225,for (double x = 0.01; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,226,"checkRelative(FastMath.sqrt(x), build(x).sqrt());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,230,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,231,public void testCbrt() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,232,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,233,"checkRelative(FastMath.cbrt(x), build(x).cbrt());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,237,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,238,public void testHypot() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,239,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,240,for (double y = -3; y < 3; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,241,"checkRelative(FastMath.hypot(x, y), build(x).hypot(build(y)));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,246,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,247,public void testRootN() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,248,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,249,for (int n = 1; n < 5; ++n) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,250,if (x < 0) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,251,if (n % 2 == 1) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,252,"checkRelative(-FastMath.pow(-x, 1.0 / n), build(x).rootN(n));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,254,} else {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,255,"checkRelative(FastMath.pow(x, 1.0 / n), build(x).rootN(n));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,261,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,262,public void testPowField() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,263,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,264,for (double y = 0.1; y < 4; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,265,"checkRelative(FastMath.pow(x, y), build(x).pow(build(y)));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,270,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,271,public void testPowDouble() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,272,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,273,for (double y = 0.1; y < 4; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,274,"checkRelative(FastMath.pow(x, y), build(x).pow(y));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,279,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,280,public void testPowInt() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,281,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,282,for (int n = 0; n < 5; ++n) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,283,"checkRelative(FastMath.pow(x, n), build(x).pow(n));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,288,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,289,public void testExp() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,290,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,291,"checkRelative(FastMath.exp(x), build(x).exp());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,295,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,296,public void testExpm1() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,297,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,298,"checkRelative(FastMath.expm1(x), build(x).expm1());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,302,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,303,public void testLog() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,304,for (double x = 0.01; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,305,"checkRelative(FastMath.log(x), build(x).log());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,309,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,310,public void testLog1p() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,311,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,312,"checkRelative(FastMath.log1p(x), build(x).log1p());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,316,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,317,public void testLog10() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,318,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,319,"checkRelative(FastMath.log10(x), build(x).log10());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,323,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,324,public void testAbs() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,325,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,326,"checkRelative(FastMath.abs(x), build(x).abs());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,330,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,331,public void testCeil() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,332,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,333,"checkRelative(FastMath.ceil(x), build(x).ceil());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,337,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,338,public void testFloor() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,339,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,340,"checkRelative(FastMath.floor(x), build(x).floor());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,344,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,345,public void testRint() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,346,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,347,"checkRelative(FastMath.rint(x), build(x).rint());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,351,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,352,public void testRound() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,353,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,354,"Assert.assertEquals(FastMath.round(x), build(x).round());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,358,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,359,public void testSignum() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,360,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,361,"checkRelative(FastMath.signum(x), build(x).signum());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,365,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,366,public void testCopySignField() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,367,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,368,for (double y = -3; y < 3; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,369,"checkRelative(FastMath.copySign(x, y), build(x).copySign(build(y)));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,374,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,375,public void testCopySignDouble() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,376,for (double x = -3; x < 3; x += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,377,for (double y = -3; y < 3; y += 0.2) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,378,"checkRelative(FastMath.copySign(x, y), build(x).copySign(y));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,383,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,384,public void testScalb() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,385,for (double x = -0.9; x < 0.9; x += 0.05) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,386,for (int n = -100; n < 100; ++n) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,387,"checkRelative(FastMath.scalb(x, n), build(x).scalb(n));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,392,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,393,public void testLinearCombinationFaFa() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,394,RandomGenerator r = new Well1024a(0xfafal);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,395,for (int i = 0; i < 50; ++i) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,396,"double[] aD = generateDouble(r, 10);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,397,"double[] bD = generateDouble(r, 10);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,398,T[] aF      = toFieldArray(aD);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,399,T[] bF      = toFieldArray(bD);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,400,"checkRelative(MathArrays.linearCombination(aD, bD),"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,401,"aF[0].linearCombination(aF, bF));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,405,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,406,public void testLinearCombinationDaFa() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,407,RandomGenerator r = new Well1024a(0xdafal);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,408,for (int i = 0; i < 50; ++i) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,409,"double[] aD = generateDouble(r, 10);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,410,"double[] bD = generateDouble(r, 10);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,411,T[] bF      = toFieldArray(bD);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,412,"checkRelative(MathArrays.linearCombination(aD, bD),"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,413,"bF[0].linearCombination(aD, bF));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,417,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,418,public void testLinearCombinationFF2() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,419,RandomGenerator r = new Well1024a(0xff2l);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,420,for (int i = 0; i < 50; ++i) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,421,"double[] aD = generateDouble(r, 2);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,422,"double[] bD = generateDouble(r, 2);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,423,T[] aF      = toFieldArray(aD);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,424,T[] bF      = toFieldArray(bD);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,425,"checkRelative(MathArrays.linearCombination(aD[0], bD[0], aD[1], bD[1]),"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,426,"aF[0].linearCombination(aF[0], bF[0], aF[1], bF[1]));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,430,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,431,public void testLinearCombinationDF2() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,432,RandomGenerator r = new Well1024a(0xdf2l);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,433,for (int i = 0; i < 50; ++i) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,434,"double[] aD = generateDouble(r, 2);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,435,"double[] bD = generateDouble(r, 2);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,436,T[] bF      = toFieldArray(bD);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,437,"checkRelative(MathArrays.linearCombination(aD[0], bD[0], aD[1], bD[1]),"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,438,"bF[0].linearCombination(aD[0], bF[0], aD[1], bF[1]));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,442,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,443,public void testLinearCombinationFF3() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,444,RandomGenerator r = new Well1024a(0xff3l);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,445,for (int i = 0; i < 50; ++i) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,446,"double[] aD = generateDouble(r, 3);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,447,"double[] bD = generateDouble(r, 3);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,448,T[] aF      = toFieldArray(aD);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,449,T[] bF      = toFieldArray(bD);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,450,"checkRelative(MathArrays.linearCombination(aD[0], bD[0], aD[1], bD[1], aD[2], bD[2]),"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,451,"aF[0].linearCombination(aF[0], bF[0], aF[1], bF[1], aF[2], bF[2]));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,455,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,456,public void testLinearCombinationDF3() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,457,RandomGenerator r = new Well1024a(0xdf3l);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,458,for (int i = 0; i < 50; ++i) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,459,"double[] aD = generateDouble(r, 3);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,460,"double[] bD = generateDouble(r, 3);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,461,T[] bF      = toFieldArray(bD);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,462,"checkRelative(MathArrays.linearCombination(aD[0], bD[0], aD[1], bD[1], aD[2], bD[2]),"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,463,"bF[0].linearCombination(aD[0], bF[0], aD[1], bF[1], aD[2], bF[2]));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,467,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,468,public void testLinearCombinationFF4() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,469,RandomGenerator r = new Well1024a(0xff4l);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,470,for (int i = 0; i < 50; ++i) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,471,"double[] aD = generateDouble(r, 4);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,472,"double[] bD = generateDouble(r, 4);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,473,T[] aF      = toFieldArray(aD);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,474,T[] bF      = toFieldArray(bD);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,475,"checkRelative(MathArrays.linearCombination(aD[0], bD[0], aD[1], bD[1], aD[2], bD[2], aD[3], bD[3]),"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,476,"aF[0].linearCombination(aF[0], bF[0], aF[1], bF[1], aF[2], bF[2], aF[3], bF[3]));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,480,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,481,public void testLinearCombinationDF4() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,482,RandomGenerator r = new Well1024a(0xdf4l);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,483,for (int i = 0; i < 50; ++i) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,484,"double[] aD = generateDouble(r, 4);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,485,"double[] bD = generateDouble(r, 4);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,486,T[] bF      = toFieldArray(bD);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,487,"checkRelative(MathArrays.linearCombination(aD[0], bD[0], aD[1], bD[1], aD[2], bD[2], aD[3], bD[3]),"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,488,"bF[0].linearCombination(aD[0], bF[0], aD[1], bF[1], aD[2], bF[2], aD[3], bF[3]));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,492,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,493,public void testGetField() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,494,"checkRelative(1.0, build(-10).getField().getOne());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,495,"checkRelative(0.0, build(-10).getField().getZero());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,498,"private void checkRelative(double expected, T obtained) {"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,499,"Assert.assertEquals(expected, obtained.getReal(), 1.0e-15 * (1 + FastMath.abs(expected)));"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,502,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,503,public void testEquals() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,504,T t1a = build(1.0);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,505,T t1b = build(1.0);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,506,T t2  = build(2.0);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,507,Assert.assertTrue(t1a.equals(t1a));
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,508,Assert.assertTrue(t1a.equals(t1b));
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,509,Assert.assertFalse(t1a.equals(t2));
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,510,Assert.assertFalse(t1a.equals(new Object()));
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,513,@Test
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,514,public void testHash() {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,515,T t1a = build(1.0);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,516,T t1b = build(1.0);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,517,T t2  = build(2.0);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,518,"Assert.assertEquals(t1a.hashCode(), t1b.hashCode());"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,519,Assert.assertTrue(t1a.hashCode() != t2.hashCode());
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,522,"private double[] generateDouble (final RandomGenerator r, int n) {"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,523,double[] a = new double[n];
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,524,for (int i = 0; i < n; ++i) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,525,a[i] = r.nextDouble();
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,527,return a;
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,530,private T[] toFieldArray (double[] a) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,531,"T[] f = MathArrays.buildArray(build(0).getField(), a.length);"
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,532,for (int i = 0; i < a.length; ++i) {
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,533,f[i] = build(a[i]);
True,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,src/test/java/org/apache/commons/math3/AbstractExtendedFieldElementTest.java,535,return f;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,23,import org.apache.commons.math3.AbstractExtendedFieldElementTest;
False,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,36,ublic class DerivativeStructureTest {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,37,public class DerivativeStructureTest extends AbstractExtendedFieldElementTest<DerivativeStructure> {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,39,protected DerivativeStructure build(final double x) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,40,"return new DerivativeStructure(2, 1, 0, x);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,571,erivativeStructure ref = dsX.subtract(x - (x % y));
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,576,"DerivativeStructure ref = dsX.subtract(x - FastMath.IEEEremainder(x, y));"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,587,ouble epsilon = 1.0e-15;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,592,double epsilon = 2.0e-15;
False,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,594,erivativeStructure ref = dsX.subtract(dsY.multiply((x - (x % y)) / y));
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,599,"DerivativeStructure ref = dsX.subtract(dsY.multiply((x - FastMath.IEEEremainder(x, y)) / y));"
True,src/test/java/org/apache/commons/math3/dfp/DfpTest.java,src/test/java/org/apache/commons/math3/dfp/DfpTest.java,20,import org.apache.commons.math3.AbstractExtendedFieldElementTest;
False,src/test/java/org/apache/commons/math3/dfp/DfpTest.java,src/test/java/org/apache/commons/math3/dfp/DfpTest.java,27,ublic class DfpTest {
True,src/test/java/org/apache/commons/math3/dfp/DfpTest.java,src/test/java/org/apache/commons/math3/dfp/DfpTest.java,28,public class DfpTest extends AbstractExtendedFieldElementTest<Dfp> {
True,src/test/java/org/apache/commons/math3/dfp/DfpTest.java,src/test/java/org/apache/commons/math3/dfp/DfpTest.java,30,protected Dfp build(final double x) {
True,src/test/java/org/apache/commons/math3/dfp/DfpTest.java,src/test/java/org/apache/commons/math3/dfp/DfpTest.java,31,return field.newDfp(x);
True,src/test/java/org/apache/commons/math3/util/Decimal64Test.java,src/test/java/org/apache/commons/math3/util/Decimal64Test.java,19,import org.apache.commons.math3.AbstractExtendedFieldElementTest;
False,src/test/java/org/apache/commons/math3/util/Decimal64Test.java,src/test/java/org/apache/commons/math3/util/Decimal64Test.java,23,ublic class Decimal64Test {
True,src/test/java/org/apache/commons/math3/util/Decimal64Test.java,src/test/java/org/apache/commons/math3/util/Decimal64Test.java,24,public class Decimal64Test extends AbstractExtendedFieldElementTest<Decimal64> {
True,src/test/java/org/apache/commons/math3/util/Decimal64Test.java,src/test/java/org/apache/commons/math3/util/Decimal64Test.java,41,protected Decimal64 build(final double x) {
True,src/test/java/org/apache/commons/math3/util/Decimal64Test.java,src/test/java/org/apache/commons/math3/util/Decimal64Test.java,42,return new Decimal64(x);
