is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,100, @return closest long to {@link #getValue()}
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,100,* @return closest long to {@link #getReal()}
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,329,* @since 3.2
False,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,355," @see #linearCombination(T, T, T, T, T, T)"
False,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,356," @see #linearCombination(T, T, T, T, T, T, T, T)"
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,356,"* @see #linearCombination(Object, Object, Object, Object, Object, Object)"
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,357,"* @see #linearCombination(Object, Object, Object, Object, Object, Object, Object, Object)"
False,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,383," @see #linearCombination(double, T, double, T, double, T)"
False,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,384," @see #linearCombination(double, T, double, T, double, T, double, T)"
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,384,"* @see #linearCombination(double, Object, double, Object, double, Object)"
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,385,"* @see #linearCombination(double, Object, double, Object, double, Object, double, Object)"
False,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,413," @see #linearCombination(T, T, T, T)"
False,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,414," @see #linearCombination(T, T, T, T, T, T, T, T)"
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,414,"* @see #linearCombination(Object, Object, Object, Object)"
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,415,"* @see #linearCombination(Object, Object, Object, Object, Object, Object, Object, Object)"
False,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,443," @see #linearCombination(double, T, double, T)"
False,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,444," @see #linearCombination(double, T, double, T, double, T, double, T)"
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,444,"* @see #linearCombination(double, Object, double, Object)"
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,445,"* @see #linearCombination(double, Object, double, Object, double, Object, double, Object)"
False,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,477," @see #linearCombination(T, T, T, T)"
False,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,478," @see #linearCombination(T, T, T, T, T, T)"
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,478,"* @see #linearCombination(Object, Object, Object, Object)"
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,479,"* @see #linearCombination(Object, Object, Object, Object, Object, Object)"
False,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,511," @see #linearCombination(double, T, double, T)"
False,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,512," @see #linearCombination(double, T, double, T, double, T)"
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,512,"* @see #linearCombination(double, Object, double, Object)"
True,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,src/main/java/org/apache/commons/math3/ExtendedFieldElement.java,513,"* @see #linearCombination(double, Object, double, Object, double, Object)"
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java,36, @see Vector3DDSDS
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java,36,* @see FieldVector3D
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java,428," @see #Rotation(FieldVector3D, T)"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java,428,"* @see #FieldRotation(FieldVector3D, ExtendedFieldElement)"
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java,445," @see #Rotation(FieldVector3D, T)"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java,445,"* @see #FieldRotation(FieldVector3D, ExtendedFieldElement)"
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,305," @see #Vector3D(T, T, T)"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,305,"* @see #FieldVector3D(ExtendedFieldElement, ExtendedFieldElement, ExtendedFieldElement)"
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,313," @see #Vector3D(T, T, T)"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,313,"* @see #FieldVector3D(ExtendedFieldElement, ExtendedFieldElement, ExtendedFieldElement)"
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,321," @see #Vector3D(T, T, T)"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,321,"* @see #FieldVector3D(ExtendedFieldElement, ExtendedFieldElement, ExtendedFieldElement)"
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,329, @see #Vector3D(T[])
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,329,* @see #FieldVector3D(ExtendedFieldElement[])
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,393," @see #Vector3D(T, T)"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,393,"* @see #FieldVector3D(ExtendedFieldElement, ExtendedFieldElement)"
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,401," @see #Vector3D(T, T)"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,401,"* @see #FieldVector3D(ExtendedFieldElement, ExtendedFieldElement)"
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,699," If all coordinates of two 3D vectors are exactly the same, and none are"
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,700," <code>T.NaN</code>, the two 3D vectors are considered to be equal."
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,699,"* If all coordinates of two 3D vectors are exactly the same, and none of their"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,700,"* {@link ExtendedFieldElement#getReal() real part} are <code>NaN</code>, the"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,701,* two 3D vectors are considered to be equal.
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,704," and be equals to each other - i.e, if either (or all) coordinates of the"
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,705," 3D vector are equal to <code>T.NaN</code>, the 3D vector is equal to"
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,706, {@link #NaN}.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,705,"* and be equals to each other - i.e, if either (or all) real part of the"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,706,"* coordinates of the 3D vector are <code>NaN</code>, the 3D vector is <code>NaN</code>."
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,1178,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,1178,/** Get a string representation of this vector.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,1179,* @param format the custom format for components
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java,1180,* @return a string representation of this vector
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,46, It may also be counter-productive to provide a too large value for {@link MaxIter}
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,47," as parameter in the call of {@link #optimize(org.apache.commons.math3.optim.OptimizationData...)},"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,46,* It may also be counter-productive to provide a too large value for {@link
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,47,* org.apache.commons.math3.optim.MaxIter MaxIter} as parameter in the call of {@link
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,48,"* #optimize(org.apache.commons.math3.optim.OptimizationData...) optimize(OptimizationData...)},"
False,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java,297,  <li>{@link InitialStep}</li>
True,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java,297,*  <li>{@link BracketingStep}</li>
False,src/main/java/org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.java,src/main/java/org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.java,67, {@link MultivariateOptimizer#parseOptimizationData(OptimizationData[])
True,src/main/java/org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.java,src/main/java/org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.java,67,* {@link MultivariateVectorOptimizer#optimize(OptimizationData...)}
