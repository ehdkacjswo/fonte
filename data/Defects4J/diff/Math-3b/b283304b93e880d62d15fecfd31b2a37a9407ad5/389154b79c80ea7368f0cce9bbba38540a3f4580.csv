is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,217,"nterpolator = new DummyStepInterpolator(yTmp, forward);"
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,217,"interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward);"
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,627,"nterpolator = new DummyStepInterpolator(y, forward);"
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,627,"interpolator = new DummyStepInterpolator(y, yDot1, forward);"
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,125, at theend of the step
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,125,* at the end of the step
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,123,"nterpolator = new DummyStepInterpolator(yTmp, forward);"
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,123,"interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward);"
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,43,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,44,rivate static final long serialVersionUID = 1708010296707839488L;
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,43,/** Serializable version identifier. */
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,44,private static final long serialVersionUID = 1708010296707839488L;
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,46,/** Current derivative. */
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,47,private double[] currentDerivative;
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,61,currentDerivative = null;
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,67,* @param yDot reference to the integrator array holding the state
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,68,* derivative at some arbitrary point within the step
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,65,"ublic DummyStepInterpolator(final double[] y, final boolean forward) {"
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,71,"public DummyStepInterpolator(final double[] y, final double[] yDot, final boolean forward) {"
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,73,currentDerivative = yDot;
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,83,currentDerivative = interpolator.currentDerivative.clone();
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,99,"ystem.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);"
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,107,"System.arraycopy(currentState,      0, interpolatedState,       0, currentState.length);"
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,108,"System.arraycopy(currentDerivative, 0, interpolatedDerivatives, 0, currentDerivative.length);"
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,109,/ save the state of the base class
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,119,// save the state of the base class
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,122,if (currentDerivative != null) {
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,123,for (int i = 0; i < currentDerivative.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,124,out.writeDouble(currentDerivative[i]);
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,141,if (currentState == null) {
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,142,currentDerivative = null;
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,143,} else {
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,144,currentDerivative  = new double[currentState.length];
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,145,for (int i = 0; i < currentDerivative.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,146,currentDerivative[i] = in.readDouble();
False,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,169,"ummyStepInterpolator interpolator  = new DummyStepInterpolator(y0, t1 >= t0);"
True,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,169,"DummyStepInterpolator interpolator  = new DummyStepInterpolator(y0, new double[y0.length], t1 >= t0);"
False,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,55,"ew DummyStepInterpolator(new double[0], true);"
True,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,55,"new DummyStepInterpolator(new double[0], new double[0], true);"
False,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,41,"ummyStepInterpolator interpolator = new DummyStepInterpolator(y, true);"
True,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,41,"DummyStepInterpolator interpolator = new DummyStepInterpolator(y, new double[y.length], true);"
False,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,58,"ummyStepInterpolator interpolator = new DummyStepInterpolator(y, true);"
True,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,58,"DummyStepInterpolator interpolator = new DummyStepInterpolator(y, new double[y.length], true);"
False,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,82,"ummyStepInterpolator interpolator = new DummyStepInterpolator(y, true);"
True,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,82,"DummyStepInterpolator interpolator = new DummyStepInterpolator(y, new double[y.length], true);"
False,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,135,"uper(y, forward);"
True,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,135,"super(y, new double[y.length], forward);"
