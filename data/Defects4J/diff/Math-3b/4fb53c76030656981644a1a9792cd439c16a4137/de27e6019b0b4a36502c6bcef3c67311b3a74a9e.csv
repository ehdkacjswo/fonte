is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,28," <p>Implementation of the {@link RegulaFalsiSolver <em>Regula Falsi</em>}, and"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,28,* <p>Implementation of the {@link RegulaFalsiSolver <em>Regula Falsi</em>} and
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,41, <p>The  {@link SecantSolver <em>secant<em>} method is <em>not</emp> a
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,42, bracketing method so it is not implemented here. It has a separate
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,41,* <p>The {@link SecantSolver <em>Secant</em>} method is <em>not</em> a
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,42,"* bracketing method, so it is not implemented here. It has a separate"
False,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,60, @param allowedSolutions the kind of solutions that the root-finding algorithm may
True,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,60,* @param allowedSolutions The kind of solutions that the root-finding algorithm may
False,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,62, @return a value where the function is zero.
True,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,62,* @return A value where the function is zero.
False,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,82, @param allowedSolutions the kind of solutions that the root-finding algorithm may
True,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,82,* @param allowedSolutions The kind of solutions that the root-finding algorithm may
False,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,84, @return a value where the function is zero.
True,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,84,* @return A value where the function is zero.
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,292, Check whether the function takes opposite signs at the endpoints.
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,292,"* Check whether the interval bounds bracket a root. That is, if the"
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,293,"* values at the endpoints are not equal to zero, then the function takes"
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,294,* opposite signs at the endpoints.
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,308,eturn (fLo > 0 && fHi < 0) || (fLo < 0 && fHi > 0);
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,310,return (fLo >= 0 && fHi <= 0) || (fLo <= 0 && fHi >= 0);
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,357, Check that the endpoints specify an interval and the function takes
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,358, opposite signs at the endpoints.
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,359,* Check that the endpoints specify an interval and the end points
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,360,* bracket a root.
