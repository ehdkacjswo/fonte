is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,19,mport org.apache.commons.math.MathException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,19,import org.apache.commons.math.distribution.ChiSquaredDistribution;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,20,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,21,import org.apache.commons.math.exception.MaxCountExceededException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,22,import org.apache.commons.math.exception.NotPositiveException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,23,import org.apache.commons.math.exception.NotStrictlyPositiveException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,24,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,25,import org.apache.commons.math.exception.OutOfRangeException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,26,import org.apache.commons.math.exception.ZeroException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,27,import org.apache.commons.math.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,28,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,29,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,22, An interface for Chi-Square tests.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,23, <p>This interface handles only known distributions. If the distribution is
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,24," unknown and should be provided by a sample, then the {@link UnknownDistributionChiSquareTest"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,25, UnknownDistributionChiSquareTest} extended interface should be used instead.</p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,32,* Implements Chi-Square test statistics.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,33,"* <p>This implementation handles both, known and unknown distributions.</p>"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,34,* <p>Two samples tests are used when the distribution is unknown <i>a priori</i>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,35,* but provided by one sample. We compare the second sample against the first.</p>
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,28,ublic interface ChiSquareTest {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,39,public class ChiSquareTest {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,42,* Construct a ChiSquareTest
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,44,public ChiSquareTest() {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,45,super();
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,35, This statistic can be used to perform a Chi-Square test evaluating the null hypothesis that
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,36,  the observed counts follow the expected distribution.</p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,53,* This statistic can be used to perform a Chi-Square test evaluating the null
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,54,* hypothesis that the observed counts follow the expected distribution.</p>
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,41, <li>Observed counts must all be >= 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,59,* <li>Observed counts must all be &ge; 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,66,* <p><strong>Note: </strong>This implementation rescales the
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,67,* <code>expected</code> array if necessary to ensure that the sum of the
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,68,* expected and observed counts are equal.</p>
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,51, @return chiSquare statistic
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,52, @throws IllegalArgumentException if preconditions are not met
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,72,* @return chiSquare test statistic
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,73,* @throws NotPositiveException if one element of <code>expected</code> is not
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,74,* positive
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,75,* @throws NotStrictlyPositiveException if one element of <code>observed</code> is
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,76,* not strictly positive
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,77,* @throws DimensionMismatchException if the arrays length is less than 2
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,54,"ouble chiSquare(double[] expected, long[] observed)"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,55,hrows IllegalArgumentException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,79,"public double chiSquare(final double[] expected, final long[] observed)"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,80,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,81,DimensionMismatchException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,83,if (expected.length < 2) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,84,"throw new DimensionMismatchException(expected.length, 2);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,86,if (expected.length != observed.length) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,87,"throw new DimensionMismatchException(expected.length, observed.length);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,89,checkPositive(expected);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,90,checkNonNegative(observed);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,92,double sumExpected = 0d;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,93,double sumObserved = 0d;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,94,for (int i = 0; i < observed.length; i++) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,95,sumExpected += expected[i];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,96,sumObserved += observed[i];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,98,double ratio = 1.0d;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,99,boolean rescale = false;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,100,if (FastMath.abs(sumExpected - sumObserved) > 10E-6) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,101,ratio = sumObserved / sumExpected;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,102,rescale = true;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,104,double sumSq = 0.0d;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,105,for (int i = 0; i < observed.length; i++) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,106,if (rescale) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,107,final double dev = observed[i] - ratio * expected[i];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,108,sumSq += dev * dev / (ratio * expected[i]);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,109,} else {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,110,final double dev = observed[i] - expected[i];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,111,sumSq += dev * dev / expected[i];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,114,return sumSq;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,72, <li>Observed counts must all be >= 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,133,* <li>Observed counts must all be &ge; 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,140,* <p><strong>Note: </strong>This implementation rescales the
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,141,* <code>expected</code> array if necessary to ensure that the sum of the
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,142,* expected and observed counts are equal.</p>
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,83, @throws IllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,84, @throws MathException if an error occurs computing the p-value
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,147,* @throws NotPositiveException if one element of <code>expected</code> is not
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,148,* positive
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,149,* @throws NotStrictlyPositiveException if one element of <code>observed</code> is
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,150,* not strictly positive
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,151,* @throws DimensionMismatchException if the arrays length is less than 2
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,152,* @throws MaxCountExceededException if an error occurs computing the p-value
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,86,"ouble chiSquareTest(double[] expected, long[] observed)"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,87,"hrows IllegalArgumentException, MathException;"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,154,"public double chiSquareTest(final double[] expected, final long[] observed)"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,155,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,156,"DimensionMismatchException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,158,ChiSquaredDistribution distribution =
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,159,new ChiSquaredDistribution(expected.length - 1.0);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,160,"return 1.0 - distribution.cumulativeProbability(chiSquare(expected, observed));"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,91, Chi-square goodness of fit test</a> evaluating the null hypothesis that the observed counts
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,92," conform to the frequency distribution described by the expected counts, with"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,93, significance level <code>alpha</code>.  Returns true iff the null hypothesis can be rejected
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,94, with 100 * (1 - alpha) percent confidence.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,166,* Chi-square goodness of fit test</a> evaluating the null hypothesis that the
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,167,* observed counts conform to the frequency distribution described by the expected
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,168,"* counts, with significance level <code>alpha</code>.  Returns true iff the null"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,169,* hypothesis can be rejected with 100 * (1 - alpha) percent confidence.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,104, <li>Observed counts must all be >= 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,179,* <li>Observed counts must all be &ge; 0.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,108, <li> <code> 0 < alpha < 0.5 </code>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,183,* <li> <code> 0 &lt; alpha &lt; 0.5 </code>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,187,* <p><strong>Note: </strong>This implementation rescales the
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,188,* <code>expected</code> array if necessary to ensure that the sum of the
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,189,* expected and observed counts are equal.</p>
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,118, @throws IllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,119, @throws MathException if an error occurs performing the test
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,196,* @throws NotPositiveException if one element of <code>expected</code> is not
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,197,* positive
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,198,* @throws NotStrictlyPositiveException if one element of <code>observed</code> is
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,199,* not strictly positive
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,200,* @throws DimensionMismatchException if the arrays length is less than 2
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,201,"* @throws OutOfRangeException if <code>alpha</code> is not in the range (0, 0.5]"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,202,* @throws MaxCountExceededException if an error occurs computing the p-value
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,121,"oolean chiSquareTest(double[] expected, long[] observed, double alpha)"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,122,"hrows IllegalArgumentException, MathException;"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,204,"public boolean chiSquareTest(final double[] expected, final long[] observed,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,205,final double alpha)
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,206,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,207,"DimensionMismatchException, OutOfRangeException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,209,if ((alpha <= 0) || (alpha > 0.5)) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,210,"throw new OutOfRangeException(LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,211,"alpha, 0, 0.5);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,213,"return chiSquareTest(expected, observed) < alpha;"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,134, <li>All counts must be >= 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,227,* <li>All counts must be &ge; 0.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,147, @return chiSquare statistic
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,148, @throws IllegalArgumentException if preconditions are not met
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,240,* @return chiSquare test statistic
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,241,* @throws NullArgumentException if the array is null
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,242,* @throws DimensionMismatchException if the array is not rectangular
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,243,* @throws NotPositiveException if one entry is not positive
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,150,ouble chiSquare(long[][] counts)
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,151,hrows IllegalArgumentException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,245,public double chiSquare(final long[][] counts)
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,246,"throws NullArgumentException, NotPositiveException,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,247,DimensionMismatchException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,249,checkArray(counts);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,250,int nRows = counts.length;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,251,int nCols = counts[0].length;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,253,"// compute row, column and total sums"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,254,double[] rowSum = new double[nRows];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,255,double[] colSum = new double[nCols];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,256,double total = 0.0d;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,257,for (int row = 0; row < nRows; row++) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,258,for (int col = 0; col < nCols; col++) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,259,rowSum[row] += counts[row][col];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,260,colSum[col] += counts[row][col];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,261,total += counts[row][col];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,265,// compute expected counts and chi-square
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,266,double sumSq = 0.0d;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,267,double expected = 0.0d;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,268,for (int row = 0; row < nRows; row++) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,269,for (int col = 0; col < nCols; col++) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,270,expected = (rowSum[row] * colSum[col]) / total;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,271,sumSq += ((counts[row][col] - expected) *
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,272,(counts[row][col] - expected)) / expected;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,275,return sumSq;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,165, <li>All counts must be >= 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,291,* <li>All counts must be &ge; 0.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,167, <li>The count array must be rectangular (i.e. all count[i] subarrays must have the same length).
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,293,* <li>The count array must be rectangular (i.e. all count[i] subarrays must have
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,294,*     the same length).
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,169, <li>The 2-way table represented by <code>counts</code> must have at least 2 columns and
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,170,        at least 2 rows.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,296,* <li>The 2-way table represented by <code>counts</code> must have at least 2
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,297,*     columns and at least 2 rows.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,178, @throws IllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,179, @throws MathException if an error occurs computing the p-value
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,305,* @throws NullArgumentException if the array is null
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,306,* @throws DimensionMismatchException if the array is not rectangular
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,307,* @throws NotPositiveException if one entry is not positive
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,308,* @throws MaxCountExceededException if an error occurs computing the p-value
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,181,ouble chiSquareTest(long[][] counts)
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,182,"hrows IllegalArgumentException, MathException;"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,310,public double chiSquareTest(final long[][] counts)
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,311,"throws NullArgumentException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,312,"NotPositiveException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,314,checkArray(counts);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,315,double df = ((double) counts.length -1) * ((double) counts[0].length - 1);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,316,ChiSquaredDistribution distribution;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,317,distribution = new ChiSquaredDistribution(df);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,318,return 1 - distribution.cumulativeProbability(chiSquare(counts));
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,186, chi-square test of independence</a> evaluating the null hypothesis that the classifications
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,187," represented by the counts in the columns of the input 2-way table are independent of the rows,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,188, with significance level <code>alpha</code>.  Returns true iff the null hypothesis can be rejected
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,189, with 100 * (1 - alpha) percent confidence.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,324,* chi-square test of independence</a> evaluating the null hypothesis that the
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,325,* classifications represented by the counts in the columns of the input 2-way table
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,326,"* are independent of the rows, with significance level <code>alpha</code>."
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,327,* Returns true iff the null hypothesis can be rejected with 100 * (1 - alpha) percent
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,328,* confidence.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,197,"  all correspond to the same underlying probability distribution at the 99% level, use </p><p>"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,198," <code>chiSquareTest(counts, 0.01) </code></p>"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,336,"*  all correspond to the same underlying probability distribution at the 99% level, use</p>"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,337,"* <p><code>chiSquareTest(counts, 0.01)</code></p>"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,201, <li>All counts must be >= 0.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,202, </li>
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,203, <li>The count array must be rectangular (i.e. all count[i] subarrays must have the same length).
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,340,* <li>All counts must be &ge; 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,342,* <li>The count array must be rectangular (i.e. all count[i] subarrays must have the
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,343,*     same length).</li>
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,206,        at least 2 rows.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,207, </li>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,345,*     at least 2 rows.</li>
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,216, @throws IllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,217, @throws MathException if an error occurs performing the test
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,354,* @throws NullArgumentException if the array is null
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,355,* @throws DimensionMismatchException if the array is not rectangular
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,356,* @throws NotPositiveException if one entry is not positive
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,357,"* @throws OutOfRangeException if <code>alpha</code> is not in the range (0, 0.5]"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,358,* @throws MaxCountExceededException if an error occurs computing the p-value
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,360,"public boolean chiSquareTest(final long[][] counts, final double alpha)"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,361,"throws NullArgumentException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,362,"NotPositiveException, OutOfRangeException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,364,if ((alpha <= 0) || (alpha > 0.5)) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,365,"throw new OutOfRangeException(LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,366,"alpha, 0, 0.5);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,368,return chiSquareTest(counts) < alpha;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,373,* <p>Computes a
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,374,"* <a href=""http://www.itl.nist.gov/div898/software/dataplot/refman1/auxillar/chi2samp.htm"">"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,375,* Chi-Square two sample test statistic</a> comparing bin frequency counts
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,376,* in <code>observed1</code> and <code>observed2</code>.  The
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,377,* sums of frequency counts in the two samples are not required to be the
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,378,* same.  The formula used to compute the test statistic is</p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,379,* <code>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,380,* &sum;[(K * observed1[i] - observed2[i]/K)<sup>2</sup> / (observed1[i] + observed2[i])]
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,381,* </code> where
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,382,* <br/><code>K = &sqrt;[&sum(observed2 / &sum;(observed1)]</code>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,383,* </p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,384,* <p>This statistic can be used to perform a Chi-Square test evaluating the
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,385,* null hypothesis that both observed counts follow the same distribution.</p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,386,* <p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,387,* <strong>Preconditions</strong>: <ul>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,388,* <li>Observed counts must be non-negative.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,389,* </li>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,390,* <li>Observed counts for a specific bin must not both be zero.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,391,* </li>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,392,* <li>Observed counts for a specific sample must not all be 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,393,* </li>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,394,* <li>The arrays <code>observed1</code> and <code>observed2</code> must have
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,395,* the same length and their common length must be at least 2.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,396,* </li></ul></p><p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,397,"* If any of the preconditions are not met, an"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,398,* <code>IllegalArgumentException</code> is thrown.</p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,400,* @param observed1 array of observed frequency counts of the first data set
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,401,* @param observed2 array of observed frequency counts of the second data set
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,402,* @return chiSquare test statistic
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,403,* @throws DimensionMismatchException the the length of the arrays does not match
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,404,* @throws NotPositiveException if one entry in <code>observed1</code> or
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,405,* <code>observed2</code> is not positive
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,406,* @throws ZeroException if either all counts of <code>observed1</code> or
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,407,"* <code>observed2</code> are zero, or if the count at the same index is zero"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,408,* for both arrays
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,409,* @since 1.2
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,411,"public double chiSquareDataSetsComparison(long[] observed1, long[] observed2)"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,412,"throws DimensionMismatchException, NotPositiveException, ZeroException {"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,414,// Make sure lengths are same
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,415,if (observed1.length < 2) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,416,"throw new DimensionMismatchException(observed1.length, 2);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,418,if (observed1.length != observed2.length) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,419,"throw new DimensionMismatchException(observed1.length, observed2.length);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,422,// Ensure non-negative counts
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,423,checkNonNegative(observed1);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,424,checkNonNegative(observed2);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,426,// Compute and compare count sums
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,427,long countSum1 = 0;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,428,long countSum2 = 0;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,429,boolean unequalCounts = false;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,430,double weight = 0.0;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,431,for (int i = 0; i < observed1.length; i++) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,432,countSum1 += observed1[i];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,433,countSum2 += observed2[i];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,435,// Ensure neither sample is uniformly 0
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,436,if (countSum1 == 0 || countSum2 == 0) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,437,throw new ZeroException();
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,439,// Compare and compute weight only if different
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,440,unequalCounts = countSum1 != countSum2;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,441,if (unequalCounts) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,442,weight = FastMath.sqrt((double) countSum1 / (double) countSum2);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,444,// Compute ChiSquare statistic
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,445,double sumSq = 0.0d;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,446,double dev = 0.0d;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,447,double obs1 = 0.0d;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,448,double obs2 = 0.0d;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,449,for (int i = 0; i < observed1.length; i++) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,450,if (observed1[i] == 0 && observed2[i] == 0) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,451,"throw new ZeroException(LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY, i);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,452,} else {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,453,obs1 = observed1[i];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,454,obs2 = observed2[i];
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,455,if (unequalCounts) { // apply weights
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,456,dev = obs1/weight - obs2 * weight;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,457,} else {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,458,dev = obs1 - obs2;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,460,sumSq += (dev * dev) / (obs1 + obs2);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,463,return sumSq;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,467,"* <p>Returns the <i>observed significance level</i>, or <a href="
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,468,"* ""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,469,"* p-value</a>, associated with a Chi-Square two sample test comparing"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,470,* bin frequency counts in <code>observed1</code> and
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,471,* <code>observed2</code>.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,472,* </p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,473,* <p>The number returned is the smallest significance level at which one
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,474,* can reject the null hypothesis that the observed counts conform to the
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,475,* same distribution.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,476,* </p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,477,"* <p>See {@link #chiSquareDataSetsComparison(long[], long[])} for details"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,478,* on the formula used to compute the test statistic. The degrees of
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,479,* of freedom used to perform the test is one less than the common length
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,480,* of the input observed count arrays.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,481,* </p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,482,* <strong>Preconditions</strong>: <ul>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,483,* <li>Observed counts must be non-negative.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,484,* </li>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,485,* <li>Observed counts for a specific bin must not both be zero.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,486,* </li>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,487,* <li>Observed counts for a specific sample must not all be 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,488,* </li>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,489,* <li>The arrays <code>observed1</code> and <code>observed2</code> must
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,490,* have the same length and
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,491,* their common length must be at least 2.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,492,* </li></ul><p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,493,"* If any of the preconditions are not met, an"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,494,* <code>IllegalArgumentException</code> is thrown.</p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,496,* @param observed1 array of observed frequency counts of the first data set
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,497,* @param observed2 array of observed frequency counts of the second data set
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,498,* @return p-value
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,499,* @throws DimensionMismatchException the the length of the arrays does not match
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,500,* @throws NotPositiveException if one entry in <code>observed1</code> or
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,501,* <code>observed2</code> is not positive
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,502,* @throws ZeroException if either all counts of <code>observed1</code> or
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,503,"* <code>observed2</code> are zero, or if the count at the same index is zero"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,504,* for both arrays
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,505,* @throws MaxCountExceededException if an error occurs computing the p-value
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,506,* @since 1.2
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,508,"public double chiSquareTestDataSetsComparison(long[] observed1, long[] observed2)"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,509,"throws DimensionMismatchException, NotPositiveException, ZeroException,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,510,MaxCountExceededException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,512,ChiSquaredDistribution distribution;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,513,distribution = new ChiSquaredDistribution((double) observed1.length - 1);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,514,return 1 - distribution.cumulativeProbability(
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,515,"chiSquareDataSetsComparison(observed1, observed2));"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,520,* <p>Performs a Chi-Square two sample test comparing two binned data
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,521,* sets. The test evaluates the null hypothesis that the two lists of
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,522,"* observed counts conform to the same frequency distribution, with"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,523,* significance level <code>alpha</code>.  Returns true iff the null
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,524,* hypothesis can be rejected with 100 * (1 - alpha) percent confidence.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,525,* </p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,526,"* <p>See {@link #chiSquareDataSetsComparison(long[], long[])} for"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,527,* details on the formula used to compute the Chisquare statistic used
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,528,* in the test. The degrees of of freedom used to perform the test is
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,529,* one less than the common length of the input observed count arrays.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,530,* </p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,531,* <strong>Preconditions</strong>: <ul>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,532,* <li>Observed counts must be non-negative.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,533,* </li>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,534,* <li>Observed counts for a specific bin must not both be zero.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,535,* </li>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,536,* <li>Observed counts for a specific sample must not all be 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,537,* </li>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,538,* <li>The arrays <code>observed1</code> and <code>observed2</code> must
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,539,* have the same length and their common length must be at least 2.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,540,* </li>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,541,* <li> <code> 0 < alpha < 0.5 </code>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,542,* </li></ul><p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,543,"* If any of the preconditions are not met, an"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,544,* <code>IllegalArgumentException</code> is thrown.</p>
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,546,* @param observed1 array of observed frequency counts of the first data set
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,547,* @param observed2 array of observed frequency counts of the second data set
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,548,* @param alpha significance level of the test
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,549,* @return true iff null hypothesis can be rejected with confidence
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,550,* 1 - alpha
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,551,* @throws DimensionMismatchException the the length of the arrays does not match
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,552,* @throws NotPositiveException if one entry in <code>observed1</code> or
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,553,* <code>observed2</code> is not positive
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,554,* @throws ZeroException if either all counts of <code>observed1</code> or
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,555,"* <code>observed2</code> are zero, or if the count at the same index is zero"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,556,* for both arrays
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,557,"* @throws OutOfRangeException if <code>alpha</code> is not in the range (0, 0.5]"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,558,* @throws MaxCountExceededException if an error occurs performing the test
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,559,* @since 1.2
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,561,"public boolean chiSquareTestDataSetsComparison(final long[] observed1,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,562,"final long[] observed2,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,563,final double alpha)
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,564,"throws DimensionMismatchException, NotPositiveException,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,565,"ZeroException, OutOfRangeException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,567,if (alpha <= 0 ||
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,568,alpha > 0.5) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,569,"throw new OutOfRangeException(LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,570,"alpha, 0, 0.5);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,572,"return chiSquareTestDataSetsComparison(observed1, observed2) < alpha;"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,577,"* Checks to make sure that the input long[][] array is rectangular,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,578,"* has at least 2 rows and 2 columns, and has all non-negative entries."
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,580,* @param in input 2-way table to check
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,581,* @throws NullArgumentException if the array is null
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,582,* @throws DimensionMismatchException if the array is not valid
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,583,* @throws NotPositiveException if one entry is not positive
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,585,private void checkArray(final long[][] in)
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,586,"throws NullArgumentException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,587,NotPositiveException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,589,if (in.length < 2) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,590,"throw new DimensionMismatchException(in.length, 2);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,593,if (in[0].length < 2) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,594,"throw new DimensionMismatchException(in[0].length, 2);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,597,checkRectangular(in);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,598,checkNonNegative(in);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,602,//---------------------  Private array methods -- should find a utility home for these
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,605,* Throws DimensionMismatchException if the input array is not rectangular.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,607,* @param in array to be tested
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,608,* @throws NullArgumentException if input array is null
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,609,* @throws DimensionMismatchException if input array is not rectangular
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,611,private void checkRectangular(final long[][] in)
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,612,"throws NullArgumentException, DimensionMismatchException {"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,614,MathUtils.checkNotNull(in);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,615,for (int i = 1; i < in.length; i++) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,616,if (in[i].length != in[0].length) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,617,throw new DimensionMismatchException(
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,618,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,619,"in[i].length, in[0].length);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,626,* Check all entries of the input array are strictly positive.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,628,* @param in Array to be tested.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,629,* @throws NotStrictlyPositiveException if one entry is not strictly positive.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,631,private void checkPositive(final double[] in)
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,632,throws NotStrictlyPositiveException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,634,for (int i = 0; i < in.length; i++) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,635,if (in[i] <= 0) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,636,throw new NotStrictlyPositiveException(in[i]);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,643,* Check all entries of the input array are >= 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,645,* @param in Array to be tested.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,646,* @throws NotPositiveException if one entry is negative.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,219,"oolean chiSquareTest(long[][] counts, double alpha)"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,220,"hrows IllegalArgumentException, MathException;"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,648,private void checkNonNegative(final long[] in)
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,649,throws NotPositiveException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,651,for (int i = 0; i < in.length; i++) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,652,if (in[i] < 0) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,653,throw new NotPositiveException(in[i]);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,660,* Check all entries of the input array are >= 0.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,662,* @param in Array to be tested.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,663,* @throws NotPositiveException if one entry is negative.
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,665,private void checkNonNegative(final long[][] in)
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,666,throws NotPositiveException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,668,for (int i = 0; i < in.length; i ++) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,669,for (int j = 0; j < in[i].length; j++) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,670,if (in[i][j] < 0) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,671,throw new NotPositiveException(in[i][j]);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,17,ackage org.apache.commons.math.stat.inference;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,19,mport org.apache.commons.math.MathException;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,20,mport org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,21,mport org.apache.commons.math.exception.OutOfRangeException;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,22,mport org.apache.commons.math.exception.DimensionMismatchException;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,23,mport org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,24,mport org.apache.commons.math.distribution.ChiSquaredDistribution;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,25,mport org.apache.commons.math.exception.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,26,mport org.apache.commons.math.util.FastMath;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,27,mport org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,30, Implements Chi-Square test statistics defined in the
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,31, {@link UnknownDistributionChiSquareTest} interface.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,33, @version $Id$
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,35,ublic class ChiSquareTestImpl implements UnknownDistributionChiSquareTest {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,38, Construct a ChiSquareTestImpl
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,40,ublic ChiSquareTestImpl() {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,41,uper();
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,45, {@inheritDoc}
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,46, <p><strong>Note: </strong>This implementation rescales the
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,47, <code>expected</code> array if necessary to ensure that the sum of the
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,48, expected and observed counts are equal.</p>
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,50, @param observed array of observed frequency counts
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,51, @param expected array of expected frequency counts
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,52, @return chi-square test statistic
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,53, @throws DimensionMismatchException if the arrays length is less than 2.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,55,"ublic double chiSquare(double[] expected, long[] observed) {"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,56,f (expected.length < 2) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,57,"hrow new DimensionMismatchException(expected.length, 2);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,59,f (expected.length != observed.length) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,60,"hrow new DimensionMismatchException(expected.length, observed.length);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,62,heckPositive(expected);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,63,heckNonNegative(observed);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,64,ouble sumExpected = 0d;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,65,ouble sumObserved = 0d;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,66,or (int i = 0; i < observed.length; i++) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,67,umExpected += expected[i];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,68,umObserved += observed[i];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,70,ouble ratio = 1.0d;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,71,oolean rescale = false;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,72,f (FastMath.abs(sumExpected - sumObserved) > 10E-6) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,73,atio = sumObserved / sumExpected;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,74,escale = true;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,76,ouble sumSq = 0.0d;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,77,or (int i = 0; i < observed.length; i++) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,78,f (rescale) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,79,inal double dev = observed[i] - ratio * expected[i];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,80,umSq += dev * dev / (ratio * expected[i]);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,81, else {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,82,inal double dev = observed[i] - expected[i];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,83,umSq += dev * dev / expected[i];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,86,eturn sumSq;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,90, {@inheritDoc}
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,91, <p><strong>Note: </strong>This implementation rescales the
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,92, <code>expected</code> array if necessary to ensure that the sum of the
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,93, expected and observed counts are equal.</p>
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,95, @param observed array of observed frequency counts
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,96, @param expected array of expected frequency counts
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,97, @return p-value
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,98, @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,99, @throws MathException if an error occurs computing the p-value
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,101,"ublic double chiSquareTest(double[] expected, long[] observed)"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,102,hrows MathException {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,103,hiSquaredDistribution distribution =
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,104,ew ChiSquaredDistribution(expected.length - 1.0);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,105,eturn 1.0 - distribution.cumulativeProbability(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,106,"hiSquare(expected, observed));"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,110, {@inheritDoc}
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,111, <p><strong>Note: </strong>This implementation rescales the
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,112, <code>expected</code> array if necessary to ensure that the sum of the
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,113, expected and observed counts are equal.</p>
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,115, @param observed array of observed frequency counts
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,116, @param expected array of expected frequency counts
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,117, @param alpha significance level of the test
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,118, @return true iff null hypothesis can be rejected with confidence
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,119, 1 - alpha
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,120, @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,121, @throws MathException if an error occurs performing the test
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,123,"ublic boolean chiSquareTest(double[] expected, long[] observed,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,124,ouble alpha)
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,125,hrows MathException {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,126,f ((alpha <= 0) || (alpha > 0.5)) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,127,"hrow new OutOfRangeException(LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,128,"lpha, 0, 0.5);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,130,"eturn chiSquareTest(expected, observed) < alpha;"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,134, @param counts array representation of 2-way table
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,135, @return chi-square test statistic
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,136, @throws MathIllegalArgumentException if preconditions are not met.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,138,ublic double chiSquare(long[][] counts) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,139,heckArray(counts);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,140,nt nRows = counts.length;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,141,nt nCols = counts[0].length;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,143,"/ compute row, column and total sums"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,144,ouble[] rowSum = new double[nRows];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,145,ouble[] colSum = new double[nCols];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,146,ouble total = 0.0d;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,147,or (int row = 0; row < nRows; row++) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,148,or (int col = 0; col < nCols; col++) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,149,owSum[row] += counts[row][col];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,150,olSum[col] += counts[row][col];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,151,otal += counts[row][col];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,155,/ compute expected counts and chi-square
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,156,ouble sumSq = 0.0d;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,157,ouble expected = 0.0d;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,158,or (int row = 0; row < nRows; row++) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,159,or (int col = 0; col < nCols; col++) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,160,xpected = (rowSum[row] * colSum[col]) / total;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,161,umSq += ((counts[row][col] - expected) *
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,162,counts[row][col] - expected)) / expected;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,165,eturn sumSq;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,169, @param counts array representation of 2-way table
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,170, @return p-value
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,171, @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,172, @throws MathException if an error occurs computing the p-value
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,174,ublic double chiSquareTest(long[][] counts)
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,175,hrows MathException {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,176,heckArray(counts);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,177,ouble df = ((double) counts.length -1) * ((double) counts[0].length - 1);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,178,hiSquaredDistribution distribution;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,179,istribution = new ChiSquaredDistribution(df);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,180,eturn 1 - distribution.cumulativeProbability(chiSquare(counts));
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,184, @param counts array representation of 2-way table
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,185, @param alpha significance level of the test
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,186, @return true iff null hypothesis can be rejected with confidence
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,187, 1 - alpha
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,188, @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,189, @throws MathException if an error occurs performing the test
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,191,"ublic boolean chiSquareTest(long[][] counts, double alpha)"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,192,hrows MathException {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,193,f ((alpha <= 0) || (alpha > 0.5)) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,194,"hrow new OutOfRangeException(LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,195,"lpha, 0, 0.5);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,197,eturn chiSquareTest(counts) < alpha;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,201, @param observed1 array of observed frequency counts of the first data set
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,202, @param observed2 array of observed frequency counts of the second data set
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,203, @return chi-square test statistic
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,204, @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,205, @since 1.2
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,207,"ublic double chiSquareDataSetsComparison(long[] observed1, long[] observed2) {"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,208,/ Make sure lengths are same
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,209,f (observed1.length < 2) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,210,"hrow new DimensionMismatchException(observed1.length, 2);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,212,f (observed1.length != observed2.length) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,213,"hrow new DimensionMismatchException(observed1.length, observed2.length);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,216,/ Ensure non-negative counts
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,217,heckNonNegative(observed1);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,218,heckNonNegative(observed2);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,220,/ Compute and compare count sums
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,221,ong countSum1 = 0;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,222,ong countSum2 = 0;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,223,oolean unequalCounts = false;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,224,ouble weight = 0.0;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,225,or (int i = 0; i < observed1.length; i++) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,226,ountSum1 += observed1[i];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,227,ountSum2 += observed2[i];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,229,/ Ensure neither sample is uniformly 0
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,230,f (countSum1 == 0) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,231,"hrow new MathIllegalArgumentException(LocalizedFormats.OBSERVED_COUNTS_ALL_ZERO, 1);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,233,f (countSum2 == 0) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,234,"hrow new MathIllegalArgumentException(LocalizedFormats.OBSERVED_COUNTS_ALL_ZERO, 2);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,236,/ Compare and compute weight only if different
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,237,nequalCounts = countSum1 != countSum2;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,238,f (unequalCounts) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,239,eight = FastMath.sqrt((double) countSum1 / (double) countSum2);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,241,/ Compute ChiSquare statistic
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,242,ouble sumSq = 0.0d;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,243,ouble dev = 0.0d;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,244,ouble obs1 = 0.0d;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,245,ouble obs2 = 0.0d;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,246,or (int i = 0; i < observed1.length; i++) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,247,f (observed1[i] == 0 && observed2[i] == 0) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,248,"hrow new MathIllegalArgumentException(LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY, i);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,249, else {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,250,bs1 = observed1[i];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,251,bs2 = observed2[i];
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,252,f (unequalCounts) { // apply weights
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,253,ev = obs1/weight - obs2 * weight;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,254, else {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,255,ev = obs1 - obs2;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,257,umSq += (dev * dev) / (obs1 + obs2);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,260,eturn sumSq;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,264, @param observed1 array of observed frequency counts of the first data set
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,265, @param observed2 array of observed frequency counts of the second data set
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,266, @return p-value
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,267, @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,268, @throws MathException if an error occurs computing the p-value
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,269, @since 1.2
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,271,"ublic double chiSquareTestDataSetsComparison(long[] observed1, long[] observed2)"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,272,hrows MathException {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,273,hiSquaredDistribution distribution;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,274,istribution = new ChiSquaredDistribution((double) observed1.length - 1);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,275,eturn 1 - distribution.cumulativeProbability(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,276,"hiSquareDataSetsComparison(observed1, observed2));"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,280, @param observed1 array of observed frequency counts of the first data set
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,281, @param observed2 array of observed frequency counts of the second data set
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,282, @param alpha significance level of the test
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,283, @return true iff null hypothesis can be rejected with confidence
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,284, 1 - alpha
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,285, @throws MathIllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,286, @throws MathException if an error occurs performing the test
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,287, @since 1.2
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,289,"ublic boolean chiSquareTestDataSetsComparison(long[] observed1, long[] observed2,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,290,ouble alpha)
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,291,hrows MathException {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,292,f (alpha <= 0 ||
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,293,lpha > 0.5) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,294,"hrow new OutOfRangeException(LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,295,"lpha, 0, 0.5);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,297,"eturn chiSquareTestDataSetsComparison(observed1, observed2) < alpha;"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,301," Checks to make sure that the input long[][] array is rectangular,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,302," has at least 2 rows and 2 columns, and has all non-negative entries,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,303, throwing MathIllegalArgumentException if any of these checks fail.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,305, @param in input 2-way table to check
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,306, @throws MathIllegalArgumentException if the array is not valid
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,308,rivate void checkArray(long[][] in) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,309,f (in.length < 2) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,310,hrow new MathIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,311,"ocalizedFormats.INSUFFICIENT_DIMENSION, in.length, 2);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,314,f (in[0].length < 2) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,315,hrow new MathIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,316,"ocalizedFormats.INSUFFICIENT_DIMENSION, in[0].length, 2);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,319,heckRectangular(in);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,320,heckNonNegative(in);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,324,/---------------------  Private array methods -- should find a utility home for these
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,327, Throws MathIllegalArgumentException if the input array is not rectangular.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,329, @param in array to be tested
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,330, @throws NullArgumentException if input array is null
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,331, @throws MathIllegalArgumentException if input array is not rectangular
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,333,rivate void checkRectangular(long[][] in)
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,334,hrows NullArgumentException {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,335,athUtils.checkNotNull(in);
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,336,or (int i = 1; i < in.length; i++) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,337,f (in[i].length != in[0].length) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,338,"hrow new DimensionMismatchException(LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,339,"n[i].length, in[0].length);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,345, Check all entries of the input array are strictly positive.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,347, @param in Array to be tested.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,348, @exception MathIllegalArgumentException if one entry is not positive.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,350,rivate void checkPositive(double[] in) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,351,or (int i = 0; i < in.length; i++) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,352,f (in[i] <= 0) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,353,hrow new MathIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,354,"ocalizedFormats.NOT_POSITIVE_ELEMENT_AT_INDEX,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,355,", in[i]);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,361, Check all entries of the input array are >= 0.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,363, @param in Array to be tested.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,364, @exception MathIllegalArgumentException if one entry is negative.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,366,rivate void checkNonNegative(long[] in) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,367,or (int i = 0; i < in.length; i++) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,368,f (in[i] < 0) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,369,hrow new MathIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,370,"ocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,371,", in[i]);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,377, Check all entries of the input array are >= 0.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,379, @param in Array to be tested.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,380, @exception MathIllegalArgumentException if one entry is negative.
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,382,rivate void checkNonNegative(long[][] in) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,383,or (int i = 0; i < in.length; i ++) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,384,or (int j = 0; j < in[i].length; j++) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,385,f (in[i][j] < 0) {
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,386,hrow new MathIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,387,"ocalizedFormats.NEGATIVE_ELEMENT_AT_2D_INDEX,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,388,", j, in[i][j]);"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,24,import org.apache.commons.math.exception.NotPositiveException;
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,25,import org.apache.commons.math.exception.NotStrictlyPositiveException;
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,28,import org.apache.commons.math.exception.ZeroException;
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,41,rivate static final ChiSquareTest CHI_SQUARE_TEST = new ChiSquareTestImpl();
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,43,** Singleton ChiSquareTest instance. */
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,44,rivate static final UnknownDistributionChiSquareTest UNKNOWN_DISTRIBUTION_CHI_SQUARE_TEST =
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,45,ew ChiSquareTestImpl();
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,44,private static final ChiSquareTest CHI_SQUARE_TEST = new ChiSquareTest();
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,50,** Singleton MannWhitneyUTest instance using default ranking. */
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,51,rivate static final MannWhitneyUTest MANN_WHITNEY_U_TEST = new MannWhitneyUTest();
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,53,** Singleton WilcoxonSignedRankTest instance. */
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,54,rivate static final WilcoxonSignedRankTest WILCOXON_SIGNED_RANK_TEST =
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,55,ew WilcoxonSignedRankTest();
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,237,"ublic static double chiSquare(double[] expected, long[] observed)"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,238,hrows IllegalArgumentException {
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,229,"public static double chiSquare(final double[] expected, final long[] observed)"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,230,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,231,DimensionMismatchException {
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,245,ublic static double chiSquare(long[][] counts)
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,246,hrows IllegalArgumentException {
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,238,public static double chiSquare(final long[][] counts)
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,239,"throws NullArgumentException, NotPositiveException,"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,240,DimensionMismatchException {
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,253,"ublic static boolean chiSquareTest(double[] expected, long[] observed,"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,254,ouble alpha)
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,255,"hrows IllegalArgumentException, MathException {"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,247,"public static boolean chiSquareTest(final double[] expected, final long[] observed,"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,248,final double alpha)
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,249,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,250,"DimensionMismatchException, OutOfRangeException, MaxCountExceededException {"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,262,"ublic static double chiSquareTest(double[] expected, long[] observed)"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,263,"hrows IllegalArgumentException, MathException {"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,257,"public static double chiSquareTest(final double[] expected, final long[] observed)"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,258,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,259,"DimensionMismatchException, MaxCountExceededException {"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,270,"ublic static boolean chiSquareTest(long[][] counts, double alpha)"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,271,"hrows IllegalArgumentException, MathException {"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,266,"public static boolean chiSquareTest(final long[][] counts, final double alpha)"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,267,"throws NullArgumentException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,268,"NotPositiveException, OutOfRangeException, MaxCountExceededException {"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,278,ublic static double chiSquareTest(long[][] counts)
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,279,"hrows IllegalArgumentException, MathException {"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,275,public static double chiSquareTest(final long[][] counts)
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,276,"throws NullArgumentException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,277,"NotPositiveException, MaxCountExceededException {"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,288,"ublic static double chiSquareDataSetsComparison(long[] observed1, long[] observed2)"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,289,hrows IllegalArgumentException {
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,290,"eturn UNKNOWN_DISTRIBUTION_CHI_SQUARE_TEST.chiSquareDataSetsComparison(observed1, observed2);"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,286,"public static double chiSquareDataSetsComparison(final long[] observed1,"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,287,final long[] observed2)
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,288,"throws DimensionMismatchException, NotPositiveException, ZeroException {"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,289,"return CHI_SQUARE_TEST.chiSquareDataSetsComparison(observed1, observed2);"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,298,"ublic static double chiSquareTestDataSetsComparison(long[] observed1, long[] observed2)"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,299,"hrows IllegalArgumentException, MathException {"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,300,"eturn UNKNOWN_DISTRIBUTION_CHI_SQUARE_TEST.chiSquareTestDataSetsComparison(observed1, observed2);"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,297,"public static double chiSquareTestDataSetsComparison(final long[] observed1,"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,298,final long[] observed2)
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,299,"throws DimensionMismatchException, NotPositiveException, ZeroException,"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,300,MaxCountExceededException {
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,301,"return CHI_SQUARE_TEST.chiSquareTestDataSetsComparison(observed1, observed2);"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,309,"ublic static boolean chiSquareTestDataSetsComparison(long[] observed1, long[] observed2,"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,310,ouble alpha)
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,311,"hrows IllegalArgumentException, MathException {"
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,312,"eturn UNKNOWN_DISTRIBUTION_CHI_SQUARE_TEST.chiSquareTestDataSetsComparison(observed1, observed2, alpha);"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,309,"public static boolean chiSquareTestDataSetsComparison(final long[] observed1,"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,310,"final long[] observed2,"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,311,final double alpha)
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,312,"throws DimensionMismatchException, NotPositiveException,"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,313,"ZeroException, OutOfRangeException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,314,"return CHI_SQUARE_TEST.chiSquareTestDataSetsComparison(observed1, observed2, alpha);"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,17,ackage org.apache.commons.math.stat.inference;
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,19,mport org.apache.commons.math.MathException;
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,22, An interface for Chi-Square tests for unknown distributions.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,23, <p>Two samples tests are used when the distribution is unknown <i>a priori</i>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,24, but provided by one sample. We compare the second sample against the first.</p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,26, @version $Id$
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,27, @since 1.2
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,29,ublic interface UnknownDistributionChiSquareTest extends ChiSquareTest {
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,32, <p>Computes a
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,33," <a href=""http://www.itl.nist.gov/div898/software/dataplot/refman1/auxillar/chi2samp.htm"">"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,34, Chi-Square two sample test statistic</a> comparing bin frequency counts
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,35, in <code>observed1</code> and <code>observed2</code>.  The
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,36, sums of frequency counts in the two samples are not required to be the
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,37, same.  The formula used to compute the test statistic is</p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,38, <code>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,39, &sum;[(K * observed1[i] - observed2[i]/K)<sup>2</sup> / (observed1[i] + observed2[i])]
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,40, </code> where
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,41, <br/><code>K = &sqrt;[&sum(observed2 / &sum;(observed1)]</code>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,42, </p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,43, <p>This statistic can be used to perform a Chi-Square test evaluating the null hypothesis that
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,44, both observed counts follow the same distribution.</p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,45, <p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,46, <strong>Preconditions</strong>: <ul>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,47, <li>Observed counts must be non-negative.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,48, </li>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,49, <li>Observed counts for a specific bin must not both be zero.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,50, </li>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,51, <li>Observed counts for a specific sample must not all be 0.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,52, </li>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,53, <li>The arrays <code>observed1</code> and <code>observed2</code> must have the same length and
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,54, their common length must be at least 2.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,55, </li></ul></p><p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,56," If any of the preconditions are not met, an"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,57, <code>IllegalArgumentException</code> is thrown.</p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,59, @param observed1 array of observed frequency counts of the first data set
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,60, @param observed2 array of observed frequency counts of the second data set
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,61, @return chiSquare statistic
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,62, @throws IllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,64,"ouble chiSquareDataSetsComparison(long[] observed1, long[] observed2)"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,65,hrows IllegalArgumentException;
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,68," <p>Returns the <i>observed significance level</i>, or <a href="
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,69," ""http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue"">"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,70," p-value</a>, associated with a Chi-Square two sample test comparing"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,71, bin frequency counts in <code>observed1</code> and
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,72, <code>observed2</code>.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,73, </p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,74, <p>The number returned is the smallest significance level at which one
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,75, can reject the null hypothesis that the observed counts conform to the
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,76, same distribution.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,77, </p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,78," <p>See {@link #chiSquareDataSetsComparison(long[], long[])} for details"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,79, on the formula used to compute the test statistic. The degrees of
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,80, of freedom used to perform the test is one less than the common length
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,81, of the input observed count arrays.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,82, </p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,83, <strong>Preconditions</strong>: <ul>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,84, <li>Observed counts must be non-negative.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,85, </li>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,86, <li>Observed counts for a specific bin must not both be zero.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,87, </li>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,88, <li>Observed counts for a specific sample must not all be 0.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,89, </li>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,90, <li>The arrays <code>observed1</code> and <code>observed2</code> must
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,91, have the same length and
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,92, their common length must be at least 2.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,93, </li></ul><p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,94," If any of the preconditions are not met, an"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,95, <code>IllegalArgumentException</code> is thrown.</p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,97, @param observed1 array of observed frequency counts of the first data set
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,98, @param observed2 array of observed frequency counts of the second data set
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,99, @return p-value
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,100, @throws IllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,101, @throws MathException if an error occurs computing the p-value
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,103,"ouble chiSquareTestDataSetsComparison(long[] observed1, long[] observed2)"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,104,"hrows IllegalArgumentException, MathException;"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,107, <p>Performs a Chi-Square two sample test comparing two binned data
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,108, sets. The test evaluates the null hypothesis that the two lists of
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,109," observed counts conform to the same frequency distribution, with"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,110, significance level <code>alpha</code>.  Returns true iff the null
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,111, hypothesis can be rejected with 100 * (1 - alpha) percent confidence.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,112, </p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,113," <p>See {@link #chiSquareDataSetsComparison(long[], long[])} for"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,114, details on the formula used to compute the Chisquare statistic used
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,115, in the test. The degrees of of freedom used to perform the test is
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,116, one less than the common length of the input observed count arrays.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,117, </p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,118, <strong>Preconditions</strong>: <ul>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,119, <li>Observed counts must be non-negative.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,120, </li>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,121, <li>Observed counts for a specific bin must not both be zero.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,122, </li>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,123, <li>Observed counts for a specific sample must not all be 0.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,124, </li>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,125, <li>The arrays <code>observed1</code> and <code>observed2</code> must
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,126, have the same length and their common length must be at least 2.
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,127, </li>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,128, <li> <code> 0 < alpha < 0.5 </code>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,129, </li></ul><p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,130," If any of the preconditions are not met, an"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,131, <code>IllegalArgumentException</code> is thrown.</p>
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,133, @param observed1 array of observed frequency counts of the first data set
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,134, @param observed2 array of observed frequency counts of the second data set
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,135, @param alpha significance level of the test
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,136, @return true iff null hypothesis can be rejected with confidence
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,137, 1 - alpha
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,138, @throws IllegalArgumentException if preconditions are not met
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,139, @throws MathException if an error occurs performing the test
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,141,"oolean chiSquareTestDataSetsComparison(long[] observed1, long[] observed2, double alpha)"
False,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,142,"hrows IllegalArgumentException, MathException;"
False,src/test/java/org/apache/commons/math/TestUtils.java,src/test/java/org/apache/commons/math/TestUtils.java,34,mport org.apache.commons.math.stat.inference.ChiSquareTestImpl;
False,src/test/java/org/apache/commons/math/TestUtils.java,src/test/java/org/apache/commons/math/TestUtils.java,360,hiSquareTest chiSquareTest = new ChiSquareTestImpl();
True,src/test/java/org/apache/commons/math/TestUtils.java,src/test/java/org/apache/commons/math/TestUtils.java,359,ChiSquareTest chiSquareTest = new ChiSquareTest();
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,48,mport org.apache.commons.math.stat.inference.ChiSquareTestImpl;
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,76,rotected final ChiSquareTestImpl testStatistic = new ChiSquareTestImpl();
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,75,protected final ChiSquareTest testStatistic = new ChiSquareTest();
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,476,hiSquareTest chiSquareTest = new ChiSquareTestImpl();
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,475,ChiSquareTest chiSquareTest = new ChiSquareTest();
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,19,mport org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,19,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,20,import org.apache.commons.math.exception.NotPositiveException;
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,21,import org.apache.commons.math.exception.NotStrictlyPositiveException;
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,22,import org.apache.commons.math.exception.OutOfRangeException;
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,23,import org.apache.commons.math.exception.ZeroException;
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,32,rotected UnknownDistributionChiSquareTest testStatistic = new ChiSquareTestImpl();
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,36,protected ChiSquareTest testStatistic = new ChiSquareTest();
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,56,"ssert.fail(""alpha out of range, MathIllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,57, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,60,"Assert.fail(""alpha out of range, OutOfRangeException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,61,} catch (OutOfRangeException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,65,"ssert.fail(""arguments too short, MathIllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,66, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,69,"Assert.fail(""arguments too short, DimensionMismatchException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,70,} catch (DimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,75,"ssert.fail(""arrays have different lengths, MathIllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,76, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,79,"Assert.fail(""arrays have different lengths, DimensionMismatchException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,80,} catch (DimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,84,"ssert.fail(""bad expected count, MathIllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,85, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,88,"Assert.fail(""bad expected count, NotStrictlyPositiveException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,89,} catch (NotStrictlyPositiveException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,94,"ssert.fail(""bad expected count, MathIllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,95, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,98,"Assert.fail(""bad expected count, NotPositiveException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,99,} catch (NotPositiveException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,121,"ssert.fail(""Expecting MathIllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,122, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,125,"Assert.fail(""Expecting DimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,126,} catch (DimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,130,"ssert.fail(""Expecting MathIllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,131, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,134,"Assert.fail(""Expecting DimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,135,} catch (DimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,137,"ssert.fail(""Expecting MathIllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,138, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,141,"Assert.fail(""Expecting DimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,142,} catch (DimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,146,"ssert.fail(""Expecting MathIllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,147, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,150,"Assert.fail(""Expecting NotPositiveException"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,151,} catch (NotPositiveException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,154,"ssert.fail(""Expecting MathIllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,155, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,158,"Assert.fail(""Expecting OutOfRangeException"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,159,} catch (OutOfRangeException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,170,rg.apache.commons.math.stat.inference.ChiSquareTestImpl csti =
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,171,ew org.apache.commons.math.stat.inference.ChiSquareTestImpl();
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,174,org.apache.commons.math.stat.inference.ChiSquareTest csti =
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,175,new org.apache.commons.math.stat.inference.ChiSquareTest();
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,192,hrows Exception {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,196,throws Exception {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,209,hrows Exception {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,213,throws Exception {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,228,hrows Exception {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,232,throws Exception {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,234,"ssert.fail(""Expecting MathIllegalArgumentException - negative count"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,235, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,238,"Assert.fail(""Expecting NotPositiveException - negative count"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,239,} catch (NotPositiveException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,243,"ssert.fail(""Expecting MathIllegalArgumentException - double 0's"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,244, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,247,"Assert.fail(""Expecting ZeroException - double 0's"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,248,} catch (ZeroException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,252,"ssert.fail(""Expecting MathIllegalArgumentException - vanishing counts"");"
False,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,253, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,256,"Assert.fail(""Expecting ZeroException - vanishing counts"");"
True,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,257,} catch (ZeroException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,22,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,24,import org.apache.commons.math.exception.NotPositiveException;
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,25,import org.apache.commons.math.exception.NotStrictlyPositiveException;
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,26,import org.apache.commons.math.exception.OutOfRangeException;
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,57,"ssert.fail(""alpha out of range, MathIllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,58, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,61,"Assert.fail(""alpha out of range, OutOfRangeException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,62,} catch (OutOfRangeException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,66,"ssert.fail(""arguments too short, MathIllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,67, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,70,"Assert.fail(""arguments too short, DimensionMismatchException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,71,} catch (DimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,76,"ssert.fail(""arrays have different lengths, MathIllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,77, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,80,"Assert.fail(""arrays have different lengths, DimensionMismatchException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,81,} catch (DimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,85,"ssert.fail(""bad expected count, MathIllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,86, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,89,"Assert.fail(""bad expected count, NotStrictlyPositiveException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,90,} catch (NotStrictlyPositiveException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,95,"ssert.fail(""bad expected count, MathIllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,96, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,99,"Assert.fail(""bad expected count, NotPositiveException expected"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,100,} catch (NotPositiveException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,122,"ssert.fail(""Expecting MathIllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,123, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,126,"Assert.fail(""Expecting DimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,127,} catch (DimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,131,"ssert.fail(""Expecting MathIllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,132, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,135,"Assert.fail(""Expecting DimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,136,} catch (DimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,138,"ssert.fail(""Expecting MathIllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,139, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,142,"Assert.fail(""Expecting DimensionMismatchException"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,143,} catch (DimensionMismatchException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,147,"ssert.fail(""Expecting MathIllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,148, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,151,"Assert.fail(""Expecting NotPositiveException"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,152,} catch (NotPositiveException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,155,"ssert.fail(""Expecting MathIllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,156, catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,159,"Assert.fail(""Expecting OutOfRangeException"");"
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,160,} catch (OutOfRangeException ex) {
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,171,rg.apache.commons.math.stat.inference.ChiSquareTestImpl csti =
False,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,172,ew org.apache.commons.math.stat.inference.ChiSquareTestImpl();
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,175,org.apache.commons.math.stat.inference.ChiSquareTest csti =
True,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,176,new org.apache.commons.math.stat.inference.ChiSquareTest();
