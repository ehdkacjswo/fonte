is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,22,import org.apache.commons.math3.exception.OutOfRangeException;
True,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,156,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,157,@Override
True,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,158,public double inverseCumulativeProbability(final double p) throws OutOfRangeException {
True,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,159,if (p < 0.0 || p > 1.0) {
True,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,160,"throw new OutOfRangeException(p, 0, 1);"
True,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java,162,return mean + standardDeviation * SQRT2 * Erf.erfInv(2 * p - 1);
