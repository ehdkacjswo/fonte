is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/filter/KalmanFilter.java,src/main/java/org/apache/commons/math/filter/KalmanFilter.java,237,eturn stateEstimation.getData();
True,src/main/java/org/apache/commons/math/filter/KalmanFilter.java,src/main/java/org/apache/commons/math/filter/KalmanFilter.java,237,return stateEstimation.toArray();
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,433,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,434,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,435,ublic double[] getData() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,436,eturn data.clone();
False,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,205,inal double[] x = b.getData();
True,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,205,final double[] x = b.toArray();
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,45,eturn x.getData();
True,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,45,return x.toArray();
False,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,377,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,378,Override
False,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,379,ublic double[] getData() {
False,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,380,ouble[] res = new double[virtualSize];
False,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,381,terator iter = entries.iterator();
False,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,382,hile (iter.hasNext()) {
False,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,383,ter.advance();
False,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,384,es[iter.key()] = iter.value();
False,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,386,eturn res;
False,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,659,eturn getData();
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,647,double[] res = new double[virtualSize];
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,648,Iterator iter = entries.iterator();
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,649,while (iter.hasNext()) {
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,650,iter.advance();
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,651,res[iter.key()] = iter.value();
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,653,return res;
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,642, Convert the vector to an array of {@code double}s.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,643, The array is independent from this vector data: the elements
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,644, are copied.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,646, @return an array containing a copy of the vector elements.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,648,ublic double[] getData() {
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,649,eturn toArray();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,948,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,949,Override
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,950,ublic double[] getData() {
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,951,eturn v.getData();
False,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,834, = computeObjectiveValue(currentBest.getData());
True,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,834,f = computeObjectiveValue(currentBest.toArray());
False,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,1745,inal double objectiveValue = computeObjectiveValue(currentBest.getData());
True,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,1745,final double objectiveValue = computeObjectiveValue(currentBest.toArray());
False,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,194,"opyArray(objectiveCoefficients.getData(), matrix.getDataRef()[zIndex]);"
True,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,194,"copyArray(objectiveCoefficients.toArray(), matrix.getDataRef()[zIndex]);"
False,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,211,"opyArray(constraint.getCoefficients().getData(), matrix.getDataRef()[row]);"
True,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,211,"copyArray(constraint.getCoefficients().toArray(), matrix.getDataRef()[row]);"
False,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,299,or (double coefficient : coefficients.getData()) {
True,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,299,for (double coefficient : coefficients.toArray()) {
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,248,eturn b.getData();
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,248,return b.toArray();
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,257,eturn e.getData();
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,257,return e.toArray();
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,331,eturn new Variance().evaluate(Y.getData());
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,331,return new Variance().evaluate(Y.toArray());
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,136,eturn StatUtils.sumSq(Y.getData());
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,136,return StatUtils.sumSq(Y.toArray());
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,138,eturn new SecondMoment().evaluate(Y.getData());
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,138,return new SecondMoment().evaluate(Y.toArray());
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,309,".operate(new ArrayRealVector(testVector)).getData(), entryTolerance);"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,309,"m.operate(new ArrayRealVector(testVector)).toArray(), entryTolerance);"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,350,"estUtils.assertEquals(""premultiply"", m.preMultiply(new ArrayRealVector(testVector).getData()),"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,350,"TestUtils.assertEquals(""premultiply"", m.preMultiply(new ArrayRealVector(testVector).toArray()),"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,207,ublic double[] getData() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,208,eturn data.clone();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,386,"ssert.assertNotSame(v3_bis.getData(), vec1);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,382,"Assert.assertNotSame(v3_bis.toArray(), vec1);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,392,"ssert.assertNotSame(v3_ter.getData(), vec1);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,388,"Assert.assertNotSame(v3_ter.toArray(), vec1);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,499,"ssert.assertNotSame(""testData not same object "", v1.data, v_copy.getData());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,495,"Assert.assertNotSame(""testData not same object "", v1.data, v_copy.toArray());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,569,"ssertClose(""compare vectors"" ,result_mapAdd,v_mapAdd.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,565,"assertClose(""compare vectors"" ,result_mapAdd,v_mapAdd.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,575,"ssertClose(""compare vectors"" ,result_mapAddToSelf,v_mapAddToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,571,"assertClose(""compare vectors"" ,result_mapAddToSelf,v_mapAddToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,580,"ssertClose(""compare vectors"" ,result_mapSubtract,v_mapSubtract.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,576,"assertClose(""compare vectors"" ,result_mapSubtract,v_mapSubtract.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,586,"ssertClose(""compare vectors"" ,result_mapSubtractToSelf,v_mapSubtractToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,582,"assertClose(""compare vectors"" ,result_mapSubtractToSelf,v_mapSubtractToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,591,"ssertClose(""compare vectors"" ,result_mapMultiply,v_mapMultiply.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,587,"assertClose(""compare vectors"" ,result_mapMultiply,v_mapMultiply.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,597,"ssertClose(""compare vectors"" ,result_mapMultiplyToSelf,v_mapMultiplyToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,593,"assertClose(""compare vectors"" ,result_mapMultiplyToSelf,v_mapMultiplyToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,602,"ssertClose(""compare vectors"" ,result_mapDivide,v_mapDivide.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,598,"assertClose(""compare vectors"" ,result_mapDivide,v_mapDivide.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,608,"ssertClose(""compare vectors"" ,result_mapDivideToSelf,v_mapDivideToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,604,"assertClose(""compare vectors"" ,result_mapDivideToSelf,v_mapDivideToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,613,"ssertClose(""compare vectors"" ,result_mapPow,v_mapPow.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,609,"assertClose(""compare vectors"" ,result_mapPow,v_mapPow.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,619,"ssertClose(""compare vectors"" ,result_mapPowToSelf,v_mapPowToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,615,"assertClose(""compare vectors"" ,result_mapPowToSelf,v_mapPowToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,624,"ssertClose(""compare vectors"" ,result_mapExp,v_mapExp.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,620,"assertClose(""compare vectors"" ,result_mapExp,v_mapExp.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,630,"ssertClose(""compare vectors"" ,result_mapExpToSelf,v_mapExpToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,626,"assertClose(""compare vectors"" ,result_mapExpToSelf,v_mapExpToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,636,"ssertClose(""compare vectors"" ,result_mapExpm1,v_mapExpm1.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,632,"assertClose(""compare vectors"" ,result_mapExpm1,v_mapExpm1.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,642,"ssertClose(""compare vectors"" ,result_mapExpm1ToSelf,v_mapExpm1ToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,638,"assertClose(""compare vectors"" ,result_mapExpm1ToSelf,v_mapExpm1ToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,647,"ssertClose(""compare vectors"" ,result_mapLog,v_mapLog.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,643,"assertClose(""compare vectors"" ,result_mapLog,v_mapLog.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,653,"ssertClose(""compare vectors"" ,result_mapLogToSelf,v_mapLogToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,649,"assertClose(""compare vectors"" ,result_mapLogToSelf,v_mapLogToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,658,"ssertClose(""compare vectors"" ,result_mapLog10,v_mapLog10.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,654,"assertClose(""compare vectors"" ,result_mapLog10,v_mapLog10.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,664,"ssertClose(""compare vectors"" ,result_mapLog10ToSelf,v_mapLog10ToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,660,"assertClose(""compare vectors"" ,result_mapLog10ToSelf,v_mapLog10ToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,669,"ssertClose(""compare vectors"" ,result_mapLog1p,v_mapLog1p.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,665,"assertClose(""compare vectors"" ,result_mapLog1p,v_mapLog1p.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,675,"ssertClose(""compare vectors"" ,result_mapLog1pToSelf,v_mapLog1pToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,671,"assertClose(""compare vectors"" ,result_mapLog1pToSelf,v_mapLog1pToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,680,"ssertClose(""compare vectors"" ,result_mapCosh,v_mapCosh.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,676,"assertClose(""compare vectors"" ,result_mapCosh,v_mapCosh.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,686,"ssertClose(""compare vectors"" ,result_mapCoshToSelf,v_mapCoshToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,682,"assertClose(""compare vectors"" ,result_mapCoshToSelf,v_mapCoshToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,691,"ssertClose(""compare vectors"" ,result_mapSinh,v_mapSinh.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,687,"assertClose(""compare vectors"" ,result_mapSinh,v_mapSinh.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,697,"ssertClose(""compare vectors"" ,result_mapSinhToSelf,v_mapSinhToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,693,"assertClose(""compare vectors"" ,result_mapSinhToSelf,v_mapSinhToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,702,"ssertClose(""compare vectors"" ,result_mapTanh,v_mapTanh.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,698,"assertClose(""compare vectors"" ,result_mapTanh,v_mapTanh.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,708,"ssertClose(""compare vectors"" ,result_mapTanhToSelf,v_mapTanhToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,704,"assertClose(""compare vectors"" ,result_mapTanhToSelf,v_mapTanhToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,713,"ssertClose(""compare vectors"" ,result_mapCos,v_mapCos.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,709,"assertClose(""compare vectors"" ,result_mapCos,v_mapCos.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,719,"ssertClose(""compare vectors"" ,result_mapCosToSelf,v_mapCosToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,715,"assertClose(""compare vectors"" ,result_mapCosToSelf,v_mapCosToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,724,"ssertClose(""compare vectors"" ,result_mapSin,v_mapSin.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,720,"assertClose(""compare vectors"" ,result_mapSin,v_mapSin.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,730,"ssertClose(""compare vectors"" ,result_mapSinToSelf,v_mapSinToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,726,"assertClose(""compare vectors"" ,result_mapSinToSelf,v_mapSinToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,735,"ssertClose(""compare vectors"" ,result_mapTan,v_mapTan.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,731,"assertClose(""compare vectors"" ,result_mapTan,v_mapTan.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,741,"ssertClose(""compare vectors"" ,result_mapTanToSelf,v_mapTanToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,737,"assertClose(""compare vectors"" ,result_mapTanToSelf,v_mapTanToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,749,"ssertClose(""compare vectors"" ,result_mapAcos,v_mapAcos.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,745,"assertClose(""compare vectors"" ,result_mapAcos,v_mapAcos.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,755,"ssertClose(""compare vectors"" ,result_mapAcosToSelf,v_mapAcosToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,751,"assertClose(""compare vectors"" ,result_mapAcosToSelf,v_mapAcosToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,760,"ssertClose(""compare vectors"" ,result_mapAsin,v_mapAsin.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,756,"assertClose(""compare vectors"" ,result_mapAsin,v_mapAsin.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,766,"ssertClose(""compare vectors"" ,result_mapAsinToSelf,v_mapAsinToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,762,"assertClose(""compare vectors"" ,result_mapAsinToSelf,v_mapAsinToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,771,"ssertClose(""compare vectors"" ,result_mapAtan,v_mapAtan.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,767,"assertClose(""compare vectors"" ,result_mapAtan,v_mapAtan.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,777,"ssertClose(""compare vectors"" ,result_mapAtanToSelf,v_mapAtanToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,773,"assertClose(""compare vectors"" ,result_mapAtanToSelf,v_mapAtanToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,782,"ssertClose(""compare vectors"" ,result_mapInv,v_mapInv.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,778,"assertClose(""compare vectors"" ,result_mapInv,v_mapInv.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,788,"ssertClose(""compare vectors"" ,result_mapInvToSelf,v_mapInvToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,784,"assertClose(""compare vectors"" ,result_mapInvToSelf,v_mapInvToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,796,"ssertClose(""compare vectors"" ,result_mapAbs,v_mapAbs.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,792,"assertClose(""compare vectors"" ,result_mapAbs,v_mapAbs.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,802,"ssertClose(""compare vectors"" ,result_mapAbsToSelf,v_mapAbsToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,798,"assertClose(""compare vectors"" ,result_mapAbsToSelf,v_mapAbsToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,807,"ssertClose(""compare vectors"" ,result_mapSqrt,v_mapSqrt.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,803,"assertClose(""compare vectors"" ,result_mapSqrt,v_mapSqrt.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,813,"ssertClose(""compare vectors"" ,result_mapSqrtToSelf,v_mapSqrtToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,809,"assertClose(""compare vectors"" ,result_mapSqrtToSelf,v_mapSqrtToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,821,"ssertClose(""compare vectors"" ,result_mapCbrt,v_mapCbrt.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,817,"assertClose(""compare vectors"" ,result_mapCbrt,v_mapCbrt.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,827,"ssertClose(""compare vectors"" ,result_mapCbrtToSelf,v_mapCbrtToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,823,"assertClose(""compare vectors"" ,result_mapCbrtToSelf,v_mapCbrtToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,835,"ssertClose(""compare vectors"" ,result_mapCeil,v_mapCeil.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,831,"assertClose(""compare vectors"" ,result_mapCeil,v_mapCeil.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,841,"ssertClose(""compare vectors"" ,result_mapCeilToSelf,v_mapCeilToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,837,"assertClose(""compare vectors"" ,result_mapCeilToSelf,v_mapCeilToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,846,"ssertClose(""compare vectors"" ,result_mapFloor,v_mapFloor.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,842,"assertClose(""compare vectors"" ,result_mapFloor,v_mapFloor.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,852,"ssertClose(""compare vectors"" ,result_mapFloorToSelf,v_mapFloorToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,848,"assertClose(""compare vectors"" ,result_mapFloorToSelf,v_mapFloorToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,857,"ssertClose(""compare vectors"" ,result_mapRint,v_mapRint.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,853,"assertClose(""compare vectors"" ,result_mapRint,v_mapRint.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,863,"ssertClose(""compare vectors"" ,result_mapRintToSelf,v_mapRintToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,859,"assertClose(""compare vectors"" ,result_mapRintToSelf,v_mapRintToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,868,"ssertClose(""compare vectors"" ,result_mapSignum,v_mapSignum.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,864,"assertClose(""compare vectors"" ,result_mapSignum,v_mapSignum.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,874,"ssertClose(""compare vectors"" ,result_mapSignumToSelf,v_mapSignumToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,870,"assertClose(""compare vectors"" ,result_mapSignumToSelf,v_mapSignumToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,881,"ssertClose(""compare vectors"" ,result_mapUlp,v_mapUlp.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,877,"assertClose(""compare vectors"" ,result_mapUlp,v_mapUlp.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,887,"ssertClose(""compare vectors"" ,result_mapUlpToSelf,v_mapUlpToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,883,"assertClose(""compare vectors"" ,result_mapUlpToSelf,v_mapUlpToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,947,"ssertClose(""compare vect"" ,v_add.getData(), result_add, normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,943,"assertClose(""compare vect"" ,v_add.toArray(), result_add, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,952,"ssertClose(""compare vect"" ,v_add_i.getData(),result_add_i,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,948,"assertClose(""compare vect"" ,v_add_i.toArray(),result_add_i,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,957,"ssertClose(""compare vect"" ,v_subtract.getData(),result_subtract,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,953,"assertClose(""compare vect"" ,v_subtract.toArray(),result_subtract,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,961,"ssertClose(""compare vect"" ,v_subtract_i.getData(),result_subtract_i,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,957,"assertClose(""compare vect"" ,v_subtract_i.toArray(),result_subtract_i,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,966,"ssertClose(""compare vect"" ,v_ebeMultiply.getData(),result_ebeMultiply,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,962,"assertClose(""compare vect"" ,v_ebeMultiply.toArray(),result_ebeMultiply,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,970,"ssertClose(""compare vect"" ,v_ebeMultiply_2.getData(),result_ebeMultiply_2,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,966,"assertClose(""compare vect"" ,v_ebeMultiply_2.toArray(),result_ebeMultiply_2,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,974,"ssertClose(""compare vect"" ,v_ebeMultiply_3.getData(),result_ebeMultiply_3,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,970,"assertClose(""compare vect"" ,v_ebeMultiply_3.toArray(),result_ebeMultiply_3,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,979,"ssertClose(""compare vect"" ,v_ebeDivide.getData(),result_ebeDivide,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,975,"assertClose(""compare vect"" ,v_ebeDivide.toArray(),result_ebeDivide,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,983,"ssertClose(""compare vect"" ,v_ebeDivide_2.getData(),result_ebeDivide_2,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,979,"assertClose(""compare vect"" ,v_ebeDivide_2.toArray(),result_ebeDivide_2,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,987,"ssertClose(""compare vect"" ,v_ebeDivide_3.getData(),result_ebeDivide_3,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,983,"assertClose(""compare vect"" ,v_ebeDivide_3.toArray(),result_ebeDivide_3,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1008,"ssertClose(""compare vect"" ,v_unitVector.getData(),v_unitVector_2.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1004,"assertClose(""compare vect"" ,v_unitVector.toArray(),v_unitVector_2.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1019,"ssertClose(""compare vect"" ,v_unitVector_2.getData(),v_unitize.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1015,"assertClose(""compare vect"" ,v_unitVector_2.toArray(),v_unitize.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1029,"ssertClose(""compare vect"", v_projection.getData(), result_projection, normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1025,"assertClose(""compare vect"", v_projection.toArray(), result_projection, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1033,"ssertClose(""compare vect"", v_projection_2.getData(), result_projection_2, normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1029,"assertClose(""compare vect"", v_projection_2.toArray(), result_projection_2, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1229,"inal double[] actual = x.combine(a, b, y).getData();"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1225,"final double[] actual = x.combine(a, b, y).toArray();"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1271,"inal double[] actual = x.combine(a, b, y).getData();"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1267,"final double[] actual = x.combine(a, b, y).toArray();"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1314,inal double[] actual = x.getData();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1310,final double[] actual = x.toArray();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1357,inal double[] actual = x.getData();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1353,final double[] actual = x.toArray();
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,331,"ssertClose(testVector, m.operate(new ArrayRealVector(testVector)).getData(), entryTolerance);"
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,331,"assertClose(testVector, m.operate(new ArrayRealVector(testVector)).toArray(), entryTolerance);"
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,399,"ssertClose(m.preMultiply(new ArrayRealVector(testVector).getData()),"
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,399,"assertClose(m.preMultiply(new ArrayRealVector(testVector).toArray()),"
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,312,"estUtils.assertEquals( new double[]{1,2,-1.66666666666667, 1.0}  , b.getData() , 1.0e-12);"
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,312,"TestUtils.assertEquals( new double[]{1,2,-1.66666666666667, 1.0}  , b.toArray() , 1.0e-12);"
False,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,326,"estUtils.assertEquals( new double[]{-1,3,1}  , b.getData() , 1.0e-12);"
True,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,326,"TestUtils.assertEquals( new double[]{-1,3,1}  , b.toArray() , 1.0e-12);"
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,260,"ew ArrayRealVector(testVector)).getData(), entryTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,260,"new ArrayRealVector(testVector)).toArray(), entryTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,301,"ew ArrayRealVector(testVector).getData()), preMultTest, normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,301,"new ArrayRealVector(testVector).toArray()), preMultTest, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,176,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,177,ublic double[] getData() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,178,eturn data.clone();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,275,hrow unsupported();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,270,return data.clone();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,419,"ssertClose(""compare vectors"" ,result_mapAdd,v_mapAdd.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,414,"assertClose(""compare vectors"" ,result_mapAdd,v_mapAdd.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,425,"ssertClose(""compare vectors"" ,result_mapAddToSelf,v_mapAddToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,420,"assertClose(""compare vectors"" ,result_mapAddToSelf,v_mapAddToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,430,"ssertClose(""compare vectors"" ,result_mapSubtract,v_mapSubtract.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,425,"assertClose(""compare vectors"" ,result_mapSubtract,v_mapSubtract.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,436,"ssertClose(""compare vectors"" ,result_mapSubtractToSelf,v_mapSubtractToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,431,"assertClose(""compare vectors"" ,result_mapSubtractToSelf,v_mapSubtractToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,441,"ssertClose(""compare vectors"" ,result_mapMultiply,v_mapMultiply.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,436,"assertClose(""compare vectors"" ,result_mapMultiply,v_mapMultiply.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,447,"ssertClose(""compare vectors"" ,result_mapMultiplyToSelf,v_mapMultiplyToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,442,"assertClose(""compare vectors"" ,result_mapMultiplyToSelf,v_mapMultiplyToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,452,"ssertClose(""compare vectors"" ,result_mapDivide,v_mapDivide.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,447,"assertClose(""compare vectors"" ,result_mapDivide,v_mapDivide.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,458,"ssertClose(""compare vectors"" ,result_mapDivideToSelf,v_mapDivideToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,453,"assertClose(""compare vectors"" ,result_mapDivideToSelf,v_mapDivideToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,463,"ssertClose(""compare vectors"" ,result_mapPow,v_mapPow.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,458,"assertClose(""compare vectors"" ,result_mapPow,v_mapPow.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,469,"ssertClose(""compare vectors"" ,result_mapPowToSelf,v_mapPowToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,464,"assertClose(""compare vectors"" ,result_mapPowToSelf,v_mapPowToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,474,"ssertClose(""compare vectors"" ,result_mapExp,v_mapExp.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,469,"assertClose(""compare vectors"" ,result_mapExp,v_mapExp.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,480,"ssertClose(""compare vectors"" ,result_mapExpToSelf,v_mapExpToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,475,"assertClose(""compare vectors"" ,result_mapExpToSelf,v_mapExpToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,486,"ssertClose(""compare vectors"" ,result_mapExpm1,v_mapExpm1.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,481,"assertClose(""compare vectors"" ,result_mapExpm1,v_mapExpm1.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,492,"ssertClose(""compare vectors"" ,result_mapExpm1ToSelf,v_mapExpm1ToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,487,"assertClose(""compare vectors"" ,result_mapExpm1ToSelf,v_mapExpm1ToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,497,"ssertClose(""compare vectors"" ,result_mapLog,v_mapLog.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,492,"assertClose(""compare vectors"" ,result_mapLog,v_mapLog.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,503,"ssertClose(""compare vectors"" ,result_mapLogToSelf,v_mapLogToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,498,"assertClose(""compare vectors"" ,result_mapLogToSelf,v_mapLogToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,508,"ssertClose(""compare vectors"" ,result_mapLog10,v_mapLog10.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,503,"assertClose(""compare vectors"" ,result_mapLog10,v_mapLog10.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,514,"ssertClose(""compare vectors"" ,result_mapLog10ToSelf,v_mapLog10ToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,509,"assertClose(""compare vectors"" ,result_mapLog10ToSelf,v_mapLog10ToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,519,"ssertClose(""compare vectors"" ,result_mapLog1p,v_mapLog1p.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,514,"assertClose(""compare vectors"" ,result_mapLog1p,v_mapLog1p.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,525,"ssertClose(""compare vectors"" ,result_mapLog1pToSelf,v_mapLog1pToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,520,"assertClose(""compare vectors"" ,result_mapLog1pToSelf,v_mapLog1pToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,530,"ssertClose(""compare vectors"" ,result_mapCosh,v_mapCosh.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,525,"assertClose(""compare vectors"" ,result_mapCosh,v_mapCosh.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,536,"ssertClose(""compare vectors"" ,result_mapCoshToSelf,v_mapCoshToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,531,"assertClose(""compare vectors"" ,result_mapCoshToSelf,v_mapCoshToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,541,"ssertClose(""compare vectors"" ,result_mapSinh,v_mapSinh.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,536,"assertClose(""compare vectors"" ,result_mapSinh,v_mapSinh.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,547,"ssertClose(""compare vectors"" ,result_mapSinhToSelf,v_mapSinhToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,542,"assertClose(""compare vectors"" ,result_mapSinhToSelf,v_mapSinhToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,552,"ssertClose(""compare vectors"" ,result_mapTanh,v_mapTanh.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,547,"assertClose(""compare vectors"" ,result_mapTanh,v_mapTanh.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,558,"ssertClose(""compare vectors"" ,result_mapTanhToSelf,v_mapTanhToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,553,"assertClose(""compare vectors"" ,result_mapTanhToSelf,v_mapTanhToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,563,"ssertClose(""compare vectors"" ,result_mapCos,v_mapCos.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,558,"assertClose(""compare vectors"" ,result_mapCos,v_mapCos.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,569,"ssertClose(""compare vectors"" ,result_mapCosToSelf,v_mapCosToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,564,"assertClose(""compare vectors"" ,result_mapCosToSelf,v_mapCosToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,574,"ssertClose(""compare vectors"" ,result_mapSin,v_mapSin.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,569,"assertClose(""compare vectors"" ,result_mapSin,v_mapSin.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,580,"ssertClose(""compare vectors"" ,result_mapSinToSelf,v_mapSinToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,575,"assertClose(""compare vectors"" ,result_mapSinToSelf,v_mapSinToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,585,"ssertClose(""compare vectors"" ,result_mapTan,v_mapTan.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,580,"assertClose(""compare vectors"" ,result_mapTan,v_mapTan.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,591,"ssertClose(""compare vectors"" ,result_mapTanToSelf,v_mapTanToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,586,"assertClose(""compare vectors"" ,result_mapTanToSelf,v_mapTanToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,599,"ssertClose(""compare vectors"" ,result_mapAcos,v_mapAcos.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,594,"assertClose(""compare vectors"" ,result_mapAcos,v_mapAcos.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,605,"ssertClose(""compare vectors"" ,result_mapAcosToSelf,v_mapAcosToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,600,"assertClose(""compare vectors"" ,result_mapAcosToSelf,v_mapAcosToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,610,"ssertClose(""compare vectors"" ,result_mapAsin,v_mapAsin.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,605,"assertClose(""compare vectors"" ,result_mapAsin,v_mapAsin.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,616,"ssertClose(""compare vectors"" ,result_mapAsinToSelf,v_mapAsinToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,611,"assertClose(""compare vectors"" ,result_mapAsinToSelf,v_mapAsinToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,621,"ssertClose(""compare vectors"" ,result_mapAtan,v_mapAtan.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,616,"assertClose(""compare vectors"" ,result_mapAtan,v_mapAtan.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,627,"ssertClose(""compare vectors"" ,result_mapAtanToSelf,v_mapAtanToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,622,"assertClose(""compare vectors"" ,result_mapAtanToSelf,v_mapAtanToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,632,"ssertClose(""compare vectors"" ,result_mapInv,v_mapInv.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,627,"assertClose(""compare vectors"" ,result_mapInv,v_mapInv.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,638,"ssertClose(""compare vectors"" ,result_mapInvToSelf,v_mapInvToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,633,"assertClose(""compare vectors"" ,result_mapInvToSelf,v_mapInvToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,646,"ssertClose(""compare vectors"" ,result_mapAbs,v_mapAbs.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,641,"assertClose(""compare vectors"" ,result_mapAbs,v_mapAbs.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,652,"ssertClose(""compare vectors"" ,result_mapAbsToSelf,v_mapAbsToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,647,"assertClose(""compare vectors"" ,result_mapAbsToSelf,v_mapAbsToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,657,"ssertClose(""compare vectors"" ,result_mapSqrt,v_mapSqrt.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,652,"assertClose(""compare vectors"" ,result_mapSqrt,v_mapSqrt.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,663,"ssertClose(""compare vectors"" ,result_mapSqrtToSelf,v_mapSqrtToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,658,"assertClose(""compare vectors"" ,result_mapSqrtToSelf,v_mapSqrtToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,671,"ssertClose(""compare vectors"" ,result_mapCbrt,v_mapCbrt.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,666,"assertClose(""compare vectors"" ,result_mapCbrt,v_mapCbrt.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,677,"ssertClose(""compare vectors"" ,result_mapCbrtToSelf,v_mapCbrtToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,672,"assertClose(""compare vectors"" ,result_mapCbrtToSelf,v_mapCbrtToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,685,"ssertClose(""compare vectors"" ,result_mapCeil,v_mapCeil.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,680,"assertClose(""compare vectors"" ,result_mapCeil,v_mapCeil.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,691,"ssertClose(""compare vectors"" ,result_mapCeilToSelf,v_mapCeilToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,686,"assertClose(""compare vectors"" ,result_mapCeilToSelf,v_mapCeilToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,696,"ssertClose(""compare vectors"" ,result_mapFloor,v_mapFloor.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,691,"assertClose(""compare vectors"" ,result_mapFloor,v_mapFloor.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,702,"ssertClose(""compare vectors"" ,result_mapFloorToSelf,v_mapFloorToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,697,"assertClose(""compare vectors"" ,result_mapFloorToSelf,v_mapFloorToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,707,"ssertClose(""compare vectors"" ,result_mapRint,v_mapRint.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,702,"assertClose(""compare vectors"" ,result_mapRint,v_mapRint.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,713,"ssertClose(""compare vectors"" ,result_mapRintToSelf,v_mapRintToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,708,"assertClose(""compare vectors"" ,result_mapRintToSelf,v_mapRintToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,718,"ssertClose(""compare vectors"" ,result_mapSignum,v_mapSignum.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,713,"assertClose(""compare vectors"" ,result_mapSignum,v_mapSignum.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,724,"ssertClose(""compare vectors"" ,result_mapSignumToSelf,v_mapSignumToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,719,"assertClose(""compare vectors"" ,result_mapSignumToSelf,v_mapSignumToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,731,"ssertClose(""compare vectors"" ,result_mapUlp,v_mapUlp.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,726,"assertClose(""compare vectors"" ,result_mapUlp,v_mapUlp.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,737,"ssertClose(""compare vectors"" ,result_mapUlpToSelf,v_mapUlpToSelf.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,732,"assertClose(""compare vectors"" ,result_mapUlpToSelf,v_mapUlpToSelf.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,786,"ssertClose(""compare vect"" ,v_add.getData(),result_add,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,781,"assertClose(""compare vect"" ,v_add.toArray(),result_add,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,791,"ssertClose(""compare vect"" ,v_add_i.getData(),result_add_i,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,786,"assertClose(""compare vect"" ,v_add_i.toArray(),result_add_i,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,796,"ssertClose(""compare vect"" ,v_subtract.getData(),result_subtract,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,791,"assertClose(""compare vect"" ,v_subtract.toArray(),result_subtract,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,800,"ssertClose(""compare vect"" ,v_subtract_i.getData(),result_subtract_i,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,795,"assertClose(""compare vect"" ,v_subtract_i.toArray(),result_subtract_i,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,805,"ssertClose(""compare vect"" ,v_ebeMultiply.getData(),result_ebeMultiply,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,800,"assertClose(""compare vect"" ,v_ebeMultiply.toArray(),result_ebeMultiply,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,809,"ssertClose(""compare vect"" ,v_ebeMultiply_2.getData(),result_ebeMultiply_2,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,804,"assertClose(""compare vect"" ,v_ebeMultiply_2.toArray(),result_ebeMultiply_2,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,814,"ssertClose(""compare vect"" ,v_ebeDivide.getData(),result_ebeDivide,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,809,"assertClose(""compare vect"" ,v_ebeDivide.toArray(),result_ebeDivide,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,818,"ssertClose(""compare vect"" ,v_ebeDivide_2.getData(),result_ebeDivide_2,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,813,"assertClose(""compare vect"" ,v_ebeDivide_2.toArray(),result_ebeDivide_2,normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,836,"ssertClose(""compare vect"" ,v_unitVector.getData(),v_unitVector_2.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,831,"assertClose(""compare vect"" ,v_unitVector.toArray(),v_unitVector_2.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,847,"ssertClose(""compare vect"" ,v_unitVector_2.getData(),v_unitize.getData(),normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,842,"assertClose(""compare vect"" ,v_unitVector_2.toArray(),v_unitize.toArray(),normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,857,"ssertClose(""compare vect"", v_projection.getData(), result_projection, normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,852,"assertClose(""compare vect"", v_projection.toArray(), result_projection, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,861,"ssertClose(""compare vect"", v_projection_2.getData(), result_projection_2, normTolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,856,"assertClose(""compare vect"", v_projection_2.toArray(), result_projection_2, normTolerance);"
False,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,203,ouble[] olsBeta = olsModel.calculateBeta().getData();
False,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,204,ouble[] glsBeta = glsModel.calculateBeta().getData();
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,203,double[] olsBeta = olsModel.calculateBeta().toArray();
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,204,double[] glsBeta = glsModel.calculateBeta().toArray();
False,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,274,ouble[] y = u.add(x.operate(b)).getData();
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,274,double[] y = u.add(x.operate(b)).toArray();
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,437,ouble[] hatResiduals = I.subtract(hat).operate(model.Y).getData();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,437,double[] hatResiduals = I.subtract(hat).operate(model.Y).toArray();
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,460,"estUtils.assertEquals(StatUtils.variance(model.Y.getData()), model.calculateYVariance(), 0);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,460,"TestUtils.assertEquals(StatUtils.variance(model.Y.toArray()), model.calculateYVariance(), 0);"
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,463,ouble[] residuals = model.calculateResiduals().getData();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,463,double[] residuals = model.calculateResiduals().toArray();
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,466,"tatUtils.variance(model.calculateResiduals().getData()) * (residuals.length - 1),"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,466,"StatUtils.variance(model.calculateResiduals().toArray()) * (residuals.length - 1),"
