is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,58, J.H. Wilkinson 'The Implicit QL Algorithm' in Wilksinson and Reinsch (1971)
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,58,"* J.H. Wilkinson ""The Implicit QL Algorithm"" in Wilksinson and Reinsch (1971)"
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,123, @param main Main diagonal of the symmetric triadiagonal form
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,124, @param secondary Secondary of the tridiagonal form
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,113,* @param main Main diagonal of the symmetric tridiagonal form.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,114,* @param secondary Secondary of the tridiagonal form.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,174, Returns the matrix V of the decomposition.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,175," <p>V is an orthogonal matrix, i.e. its transpose is also its inverse.</p>"
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,176, <p>The columns of V are the eigenvectors of the original matrix.</p>
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,177, <p>No assumption is made about the orientation of the system axes formed
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,164,* Gets the matrix V of the decomposition.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,165,"* V is an orthogonal matrix, i.e. its transpose is also its inverse."
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,166,* The columns of V are the eigenvectors of the original matrix.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,167,* No assumption is made about the orientation of the system axes formed
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,179, or right-handed system).</p>
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,180, @return the V matrix
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,169,* or right-handed system).
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,171,* @return the V matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,197, Returns the block diagonal matrix D of the decomposition.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,198, <p>D is a block diagonal matrix.</p>
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,199, <p>Real eigenvalues are on the diagonal while complex values are on
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,200," 2x2 blocks { {real +imaginary}, {-imaginary, real} }.</p>"
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,201, @return the D matrix
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,188,* Gets the block diagonal matrix D of the decomposition.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,189,* D is a block diagonal matrix.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,190,* Real eigenvalues are on the diagonal while complex values are on
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,191,"* 2x2 blocks { {real +imaginary}, {-imaginary, real} }."
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,193,* @return the D matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,214, Returns the transpose of the matrix V of the decomposition.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,215," <p>V is an orthogonal matrix, i.e. its transpose is also its inverse.</p>"
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,216, <p>The columns of V are the eigenvectors of the original matrix.</p>
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,217, <p>No assumption is made about the orientation of the system axes formed
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,207,* Gets the transpose of the matrix V of the decomposition.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,208,"* V is an orthogonal matrix, i.e. its transpose is also its inverse."
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,209,* The columns of V are the eigenvectors of the original matrix.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,210,* No assumption is made about the orientation of the system axes formed
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,219, or right-handed system).</p>
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,220, @return the transpose of the V matrix
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,212,* or right-handed system).
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,214,* @return the transpose of the V matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,238, Returns a copy of the real parts of the eigenvalues of the original matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,239, @return a copy of the real parts of the eigenvalues of the original matrix
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,232,* Gets a copy of the real parts of the eigenvalues of the original matrix.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,234,* @return a copy of the real parts of the eigenvalues of the original matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,249, Returns the real part of the i<sup>th</sup> eigenvalue of the original matrix.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,245,* Returns the real part of the i<sup>th</sup> eigenvalue of the original
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,246,* matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,251, @return real part of the i<sup>th</sup> eigenvalue of the original matrix
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,249,* @return real part of the i<sup>th</sup> eigenvalue of the original
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,250,* matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,261, Returns a copy of the imaginary parts of the eigenvalues of the original matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,262, @return a copy of the imaginary parts of the eigenvalues of the original matrix
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,261,* Gets a copy of the imaginary parts of the eigenvalues of the original
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,262,* matrix.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,264,* @return a copy of the imaginary parts of the eigenvalues of the original
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,265,* matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,272, Returns the imaginary part of the i<sup>th</sup> eigenvalue of the original matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,273, @param i index of the eigenvalue (counting from 0)
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,274, @return imaginary part of the i<sup>th</sup> eigenvalue of the original matrix
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,276,* Gets the imaginary part of the i<sup>th</sup> eigenvalue of the original
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,277,* matrix.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,279,* @param i Index of the eigenvalue (counting from 0).
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,280,* @return the imaginary part of the i<sup>th</sup> eigenvalue of the original
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,281,* matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,284, Returns a copy of the i<sup>th</sup> eigenvector of the original matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,285, @param i index of the eigenvector (counting from 0)
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,286, @return copy of the i<sup>th</sup> eigenvector of the original matrix
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,292,* Gets a copy of the i<sup>th</sup> eigenvector of the original matrix.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,294,* @param i Index of the eigenvector (counting from 0).
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,295,* @return a copy of the i<sup>th</sup> eigenvector of the original matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,294, Return the determinant of the matrix
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,295, @return determinant of the matrix
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,303,* Computes the determinant of the matrix.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,305,* @return the determinant of the matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,306, Get a solver for finding the A &times; X = B solution in exact linear sense.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,307, @return a solver
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,316,* Gets a solver for finding the A &times; X = B solution in exact
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,317,* linear sense.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,319,* @return a solver.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,326, Build a solver from decomposed matrix.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,327, @param realEigenvalues
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,328,            real parts of the eigenvalues
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,329, @param imagEigenvalues
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,330,            imaginary parts of the eigenvalues
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,331, @param eigenvectors
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,332,            eigenvectors
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,335,* Builds a solver from decomposed matrix.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,337,* @param realEigenvalues Real parts of the eigenvalues.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,338,* @param imagEigenvalues Imaginary parts of the eigenvalues.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,339,* @param eigenvectors Eigenvectors.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,343, Solve the linear equation A &times; X = B for symmetric matrices A.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,350,* Solves the linear equation A &times; X = B for symmetric matrices A.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,345," This method only find exact linear solutions, i.e. solutions for"
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,352,"* This method only finds exact linear solutions, i.e. solutions for"
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,348, @param b Right-hand side of the equation A &times; X = B
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,349, @return a Vector X that minimizes the two norm of A &times; X - B
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,356,* @param b Right-hand side of the equation A &times; X = B.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,357,* @return a Vector X that minimizes the two norm of A &times; X - B.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,415, Check if the decomposed matrix is non-singular.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,416, @return true if the decomposed matrix is non-singular
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,424,* Checks whether the decomposed matrix is non-singular.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,426,* @return true if the decomposed matrix is non-singular.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,420,f ((realEigenvalues[i] == 0) && (imagEigenvalues[i] == 0)) {
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,430,if (realEigenvalues[i] == 0 &&
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,431,imagEigenvalues[i] == 0) {
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,457, Transform matrix to tridiagonal.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,468,* Transforms the matrix to tridiagonal form.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,472, to tri-diagonal form.
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,483,* to tridiagonal form.
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,475,ouble[][]z = householderMatrix.clone();
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,486,final double[][]z = householderMatrix.clone();
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,479,ouble[] e = new double[n];
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,490,final double[] e = new double[n];
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,485,[n - 1] = 0.0;
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,496,e[n - 1] = 0;
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,488,ouble maxAbsoluteValue=0.0;
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,499,double maxAbsoluteValue = 0;
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,490,f (FastMath.abs(realEigenvalues[i])>maxAbsoluteValue) {
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,491,axAbsoluteValue=FastMath.abs(realEigenvalues[i]);
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,501,if (FastMath.abs(realEigenvalues[i]) > maxAbsoluteValue) {
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,502,maxAbsoluteValue = FastMath.abs(realEigenvalues[i]);
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,493,f (FastMath.abs(e[i])>maxAbsoluteValue) {
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,494,axAbsoluteValue=FastMath.abs(e[i]);
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,504,if (FastMath.abs(e[i]) > maxAbsoluteValue) {
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,505,maxAbsoluteValue = FastMath.abs(e[i]);
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,498,f (maxAbsoluteValue!=0.0) {
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,509,if (maxAbsoluteValue != 0) {
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,500,f (FastMath.abs(realEigenvalues[i])<=Precision.EPSILON*maxAbsoluteValue) {
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,501,ealEigenvalues[i]=0.0;
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,511,if (FastMath.abs(realEigenvalues[i]) <= Precision.EPSILON * maxAbsoluteValue) {
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,512,realEigenvalues[i] = 0;
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,503,f (FastMath.abs(e[i])<=Precision.EPSILON*maxAbsoluteValue) {
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,504,[i]=0.0;
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,514,if (FastMath.abs(e[i]) <= Precision.EPSILON * maxAbsoluteValue) {
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,515,e[i]=0;
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,514,ouble delta = FastMath.abs(realEigenvalues[m]) + FastMath.abs(realEigenvalues[m + 1]);
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,525,double delta = FastMath.abs(realEigenvalues[m]) +
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,526,FastMath.abs(realEigenvalues[m + 1]);
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,600,axAbsoluteValue=0.0;
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,612,maxAbsoluteValue = 0;
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,602,f (FastMath.abs(realEigenvalues[i])>maxAbsoluteValue) {
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,614,if (FastMath.abs(realEigenvalues[i]) > maxAbsoluteValue) {
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,609,f (FastMath.abs(realEigenvalues[i])<Precision.EPSILON*maxAbsoluteValue) {
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,610,ealEigenvalues[i]=0.0;
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,621,if (FastMath.abs(realEigenvalues[i]) < Precision.EPSILON * maxAbsoluteValue) {
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,622,realEigenvalues[i] = 0;
False,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,615,ouble[] tmp = new double[n];
True,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,627,final double[] tmp = new double[n];
