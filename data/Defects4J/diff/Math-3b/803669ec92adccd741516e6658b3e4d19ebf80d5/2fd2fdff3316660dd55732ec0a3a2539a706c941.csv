is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,108," @param n the stage of 1/2 refinement, n = 0 is no refinement"
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,109, @param previousStageResult Result from the previous call to the {@code stage}
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,110, method. It is unused in the first stage (when {@code n} is equal to 0).
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,108,* @param n the stage of 1/2 refinement. Must be larger than 0.
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,109,* @param previousStageResult Result from the previous call to the
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,110,* {@code stage} method.
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,111,* @param min Lower bound of the integration interval.
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,112,* @param diffMaxMin Difference between the lower bound and upper bound
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,113,* of the integration interval.
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,116,ouble previousStageResult)
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,119,"double previousStageResult,"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,120,"double min,"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,121,double diffMaxMin)
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,119,inal double min = getMin();
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,120,inal double diff = getMax() - min;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,124,// number of new points in this stage
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,125,final long np = 1L << (n - 1);
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,126,double sum = 0;
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,122,f (n == 0) {
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,123,inal double midPoint = min + 0.5 * diff;
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,124,eturn diff * computeObjectiveValue(midPoint);
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,125, else {
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,126,inal long np = 1L << (n - 1);           // number of new points in this stage
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,127,ouble sum = 0;
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,128,/ spacing between adjacent new points
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,129,inal double spacing = diff / np;
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,130,ouble x = min + 0.5 * spacing;    // the first new point
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,131,or (long i = 0; i < np; i++) {
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,132,um += computeObjectiveValue(x);
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,133, += spacing;
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,135,/ add the new sum to previously calculated result
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,136,eturn 0.5 * (previousStageResult + sum * spacing);
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,128,// spacing between adjacent new points
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,129,final double spacing = diffMaxMin / np;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,131,// the first new point
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,132,double x = min + 0.5 * spacing;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,133,for (long i = 0; i < np; i++) {
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,134,sum += computeObjectiveValue(x);
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,135,x += spacing;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,137,// add the new sum to previously calculated result
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,138,return 0.5 * (previousStageResult + sum * spacing);
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,144,"ouble oldt = stage(0, 0d);"
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,145,terations.incrementCount();
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,146,final double min = getMin();
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,147,final double diff = getMax() - min;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,148,final double midPoint = min + 0.5 * diff;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,150,double oldt = diff * computeObjectiveValue(midPoint);
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,153,iterations.incrementCount();
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,148,"inal double t = stage(i, oldt);"
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,155,"final double t = stage(i, oldt, min, diff);"
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,158,terations.incrementCount();
