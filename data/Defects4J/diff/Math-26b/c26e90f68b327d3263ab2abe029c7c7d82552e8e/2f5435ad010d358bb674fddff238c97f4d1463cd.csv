is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,582,eturn (a < 0.0) ? -1.0 : ((a > 0.0) ? 1.0 : a);
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,582,return (a < 0.0) ? -1.0 : ((a > 0.0) ? 1.0 : a);
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,585,/** Compute the signum of a number.
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,586,"* The signum is -1 for negative numbers, +1 for positive numbers and 0 otherwise"
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,587,* @param a number on which evaluation is done
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,588,"* @return -1, 0, +1 or NaN depending on sign of a"
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,590,public static float signum(final float a) {
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,591,return (a < 0.0f) ? -1.0f : ((a > 0.0f) ? 1.0f : a);
