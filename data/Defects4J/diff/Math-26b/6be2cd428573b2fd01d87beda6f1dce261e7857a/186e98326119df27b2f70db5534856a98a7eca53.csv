is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,168,"achedR = MatrixUtils.createRealMatrix(m, n);"
True,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,168,double[][] ra = new double[m][n];
False,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,172,"achedR.setEntry(row, row, rDiag[row]);"
True,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,171,ra[row][row] = rDiag[row];
False,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,174,"achedR.setEntry(row, col, qrt[col][row]);"
True,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,173,ra[row][col] = qrt[col][row];
True,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,176,cachedR = MatrixUtils.createRealMatrix(ra);
False,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,206,"achedQT = MatrixUtils.createRealMatrix(m, m);"
True,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,206,double[][] qta = new double[m][m];
False,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,214,"achedQT.setEntry(minor, minor, 1.0);"
True,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,214,qta[minor][minor] = 1.0d;
False,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,219,"achedQT.setEntry(minor, minor, 1.0);"
True,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,219,qta[minor][minor] = 1.0d;
False,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,224,"lpha -= cachedQT.getEntry(col, row) * qrtMinor[row];"
True,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,224,alpha -= qta[col][row] * qrtMinor[row];
False,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,229,"achedQT.addToEntry(col, row, -alpha * qrtMinor[row]);"
True,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,229,qta[col][row] += -alpha * qrtMinor[row];
True,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,234,cachedQT = MatrixUtils.createRealMatrix(qta);
False,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,252,"achedH = MatrixUtils.createRealMatrix(m, n);"
True,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,253,double[][] ha = new double[m][n];
False,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,255,"achedH.setEntry(i, j, qrt[j][i] / -rDiag[j]);"
True,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,256,ha[i][j] = qrt[j][i] / -rDiag[j];
True,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,src/main/java/org/apache/commons/math/linear/QRDecomposition.java,259,cachedH = MatrixUtils.createRealMatrix(ha);
