is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java,29,mport org.apache.commons.math3.optimization.AbstractConvergenceChecker;
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,153,* @param <T> the type of the elements in the specified array
False,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,34,** Exponent offset in IEEE754 representation. */
False,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,35,rivate static final long EXPONENT_OFFSET = 1023l;
False,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,43,ublic static final double EPSILON = Double.longBitsToDouble((EXPONENT_OFFSET - 53l) << 52);
False,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,44,/This was previously expressed as = 0x1.0p-53;
False,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,45,"/ However, OpenJDK (Sparc Solaris) cannot handle such small constants: MATH-721"
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,39,public static final double EPSILON;
False,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,53,ublic static final double SAFE_MIN = Double.longBitsToDouble((EXPONENT_OFFSET - 1022l) << 52);
False,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,54,/ This was previously expressed as = 0x1.0p-1022;
False,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,55,"/ However, OpenJDK (Sparc Solaris) cannot handle such small constants: MATH-721"
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,47,public static final double SAFE_MIN;
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,49,/** Exponent offset in IEEE754 representation. */
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,50,private static final long EXPONENT_OFFSET = 1023l;
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,57,static {
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,59,*  This was previously expressed as = 0x1.0p-53;
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,60,"*  However, OpenJDK (Sparc Solaris) cannot handle such small"
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,61,*  constants: MATH-721
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,63,EPSILON = Double.longBitsToDouble((EXPONENT_OFFSET - 53l) << 52);
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,66,* This was previously expressed as = 0x1.0p-1022;
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,67,"* However, OpenJDK (Sparc Solaris) cannot handle such small"
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,68,* constants: MATH-721
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,70,SAFE_MIN = Double.longBitsToDouble((EXPONENT_OFFSET - 1022l) << 52);
