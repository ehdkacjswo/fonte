is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,57, StoreUnivariate implements the Univariate interface but maintains the set of values
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,58, which contribute to the values being returned.  This implementation of Univariate
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,59," provides additional functionality such as skewness, kurtosis, and mode.  This additional"
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,60, functionality comes with a price of increased storage costs.
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,57,* StoreUnivariate implements the Univariate interface
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,58,* but maintains the set of values which contribute to
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,59,* the values being returned.  This implementation of
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,60,* Univariate provides additional percentile functionality
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,61,* such as.  This additional functionality comes with
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,62,* a price of increased storage costs.
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,65,"* @author <a href=""mailto:mdiggory@apache.org"">Mark R. Diggory</a>"
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,87,ublic abstract double getSkewness();
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,90,double getSkewness();
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,94,ublic abstract double getKurtosis();
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,97,double getKurtosis();
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,105,ublic abstract int getKurtosisClass();
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,108,int getKurtosisClass();
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,116,ublic abstract double[] getValues();
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,119,double[] getValues();
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,124, @return returns the current set of numbers sorted in ascending order
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,126,* @return returns the current set of
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,127,* numbers sorted in ascending order
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,126,ublic abstract double[] getSortedValues();
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,129,double[] getSortedValues();
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,133,* @param index The Index of the element
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,133,ublic abstract double getElement(int index);
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,136,double getElement(int index);
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,141, <li><code>0 &lt; p &lt; 100</code> (otherwise an <code>IllegalArgumentException
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,142,     </code> is thrown)</li>
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,144,* <li><code>0 &lt; p &lt; 100</code> (otherwise an
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,145,* <code>IllegalArgumentException</code> is thrown)</li>
False,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,151,ublic abstract double getPercentile(double p);
True,src/java/org/apache/commons/math/stat/StoreUnivariate.java,src/java/org/apache/commons/math/stat/StoreUnivariate.java,154,double getPercentile(double p);
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,54,ackage org.apache.commons.math.stat;
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,54,package org.apache.commons.math.stat;
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,76, @version $Revision: 1.4 $ $Date: 2003/06/21 23:38:27 $
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,76,* @version $Revision: 1.5 $ $Date: 2003/07/05 19:25:38 $
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,85,bstract void addValue(double v);
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,85,void addValue(double v);
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,92,bstract double getMean();
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,92,double getMean();
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,100,bstract double getGeometricMean();
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,100,double getGeometricMean();
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,107,bstract double getVariance();
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,107,double getVariance();
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,114,bstract double getStandardDeviation();
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,114,double getStandardDeviation();
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,119," @return The skewness, Double.NaN if no values have been added"
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,119,"* @return The skewness, Double.NaN if no values have been added"
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,122,bstract double getSkewness();
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,122,double getSkewness();
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,130,bstract double getKurtosis();
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,130,double getKurtosis();
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,136,bstract double getMax();
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,136,double getMax();
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,139, Returns the minimum of the available values
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,140, @return The min or Double.NaN if no values have been added.
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,142,bstract double getMin();
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,139,* Returns the minimum of the available values
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,140,* @return The min or Double.NaN if no values have been added.
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,142,double getMin();
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,148,bstract int getN();
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,148,int getN();
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,154,bstract double getSum();
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,154,double getSum();
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,161,bstract double getSumsq();
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,161,double getSumsq();
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,166,bstract void clear();
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,166,void clear();
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,179, @return The current window size or -1 if its Infinite.
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,179,* @return The current window size or -1 if its Infinite.
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,182,bstract int getWindowSize();
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,182,int getWindowSize();
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,191, @param windowSize sets the size of the window.
False,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,193,bstract void setWindowSize(int windowSize);
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,191,* @param windowSize sets the size of the window.
True,src/java/org/apache/commons/math/stat/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,193,void setWindowSize(int windowSize);
