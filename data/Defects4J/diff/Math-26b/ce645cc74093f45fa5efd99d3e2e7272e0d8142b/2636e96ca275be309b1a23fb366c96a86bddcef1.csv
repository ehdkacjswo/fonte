is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,22,import org.apache.commons.math.analysis.ParametricUnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,24,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,25,import org.apache.commons.math.exception.DimensionMismatchException;
False,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,79,"eturn a + (k - a) / FastMath.pow(1 + q * FastMath.exp(b * (m - x)), oneOverN);"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,82,"return value(m - x, k, b, q, a, oneOverN);"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,102,* Parametric function where the input array contains the parameters of
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,103,"* the logit function, ordered as follows:"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,104,* <ul>
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,105,*  <li>Lower asymptote</li>
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,106,*  <li>Higher asymptote</li>
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,107,* </ul>
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,109,public static class Parametric implements ParametricUnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,111,* Computes the value of the sigmoid at {@code x}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,113,* @param x Value for which the function must be computed.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,114,"* @param param Values for {@code k}, {@code m}, {@code b}, {@code q},"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,115,* {@code a} and  {@code n}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,116,* @return the value of the function.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,117,* @throws NullArgumentException if {@code param} is {@code null}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,118,* @throws DimensionMismatchException if the size of {@code param} is
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,119,* not 6.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,121,"public double value(double x,"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,122,double[] param) {
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,123,validateParameters(param);
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,124,"return Logistic.value(param[1] - x, param[0],"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,125,"param[2], param[3],"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,126,"param[4], 1 / param[5]);"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,130,* Computes the value of the gradient at {@code x}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,131,* The components of the gradient vector are the partial
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,132,* derivatives of the function with respect to each of the
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,133,* <em>parameters</em>.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,135,* @param x Value at which the gradient must be computed.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,136,"* @param param Values for {@code k}, {@code m}, {@code b}, {@code q},"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,137,* {@code a} and  {@code n}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,138,* @return the gradient vector at {@code x}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,139,* @throws NullArgumentException if {@code param} is {@code null}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,140,* @throws DimensionMismatchException if the size of {@code param} is
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,141,* not 6.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,143,"public double[] gradient(double x, double[] param) {"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,144,validateParameters(param);
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,146,final double b = param[2];
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,147,final double q = param[3];
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,149,final double mMinusX = param[1] - x;
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,150,final double oneOverN = 1 / param[5];
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,151,final double exp = FastMath.exp(b * mMinusX);
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,152,final double qExp = q * exp;
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,153,final double qExp1 = qExp + 1;
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,154,"final double factor1 = (param[0] - param[4]) * oneOverN / FastMath.pow(qExp1, oneOverN);"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,155,final double factor2 = -factor1 / qExp1;
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,157,// Components of the gradient.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,158,"final double gk = Logistic.value(mMinusX, 1, b, q, 0, oneOverN);"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,159,final double gm = factor2 * b * qExp;
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,160,final double gb = factor2 * mMinusX * qExp;
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,161,final double gq = factor2 * exp;
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,162,"final double ga = Logistic.value(mMinusX, 0, b, q, 1, oneOverN);"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,163,final double gn = factor1 * Math.log(qExp1) * oneOverN;
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,165,"return new double[] { gk, gm, gb, gq, ga, gn };"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,169,* Validates parameters to ensure they are appropriate for the evaluation of
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,170,"* the {@link #value(double,double[])} and {@link #gradient(double,double[])}"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,171,* methods.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,173,"* @param param Values for {@code k}, {@code m}, {@code b}, {@code q},"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,174,* {@code a} and  {@code n}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,175,* @throws NullArgumentException if {@code param} is {@code null}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,176,* @throws DimensionMismatchException if the size of {@code param} is
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,177,* not 6.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,179,private void validateParameters(double[] param) {
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,180,if (param == null) {
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,181,throw new NullArgumentException();
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,183,if (param.length != 6) {
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,184,"throw new DimensionMismatchException(param.length, 6);"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,186,if (param[5] <= 0) {
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,187,throw new NotStrictlyPositiveException(param[5]);
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,193,* @param mMinusX {@code m - x}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,194,* @param k {@code k}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,195,* @param b {@code b}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,196,* @param q {@code q}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,197,* @param a {@code a}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,198,* @param oneOverN {@code 1 / n}.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,199,* @return the value of the function.
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,201,"private static double value(double mMinusX,"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,202,"double k,"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,203,"double b,"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,204,"double q,"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,205,"double a,"
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,206,double oneOverN) {
True,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,src/main/java/org/apache/commons/math/analysis/function/Logistic.java,207,"return a + (k - a) / FastMath.pow(1 + q * FastMath.exp(b * mMinusX), oneOverN);"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,22,import org.apache.commons.math.exception.NullArgumentException;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,23,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,103,@Test(expected=NullArgumentException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,104,public void testParametricUsage1() {
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,105,final Logistic.Parametric g = new Logistic.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,106,"g.value(0, null);"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,109,@Test(expected=DimensionMismatchException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,110,public void testParametricUsage2() {
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,111,final Logistic.Parametric g = new Logistic.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,112,"g.value(0, new double[] {0});"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,115,@Test(expected=NullArgumentException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,116,public void testParametricUsage3() {
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,117,final Logistic.Parametric g = new Logistic.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,118,"g.gradient(0, null);"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,121,@Test(expected=DimensionMismatchException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,122,public void testParametricUsage4() {
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,123,final Logistic.Parametric g = new Logistic.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,124,"g.gradient(0, new double[] {0});"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,127,@Test(expected=NotStrictlyPositiveException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,128,public void testParametricUsage5() {
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,129,final Logistic.Parametric g = new Logistic.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,130,"g.value(0, new double[] {1, 0, 1, 1, 0 ,0});"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,133,@Test(expected=NotStrictlyPositiveException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,134,public void testParametricUsage6() {
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,135,final Logistic.Parametric g = new Logistic.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,136,"g.gradient(0, new double[] {1, 0, 1, 1, 0 ,0});"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,139,@Test
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,140,public void testGradientComponent0Component4() {
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,141,final double k = 3;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,142,final double a = 2;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,144,final Logistic.Parametric f = new Logistic.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,145,"// Compare using the ""Sigmoid"" function."
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,146,final Sigmoid.Parametric g = new Sigmoid.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,148,final double x = 0.12345;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,149,"final double[] gf = f.gradient(x, new double[] {k, 0, 1, 1, a, 1});"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,150,"final double[] gg = g.gradient(x, new double[] {a, k});"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,152,"Assert.assertEquals(gg[0], gf[4], EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,153,"Assert.assertEquals(gg[1], gf[0], EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,156,@Test
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,157,public void testGradientComponent5() {
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,158,final double m = 1.2;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,159,final double k = 3.4;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,160,final double a = 2.3;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,161,final double q = 0.567;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,162,final double b = -FastMath.log(q);
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,163,final double n = 3.4;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,165,final Logistic.Parametric f = new Logistic.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,167,final double x = m - 1;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,168,final double qExp1 = 2;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,170,"final double[] gf = f.gradient(x, new double[] {k, m, b, q, a, n});"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,172,"Assert.assertEquals((k - a) * FastMath.log(qExp1) / (n * n * FastMath.pow(qExp1, 1 / n)),"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,173,"gf[5], EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,176,@Test
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,177,public void testGradientComponent1Component2Component3() {
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,178,final double m = 1.2;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,179,final double k = 3.4;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,180,final double a = 2.3;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,181,final double b = 0.567;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,182,final double q = 1 / FastMath.exp(b * m);
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,183,final double n = 3.4;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,185,final Logistic.Parametric f = new Logistic.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,187,final double x = 0;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,188,final double qExp1 = 2;
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,190,"final double[] gf = f.gradient(x, new double[] {k, m, b, q, a, n});"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,192,"final double factor = (a - k) / (n * FastMath.pow(qExp1, 1 / n + 1));"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,193,"Assert.assertEquals(factor * b, gf[1], EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,194,"Assert.assertEquals(factor * m, gf[2], EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,195,"Assert.assertEquals(factor / q, gf[3], EPS);"
