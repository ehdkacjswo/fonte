is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,30,* @deprecated in 2.2 (to be removed in 3.0). Please use the function classes
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,31,* in the {@link org.apache.commons.math.analysis.function} package and the
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,32,* methods in {@link FunctionUtils}.
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,34,@Deprecated
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,36,public static BinaryFunction make(final BivariateRealFunction f) {
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,37,return new BinaryFunction() {
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,38,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,39,@Override
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,40,"public double value(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,41,"return f.value(x, y);"
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,34,ublic static final BinaryFunction ADD = new BinaryFunction() {
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,35,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,36,Override
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,37,"ublic double value(double x, double y) {"
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,38,eturn x + y;
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,47,public static final BinaryFunction ADD =
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,48,make(new org.apache.commons.math.analysis.function.Add());
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,43,ublic static final BinaryFunction SUBTRACT = new BinaryFunction() {
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,44,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,45,Override
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,46,"ublic double value(double x, double y) {"
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,47,eturn x - y;
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,51,public static final BinaryFunction SUBTRACT =
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,52,make(new org.apache.commons.math.analysis.function.Subtract());
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,52,ublic static final BinaryFunction MULTIPLY = new BinaryFunction() {
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,53,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,54,Override
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,55,"ublic double value(double x, double y) {"
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,56,eturn x * y;
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,55,public static final BinaryFunction MULTIPLY =
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,56,make(new org.apache.commons.math.analysis.function.Multiply());
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,61,ublic static final BinaryFunction DIVIDE = new BinaryFunction() {
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,62,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,63,Override
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,64,"ublic double value(double x, double y) {"
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,65,eturn x / y;
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,59,public static final BinaryFunction DIVIDE =
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,60,make(new org.apache.commons.math.analysis.function.Divide());
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,70,ublic static final BinaryFunction POW = new BinaryFunction() {
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,71,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,72,Override
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,73,"ublic double value(double x, double y) {"
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,74,"eturn FastMath.pow(x, y);"
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,63,public static final BinaryFunction POW =
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,64,make(new org.apache.commons.math.analysis.function.Pow());
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,79,ublic static final BinaryFunction ATAN2 = new BinaryFunction() {
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,80,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,81,Override
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,82,"ublic double value(double x, double y) {"
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,83,"eturn FastMath.atan2(x, y);"
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,67,public static final BinaryFunction ATAN2 =
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,68,make(new org.apache.commons.math.analysis.function.Atan2());
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,95,eturn new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,96,Override
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,97,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,98,ublic double value(double x) throws MathUserException {
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,99,"eturn BinaryFunction.this.value(fixedX, x);"
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,78,"return ComposableFunction.make(FunctionUtils.fix1stArgument(this, fixedX));"
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,109,eturn new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,110,Override
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,111,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,112,ublic double value(double x) throws MathUserException {
False,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,113,"eturn BinaryFunction.this.value(x, fixedY);"
True,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,src/main/java/org/apache/commons/math/analysis/BinaryFunction.java,86,"return ComposableFunction.make(FunctionUtils.fix2ndArgument(this, fixedY));"
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,29,* @deprecated in 2.2 (to be removed in 3.0). Please use the function classes
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,30,* in the {@link org.apache.commons.math.analysis.function} package and the
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,31,* methods in {@link FunctionUtils}.
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,33,@Deprecated
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,35,public static ComposableFunction make(final UnivariateRealFunction f) {
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,36,return new ComposableFunction() {
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,37,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,38,@Override
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,39,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,40,return f.value(x);
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,33,ublic static final ComposableFunction ZERO = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,34,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,35,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,36,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,37,eturn 0;
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,46,public static final ComposableFunction ZERO =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,47,make(new org.apache.commons.math.analysis.function.Constant(0));
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,42,ublic static final ComposableFunction ONE = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,43,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,44,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,45,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,46,eturn 1;
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,50,public static final ComposableFunction ONE =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,51,make(new org.apache.commons.math.analysis.function.Constant(1));
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,51,ublic static final ComposableFunction IDENTITY = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,52,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,53,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,54,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,55,eturn d;
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,54,public static final ComposableFunction IDENTITY =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,55,make(new org.apache.commons.math.analysis.function.Identity());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,60,ublic static final ComposableFunction ABS = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,61,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,62,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,63,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,64,eturn FastMath.abs(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,58,public static final ComposableFunction ABS =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,59,make(new org.apache.commons.math.analysis.function.Abs());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,69,ublic static final ComposableFunction NEGATE = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,70,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,71,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,72,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,73,eturn -d;
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,62,public static final ComposableFunction NEGATE =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,63,make(new org.apache.commons.math.analysis.function.Minus());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,78,ublic static final ComposableFunction INVERT = new ComposableFunction () {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,79,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,80,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,81,ublic double value(double d){
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,82,eturn 1/d;
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,66,public static final ComposableFunction INVERT =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,67,make(new org.apache.commons.math.analysis.function.Inverse());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,87,ublic static final ComposableFunction SIN = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,88,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,89,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,90,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,91,eturn FastMath.sin(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,70,public static final ComposableFunction SIN =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,71,make(new org.apache.commons.math.analysis.function.Sin());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,96,ublic static final ComposableFunction SQRT = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,97,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,98,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,99,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,100,eturn FastMath.sqrt(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,74,public static final ComposableFunction SQRT =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,75,make(new org.apache.commons.math.analysis.function.Sqrt());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,105,ublic static final ComposableFunction SINH = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,106,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,107,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,108,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,109,eturn FastMath.sinh(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,78,public static final ComposableFunction SINH =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,79,make(new org.apache.commons.math.analysis.function.Sinh());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,114,ublic static final ComposableFunction EXP = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,115,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,116,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,117,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,118,eturn FastMath.exp(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,82,public static final ComposableFunction EXP =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,83,make(new org.apache.commons.math.analysis.function.Exp());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,123,ublic static final ComposableFunction EXPM1 = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,124,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,125,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,126,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,127,eturn FastMath.expm1(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,86,public static final ComposableFunction EXPM1 =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,87,make(new org.apache.commons.math.analysis.function.Expm1());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,132,ublic static final ComposableFunction ASIN = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,133,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,134,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,135,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,136,eturn FastMath.asin(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,90,public static final ComposableFunction ASIN =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,91,make(new org.apache.commons.math.analysis.function.Asin());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,141,ublic static final ComposableFunction ATAN = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,142,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,143,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,144,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,145,eturn FastMath.atan(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,94,public static final ComposableFunction ATAN =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,95,make(new org.apache.commons.math.analysis.function.Atan());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,150,ublic static final ComposableFunction TAN = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,151,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,152,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,153,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,154,eturn FastMath.tan(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,98,public static final ComposableFunction TAN =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,99,make(new org.apache.commons.math.analysis.function.Tan());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,159,ublic static final ComposableFunction TANH = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,160,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,161,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,162,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,163,eturn FastMath.tanh(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,102,public static final ComposableFunction TANH =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,103,make(new org.apache.commons.math.analysis.function.Tanh());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,168,ublic static final ComposableFunction CBRT = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,169,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,170,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,171,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,172,eturn FastMath.cbrt(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,106,public static final ComposableFunction CBRT =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,107,make(new org.apache.commons.math.analysis.function.Cbrt());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,195,ublic static final ComposableFunction LOG = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,196,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,197,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,198,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,199,eturn FastMath.log(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,128,public static final ComposableFunction LOG =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,129,make(new org.apache.commons.math.analysis.function.Log());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,204,ublic static final ComposableFunction LOG10 = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,205,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,206,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,207,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,208,eturn FastMath.log10(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,132,public static final ComposableFunction LOG10 =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,133,make(new org.apache.commons.math.analysis.function.Log10());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,213,ublic static final ComposableFunction LOG1P = new ComposableFunction () {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,214,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,215,ublic double value(double d){
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,216,eturn FastMath.log1p(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,136,public static final ComposableFunction LOG1P =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,137,make(new org.apache.commons.math.analysis.function.Log1p());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,221,ublic static final ComposableFunction COS = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,222,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,223,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,224,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,225,eturn FastMath.cos(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,140,public static final ComposableFunction COS =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,141,make(new org.apache.commons.math.analysis.function.Cos());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,230,ublic static final ComposableFunction ACOS = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,231,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,232,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,233,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,234,eturn FastMath.acos(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,144,public static final ComposableFunction ACOS =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,145,make(new org.apache.commons.math.analysis.function.Acos());
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,239,ublic static final ComposableFunction COSH = new ComposableFunction() {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,240,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,241,Override
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,242,ublic double value(double d) {
False,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,243,eturn FastMath.cosh(d);
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,148,public static final ComposableFunction COSH =
True,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,src/main/java/org/apache/commons/math/analysis/ComposableFunction.java,149,make(new org.apache.commons.math.analysis.function.Cosh());
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,18,package org.apache.commons.math.analysis;
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,20,import org.apache.commons.math.analysis.function.Identity;
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,23,* Utilities for manipulating function objects.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,26,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,28,public class FunctionUtils {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,30,* Compose functions.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,32,* @param f List of functions.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,33,* @return the composed function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,35,public static UnivariateRealFunction compose(final UnivariateRealFunction ... f) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,36,return new UnivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,37,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,38,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,39,double r = x;
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,40,for (int i = f.length - 1; i >= 0; i--) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,41,r = f[i].value(r);
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,43,return r;
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,49,* Add functions.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,51,* @param f List of functions.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,52,* @return a function that computes the addition of the functions.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,54,public static UnivariateRealFunction add(final UnivariateRealFunction ... f) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,55,return new UnivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,56,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,57,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,58,double r = f[0].value(x);
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,59,for (int i = 1; i < f.length; i++) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,60,r += f[i].value(x);
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,62,return r;
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,68,* Multiply functions.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,70,* @param f List of functions.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,71,* @return a function that computes the multiplication of the functions.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,73,public static UnivariateRealFunction multiply(final UnivariateRealFunction ... f) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,74,return new UnivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,75,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,76,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,77,double r = f[0].value(x);
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,78,for (int i = 1; i < f.length; i++) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,79,r *= f[i].value(x);
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,81,return r;
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,87,* Combine functions.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,89,* @param combiner Combiner function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,90,* @param f Function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,91,* @param g Function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,92,* @return the composed function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,94,"public static UnivariateRealFunction combine(final BivariateRealFunction combiner,"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,95,"final UnivariateRealFunction f,"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,96,final UnivariateRealFunction g) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,97,return new UnivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,98,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,99,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,100,"return combiner.value(f.value(x), g.value(x));"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,106,* Generate a collector function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,108,* @param combiner Combiner function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,109,* @param f Function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,110,* @param initialValue Initial value.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,111,* @return a collector function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,113,"public static MultivariateRealFunction collector(final BivariateRealFunction combiner,"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,114,"final UnivariateRealFunction f,"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,115,final double initialValue) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,116,return new MultivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,117,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,118,public double value(double[] point) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,119,"double result = combiner.value(initialValue, f.value(point[0]));"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,120,for (int i = 1; i < point.length; i++) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,121,"result = combiner.value(result, f.value(point[i]));"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,123,return result;
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,129,* Generate a collector function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,131,* @param combiner Combiner function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,132,* @param initialValue Initial value.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,133,* @return a collector function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,135,"public static MultivariateRealFunction collector(final BivariateRealFunction combiner,"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,136,final double initialValue) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,137,"return collector(combiner, new Identity(), initialValue);"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,141,* Create a unary function by fixing the first argument of a binary function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,143,* @param f Binary function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,144,* @param fixed Value to which the first argument of {@code f} is set.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,146,"public static UnivariateRealFunction fix1stArgument(final BivariateRealFunction f,"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,147,final double fixed) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,148,return new UnivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,149,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,150,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,151,"return f.value(fixed, x);"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,156,* Create a unary function by fixing the second argument of a binary function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,158,* @param f Binary function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,159,* @param fixed Value to which the second argument of {@code f} is set.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,161,"public static UnivariateRealFunction fix2ndArgument(final BivariateRealFunction f,"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,162,final double fixed) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,163,return new UnivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,164,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,165,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,166,"return f.value(x, fixed);"
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,24,* Absolute value function.
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,29,public class Abs implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Abs.java,src/main/java/org/apache/commons/math/analysis/function/Abs.java,32,return FastMath.abs(x);
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,24,* Arc-cosine function.
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,29,public class Acos implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Acos.java,src/main/java/org/apache/commons/math/analysis/function/Acos.java,32,return FastMath.acos(x);
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,24,* Hyperbolic arc-cosine function.
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,29,public class Acosh implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,src/main/java/org/apache/commons/math/analysis/function/Acosh.java,32,return FastMath.acosh(x);
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,20,import org.apache.commons.math.analysis.BivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,23,* Add the two operands.
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,26,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,28,public class Add implements BivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,29,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,30,"public double value(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/function/Add.java,src/main/java/org/apache/commons/math/analysis/function/Add.java,31,return x + y;
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,24,* Arc-sine function.
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,29,public class Asin implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Asin.java,src/main/java/org/apache/commons/math/analysis/function/Asin.java,32,return FastMath.asin(x);
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,24,* Hyperbolic arc-sine function.
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,29,public class Asinh implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,src/main/java/org/apache/commons/math/analysis/function/Asinh.java,32,return FastMath.asinh(x);
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,24,* Arc-tangent function.
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,29,public class Atan implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Atan.java,src/main/java/org/apache/commons/math/analysis/function/Atan.java,32,return FastMath.atan(x);
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,20,import org.apache.commons.math.analysis.BivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,24,* Arc-tangent function.
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,29,public class Atan2 implements BivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,31,"public double value(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,src/main/java/org/apache/commons/math/analysis/function/Atan2.java,32,"return FastMath.atan2(x, y);"
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,24,* Hyperbolic arc-tangent function.
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,29,public class Atanh implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,src/main/java/org/apache/commons/math/analysis/function/Atanh.java,32,return FastMath.atanh(x);
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,24,* Cubic-root function.
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,29,public class Cbrt implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,32,return FastMath.cbrt(x);
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,23,* Constant function.
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,26,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,28,public class Constant implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,29,/** Constant. */
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,30,private final double c;
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,33,* @param c Constant.
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,35,public Constant(double c) {
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,36,this.c = c;
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,39,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,40,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Constant.java,src/main/java/org/apache/commons/math/analysis/function/Constant.java,41,return c;
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,24,* Cosine function.
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,29,public class Cos implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Cos.java,src/main/java/org/apache/commons/math/analysis/function/Cos.java,32,return FastMath.cos(x);
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,24,* Hyperbolic cosine function.
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,29,public class Cosh implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,src/main/java/org/apache/commons/math/analysis/function/Cosh.java,32,return FastMath.cosh(x);
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,20,import org.apache.commons.math.analysis.BivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,23,* Divide the first operand by the second.
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,26,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,28,public class Divide implements BivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,29,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,30,"public double value(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/function/Divide.java,src/main/java/org/apache/commons/math/analysis/function/Divide.java,31,return x / y;
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,24,* Exponential function.
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,29,public class Exp implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Exp.java,src/main/java/org/apache/commons/math/analysis/function/Exp.java,32,return FastMath.exp(x);
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,24,* <code>e<sup>x</sup>-1</code> function.
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,29,public class Expm1 implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,src/main/java/org/apache/commons/math/analysis/function/Expm1.java,32,return FastMath.expm1(x);
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,23,* Identity function.
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,26,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,28,public class Identity implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,29,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,30,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Identity.java,src/main/java/org/apache/commons/math/analysis/function/Identity.java,31,return x;
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,23,* Inverse function.
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,26,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,28,public class Inverse implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,29,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,30,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,src/main/java/org/apache/commons/math/analysis/function/Inverse.java,31,return 1 / x;
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,24,* Natural logarithm function.
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,29,public class Log implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Log.java,src/main/java/org/apache/commons/math/analysis/function/Log.java,32,return FastMath.log(x);
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,24,* Base 10 logarithm function.
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,29,public class Log10 implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Log10.java,src/main/java/org/apache/commons/math/analysis/function/Log10.java,32,return FastMath.log10(x);
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,24,* <code>log(1 + p)</code> function.
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,29,public class Log1p implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,src/main/java/org/apache/commons/math/analysis/function/Log1p.java,32,return FastMath.log1p(x);
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,20,import org.apache.commons.math.analysis.BivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,24,* Maximum function.
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,29,public class Max implements BivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,31,"public double value(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/function/Max.java,src/main/java/org/apache/commons/math/analysis/function/Max.java,32,"return FastMath.max(x, y);"
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,20,import org.apache.commons.math.analysis.BivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,24,* Minimum function.
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,29,public class Min implements BivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,31,"public double value(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/function/Min.java,src/main/java/org/apache/commons/math/analysis/function/Min.java,32,"return FastMath.min(x, y);"
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,23,* Minus function.
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,26,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,28,public class Minus implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,29,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,30,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Minus.java,src/main/java/org/apache/commons/math/analysis/function/Minus.java,31,return -x;
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,20,import org.apache.commons.math.analysis.BivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,23,* Multiply the two operands.
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,26,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,28,public class Multiply implements BivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,29,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,30,"public double value(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,src/main/java/org/apache/commons/math/analysis/function/Multiply.java,31,return x * y;
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,20,import org.apache.commons.math.analysis.BivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,24,* Power function.
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,29,public class Pow implements BivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,31,"public double value(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/function/Pow.java,src/main/java/org/apache/commons/math/analysis/function/Pow.java,32,"return FastMath.pow(x, y);"
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,24,* Power function.
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,29,public class Power implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,30,/** Power. */
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,31,private final double p;
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,34,* @param p Power.
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,36,public Power(double p) {
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,37,this.p = p;
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,40,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,41,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Power.java,src/main/java/org/apache/commons/math/analysis/function/Power.java,42,"return FastMath.pow(x, p);"
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,24,* Sine function.
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,29,public class Sin implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Sin.java,src/main/java/org/apache/commons/math/analysis/function/Sin.java,32,return FastMath.sin(x);
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,24,* Sinc function.
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,29,public class Sinc implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,32,return FastMath.abs(x) < 1e-9 ? 1 : FastMath.sin(x) / x;
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,24,* Hyperbolic sine function.
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,29,public class Sinh implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,src/main/java/org/apache/commons/math/analysis/function/Sinh.java,32,return FastMath.sinh(x);
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,24,* Square-root function.
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,29,public class Sqrt implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,32,return FastMath.sqrt(x);
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,20,import org.apache.commons.math.analysis.BivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,23,* Subtract the second operand from the first.
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,26,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,28,public class Subtract implements BivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,29,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,30,"public double value(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,src/main/java/org/apache/commons/math/analysis/function/Subtract.java,31,return x - y;
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,24,* Tangent function.
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,29,public class Tan implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Tan.java,src/main/java/org/apache/commons/math/analysis/function/Tan.java,32,return FastMath.tan(x);
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,24,* Hyperbolic tangent function.
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,29,public class Tanh implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,src/main/java/org/apache/commons/math/analysis/function/Tanh.java,32,return FastMath.tanh(x);
True,src/test/java/org/apache/commons/math/analysis/ComposableFunctionTest.java,src/test/java/org/apache/commons/math/analysis/ComposableFunctionTest.java,25,* @deprecated To be removed when the class {@link ComposableFunction} is removed.
True,src/test/java/org/apache/commons/math/analysis/ComposableFunctionTest.java,src/test/java/org/apache/commons/math/analysis/ComposableFunctionTest.java,27,@Deprecated
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,18,package org.apache.commons.math.analysis;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,21,import org.apache.commons.math.analysis.function.Identity;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,22,import org.apache.commons.math.analysis.function.Constant;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,23,import org.apache.commons.math.analysis.function.Minus;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,24,import org.apache.commons.math.analysis.function.Inverse;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,25,import org.apache.commons.math.analysis.function.Power;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,26,import org.apache.commons.math.analysis.function.Sin;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,27,import org.apache.commons.math.analysis.function.Sinc;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,28,import org.apache.commons.math.analysis.BivariateRealFunction;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,29,import org.apache.commons.math.analysis.function.Add;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,30,import org.apache.commons.math.analysis.function.Multiply;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,31,import org.apache.commons.math.analysis.function.Divide;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,32,import org.apache.commons.math.analysis.function.Min;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,33,import org.apache.commons.math.analysis.function.Max;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,34,import org.apache.commons.math.analysis.function.Pow;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,35,import org.apache.commons.math.analysis.MultivariateRealFunction;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,37,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,38,import org.junit.Test;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,41,* Test for {@link FunctionUtils}.
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,43,public class FunctionUtilsTest {
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,44,private final double EPS = Math.ulp(1d);
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,46,@Test
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,47,public void testCompose() {
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,48,UnivariateRealFunction id = new Identity();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,49,"Assert.assertEquals(3, FunctionUtils.compose(id, id, id).value(3), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,51,UnivariateRealFunction c = new Constant(4);
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,52,"Assert.assertEquals(4, FunctionUtils.compose(id, c).value(3), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,53,"Assert.assertEquals(4, FunctionUtils.compose(c, id).value(3), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,55,UnivariateRealFunction m = new Minus();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,56,"Assert.assertEquals(-3, FunctionUtils.compose(m).value(3), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,57,"Assert.assertEquals(3, FunctionUtils.compose(m, m).value(3), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,59,UnivariateRealFunction inv = new Inverse();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,60,"Assert.assertEquals(-0.25, FunctionUtils.compose(inv, m, c, id).value(3), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,62,UnivariateRealFunction pow = new Power(2);
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,63,"Assert.assertEquals(81, FunctionUtils.compose(pow, pow).value(3), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,66,@Test
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,67,public void testAdd() {
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,68,UnivariateRealFunction id = new Identity();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,69,UnivariateRealFunction c = new Constant(4);
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,70,UnivariateRealFunction m = new Minus();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,71,UnivariateRealFunction inv = new Inverse();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,73,"Assert.assertEquals(4.5, FunctionUtils.add(inv, m, c, id).value(2), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,74,"Assert.assertEquals(4 + 2, FunctionUtils.add(c, id).value(2), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,75,"Assert.assertEquals(4 - 2, FunctionUtils.add(c, FunctionUtils.compose(m, id)).value(2), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,78,@Test
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,79,public void testMultiply() {
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,80,UnivariateRealFunction c = new Constant(4);
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,81,"Assert.assertEquals(16, FunctionUtils.multiply(c, c).value(12345), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,83,UnivariateRealFunction inv = new Inverse();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,84,UnivariateRealFunction pow = new Power(2);
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,85,"Assert.assertEquals(1, FunctionUtils.multiply(FunctionUtils.compose(inv, pow), pow).value(3.5), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,88,@Test
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,89,public void testCombine() {
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,90,BivariateRealFunction bi = new Add();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,91,UnivariateRealFunction id = new Identity();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,92,UnivariateRealFunction m = new Minus();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,93,"UnivariateRealFunction c = FunctionUtils.combine(bi, id, m);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,94,"Assert.assertEquals(0, c.value(2.3456), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,96,bi = new Multiply();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,97,UnivariateRealFunction inv = new Inverse();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,98,"c = FunctionUtils.combine(bi, id, inv);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,99,"Assert.assertEquals(1, c.value(2.3456), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,102,@Test
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,103,public void testCollector() {
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,104,BivariateRealFunction bi = new Add();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,105,"MultivariateRealFunction coll = FunctionUtils.collector(bi, 0);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,106,"Assert.assertEquals(10, coll.value(new double[] {1, 2, 3, 4}), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,108,bi = new Multiply();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,109,"coll = FunctionUtils.collector(bi, 1);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,110,"Assert.assertEquals(24, coll.value(new double[] {1, 2, 3, 4}), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,112,bi = new Max();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,113,"coll = FunctionUtils.collector(bi, Double.NEGATIVE_INFINITY);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,114,"Assert.assertEquals(10, coll.value(new double[] {1, -2, 7.5, 10, -24, 9.99}), 0);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,116,bi = new Min();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,117,"coll = FunctionUtils.collector(bi, Double.POSITIVE_INFINITY);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,118,"Assert.assertEquals(-24, coll.value(new double[] {1, -2, 7.5, 10, -24, 9.99}), 0);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,121,@Test
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,122,public void testSinc() {
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,123,BivariateRealFunction div = new Divide();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,124,UnivariateRealFunction sin = new Sin();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,125,UnivariateRealFunction id = new Identity();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,126,"UnivariateRealFunction sinc1 = FunctionUtils.combine(div, sin, id);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,127,UnivariateRealFunction sinc2 = new Sinc();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,129,for (int i = 0; i < 10; i++) {
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,130,double x = Math.random();
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,131,"Assert.assertEquals(sinc1.value(x), sinc2.value(x), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,135,@Test
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,136,public void testFixingArguments() {
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,137,"UnivariateRealFunction scaler = FunctionUtils.fix1stArgument(new Multiply(), 10);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,138,"Assert.assertEquals(1.23456, scaler.value(0.123456), EPS);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,140,UnivariateRealFunction pow1 = new Power(2);
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,141,"UnivariateRealFunction pow2 = FunctionUtils.fix2ndArgument(new Pow(), 2);"
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,143,for (int i = 0; i < 10; i++) {
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,144,double x = Math.random() * 10;
True,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,145,"Assert.assertEquals(pow1.value(x), pow2.value(x), 0);"
