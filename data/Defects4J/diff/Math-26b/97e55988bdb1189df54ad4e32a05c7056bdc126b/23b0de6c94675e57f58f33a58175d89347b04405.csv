is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,104,/** Perform some sanity checks on the integration parameters.
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,105,* @param equations differential equations set
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,106,* @param t0 start time
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,107,* @param y0 state vector at t0
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,108,* @param t target time for the integration
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,109,* @param y placeholder where to put the state vector
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,110,* @exception IntegratorException if some inconsistency is detected
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,112,"protected void sanityChecks(final FirstOrderDifferentialEquations equations,"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,113,"final double t0, final double[] y0,"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,114,"final double t, final double[] y)"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,115,throws IntegratorException {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,117,if (equations.getDimension() != y0.length) {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,118,"throw new IntegratorException(""dimensions mismatch: ODE problem has dimension {0},"" +"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,119,""" initial state vector has dimension {1}"","
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,120,new Object[] {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,121,"Integer.valueOf(equations.getDimension()),"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,122,Integer.valueOf(y0.length)
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,126,if (equations.getDimension() != y.length) {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,127,"throw new IntegratorException(""dimensions mismatch: ODE problem has dimension {0},"" +"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,128,""" final state vector has dimension {1}"","
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,129,new Object[] {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,130,"Integer.valueOf(equations.getDimension()),"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,131,Integer.valueOf(y.length)
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,135,"if (Math.abs(t - t0) <= 1.0e-12 * Math.max(Math.abs(t0), Math.abs(t))) {"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,136,"throw new IntegratorException(""too small integration interval: length = {0}"","
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,137,new Object[] {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,138,Double.valueOf(Math.abs(t - t0))
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,145,"inal double t0, final double[] y0, final double t, final double[] y)"
True,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,145,"final double t0, final double[] y0,"
True,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,146,"final double t, final double[] y)"
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,147,f (equations.getDimension() != y0.length) {
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,148,"hrow new IntegratorException(""dimensions mismatch: ODE problem has dimension {0},"" +"
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,149," initial state vector has dimension {1}"","
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,150,ew Object[] {
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,151,"nteger.valueOf(equations.getDimension()),"
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,152,nteger.valueOf(y0.length)
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,155,f (equations.getDimension() != y.length) {
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,156,"hrow new IntegratorException(""dimensions mismatch: ODE problem has dimension {0},"" +"
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,157," final state vector has dimension {1}"","
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,158,ew Object[] {
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,159,"nteger.valueOf(equations.getDimension()),"
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,160,nteger.valueOf(y.length)
True,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,149,"super.sanityChecks(equations, t0, y0, t, y);"
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,179,"f (Math.abs(t - t0) <= 1.0e-12 * Math.max(Math.abs(t0), Math.abs(t))) {"
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,180,"hrow new IntegratorException(""too small integration interval: length = {0}"","
False,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,181,ew Object[] { Double.valueOf(Math.abs(t - t0)) });
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,77,** Perform some sanity checks on the integration parameters.
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,78, @param equations differential equations set
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,79, @param t0 start time
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,80, @param y0 state vector at t0
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,81, @param t target time for the integration
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,82, @param y placeholder where to put the state vector
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,83, @exception IntegratorException if some inconsistency is detected
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,85,"rivate void sanityChecks(final FirstOrderDifferentialEquations equations,"
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,86,"inal double t0, final double[] y0, final double t, final double[] y)"
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,87,hrows IntegratorException {
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,88,f (equations.getDimension() != y0.length) {
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,89,"hrow new IntegratorException(""dimensions mismatch: ODE problem has dimension {0},"" +"
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,90," initial state vector has dimension {1}"","
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,91,ew Object[] {
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,92,"nteger.valueOf(equations.getDimension()),"
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,93,nteger.valueOf(y0.length)
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,96,f (equations.getDimension() != y.length) {
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,97,"hrow new IntegratorException(""dimensions mismatch: ODE problem has dimension {0},"" +"
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,98," final state vector has dimension {1}"","
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,99,ew Object[] {
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,100,"nteger.valueOf(equations.getDimension()),"
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,101,nteger.valueOf(y.length)
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,104,"f (Math.abs(t - t0) <= 1.0e-12 * Math.max(Math.abs(t0), Math.abs(t))) {"
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,105,"hrow new IntegratorException(""too small integration interval: length = {0}"","
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,106,ew Object[] { Double.valueOf(Math.abs(t - t0)) });
