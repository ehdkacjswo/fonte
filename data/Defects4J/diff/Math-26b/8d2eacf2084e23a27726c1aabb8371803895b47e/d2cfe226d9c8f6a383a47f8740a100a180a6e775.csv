is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,19,import java.util.Random;
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,20,mport org.apache.commons.math.stat.descriptive.DescriptiveStatistics;
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,21,import org.apache.commons.math.stat.descriptive.SummaryStatistics;
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,22,import org.apache.commons.math.stat.descriptive.StatisticalSummary;
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,35,/** RNG. */
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,36,private static Random rng = new Random();
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,43," @return for each of the given {@code methods}, a statistics of the"
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,44, average times (in milliseconds) taken by a single call to the
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,45, {@code call} method (i.e. the time taken by each timed block divided
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,46, by {@code repeatChunk}).
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,47,"* @return for each of the given {@code methods}, a"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,48,* {@link StatisticalSummary} of the average times (in milliseconds)
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,49,* taken by a single call to the {@code call} method (i.e. the time
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,50,* taken by each timed block divided by {@code repeatChunk}).
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,48,"ublic static DescriptiveStatistics[] time(int repeatChunk,"
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,49,"nt repeatStat,"
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,50,"oolean runGC,"
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,51,allable<Double> ... methods) {
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,52,"public static StatisticalSummary[] time(int repeatChunk,"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,53,"int repeatStat,"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,54,"boolean runGC,"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,55,Callable<Double> ... methods) {
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,58,inal DescriptiveStatistics[] stats = new DescriptiveStatistics[len];
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,62,final StatisticalSummary[] stats = new StatisticalSummary[len];
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,60,inal DescriptiveStatistics s = new DescriptiveStatistics();
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,64,final SummaryStatistics s = new SummaryStatistics();
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,64,tats[j] = s;
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,68,stats[j] = s.getSummary();
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,107,ouble result = 0;
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,111,final double[] result = new double[repeatChunk];
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,112,esult = r.call();
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,116,result[i] = r.call();
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,116,/ Collect run time and results.
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,120,// Collect run time.
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,118,imesAndResults[j][k][1] = result;
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,122,// Keep track of a randomly selected result.
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,123,timesAndResults[j][k][1] = result[rng.nextInt(repeatChunk)];
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,144,* The timing is performed by calling the
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,145,"* {@link #time(int,int,boolean,Callable[]) time} method."
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,152,"ublic static DescriptiveStatistics[] timeAndReport(String title,"
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,153,"nt repeatChunk,"
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,154,"nt repeatStat,"
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,155,"oolean runGC,"
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,156,unTest ... methods) {
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,159,"public static StatisticalSummary[] timeAndReport(String title,"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,160,"int repeatChunk,"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,161,"int repeatStat,"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,162,"boolean runGC,"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,163,RunTest ... methods) {
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,158,"inal String headerFormat = ""%s (runs per timed block: %d, timed blocks: %d)"";"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,165,"final String hFormat = ""%s (runs per timed block: %d, timed blocks: %d)"";"
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,162,"ystem.out.println(String.format(headerFormat,"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,169,"System.out.println(String.format(hFormat,"
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,166,"inal DescriptiveStatistics[] time = time(repeatChunk, repeatStat, runGC, methods);"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,173,"final StatisticalSummary[] time = time(repeatChunk,"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,174,"repeatStat,"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,175,"runGC,"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,176,methods);
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,168,inal DescriptiveStatistics s = time[i];
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,178,final StatisticalSummary s = time[i];
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,190,"ublic static DescriptiveStatistics[] timeAndReport(String title,"
False,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,191,unTest ... methods) {
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,200,"public static StatisticalSummary[] timeAndReport(String title,"
True,src/test/java/org/apache/commons/math/PerfTestUtils.java,src/test/java/org/apache/commons/math/PerfTestUtils.java,201,RunTest ... methods) {
