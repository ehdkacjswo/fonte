is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,61,"his(max,"
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,62,ew MaxCountExceededCallback() {
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,63,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,64,ublic void trigger(int max) {
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,65,hrow new MaxCountExceededException(max);
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,61,"this(max, null);"
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,75, @param cb Function to be called when the maximal count has been reached.
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,69,* @param cb Function to be called when the maximal count has been reached
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,70,* (can be {@code null}).
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,80,axCountCallback = cb;
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,75,if (cb != null) {
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,76,maxCountCallback = cb;
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,77,} else {
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,78,maxCountCallback = new MaxCountExceededCallback() {
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,79,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,80,public void trigger(int max) {
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,81,throw new MaxCountExceededException(max);
