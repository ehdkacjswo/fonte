is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,423,"// After inlining some of the variable uses, some variables are unused."
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,424,// Re-run remove unused vars to clean it up.
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,425,if (options.removeUnusedVars) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,426,passes.add(removeUnusedVars);
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,417,/ Readd the expression in the declaration of the temporary name.
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,417,// Re-add the expression in the declaration of the temporary name.
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,425,// If it is ASSIGN_XXX we need to assign it back to the original value.
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,426,"// Note that calling the temp constant is a lie in this case, but we do know"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,427,// that it is not modified until after the exposed expression.
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,428,if (NodeUtil.isAssignmentOp(parent) && !NodeUtil.isAssign(parent)) {
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,429,Node gParent = parent.getParent();
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,430,"Node assignBack = new Node(Token.ASSIGN,"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,431,"expr.cloneTree(),"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,432,tempNameNode.cloneNode());
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,433,if (NodeUtil.isExpressionNode(gParent)) {
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,434,gParent.getParent().addChildAfter(
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,435,"NodeUtil.newExpr(assignBack), gParent);"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,436,} else {
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,437,// TODO(user): Use comma here sucks. We might close some accuracy
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,438,// in flow sensitive passes but as far as I know it is unavoidable.
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,439,Node comma = new Node(Token.COMMA);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,440,"gParent.replaceChild(parent, comma);"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,441,comma.addChildrenToFront(assignBack);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,442,comma.addChildrenToFront(parent);
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,40,helperCanExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,41,"DecompositionType.UNDECOMPOSABLE, ""while(x = goo()&&foo()){}"", ""foo"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,42,helperCanExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,43,"DecompositionType.UNDECOMPOSABLE, ""while(x += goo()&&foo()){}"", ""foo"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,97,helperCanExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,98,"DecompositionType.DECOMPOSABLE, ""x += goo() && foo()"", ""foo"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,107,helperCanExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,108,"DecompositionType.DECOMPOSABLE, ""switch(x = goo() && foo()){}"", ""foo"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,295,public void testExposePlusEquals() {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,296,helperExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,297,"""var x = 0; x += foo() + 1"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,298,"""foo"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,299,"""var x = 0; var temp_const_0 = x;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,300,"""temp_const_0 += foo() + 1;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,301,"""x = temp_const_0;"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,303,helperExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,304,"""var x = 0; y = (x += foo()) + x"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,305,"""foo"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,306,"""var x = 0; var temp_const_0 = x;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,307,"""y = (temp_const_0 += foo(), x=temp_const_0) + x"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1325,public void testDecomposePlusEquals() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1326,"test(""function f(){a=1;return 1} var x = 1; x += f()"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1327,"""var x = 1;"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1328,"""var JSCompiler_temp_const_0 = x;"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1329,"""{var JSCompiler_inline_result_1; a=1; JSCompiler_inline_result_1=1}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1330,"""JSCompiler_temp_const_0 += JSCompiler_inline_result_1;"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1331,"""x = JSCompiler_temp_const_0"");"
