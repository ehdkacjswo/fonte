is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,16,"efaultAncestor = new Tag(""BODY"", true, true, true, false, false);"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,16,"defaultAncestor = new Tag(""BODY"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,21,rivate boolean isBlock; // block or inline
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,22,rivate boolean canContainBlock; // Can this tag hold block level tags?
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,23,rivate boolean canContainInline; // only pcdata if not
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,24,"rivate boolean optionalClosing; // If tag is open, and another seen, close previous tag"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,25,rivate boolean empty; // can hold nothing; e.g. img
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,21,private boolean isBlock = true; // block or inline
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,22,private boolean canContainBlock = true; // Can this tag hold block level tags?
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,23,private boolean canContainInline = true; // only pcdata if not
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,24,"private boolean optionalClosing = false; // If tag is open, and another seen, close previous tag"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,25,private boolean empty = false; // can hold nothing; e.g. img
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,28,"rivate Tag(String tagName, boolean block, boolean canContainBlock, boolean canContainInline, boolean optionalClosing, boolean empty) {"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,28,private Tag(String tagName) {
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,30,sBlock = block;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,31,his.canContainBlock = canContainBlock;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,32,his.canContainInline = canContainInline;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,33,his.optionalClosing = optionalClosing;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,34,his.empty = empty;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,57,"ag = new Tag(tagName, true, true, true, false, false);"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,52,tag = new Tag(tagName);
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,280,"eturn register(new Tag(tagName, true, true, true, false, false));"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,275,return register(new Tag(tagName));
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,284,"eturn register(new Tag(tagName, false, false, true, false, false));"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,279,Tag inline = new Tag(tagName);
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,280,inline.isBlock = false;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,281,inline.canContainBlock = false;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,282,return register(inline);
