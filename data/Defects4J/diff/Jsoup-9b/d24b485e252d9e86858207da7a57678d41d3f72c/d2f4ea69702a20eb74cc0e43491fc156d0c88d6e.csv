is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,6,import java.util.List;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,7,import java.util.ArrayList;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,91,Normalise the document. This happens after the parse phase so generally does not need to be called.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,92,Moves any text content that is not in the body element into the body.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,93,@return this document after normalisation
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,95,public Document normalise() {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,96,"if (select(""html"").isEmpty())"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,97,"appendElement(""html"");"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,98,if (head() == null)
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,99,"select(""html"").first().appendElement(""head"");"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,100,if (body() == null)
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,101,"select(""html"").first().appendElement(""body"");"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,103,normalise(this);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,104,"normalise(select(""html"").first());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,105,normalise(head());
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,107,return this;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,110,// does not recurse. the result order isn't great here (not intuitive); they are in the body though.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,111,private void normalise(Element element) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,112,List<Node> toMove = new ArrayList<Node>();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,113,for (Node node: element.childNodes) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,114,if (node instanceof TextNode) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,115,TextNode tn = (TextNode) node;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,116,if (!tn.isBlank())
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,117,toMove.add(tn);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,121,for (Node node: toMove) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,122,element.removeChild(node);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,123,"body().appendChild(new TextNode("" "", """"));"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,124,body().appendChild(node);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,576,Test if this element has any text content (that is not just whitespace).
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,577,@return true if element has non-blank text content.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,579,public boolean hasText() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,580,for (Node child: childNodes) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,581,if (child instanceof TextNode) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,582,TextNode textNode = (TextNode) child;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,583,if (!textNode.isBlank())
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,584,return true;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,587,return false;
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,5,import org.apache.commons.lang.StringUtils;
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,39,"Test if this text node is blank -- that is, empty or only whitespace (including newlines)."
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,40,"@return true if this document is empty or only whitespace, false if it contains any text content."
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,42,public boolean isBlank() {
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,43,return StringUtils.isBlank(normaliseWhitespace(getWholeText()));
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,81,eturn doc;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,81,return doc.normalise();
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,1,package org.jsoup.nodes;
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,3,import org.junit.Test;
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,5,import static org.junit.Assert.*;
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,8,Test TextNodes
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,10,"@author Jonathan Hedley, jonathan@hedley.net */"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,11,public class TextNodeTest {
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,12,@Test public void testBlank() {
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,13,"TextNode one = new TextNode("""", """");"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,14,"TextNode two = new TextNode(""     "", """");"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,15,"TextNode three = new TextNode(""  \n\n   "", """");"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,16,"TextNode four = new TextNode(""Hello"", """");"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,17,"TextNode five = new TextNode(""  \nHello "", """");"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,19,assertTrue(one.isBlank());
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,20,assertTrue(two.isBlank());
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,21,assertTrue(three.isBlank());
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,22,assertFalse(four.isBlank());
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,23,assertFalse(five.isBlank());
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,224,"ssertEquals(""<html><head><script></script><noscript></noscript></head><frameset><frame src=\""foo\"" /><frame src=\""foo\"" /></frameset></html>"","
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,224,"assertEquals(""<html><head><script></script><noscript></noscript></head><frameset><frame src=\""foo\"" /><frame src=\""foo\"" /></frameset><body></body></html>"","
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,245,@Test public void normalisesDocument() {
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,246,"String h = ""<!doctype html>One<html>Two<head>Three<link></head>Four<body>Five </body>Six </html>Seven "";"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,247,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,248,"assertEquals(""<!doctype html><html><head><link /></head><body>Five Six Seven  One Two Four Three</body></html>"","
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,249,TextUtil.stripNewlines(doc.html()));
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,252,@Test public void normlisesEmptyDocument() {
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,253,"Document doc = Jsoup.parse("""");"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,254,"assertEquals(""<html><head></head><body></body></html>"",TextUtil.stripNewlines(doc.html()));"
