is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,123,or (Node node: toMove) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,123,for (int i = toMove.size()-1; i >= 0; i--) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,124,Node node = toMove.get(i);
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,125,ody().prependChild(node);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,127,body().prependChild(node);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,113,"* Get this element's parent and ancestors, up to the document root."
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,114,"* @return this element's stack of parents, closest first."
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,116,public Elements parents() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,117,Elements parents = new Elements();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,118,"accumulateParents(this, parents);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,119,return parents;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,122,"private static void accumulateParents(Element el, Elements parents) {"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,123,Element parent = el.parent();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,124,"if (parent != null && !parent.tagName().equals(""#root"")) {"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,125,parents.add(parent);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,126,"accumulateParents(parent, parents);"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,305,* Get all of the parents and ancestor elements of the matched elements.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,306,* @return
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,308,public Elements parents() {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,309,HashSet<Element> combo = new LinkedHashSet<Element>();
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,310,for (Element e: contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,311,combo.addAll(e.parents());
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,313,return new Elements(combo);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,43,<tr><td><code>E:has(<em>selector</em>)</code></td><td>an Element that contains at least one element matching the <em>selector</em></td><td><code>div:has(p)</code> finds divs that contain p elements </td></tr>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,161,"} else if (tq.matchChomp("":has("")) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,162,return has();
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,245,nt index = Integer.parseInt(indexS);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,248,return Integer.parseInt(indexS);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,251,// pseudo selector :has(el)
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,252,private Elements has() {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,253,"String subQuery = tq.chompTo("")"");"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,254,"Validate.notEmpty(subQuery, "":has(el) subselect must not be empty"");"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,247,eturn index;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,256,"return filterForParentsOfDescendants(elements, select(subQuery, elements));"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,269,oolean found = false;
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,272,ound = true;
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,276,f (!found)
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,277,hildren.add(c);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,283,children.add(c);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,288,// implements :has(el). Finds elements that contain the matched elements
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,289,"private static Elements filterForParentsOfDescendants(Collection<Element> parents, Collection<Element> children) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,290,Elements filteredParents = new Elements();
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,291,for (Element p : parents) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,292,for (Element c : children) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,293,if (c.parents().contains(p)) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,294,filteredParents.add(p);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,298,return filteredParents;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,91,@Test public void testGetParents() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,92,"Document doc = Jsoup.parse(""<div><p>Hello <span>there</span></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,93,"Element span = doc.select(""span"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,94,Elements parents = span.parents();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,96,"assertEquals(4, parents.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,97,"assertEquals(""p"", parents.get(0).tagName());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,98,"assertEquals(""div"", parents.get(1).tagName());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,99,"assertEquals(""body"", parents.get(2).tagName());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,100,"assertEquals(""html"", parents.get(3).tagName());"
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,271,"ssertEquals(""<!doctype html><html><head><link /></head><body>Five Six Seven  One Two Four Three</body></html>"","
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,271,"assertEquals(""<!doctype html><html><head><link /></head><body>One Two Four Three Five Six Seven </body></html>"","
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,139,@Test public void parents() {
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,140,"Document doc = Jsoup.parse(""<div><p>Hello</p></div><p>There</p>"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,141,"Elements parents = doc.select(""p"").parents();"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,143,"assertEquals(3, parents.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,144,"assertEquals(""div"", parents.get(0).tagName());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,145,"assertEquals(""body"", parents.get(1).tagName());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,146,"assertEquals(""html"", parents.get(2).tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,355,@Test public void testPseudoHas() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,356,"Document doc = Jsoup.parse(""<div id=0><p><span>Hello</span></p></div> <div id=1><span class=foo>There</span></div> <div id=2><p>Not</p></div>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,358,"Elements divs1 = doc.select(""div:has(span)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,359,"assertEquals(2, divs1.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,360,"assertEquals(""0"", divs1.get(0).id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,361,"assertEquals(""1"", divs1.get(1).id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,363,"Elements divs2 = doc.select(""div:has([class]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,364,"assertEquals(1, divs2.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,365,"assertEquals(""1"", divs2.get(0).id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,367,"Elements divs3 = doc.select(""div:has(span, p)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,368,"assertEquals(3, divs3.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,369,"assertEquals(""0"", divs3.get(0).id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,370,"assertEquals(""1"", divs3.get(1).id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,371,"assertEquals(""2"", divs3.get(2).id());"
