is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,384,if (parent() == null) return 0;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,516,* Find elements whose sibling index is less than the supplied index.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,517,* @param index 0-based index
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,518,* @return elements less than index
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,520,public Elements getElementsByIndexLessThan(int index) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,521,"return Collector.collect(new Evaluator.IndexLessThan(index), this);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,525,* Find elements whose sibling index is greater than the supplied index.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,526,* @param index 0-based index
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,527,* @return elements greater than index
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,529,public Elements getElementsByIndexGreaterThan(int index) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,530,"return Collector.collect(new Evaluator.IndexGreaterThan(index), this);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,534,* Find elements whose sibling index is equal to the supplied index.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,535,* @param index 0-based index
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,536,* @return elements equal to index
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,538,public Elements getElementsByIndexEquals(int index) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,539,"return Collector.collect(new Evaluator.IndexEquals(index), this);"
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,133,static final class IndexLessThan extends IndexEvaluator {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,134,IndexLessThan(int index) {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,135,super(index);
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,138,public boolean matches(Element element) {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,139,return element.elementSiblingIndex() < index;
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,143,static final class IndexGreaterThan extends IndexEvaluator {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,144,IndexGreaterThan(int index) {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,145,super(index);
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,148,public boolean matches(Element element) {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,149,return element.elementSiblingIndex() > index;
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,153,static final class IndexEquals extends IndexEvaluator {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,154,IndexEquals(int index) {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,155,super(index);
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,158,public boolean matches(Element element) {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,159,return element.elementSiblingIndex() == index;
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,163,abstract static class IndexEvaluator extends Evaluator {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,164,protected int index;
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,166,IndexEvaluator(int index) {
True,src/main/java/org/jsoup/nodes/Evaluator.java,src/main/java/org/jsoup/nodes/Evaluator.java,167,this.index = index;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,3,import org.apache.commons.lang.StringUtils;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,39,"<tr><td><td colspan=""3""><h3>Pseudo selectors</h3></td></tr>"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,40,<tr><td><code>E:lt(<em>n</em>)</code></td><td>an Element whose sibling index is less than <em>n</em></td><td><code>td:lt(3)</code> finds the first 2 cells of each row</td></tr>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,41,<tr><td><code>E:gt(<em>n</em>)</code></td><td>an Element whose sibling index is greater than <em>n</em></td><td><code>td:gt(1)</code> finds cells after skipping the first two</td></tr>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,42,<tr><td><code>E:eq(<em>n</em>)</code></td><td>an Element whose sibling index is equal to <em>n</em></td><td><code>td:eq(1)</code> finds the first cell of each row</td></tr>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,154,"} else if (tq.matchChomp("":lt("")) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,155,return indexLessThan();
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,156,"} else if (tq.matchChomp("":gt("")) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,157,return indexGreaterThan();
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,158,"} else if (tq.matchChomp("":eq("")) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,159,return indexEquals();
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,229,"// pseudo selectors :lt, :gt, :eq"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,230,private Elements indexLessThan() {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,231,return root.getElementsByIndexLessThan(consumeIndex());
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,234,private Elements indexGreaterThan() {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,235,return root.getElementsByIndexGreaterThan(consumeIndex());
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,238,private Elements indexEquals() {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,239,return root.getElementsByIndexEquals(consumeIndex());
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,242,private int consumeIndex() {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,243,"String indexS = tq.chompTo("")"").trim();"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,244,"Validate.isTrue(StringUtils.isNumeric(indexS), ""Index must be numeric"");"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,245,int index = Integer.parseInt(indexS);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,247,return index;
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,311,@Test public void testPseudoLessThan() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,312,"Document doc = Jsoup.parse(""<div><p>One</p><p>Two</p><p>Three</>p></div><div><p>Four</p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,313,"Elements ps = doc.select(""div p:lt(2)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,314,"assertEquals(3, ps.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,315,"assertEquals(""One"", ps.get(0).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,316,"assertEquals(""Two"", ps.get(1).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,317,"assertEquals(""Four"", ps.get(2).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,320,@Test public void testPseudoGreaterThan() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,321,"Document doc = Jsoup.parse(""<div><p>One</p><p>Two</p><p>Three</p></div><div><p>Four</p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,322,"Elements ps = doc.select(""div p:gt(0)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,323,"assertEquals(2, ps.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,324,"assertEquals(""Two"", ps.get(0).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,325,"assertEquals(""Three"", ps.get(1).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,328,@Test public void testPseudoEquals() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,329,"Document doc = Jsoup.parse(""<div><p>One</p><p>Two</p><p>Three</>p></div><div><p>Four</p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,330,"Elements ps = doc.select(""div p:eq(0)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,331,"assertEquals(2, ps.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,332,"assertEquals(""One"", ps.get(0).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,333,"assertEquals(""Four"", ps.get(1).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,335,"Elements ps2 = doc.select(""div:eq(0) p:eq(0)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,336,"assertEquals(1, ps2.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,337,"assertEquals(""One"", ps2.get(0).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,338,"assertEquals(""p"", ps2.get(0).tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,341,@Test public void testPseudoBetween() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,342,"Document doc = Jsoup.parse(""<div><p>One</p><p>Two</p><p>Three</>p></div><div><p>Four</p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,343,"Elements ps = doc.select(""div p:gt(0):lt(2)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,344,"assertEquals(1, ps.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,345,"assertEquals(""Two"", ps.get(0).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,348,@Test public void testPseudoCombined() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,349,"Document doc = Jsoup.parse(""<div class='foo'><p>One</p><p>Two</p></div><div><p>Three</p><p>Four</p></div>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,350,"Elements ps = doc.select(""div.foo p:gt(0)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,351,"assertEquals(1, ps.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,352,"assertEquals(""Two"", ps.get(0).text());"
