is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,270,"lement fragment = Parser.parseBodyFragment(html, baseUri).body();"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,271,"/ TODO: must parse without implicit elements, so you can e.g. add <td> to a <tr> (without creating a whole new table)"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,270,"Element fragment = Parser.parseBodyFragmentRelaxed(html, baseUri()).body();"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,288,"lement fragment = Parser.parseBodyFragment(html, baseUri).body();"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,289,"/ TODO: must parse without implicit elements, so you can e.g. add <td> to a <tr> (without creating a whole new table)"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,287,"Element fragment = Parser.parseBodyFragmentRelaxed(html, baseUri()).body();"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,316,"lement wrapBody = Parser.parseBodyFragment(html, baseUri).body();"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,314,"Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,26,private boolean relaxed = false;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,68,"Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,69,"context, means that implicit tags are not automatically created when missing."
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,70,@param bodyHtml fragment of HTML
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,71,"@param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs."
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,72,"@return Document, with empty head, and HTML parsed into body"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,74,"public static Document parseBodyFragmentRelaxed(String bodyHtml, String baseUri) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,75,"Parser parser = new Parser(bodyHtml, baseUri, true);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,76,parser.relaxed = true;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,77,return parser.parse();
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,216,f (!validAncestor) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,230,if (!validAncestor && !relaxed) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,259,if (childTag.requiresSpecificParent())
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,260,return stack.getLast().tag().isValidParent(childTag);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,262,"// otherwise, look up the stack for valid ancestors"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,248,f (parent2.isValidParent(childTag)) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,266,if (parent2.isValidAncestor(childTag)) {
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,27,rivate List<Tag> ancestors;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,27,private List<Tag> ancestors; // elements must be a descendant of one of these ancestors
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,28,"private Tag parent; // if not null, elements must be a direct child of parent"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,99,// don't allow children to contain their parent (directly)
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,100,if (this.requiresSpecificParent() && this.getImplicitParent().equals(child))
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,101,return false;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,158,boolean requiresSpecificParent() {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,159,return this.parent != null;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,163,return this.equals(child.parent);
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,166,boolean isValidAncestor(Tag child) {
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,220,"reateBlock(""FRAME"").setAncestor(""FRAMESET"").setEmpty();"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,221,"reateBlock(""NOFRAMES"").setAncestor(""FRAMESET"").setContainDataOnly();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,233,"createBlock(""FRAME"").setParent(""FRAMESET"").setEmpty();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,234,"createBlock(""NOFRAMES"").setParent(""FRAMESET"").setContainDataOnly();"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,284,"reateInline(""OPTGROUP"").setAncestor(""SELECT""); //  only contain option"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,285,"reateInline(""OPTION"").setAncestor(""SELECT"").setContainDataOnly();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,297,"createInline(""OPTGROUP"").setParent(""SELECT""); //  only contain option"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,298,"createInline(""OPTION"").setParent(""SELECT"").setContainDataOnly();"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,291,"reateInline(""PARAM"").setAncestor(""OBJECT"").setEmpty();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,304,"createInline(""PARAM"").setParent(""OBJECT"").setEmpty();"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,296,"reateInline(""DT"").setAncestor(""DL"").setOptionalClosing(); // only within DL."
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,297,"reateInline(""DD"").setAncestor(""DL"").setOptionalClosing(); // only within DL."
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,309,"createInline(""DT"").setParent(""DL"").setOptionalClosing(); // only within DL."
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,310,"createInline(""DD"").setParent(""DL"").setOptionalClosing(); // only within DL."
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,303,"reateBlock(""CAPTION"").setAncestor(""TABLE"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,304,"reateBlock(""THEAD"").setAncestor(""TABLE"").setOptionalClosing(); // just TR"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,305,"reateBlock(""TFOOT"").setAncestor(""TABLE"").setOptionalClosing(); // just TR"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,306,"reateBlock(""TBODY"").setAncestor(""TABLE"").setOptionalClosing(); // optional / implicit open too. just TR"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,307,"reateBlock(""COLGROUP"").setAncestor(""TABLE"").setOptionalClosing(); // just COL"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,308,"reateBlock(""COL"").setAncestor(""COLGROUP"").setEmpty();"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,309,"reateBlock(""TR"").setAncestor(""TABLE"").setOptionalClosing(); // just TH, TD"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,310,"reateBlock(""TH"").setAncestor(""TR"").setOptionalClosing();"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,311,"reateBlock(""TD"").setAncestor(""TR"").setOptionalClosing();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,316,"createBlock(""CAPTION"").setParent(""TABLE"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,317,"createBlock(""THEAD"").setParent(""TABLE"").setOptionalClosing(); // just TR"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,318,"createBlock(""TFOOT"").setParent(""TABLE"").setOptionalClosing(); // just TR"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,319,"createBlock(""TBODY"").setParent(""TABLE"").setOptionalClosing(); // optional / implicit open too. just TR"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,320,"createBlock(""COLGROUP"").setParent(""TABLE"").setOptionalClosing(); // just COL"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,321,"createBlock(""COL"").setParent(""COLGROUP"").setEmpty();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,322,"createBlock(""TR"").setParent(""TABLE"").setOptionalClosing(); // just TH, TD"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,323,"createBlock(""TH"").setParent(""TR"").setOptionalClosing();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,324,"createBlock(""TD"").setParent(""TR"").setOptionalClosing();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,388,private Tag setParent(String tagName) {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,389,parent = Tag.valueOf(tagName);
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,390,setAncestor(tagName);
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,391,return this;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,214,@Test public void testAppendRowToTable() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,215,"Document doc = Jsoup.parse(""<table><tr><td>1</td></tr></table>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,216,"Element table = doc.select(""table"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,217,"table.append(""<tr><td>2</td></tr>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,219,"assertEquals(""<table><tr><td>1</td></tr><tr><td>2</td></tr></table>"", TextUtil.stripNewlines(doc.body().html()));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,222,@Test public void testPrependRowToTable() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,223,"Document doc = Jsoup.parse(""<table><tr><td>1</td></tr></table>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,224,"Element table = doc.select(""table"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,225,"table.prepend(""<tr><td>2</td></tr>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,227,"assertEquals(""<table><tr><td>2</td></tr><tr><td>1</td></tr></table>"", TextUtil.stripNewlines(doc.body().html()));"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,172,@Test public void handlesNestedImplicitTable() {
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,173,"Document doc = Jsoup.parse(""<table><td>1</td></tr> <td>2</td></tr> <td> <table><td>3</td> <td>4</td></table> <tr><td>5</table>"");"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,174,"assertEquals(""<table><tr><td>1</td></tr> <tr><td>2</td></tr> <tr><td> <table><tr><td>3</td> <td>4</td></tr></table> </td></tr><tr><td>5</td></tr></table>"", TextUtil.stripNewlines(doc.body().html()));"
