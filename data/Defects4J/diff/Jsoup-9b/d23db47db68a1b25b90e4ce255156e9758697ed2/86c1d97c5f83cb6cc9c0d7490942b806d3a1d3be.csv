is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,12,"public static Document parse(String html, String baseUri) {"
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,13,"return Parser.parse(html, baseUri);"
False,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,13,eturn Parser.parse(html);
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,16,"return Parser.parse(html, """");"
False,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,10,ublic Comment(String data) {
False,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,11,uper();
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,10,"public Comment(String data, String baseUri) {"
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,11,super(baseUri);
False,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,12,ublic DataNode(String data) {
False,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,13,uper();
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,12,"public DataNode(String data, String baseUri) {"
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,13,super(baseUri);
False,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,33,ublic static DataNode createFromEncoded(String encodedData) {
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,33,"public static DataNode createFromEncoded(String encodedData, String baseUri) {"
False,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,35,eturn new DataNode(data);
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,35,"return new DataNode(data, baseUri);"
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,13,ublic Document() {
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,14,"uper(new StartTag(Tag.valueOf(""#root"")));"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,13,public Document(String baseUri) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,14,"super(new StartTag(Tag.valueOf(""#root""), baseUri));"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,23,uper(startTag.getAttributes());
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,23,"super(startTag.getBaseUri(), startTag.getAttributes());"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,194,extNode textNode = new TextNode(text);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,194,"TextNode textNode = new TextNode(text, baseUri);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,6,import java.net.MalformedURLException;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,7,import java.net.URL;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,20,final String baseUri;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,22,rotected Node(Attributes attributes) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,25,"protected Node(String baseUri, Attributes attributes) {"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,26,Validate.notNull(baseUri);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,27,Validate.notNull(attributes);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,30,this.baseUri = baseUri.trim();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,27,rotected Node() {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,28,his(new Attributes());
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,34,protected Node(String baseUri) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,35,"this(baseUri, new Attributes());"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,34,eturn attributes.get(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,41,String value = attributes.get(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,42,"return value == null ? """" : value;"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,50,public boolean hasAttr(String attributeKey) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,51,Validate.notNull(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,52,return attributes.hasKey(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,55,public String baseUri() {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,56,return baseUri;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,59,public String absUrl(String attribute) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,60,Validate.notEmpty(attribute);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,62,String relUrl = attr(attribute);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,63,if (baseUri.isEmpty()) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,64,return relUrl; // nothing to make absolute with
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,65,} else {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,66,URL base;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,67,try {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,68,try {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,69,base = new URL(baseUri);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,70,} catch (MalformedURLException e) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,71,"// the base is unsuitable, but the attribute may be abs, so try that"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,72,URL abs = new URL(relUrl);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,73,return abs.toExternalForm();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,75,"URL abs = new URL(base, relUrl);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,76,return abs.toExternalForm();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,77,} catch (MalformedURLException e) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,78,"return """";"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,15, @see #createFromEncoded(String)
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,15,"* @see #createFromEncoded(String, String)"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,17,ublic TextNode(String text) {
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,18,uper();
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,17,"public TextNode(String text, String baseUri) {"
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,18,super(baseUri);
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,43,ublic static TextNode createFromEncoded(String encodedText) {
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,43,"public static TextNode createFromEncoded(String encodedText, String baseUri) {"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,45,eturn new TextNode(text);
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,45,"return new TextNode(text, baseUri);"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,10,ublic XmlDeclaration(String data) {
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,11,uper();
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,10,"public XmlDeclaration(String data, String baseUri) {"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,11,super(baseUri);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,24,private String baseUri;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,25,ublic Parser(String html) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,26,"public Parser(String html, String baseUri) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,28,Validate.notNull(baseUri);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,32,this.baseUri = baseUri;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,31,oc = new Document();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,34,doc = new Document(baseUri);
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,35,ublic static Document parse(String html) {
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,36,arser parser = new Parser(html);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,38,"public static Document parse(String html, String baseUri) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,39,"Parser parser = new Parser(html, baseUri);"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,64,omment comment = new Comment(data);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,67,"Comment comment = new Comment(data, baseUri);"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,72,mlDeclaration decl = new XmlDeclaration(data);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,75,"XmlDeclaration decl = new XmlDeclaration(data, baseUri);"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,99,"tartTag startTag = new StartTag(tag, attributes);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,102,"StartTag startTag = new StartTag(tag, baseUri, attributes);"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,110,ataNode dataNode = DataNode.createFromEncoded(data);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,113,"DataNode dataNode = DataNode.createFromEncoded(data, baseUri);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,120,// <base href>: update the base uri
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,121,"if (child.tagName().equals(""base"")) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,122,"baseUri = child.absUrl(""href"");"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,152,extNode textNode = TextNode.createFromEncoded(text);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,161,"TextNode textNode = TextNode.createFromEncoded(text, baseUri);"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,164,tartTag parentStart = new StartTag(parentTag);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,173,"StartTag parentStart = new StartTag(parentTag, baseUri);"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,168,lement head = new Element(new StartTag(headTag));
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,177,"Element head = new Element(new StartTag(headTag, baseUri));"
False,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,11,ag tag;
False,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,12,ttributes attributes;
True,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,11,final Tag tag;
True,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,12,final Attributes attributes;
True,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,13,final String baseUri;
False,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,14,"ublic StartTag(Tag tag, Attributes attributes) {"
True,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,15,"public StartTag(Tag tag, String baseUri, Attributes attributes) {"
True,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,17,Validate.notNull(baseUri);
True,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,20,this.baseUri = baseUri;
False,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,20,ublic StartTag(Tag tag) {
False,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,21,"his(tag, new Attributes());"
True,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,24,"public StartTag(Tag tag, String baseUri) {"
True,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,25,"this(tag, baseUri, new Attributes());"
True,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,36,public String getBaseUri() {
True,src/main/java/org/jsoup/parser/StartTag.java,src/main/java/org/jsoup/parser/StartTag.java,37,return baseUri;
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,54,eturn (element.attr(key) != null);
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,54,return (element.hasAttr(key));
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,87,"ocument doc = Jsoup.parse(""<div style='bold'><p><p><b style></b></p></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,87,"Document doc = Jsoup.parse(""<div style='bold'><p title=qux><p><b style></b></p></div>"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,1,package org.jsoup.nodes;
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,3,import org.jsoup.parser.StartTag;
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,4,import org.jsoup.parser.Tag;
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,5,import org.junit.Test;
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,7,import static org.junit.Assert.*;
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,9,Tests Nodes
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,11,"@author Jonathan Hedley, jonathan@hedley.net */"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,12,public class NodeTest {
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,13,@Test public void handlesBaseUri() {
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,14,"Tag tag = Tag.valueOf(""a"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,15,Attributes attribs = new Attributes();
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,16,"attribs.put(""relHref"", ""/foo"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,17,"attribs.put(""absHref"", ""http://bar/qux"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,19,"Element noBase = new Element(new StartTag(tag, """", attribs));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,20,"assertEquals(""/foo"", noBase.absUrl(""relHref"")); // with no base, should fallback to href attrib, whatever it is"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,22,"Element withBase = new Element(new StartTag(tag, ""http://foo/"", attribs));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,23,"assertEquals(""http://foo/foo"", withBase.absUrl(""relHref"")); // construct abs from base + rel"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,24,"assertEquals(""http://bar/qux"", withBase.absUrl(""absHref"")); // href is abs, so returns that"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,25,"assertEquals(""http://foo/"", withBase.absUrl(""noval""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,27,"Element dodgyBase = new Element(new StartTag(tag, ""wtf://no-such-protocol/"", attribs));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,28,"assertEquals(""http://bar/qux"", dodgyBase.absUrl(""absHref"")); // base fails, but href good, so get that"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,29,"assertEquals("""", dodgyBase.absUrl(""relHref"")); // base fails, only rel href, so return nothing"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,148,@Test public void handlesBaseTags() {
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,149,"String h = ""<a href=1>#</a><base href='/2/'><a href='3'>#</a><base href='http://bar'><a href=4>#</a>"";"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,150,"Document doc = Jsoup.parse(h, ""http://foo/"");"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,151,"assertEquals(""http://foo/"", doc.baseUri());"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,153,"Elements anchors = doc.getElementsByTag(""a"");"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,154,"assertEquals(3, anchors.size());"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,156,"assertEquals(""http://foo/"", anchors.get(0).baseUri());"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,157,"assertEquals(""http://foo/2/"", anchors.get(1).baseUri());"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,158,"assertEquals(""http://bar"", anchors.get(2).baseUri());"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,160,"assertEquals(""http://foo/1"", anchors.get(0).absUrl(""href""));"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,161,"assertEquals(""http://foo/2/3"", anchors.get(1).absUrl(""href""));"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,162,"assertEquals(""http://bar/4"", anchors.get(2).absUrl(""href""));"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,47,"tring h = ""<div title=foo /><div title=bar /><div />"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,47,"String h = ""<div title=foo /><div title=bar /><div style=qux />"";"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,78,"ssertNull(els.get(3).attr(""title""));"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,78,"assertTrue(els.get(3).attr(""title"").isEmpty()); // missing attributes come back as empty string"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,79,"assertFalse(els.get(3).hasAttr(""title""));"
