is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,5,mport java.util.LinkedHashMap;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,5,import java.util.*;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,11,ublic class Attributes {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,11,public class Attributes implements Iterable<Attribute> {
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,39,"/ todo: toString, list (as List<Attribute>)"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,39,public void mergeAttributes(Attributes incoming) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,40,for (Attribute attribute : incoming) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,41,this.put(attribute);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,45,public Iterator<Attribute> iterator() {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,46,return asList().iterator();
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,49,public List<Attribute> asList() {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,50,List<Attribute> list = new ArrayList<Attribute>(attributes.size());
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,51,"for (Map.Entry<String, String> entry : attributes.entrySet()) {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,52,"Attribute attribute = new Attribute(entry.getKey(), entry.getValue());"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,53,list.add(attribute);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,55,return Collections.unmodifiableList(list);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,58,// todo: toString
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,17,"head = new Element (new StartTag(Tag.valueOf(""head"")));"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,18,"body = new Element (new StartTag(Tag.valueOf(""body"")));"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,20,this.addChild(head);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,21,this.addChild(body);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,24,public Element getHead() {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,25,return head;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,28,public Element getBody() {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,29,return body;
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,1,package org.jsoup.nodes;
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,4,An XML Declaration.
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,6,"@author Jonathan Hedley, jonathan@hedley.net */"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,7,public class XmlDeclaration extends Node {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,8,"private static final String DECL_KEY = ""declaration"";"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,10,public XmlDeclaration(String data) {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,11,super();
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,12,"attributes.put(DECL_KEY, data);"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,15,public String nodeName() {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,16,"return ""#declaration"";"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,19,public String getWholeDeclaration() {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,20,return attributes.get(DECL_KEY);
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,1,ackage org.jsoup.parser;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,3,mport org.jsoup.nodes.Attribute;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,4,mport org.jsoup.nodes.Attributes;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,6,mport java.util.LinkedList;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,7,mport java.util.Queue;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,8,mport java.util.regex.Pattern;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,11,arse attribute strings into attributes.
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,13,"author Jonathan Hedley, jonathan@hedley.net */"
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,14,ublic class AttributeParser {
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,15,rivate static final char SQ = '\'';
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,16,"rivate static final char DQ = '""';"
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,17,rivate static final char EQ = '=';
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,18,"rivate static final Pattern keyOk = Pattern.compile(""[^\\s'\""=]"");"
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,19,"rivate static final Pattern space = Pattern.compile(""[\\s]"");"
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,21,ublic Attributes parse(String attributeString) {
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,22,ttributes attributes = new Attributes();
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,23,f (attributeString == null || attributeString.trim().isEmpty())
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,24,eturn attributes;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,26,har[] charArray = attributeString.trim().toCharArray();
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,27,ueue<Character> chars = new LinkedList<Character>();
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,28,or (char c : charArray) {
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,29,hars.add(c);
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,32,hile (chars.size() > 0) {
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,33,ttribute attribute = nextAttribute(chars);
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,34,f (attribute != null)
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,35,ttributes.put(attribute);
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,37,eturn attributes;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,40,rivate Attribute nextAttribute(Queue<Character> chars) {
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,41,tringBuilder key = new StringBuilder();
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,42,tringBuilder value = new StringBuilder();
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,43,oolean seenEquals = false;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,44,haracter quoteChar = null;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,46,"/ From: foo=""bar"" foo = 'bar ""qux"" zap' foo = bar foo foo foo=""data = something"""
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,47,"/ To: <foo=bar>, <foo=bar ""qux"" zap>, <foo=bar>, <foo=>, <foo=>, <foo=data = something>"
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,48,hile (chars.size() > 0) {
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,49,haracter c = chars.remove();
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,50,tring s = c.toString();
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,52,/ this is a bit gnarly. ideas on rewrite with expect + consume. Doesn't seem like a regular expression though.
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,54,f (!seenEquals && keyOk.matcher(s).matches()) {
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,55,/ accum the key
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,56,ey.append(s);
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,57, else if (!seenEquals && key.length() > 0 && space.matcher(s).matches()) {
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,58,"/ if we have a key, then a run of space, then a key-like char: that's a new key and we need to break before"
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,59,haracter nextC = chars.peek();
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,60,f (nextC != null && keyOk.matcher(nextC.toString()).matches())
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,61,reak;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,62, else if (!seenEquals && c == EQ) { //
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,63,eenEquals = true;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,64, else if (seenEquals) {
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,65,/ working on the value
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,66,f (quoteChar == null && (c == SQ || c == DQ)) {
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,67,/ match until closing quote
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,68,uoteChar = c;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,69, else if (c == quoteChar) {
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,70,/ closing quote
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,71,reak;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,72, else if (quoteChar == null && value.length() > 0 && space.matcher(s).matches()) {
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,73,/ we have found a space in a naked value (foo=bar): end of the line
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,74,reak;
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,75, else {
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,76,/ accum the value
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,77,alue.append(s);
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,82,/ TODO[must] de-entify / unescape attribute values (and keys too I guess)
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,84,/ return an attribute if we have a key (val can be empty)
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,85,f (key.length() > 0)
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,86,"eturn new Attribute(key.toString().trim(), value.toString().trim());"
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,87,lse
False,src/main/java/org/jsoup/parser/AttributeParser.java,src/main/java/org/jsoup/parser/AttributeParser.java,88,eturn null;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,6,mport java.util.LinkedList;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,6,import java.util.*;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,7,import java.util.regex.Matcher;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,8,import java.util.regex.Pattern;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,9,arses a {@link TokenStream} into a {@link Document}
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,11,Parses HTML into a {@link Document}
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,13,rivate TokenStream tokenStream;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,15,"private static String SQ = ""'"";"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,16,"private static String DQ = ""\"""";"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,17,"private static Tag htmlTag = Tag.valueOf(""html"");"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,18,"private static Tag headTag = Tag.valueOf(""head"");"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,19,"private static Tag bodyTag = Tag.valueOf(""body"");"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,15,rivate AttributeParser attributeParser;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,22,private LinkedList<Character> queue;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,23,private Document doc;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,17,ublic Parser(TokenStream tokenStream) {
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,18,alidate.notNull(tokenStream);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,25,public Parser(String html) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,26,Validate.notNull(html);
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,20,his.tokenStream = tokenStream;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,22,his.attributeParser = new AttributeParser();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,29,this.queue = new LinkedList<Character>();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,30,char[] chars = html.toCharArray();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,31,for (char c : chars) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,32,queue.add(c);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,35,doc = new Document();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,36,stack.add(doc);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,37,stack.add(doc.getHead());
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,26,okenStream ts = TokenStream.create(html);
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,27,arser parser = new Parser(ts);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,41,Parser parser = new Parser(html);
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,32,/ TODO: figure out implicit head & body elements
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,33,ocument doc = new Document();
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,34,tack.add(doc);
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,36,tringBuilder commentAccum = null;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,38,hile (tokenStream.hasNext()) {
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,39,oken token = tokenStream.next();
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,41,f (token.isFullComment()) { // <!-- comment -->
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,42,omment comment = new Comment(token.getCommentData());
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,43,tack.getLast().addChild(comment);
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,44, else if (token.isStartComment()) { // <!-- comment
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,45,ommentAccum = new StringBuilder(token.getCommentData());
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,46, else if (token.isEndComment() && commentAccum != null) { // comment -->
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,47,ommentAccum.append(token.getCommentData());
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,48,omment comment = new Comment(commentAccum.toString());
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,49,tack.getLast().addChild(comment);
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,50,ommentAccum = null;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,51, else if (commentAccum != null) { // within a comment
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,52,ommentAccum.append(token.getData());
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,46,while (!queue.isEmpty()) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,47,"if (matches(""<!--"")) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,48,parseComment();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,49,"} else if (matches(""<?"") || matches(""<!"")) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,50,parseXmlDecl();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,51,"} else if (matches(""</"")) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,52,parseEndTag();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,53,"} else if (matches(""<"")) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,54,parseStartTag();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,55,} else {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,56,parseText();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,59,return doc;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,55,lse if (token.isStartTag()) {
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,56,ttributes attributes = attributeParser.parse(token.getAttributeString());
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,57,ag tag = Tag.valueOf(token.getTagName());
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,58,"tartTag startTag = new StartTag(tag, attributes);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,62,private void parseComment() {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,63,"consume(""<!--"");"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,64,"String data = chompTo(""->"");"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,60,"/ if tag is ""html"", we already have it, so OK to ignore skip. todo: abstract this. and can there be attributes to set?"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,61,f (doc.getTag().equals(tag)) continue;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,66,"if (data.endsWith(""-"")) // i.e. was -->"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,67,"data = data.substring(0, data.length()-1);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,68,Comment comment = new Comment(data);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,69,last().addChild(comment);
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,63,lement parent = popStackToSuitableContainer(tag);
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,64,"alidate.notNull(parent, ""Should always have a viable container"");"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,65,lement node = new Element(startTag);
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,66,arent.addChild(node);
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,67,tack.add(node);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,72,private void parseXmlDecl() {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,73,"consume(""<""); consume(); // <? or <!, from initial match."
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,74,"String data = chompTo("">"");"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,70,f (token.isEndTag() && commentAccum == null) { // empty tags are both start and end tags
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,71,tack.removeLast();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,76,XmlDeclaration decl = new XmlDeclaration(data);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,77,last().addChild(decl);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,80,private void parseEndTag() {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,81,"consume(""</"");"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,82,String tagName = consumeWord();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,83,"chompTo("">"");"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,85,if (!tagName.isEmpty()) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,86,Tag tag = Tag.valueOf(tagName);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,87,popStackToClose(tag);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,91,private void parseStartTag() {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,92,"consume(""<"");"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,93,Attributes attributes = new Attributes();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,95,String tagName = consumeWord();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,96,"while (!matches(""/>"") && !matches("">"")) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,97,Attribute attribute = parseAttribute();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,98,if (attribute != null)
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,99,attributes.put(attribute);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,102,Tag tag = Tag.valueOf(tagName);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,103,"StartTag startTag = new StartTag(tag, attributes);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,104,Element child = new Element(startTag);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,106,boolean emptyTag;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,107,"if (matches(""/>"")) { // empty tag, don't add to stack"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,108,"consume(""/>"");"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,109,emptyTag = true;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,110,} else {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,111,"consume("">"");"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,112,emptyTag = false;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,76,/ TODO[must] handle comments
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,115,"// switch between html, head, body, to preserve doc structure"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,116,if (tag.equals(htmlTag)) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,117,doc.getAttributes().mergeAttributes(attributes);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,118,} else if (tag.equals(headTag)) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,119,doc.getHead().getAttributes().mergeAttributes(attributes);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,120,"// head is on stack from start, no action required"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,121,} else if (last().getTag().equals(headTag) && !headTag.canContain(tag)) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,122,// switch to body
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,123,stack.removeLast();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,124,stack.addLast(doc.getBody());
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,125,last().addChild(child);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,126,if (!emptyTag)
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,127,stack.addLast(child);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,128,} else if (tag.equals(bodyTag) && last().getTag().equals(htmlTag)) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,129,doc.getBody().getAttributes().mergeAttributes(attributes);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,130,stack.removeLast();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,131,stack.addLast(doc.getBody());
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,132,} else {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,133,Element parent = popStackToSuitableContainer(tag);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,134,parent.addChild(child);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,135,if (!emptyTag)
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,136,stack.addLast(child);
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,78,lse if (token.isTextNode()) {
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,79,tring text = token.getData();
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,80,extNode textNode = new TextNode(text);
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,81,tack.getLast().addChild(textNode);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,140,private Attribute parseAttribute() {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,141,consumeWhitespace();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,142,String key = consumeWord();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,143,"String value = """";"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,144,consumeWhitespace();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,145,"if (matches(""="")) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,146,"consume(""="");"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,147,consumeWhitespace();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,149,if (matches(SQ)) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,150,consume(SQ);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,151,value = chompTo(SQ);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,152,} else if (matches(DQ)) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,153,consume(DQ);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,154,value = chompTo(DQ);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,155,} else {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,156,StringBuilder valueAccum = new StringBuilder();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,157,"while (!matches(""/>"") && !matches("">"") && !Character.isWhitespace(queue.peekFirst())) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,158,valueAccum.append(consume());
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,160,value = valueAccum.toString();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,162,consumeWhitespace();
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,84,eturn doc;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,164,if (!key.isEmpty())
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,165,"return new Attribute(key, value);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,166,else {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,167,"consume(); // unknown char, keep popping so not get stuck"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,168,return null;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,172,private void parseText() {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,173,"// TODO: work out whitespace requirements (between blocks, between inlines)"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,174,StringBuilder textAccum = new StringBuilder();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,175,"while (!matches(""<"")) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,176,textAccum.append(consume());
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,178,TextNode textNode = new TextNode(textAccum.toString());
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,179,last().addChild(textNode);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,183,"* Pulls a string off the queue, up to but exclusive of the match sequence, or to the queue running out."
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,184,"* @param seq String to end on (and not include in return, but leave on queue)"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,185,* @return The matched data consumed from queue.
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,187,private String consumeTo(String seq) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,188,StringBuilder accum = new StringBuilder();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,189,while (!queue.isEmpty() && !matches(seq))
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,190,accum.append(consume());
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,192,return accum.toString();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,196,"* Pulls a string off the queue (like consumeTo), and then pulls off the matched string (but does not return it)."
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,197,"* @param seq String to match up to, and not include in return, and to pull off queue"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,198,* @return Data matched from queue.
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,200,private String chompTo(String seq) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,201,String data = consumeTo(seq);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,202,consume(seq);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,203,return data;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,207,* Consume one character off queue.
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,208,* @return first character on queue.
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,210,private Character consume() {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,211,return queue.removeFirst();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,214,private void consume(String seq) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,215,int len = seq.length();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,216,if (len > queue.size())
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,217,"throw new IllegalStateException(""Queue not long enough to consume sequence"");"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,218,char[] seqChars = seq.toCharArray();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,219,for (int i = 0; i < len; i++) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,220,Character qChar = consume();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,221,if (!qChar.equals(seqChars[i]))
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,222,"throw new IllegalStateException(""Queue did not match expected sequence"");"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,226,private void consumeWhitespace() {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,227,while (Character.isWhitespace(queue.peekFirst())) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,228,consume();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,232,private String consumeWord() {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,233,StringBuilder wordAccum = new StringBuilder();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,234,while (Character.isLetterOrDigit(queue.peekFirst())) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,235,wordAccum.append(queue.removeFirst());
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,237,return wordAccum.toString();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,240,private boolean matches(String seq) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,241,int len = seq.length();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,242,if (len > queue.size())
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,243,return false;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,244,"List<Character> chars = queue.subList(0, len);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,245,char[] seqChars = seq.toCharArray();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,246,for (int i = 0; i < len; i++) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,247,if (!chars.get(i).equals(seqChars[i]))
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,248,return false;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,250,return true;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,88,hile (stack.size() > 0) {
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,89,f (stack.getLast().getTag().canContain(tag))
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,90,eturn stack.getLast();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,254,while (!stack.isEmpty()) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,255,if (last().getTag().canContain(tag))
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,256,return last();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,263,private Element popStackToClose(Tag tag) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,264,"// first check to see if stack contains this tag; if so pop to there, otherwise ignore"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,265,int counter = 0;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,266,Element elToClose = null;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,267,for (int i = stack.size() -1; i > 0; i--) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,268,counter++;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,269,Element el = stack.get(i);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,270,if (el.getTag().equals(tag)) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,271,elToClose = el;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,272,break;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,275,if (elToClose != null) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,276,for (int i = 0; i < counter; i++) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,277,stack.removeLast();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,280,return elToClose;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,283,private Element last() {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,284,return stack.getLast();
False,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,1,ackage org.jsoup.parser;
False,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,4,untime exception to wrap up unlikely checked exceptions thrown when parsing.
False,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,6,"author Jonathan Hedley, jonathan@hedley.net */"
False,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,7,ublic class ParserRuntimeException extends RuntimeException {
False,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,8,rivate Position pos;
False,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,10,"ublic ParserRuntimeException(String message, Throwable cause, Position pos) {"
False,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,11,"uper(message, cause);"
False,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,12,his.pos = pos;
False,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,15,ublic Position getPos() {
False,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,16,eturn pos;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,1,ackage org.jsoup.parser;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,4,he start position (line & column number) that a token / node was found at.
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,6,"author Jonathan Hedley, jonathan@hedley.net */"
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,7,ublic final class Position implements Cloneable {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,8,rivate int offset = 0;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,9,rivate int lineNum = 1;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,10,rivate int colNum = 1;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,12,ublic int incOffset() {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,13,eturn offset++;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,16,ublic int incLineNum() {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,17,eturn lineNum++;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,20,ublic int incColNum() {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,21,eturn colNum++;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,24,ublic int getOffset() {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,25,eturn offset;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,28,ublic void setOffset(int offset) {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,29,his.offset = offset;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,32,ublic int getLineNum() {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,33,eturn lineNum;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,36,ublic void setLineNum(int lineNum) {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,37,his.lineNum = lineNum;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,40,ublic int getColNum() {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,41,eturn colNum;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,44,ublic void setColNum(int colNum) {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,45,his.colNum = colNum;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,48,Override
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,49,rotected Position clone() {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,50,ry {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,51,eturn (Position) super.clone();
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,52, catch (CloneNotSupportedException e) {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,53,hrow new Error(e);
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,57,Override
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,58,ublic boolean equals(Object o) {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,59,f (this == o) return true;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,60,f (o == null || getClass() != o.getClass()) return false;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,62,osition position = (Position) o;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,64,f (colNum != position.colNum) return false;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,65,f (lineNum != position.lineNum) return false;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,66,f (offset != position.offset) return false;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,68,eturn true;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,71,Override
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,72,ublic int hashCode() {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,73,nt result = offset;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,74,esult = 31 * result + lineNum;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,75,esult = 31 * result + colNum;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,76,eturn result;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,79,Override
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,80,ublic String toString() {
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,81,"eturn String.format(""%s:%s"", lineNum, colNum);"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,81,"// head can only contain a few. if more than head in here, modify to have a list of valids"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,82,// TODO[must] - lookup what head can contain
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,83,"// from memory: base, script, link, meta, title"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,84,"if (this.tagName.equals(""head"")) {"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,85,"if (child.tagName.equals(""base"") || child.tagName.equals(""script"") || child.tagName.equals(""link"") ||"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,86,"child.tagName.equals(""meta"") || child.tagName.equals(""title"")) {"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,87,return true;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,89,return false;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,1,ackage org.jsoup.parser;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,3,mport java.util.regex.Matcher;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,4,mport java.util.regex.Pattern;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,7, Token of HTML. Internal use only.
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,9,"author Jonathan Hedley, jonathan@hedley.net */"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,10,lass Token {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,11,"/ match tags: <, opt space, opt closer, tagname, opt attribs, opt empty closer, >"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,12,"rivate static final Pattern tagPattern = Pattern.compile(""^<\\s*(/?)\\s*(\\w+)\\b\\s*(.*?)\\s*(/?)\\s*>$"");"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,13,/ match comments
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,14,"rivate static final Pattern commentFullPattern = Pattern.compile(""^<!--\\s*(.*?)\\s*-?->$"");"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,15,"rivate static final Pattern commentStartPattern = Pattern.compile(""^<!--\\s*(.*?)\\s*(-?->)?$"");"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,16,"rivate static final Pattern commentEndPattern = Pattern.compile(""^(<!--)?\\s*(.*?)\\s*-?->$"");"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,19,rivate String data;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,20,rivate Position pos;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,22,rivate boolean startTag;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,23,rivate boolean endTag;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,25,rivate boolean startComment;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,26,rivate boolean endComment;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,27,rivate String commentData;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,29,rivate boolean textNode;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,30,rivate String tagName;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,31,rivate String attributes;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,33,"oken(String data, Position pos) {"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,34,his.data = data;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,35,his.pos = pos;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,37,atcher tagMatch = tagPattern.matcher(data);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,38,atcher commentFullMatch = commentFullPattern.matcher(data);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,39,atcher commentStartMatch = commentStartPattern.matcher(data);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,40,atcher commentEndMatch = commentEndPattern.matcher(data);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,42,f (commentFullMatch.matches()) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,43,tartComment = true;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,44,ndComment = true;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,45,ommentData = commentFullMatch.group(1);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,47,lse if (commentStartMatch.matches()) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,48,tartComment = true;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,49,ommentData = commentStartMatch.group(1);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,51,lse if (commentEndMatch.matches()) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,52,ndComment = true;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,53,ommentData = commentEndMatch.group(2);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,54, else if (!startComment && tagMatch.matches()) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,55,tartTag = (tagMatch.group(1).isEmpty()); // 1: closer
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,56,ndTag = (!tagMatch.group(1).isEmpty()) || (!tagMatch.group(4).isEmpty()); // 4: empty tag
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,57,agName = tagMatch.group(2);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,58,ttributes = (tagMatch.group(3).isEmpty() ? null : tagMatch.group(3));
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,59, else {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,60,"/ TODO: xml decls, cdata"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,61,extNode = true;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,66,ublic String getData() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,67,eturn data;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,70,ublic void setData(String data) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,71,his.data = data;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,74,ublic Position getPos() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,75,eturn pos;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,78,ublic void setPos(Position pos) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,79,his.pos = pos;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,82,ublic boolean isStartTag() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,83,eturn startTag;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,86,ublic boolean isEndTag() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,87,eturn endTag;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,90,ublic boolean isStartComment() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,91,eturn startComment;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,94,ublic boolean isEndComment() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,95,eturn endComment;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,98,ublic boolean isFullComment() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,99,eturn startComment && endComment;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,102,ublic String getCommentData() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,103,eturn commentData;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,106,ublic boolean isTextNode() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,107,eturn textNode;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,110,ublic String getTagName() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,111,eturn tagName;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,114,ublic String getAttributeString() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,115,eturn attributes;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,118,Override
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,119,ublic boolean equals(Object o) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,120,f (this == o) return true;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,121,f (o == null || getClass() != o.getClass()) return false;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,123,oken token = (Token) o;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,125,f (data != null ? !data.equals(token.data) : token.data != null) return false;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,126,f (pos != null ? !pos.equals(token.pos) : token.pos != null) return false;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,128,eturn true;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,131,Override
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,132,ublic int hashCode() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,133,nt result = data != null ? data.hashCode() : 0;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,134,esult = 31 * result + (pos != null ? pos.hashCode() : 0);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,135,eturn result;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,138,Override
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,139,ublic String toString() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,140,"eturn String.format(""%s (%s)"", data, pos);"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,1,ackage org.jsoup.parser;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,3,mport java.io.IOException;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,4,mport java.io.Reader;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,5,mport java.io.StringReader;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,6,mport java.nio.CharBuffer;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,7,mport java.util.ArrayList;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,8,mport java.util.Iterator;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,9,mport java.util.List;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,12,plits a given input into a stream of {@link Token Tokens}. (Internal use only).
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,14,"author Jonathan Hedley, jonathan@hedley.net */"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,15,lass TokenStream implements Iterator<Token> {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,16,rivate static final int BUFFER_SIZE = 5 * 1024;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,17,rivate static final char LT = '<';
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,18,rivate static final char GT = '>';
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,19,rivate static final char NL = '\n';
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,20,rivate static final char SQ = '\'';
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,21,"rivate static final char DQ = '""';"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,23,rivate final Reader in;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,24,rivate final CharBuffer buffer;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,25,rivate final StringBuilder accum;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,26,rivate final boolean autoCloseReader;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,27,rivate final Position pos;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,29,"rivate TokenStream(Reader reader, boolean autoCloseReader) {"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,30,his.in = reader;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,31,his.autoCloseReader = autoCloseReader;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,32,uffer = CharBuffer.allocate(BUFFER_SIZE);
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,33,ccum = new StringBuilder(BUFFER_SIZE / 2);
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,34,os = new Position();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,36,illBuffer();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,40,okenStream factory: extract tokens from the supplied Reader. Don't forget to close the Reader once you're done.
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,41,param reader input reader
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,42,return TokenStream of HTML.
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,44,ublic static TokenStream create(Reader reader) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,45,"eturn new TokenStream(reader, false);"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,49,okenStream factory method: extract tokens from a String.
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,50,param data String of HTML data.
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,51,return TokenStream of HTML.
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,53,ublic static TokenStream create(String data) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,54,tringReader reader = new StringReader(data);
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,55,"eturn new TokenStream(reader, true);"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,59,est if there are any more tokens to be retrieved.
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,60,"return true if there are tokens remaining, false if all have been read."
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,62,ublic boolean hasNext() {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,63,oolean hasNext = (buffer.hasRemaining() || (fillBuffer() > -1));
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,65,f (!hasNext && autoCloseReader)
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,66,ry {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,67,n.close();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,68, catch (IOException e) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,69,"hrow new ParserRuntimeException(""IO exception whilst auto-closing reader"", e, pos);"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,71,eturn hasNext;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,75,etrieve the next Token. Make sure there are some left using hasNext().
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,76,return next token from stream.
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,78,ublic Token next() {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,79,osition curPos = pos.clone();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,81,tring tokenData = accumulate();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,82,"eturn new Token(tokenData, curPos);"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,85,ist<Token> asList() {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,86,ist<Token> tokens = new ArrayList<Token>();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,87,hile (hasNext()) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,88,okens.add(next());
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,90,eturn tokens;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,93,rivate String accumulate() {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,94,oolean inTag = false;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,95,oolean inQuotedAttribute = false;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,96,haracter quote = null;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,98,hile (hasNext()) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,99,uffer.mark();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,100,har c = buffer.get();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,102,f (c == LT && accum.length() > 0 && !inQuotedAttribute) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,103,/ detected start of new tag:
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,104,/ leave on stack for next accumulate
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,105,uffer.reset();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,106,reak;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,107, else {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,108,ccum.append(c);
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,109,os.incOffset();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,110,os.incColNum();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,112,f (!inQuotedAttribute) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,113,f (c == LT) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,114,nTag = true;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,116,"lse if (c == GT) { // >, end of tag"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,117,reak;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,118, else if (c == NL) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,119,os.incLineNum();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,120, else if (inTag && (c == SQ || c == DQ)) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,121,nQuotedAttribute = true;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,122,uote = c;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,124, else if (inQuotedAttribute && c == quote) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,125,"/ close quote. note that if there is no closing quote, this will gobble up a lot. might be an idea"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,126,"/ to forward search and backtrack (to drop opening quote) if not found in x chars, (or y <|>)"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,127,"/ (the quoted attrib allows <p title=""x > y"">Hello</p>. Issue here is with <p title=""x > y>Hello</p>"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,128,nQuotedAttribute = false;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,132,eturn captureAccum();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,135,rivate int fillBuffer() {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,136,uffer.clear();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,137,ry {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,138,nt charsRead = in.read(buffer);
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,139,uffer.flip();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,140,eturn charsRead;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,141, catch (IOException e) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,142,"hrow new ParserRuntimeException(""IO exception whilst reading"", e, pos);"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,146,rivate String captureAccum() {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,147,tring output = accum.toString();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,148,"ccum.delete(0, accum.length());"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,149,eturn output;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,152,ublic void remove() {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,153,hrow new UnsupportedOperationException();
True,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,3,import org.jsoup.Jsoup;
True,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,5,import org.jsoup.nodes.Element;
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,12,ublic class AttributeParserTest {
True,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,14,public class AttributeParseTest {
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,15,"tring a = ""id=\""123\"" class=\""baz = 'bar'\"" style = 'border: 2px'qux zim foo = 12 mux.=18 "";"
True,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,17,"String html = ""<a id=\""123\"" class=\""baz = 'bar'\"" style = 'border: 2px'qux zim foo = 12 mux.=18 />"";"
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,18,ttributeParser ap = new AttributeParser();
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,19,ttributes attr = ap.parse(a);
True,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,20,"Element el = Jsoup.parse(html).getElementsByTag(""a"").get(0);"
True,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,21,Attributes attr = el.getAttributes();
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,31,ttributeParser ap = new AttributeParser();
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,32,"ttributes attr = ap.parse("""");"
True,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,33,"String html = ""<a />"";"
True,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,34,"Element el = Jsoup.parse(html).getElementsByTag(""a"").get(0);"
True,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,35,Attributes attr = el.getAttributes();
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,37,ttributeParser ap = new AttributeParser();
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,38,"ttributes attr = ap.parse(""=empty"");"
True,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,40,"String html = ""<a =empty />"";"
True,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,41,"Element el = Jsoup.parse(html).getElementsByTag(""a"").get(0);"
True,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,42,Attributes attr = el.getAttributes();
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,42,Test public void parserIsReusable() {
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,43,ttributeParser ap = new AttributeParser();
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,44,"ttributes attr = ap.parse(""id=bar"");"
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,45,"ssertEquals(1, attr.size());"
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,46,"ssertEquals(""bar"", attr.get(""id""));"
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,48,"ttr = ap.parse(""id=qux"");"
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,49,"ssertEquals(1, attr.size());"
False,src/test/java/org/jsoup/parser/AttributeParserTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,50,"ssertEquals(""qux"", attr.get(""id""));"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,3,import org.jsoup.Jsoup;
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,18,"okenStream tokenStream = TokenStream.create(""<html><head><title>First!</title></head><body><p>First post! <img src=\""foo.png\"" /></p></body></html>"");"
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,19,arser parser = new Parser(tokenStream);
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,20,ocument doc = parser.parse();
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,19,"String html = ""<html><head><title>First!</title></head><body><p>First post! <img src=\""foo.png\"" /></p></body></html>"";"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,20,Document doc = Jsoup.parse(html);
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,30,"okenStream tokenStream = TokenStream.create(""<html><head><title>First!</title></head><body><p class=\""foo > bar\"">First post! <img src=\""foo.png\"" /></p></body></html>"");"
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,31,arser parser = new Parser(tokenStream);
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,32,ocument doc = parser.parse();
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,30,"String html = ""<html><head><title>First!</title></head><body><p class=\""foo > bar\"">First post! <img src=\""foo.png\"" /></p></body></html>"";"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,31,Document doc = Jsoup.parse(html);
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,40,"okenStream ts = TokenStream.create(""<html><head></head><body><!-- <table><tr><td></table> --><p>Hello</p></body></html>"");"
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,41,ocument doc = new Parser(ts).parse();
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,40,"String html = ""<html><head></head><body><!-- <table><tr><td></table> --><p>Hello</p></body></html>"";"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,41,Document doc = Jsoup.parse(html);
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,44,"ssertEquals(""<table><tr><td></table>"", comment.getData());"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,45,"assertEquals("" <table><tr><td></table> "", comment.getData());"
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,1,ackage org.jsoup.parser;
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,3,mport org.junit.Test;
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,4,mport static org.junit.Assert.*;
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,6,mport java.util.List;
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,10,okenStream test cases.
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,12,"author Jonathan Hedley, jonathan@hedley.net */"
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,13,ublic class TokenStreamTest {
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,14,Test
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,15,ublic void createTokenStreamFromString() {
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,16,"ist<Token> tokens = TokenStream.create(""<html><body title='x > y'><p>Hello world!</p></body></html>"").asList();"
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,17,"ssertEquals(""Correct num tokens"", 7, tokens.size());"
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,20,"/ TODO: test data, positions, line breaks"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,1,ackage org.jsoup.parser;
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,3,mport org.junit.Test;
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,4,mport static org.junit.Assert.*;
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,7,ests Tokens.
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,9,"author Jonathan Hedley, jonathan@hedley.net */"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,10,ublic class TokenTest {
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,11,rivate static Position startPos = new Position();
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,13,Test public void matchesStartTag() {
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,14,"oken t = token(""<p>"");"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,16,ssertTrue(t.isStartTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,17,ssertFalse(t.isEndTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,18,"ssertEquals(""p"", t.getTagName());"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,19,ssertNull(t.getAttributeString());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,22,Test public void matchesTagWithAttributes() {
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,23,"oken t = token(""<div id=\""foo\"" width=500>"");"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,25,ssertTrue(t.isStartTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,26,ssertFalse(t.isEndTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,27,"ssertEquals(""div"", t.getTagName());"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,28,"ssertEquals(""id=\""foo\"" width=500"", t.getAttributeString());"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,31,Test public void matchesEndTag() {
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,32,"oken t = token(""</span>"");"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,34,ssertFalse(t.isStartTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,35,ssertTrue(t.isEndTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,36,"ssertEquals(""span"", t.getTagName());"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,37,ssertNull(t.getAttributeString());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,40,Test public void matchesEmptyTag() {
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,41,"oken t = token(""<br />"");"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,43,ssertTrue(t.isStartTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,44,ssertTrue(t.isEndTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,45,"ssertEquals(""br"", t.getTagName());"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,46,ssertNull(t.getAttributeString());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,48,/ repeat without space
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,49," = token(""<br/>"");"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,50,ssertTrue(t.isStartTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,51,ssertTrue(t.isEndTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,52,"ssertEquals(""br"", t.getTagName());"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,53,ssertNull(t.getAttributeString());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,56,Test public void matchesEmptyTagWithAttributes() {
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,57,"oken t = token(""<img src=foo.png />"");"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,59,ssertTrue(t.isStartTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,60,ssertTrue(t.isEndTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,61,"ssertEquals(""img"", t.getTagName());"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,62,"ssertEquals(""src=foo.png"", t.getAttributeString());"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,65,Test public void matchesText() {
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,66,"oken t = token(""Hello, world!"");"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,68,ssertTrue(t.isTextNode());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,69,ssertFalse(t.isStartTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,70,ssertFalse(t.isEndTag());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,71,ssertNull(t.getAttributeString());
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,72,"ssertEquals(""Hello, world!"", t.getData());"
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,75,rivate Token token(String data) {
False,src/test/java/org/jsoup/parser/TokenTest.java,src/test/java/org/jsoup/parser/TokenTest.java,76,"eturn new Token(data, startPos);"
