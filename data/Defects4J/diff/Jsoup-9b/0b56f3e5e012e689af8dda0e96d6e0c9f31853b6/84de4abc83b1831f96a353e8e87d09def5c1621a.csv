is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,315,"reateBlock(""SPAN""); // spec is phrasing only, practise is block"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,315,"createInline(""SPAN"").setCanContainBlock(); // spec is phrasing only, practise is block"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,317,"reateBlock(""H1"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,318,"reateBlock(""H2"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,319,"reateBlock(""H3"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,320,"reateBlock(""H4"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,321,"reateBlock(""H5"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,322,"reateBlock(""H6"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,317,"createBlock(""H1"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,318,"createBlock(""H2"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,319,"createBlock(""H3"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,320,"createBlock(""H4"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,321,"createBlock(""H5"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,322,"createBlock(""H6"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,413,private Tag setCanContainBlock() {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,414,canContainBlock = true;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,415,return this;
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,4,import org.jsoup.TextUtil;
False,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,47,"ssertEquals(""<span>two</span> three"", p.html());"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,48,"assertEquals(""<span>two</span> three"", TextUtil.stripNewlines(p.html()));"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,4,import org.jsoup.TextUtil;
False,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,40,"ssertEquals(""One <span>two &amp;</span> POW!"", p.html());"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,41,"assertEquals(""One <span>two &amp;</span> POW!"", TextUtil.stripNewlines(p.html()));"
False,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,44,"ssertEquals(""One <span>two &amp;</span>kablam &amp;"", p.html());"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,45,"assertEquals(""One <span>two &amp;</span>kablam &amp;"", TextUtil.stripNewlines(p.html()));"
False,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,56,ssertFalse(span.canContain(p));
False,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,57,ssertFalse(span.canContain(div));
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,56,assertTrue(span.canContain(p));
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,57,assertTrue(span.canContain(div));
False,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,121,"ssertEquals(""<p>This <span>foo</span><a>is</a> <span>foo</span><a>jsoup</a>.</p>"", doc.body().html());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,121,"assertEquals(""<p>This <span>foo</span><a>is</a> <span>foo</span><a>jsoup</a>.</p>"", TextUtil.stripNewlines(doc.body().html()));"
False,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,127,"ssertEquals(""<p>This <a>is</a><span>foo</span> <a>jsoup</a><span>foo</span>.</p>"", doc.body().html());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,127,"assertEquals(""<p>This <a>is</a><span>foo</span> <a>jsoup</a><span>foo</span>.</p>"", TextUtil.stripNewlines(doc.body().html()));"
