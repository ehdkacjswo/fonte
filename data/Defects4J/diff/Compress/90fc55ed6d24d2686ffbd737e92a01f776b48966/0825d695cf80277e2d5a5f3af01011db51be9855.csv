is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,19,package org.apache.commons.compress.compressors.snappy;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,21,import java.io.ByteArrayInputStream;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,22,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,23,import java.io.InputStream;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,24,import java.io.OutputStream;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,27,* This class implements Snappy decompression. Snappy is a LZ77-type compressor
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,28,"* with a fixed, byte-oriented encoding created by Google(tm). It is originally"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,29,* based on text by Zeev Tarantov. This approach works by allocating a buffer 3x
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,30,"* the compression block size. As the stream is decompressed, it is written to"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,31,"* the buffer. When the buffer becomes 2/3 full, the first third is flushed to"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,32,* the underlying stream and the following bytes are all shifted down the array.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,33,"* In this way, there is always at least one block-size of buffer available for"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,34,* back-references.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,36,public class SnappyDecompressor {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,38,"/** Mask used to determine the type of ""tag"" is being processed */"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,39,private static final int TAG_MASK = 0x03;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,41,/** Default block size */
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,42,public static final int BLOCK_SIZE = 32768;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,44,/** Buffer to write decompressed bytes to for back-references */
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,45,private final byte[] decompressBuf;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,47,/** The index of the next byte in the buffer to write to */
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,48,private int decompressBufIndex;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,50,/** The actual block size specified */
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,51,protected final int blockSize;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,53,/** The underlying stream to read compressed data from */
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,54,protected final InputStream in;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,56,/** The size of the uncompressed data */
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,57,protected final int size;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,60,* Constructor
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,62,* @param buf
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,63,*            An array of compressed data
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,65,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,67,public SnappyDecompressor(final byte[] buf) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,68,"this(new ByteArrayInputStream(buf), BLOCK_SIZE);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,72,* Constructor
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,74,* @param buf
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,75,*            An array of compressed data
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,76,* @param blockSize
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,77,*            The block size used in compression
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,79,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,81,"public SnappyDecompressor(final byte[] buf, int blockSize)"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,82,throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,83,"this(new ByteArrayInputStream(buf), blockSize);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,87,* Constructor
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,89,* @param is
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,90,*            An InputStream to read compressed data from
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,92,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,94,public SnappyDecompressor(final InputStream is) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,95,"this(is, BLOCK_SIZE);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,99,* Constructor
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,101,* @param is
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,102,*            An InputStream to read compressed data from
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,103,* @param blockSize
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,104,*            The block size used in compression
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,106,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,108,"public SnappyDecompressor(final InputStream is, final int blockSize)"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,109,throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,111,this.in = is;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,112,this.blockSize = blockSize;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,113,this.decompressBuf = new byte[blockSize * 3];
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,114,this.decompressBufIndex = 0;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,115,this.size = (int) readSize();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,119,* Decompress the stream into an OutputStream
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,121,* @param os
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,122,*            The OutputStream to write the decompressed data
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,124,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,125,"*             if an I/O error occurs. In particular, an"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,126,*             <code>IOException</code> is thrown if the output stream is
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,127,*             closed or the EOF is reached unexpectedly.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,129,public void decompress(final OutputStream os) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,131,int uncompressedSizeLength = getSize();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,133,while (uncompressedSizeLength > 0) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,134,final int b = readOneByte();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,135,int length = 0;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,136,int offset = 0;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,138,switch (b & TAG_MASK) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,140,case 0x00:
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,143,"* For literals up to and including 60 bytes in length, the"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,144,* upper six bits of the tag byte contain (len-1). The literal
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,145,* follows immediately thereafter in the bytestream. - For
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,146,"* longer literals, the (len-1) value is stored after the tag"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,147,"* byte, little-endian. The upper six bits of the tag byte"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,148,"* describe how many bytes are used for the length; 60, 61, 62"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,149,"* or 63 for 1-4 bytes, respectively. The literal itself follows"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,150,* after the length.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,153,switch (b >> 2) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,154,case 60:
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,155,length = readOneByte();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,156,break;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,157,case 61:
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,158,length = readOneByte();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,159,length |= (readOneByte() << 8);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,160,break;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,161,case 62:
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,162,length = readOneByte();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,163,length |= (readOneByte() << 8);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,164,length |= (readOneByte() << 16);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,165,break;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,166,case 63:
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,167,length = readOneByte();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,168,length |= (readOneByte() << 8);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,169,length |= (readOneByte() << 16);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,170,length |= (readOneByte() << 24);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,171,break;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,172,default:
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,173,length = b >> 2;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,174,break;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,177,length += 1;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,179,if (expandLiteral(length)) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,180,flushDecompressBuffer(os);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,182,break;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,184,case 0x01:
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,187,* These elements can encode lengths between [4..11] bytes and
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,188,* offsets between [0..2047] bytes. (len-4) occupies three bits
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,189,* and is stored in bits [2..4] of the tag byte. The offset
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,190,"* occupies 11 bits, of which the upper three are stored in the"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,191,"* upper three bits ([5..7]) of the tag byte, and the lower"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,192,* eight are stored in a byte following the tag byte.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,195,length = 4 + ((b >> 2) & 0x07);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,196,offset = (b & 0xE0) << 3;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,197,offset |= readOneByte();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,199,"if (expandCopy(offset, length)) {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,200,flushDecompressBuffer(os);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,202,break;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,204,case 0x02:
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,207,* These elements can encode lengths between [1..64] and offsets
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,208,* from [0..65535]. (len-1) occupies six bits and is stored in
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,209,* the upper six bits ([2..7]) of the tag byte. The offset is
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,210,* stored as a little-endian 16-bit integer in the two bytes
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,211,* following the tag byte.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,214,length = (b >> 2) + 1;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,216,offset = readOneByte();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,217,offset |= readOneByte() << 8;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,219,"if (expandCopy(offset, length)) {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,220,flushDecompressBuffer(os);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,222,break;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,224,case 0x03:
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,227,* These are like the copies with 2-byte offsets (see previous
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,228,"* subsection), except that the offset is stored as a 32-bit"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,229,* integer instead of a 16-bit integer (and thus will occupy
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,230,* four bytes).
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,233,length = (b >> 2) + 1;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,235,offset = readOneByte();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,236,offset |= readOneByte() << 8;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,237,offset |= readOneByte() << 16;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,238,offset |= readOneByte() << 24;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,240,"if (expandCopy(offset, length)) {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,241,flushDecompressBuffer(os);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,243,break;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,246,uncompressedSizeLength -= length;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,248,"os.write(decompressBuf, 0, decompressBufIndex);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,252,* Flush the first block of the decompression buffer to the underlying out
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,253,* stream. All subsequent bytes are moved down to the beginning of the
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,254,* buffer.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,256,* @param os
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,257,*            The output stream to write to
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,259,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,260,"*             if an I/O error occurs. In particular, an"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,261,*             <code>IOException</code> is thrown if the output stream is
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,262,*             closed.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,264,private void flushDecompressBuffer(final OutputStream os)
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,265,throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,266,"os.write(decompressBuf, 0, this.blockSize);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,267,"System.arraycopy(decompressBuf, BLOCK_SIZE, decompressBuf, 0,"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,268,this.blockSize);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,269,decompressBufIndex -= this.blockSize;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,273,* Literals are uncompressed data stored directly in the byte stream.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,275,* @param length
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,276,*            The number of bytes to read from the underlying stream
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,278,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,279,*             If the first byte cannot be read for any reason other than
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,280,"*             end of file, or if the input stream has been closed, or if"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,281,*             some other I/O error occurs.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,283,* @return True if the decompressed data should be flushed
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,285,private boolean expandLiteral(final int length) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,286,"if (length != this.in.read(decompressBuf, decompressBufIndex, length)) {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,287,"throw new IOException(""Premature end of stream"");"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,290,decompressBufIndex += length;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,291,return (decompressBufIndex >= (2 * this.blockSize));
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,295,"* Copies are references back into previous decompressed data, telling the"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,296,* decompressor to reuse data it has previously decoded. They encode two
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,297,"* values: The offset, saying how many bytes back from the current position"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,298,"* to read, and the length, how many bytes to copy. Offsets of zero can be"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,299,"* encoded, but are not legal; similarly, it is possible to encode"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,300,* backreferences that would go past the end of the block (offset > current
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,301,"* decompressed position), which is also nonsensical and thus not allowed."
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,303,* @param offset
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,304,*            The offset from the backward from the end of expanded stream
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,305,* @param length
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,306,*            The number of bytes to copy
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,308,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,309,*             An the offset expands past the front of the decompression
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,310,*             buffer
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,311,* @return True if the decompressed data should be flushed
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,313,"private boolean expandCopy(final int offset, int length) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,315,if (offset > blockSize) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,316,"throw new IOException(""Offset is larger than block size"");"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,319,if (offset == 1) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,320,byte lastChar = decompressBuf[decompressBufIndex - 1];
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,321,for (int i = 0; i < length; i++) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,322,decompressBuf[decompressBufIndex++] = lastChar;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,324,} else if (length < offset) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,325,"System.arraycopy(decompressBuf, decompressBufIndex - offset,"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,326,"decompressBuf, decompressBufIndex, length);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,327,decompressBufIndex += length;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,328,} else {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,329,int fullRotations = length / offset;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,330,int pad = length - (offset * fullRotations);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,332,while (fullRotations-- != 0) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,333,"System.arraycopy(decompressBuf, decompressBufIndex - offset,"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,334,"decompressBuf, decompressBufIndex, offset);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,335,decompressBufIndex += offset;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,338,if (pad > 0) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,339,"System.arraycopy(decompressBuf, decompressBufIndex - offset,"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,340,"decompressBuf, decompressBufIndex, pad);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,342,decompressBufIndex += pad;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,346,return (decompressBufIndex >= (2 * this.blockSize));
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,350,* This helper method reads the next byte of data from the input stream. The
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,351,* value byte is returned as an <code>int</code> in the range <code>0</code>
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,352,* to <code>255</code>. If no byte is available because the end of the
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,353,"* stream has been reached, an Exception is thrown."
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,355,* @return The next byte of data
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,356,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,357,*             EOF is reached or error reading the stream
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,359,private int readOneByte() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,360,int b = in.read();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,361,if (b == -1) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,362,"throw new IOException(""Premature end of stream"");"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,364,return b & 0xFF;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,368,* The stream starts with the uncompressed length (up to a maximum of 2^32 -
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,369,"* 1), stored as a little-endian varint. Varints consist of a series of"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,370,"* bytes, where the lower 7 bits are data and the upper bit is set iff there"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,371,"* are more bytes to be read. In other words, an uncompressed length of 64"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,372,"* would be stored as 0x40, and an uncompressed length of 2097150 (0x1FFFFE)"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,373,* would be stored as 0xFE 0xFF 0x7F.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,375,* @return The size of the uncompressed data
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,377,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,378,*             Could not read a byte
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,380,private long readSize() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,381,int index = 0;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,382,long sz = 0;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,383,int b = 0;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,385,do {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,386,b = readOneByte();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,387,sz |= (b & 0x7f) << (index++ * 7);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,388,} while (0 != (b & 0x80));
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,389,return sz;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,393,* Get the uncompressed size of the stream
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,395,* @return the uncompressed size
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,397,public int getSize() {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyDecompressor.java,398,return size;
