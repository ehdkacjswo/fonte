is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,44,* <p>The contract for subclasses {@code read} implementation is:</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,45,* <ul>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,47,*  <li>keep track of the current state of the stream. Is it inside a
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,48,*  literal block or a back-reference or in-between blocks?</li>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,50,*  <li>Use {@link #readOneByte} to access the underlying stream
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,51,*  directly.</li>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,53,"*  <li>If a new literal block starts, use {@link #startLiteral} to"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,54,*  tell this class about it and read the literal data using {@link
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,55,*  #readLiteral} until it returns {@code 0}. {@link
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,56,*  #hasMoreDataInBlock} will return {@code false} before the next
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,57,*  call to {@link #readLiteral} would return {@code 0}.</li>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,59,"*  <li>If a new back-reference starts, use {@link #startBackReference} to"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,60,*  tell this class about it and read the literal data using {@link
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,61,*  #readBackReference} until it returns {@code 0}. {@link
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,62,*  #hasMoreDataInBlock} will return {@code false} before the next
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,63,*  call to {@link #readBackReference} would return {@code 0}.</li>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,65,"*  <li>If the end of the stream has been reached, return {@code -1}"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,66,*  as this class' methods will never do so themselves.</li>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,68,* </ul>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,70,* <p>{@link #readOneByte} and {@link #readLiteral} update the counter
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,71,* for bytes read.</p>
