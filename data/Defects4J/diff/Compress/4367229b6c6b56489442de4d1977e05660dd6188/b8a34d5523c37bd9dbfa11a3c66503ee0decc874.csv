is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,4,*  this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,7,*  the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,14,*  See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,15,*  limitations under the License.
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,19,package org.apache.commons.compress.archivers.zip;
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,21,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,24,* JUnit 3 testcases for org.apache.commons.compress.archivers.zip.AsiExtraField.
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,27,public class AsiExtraFieldTest extends TestCase implements UnixStat {
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,28,public AsiExtraFieldTest(String name) {
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,29,super(name);
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,33,* Test file mode magic.
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,35,public void testModes() {
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,36,AsiExtraField a = new AsiExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,37,a.setMode(0123);
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,38,"assertEquals(""plain file"", 0100123, a.getMode());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,39,a.setDirectory(true);
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,40,"assertEquals(""directory"", 040123, a.getMode());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,41,"a.setLinkedFile(""test"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,42,"assertEquals(""symbolic link"", 0120123, a.getMode());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,46,* Test content.
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,48,public void testContent() {
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,49,AsiExtraField a = new AsiExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,50,a.setMode(0123);
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,51,a.setUserId(5);
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,52,a.setGroupId(6);
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,53,byte[] b = a.getLocalFileDataData();
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,55,"// CRC manually calculated, sorry"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,56,"byte[] expect = {(byte)0xC6, 0x02, 0x78, (byte)0xB6, // CRC"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,57,"0123, (byte)0x80,                   // mode"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,58,"0, 0, 0, 0,                         // link length"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,59,"5, 0, 6, 0};                        // uid, gid"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,60,"assertEquals(""no link"", expect.length, b.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,61,for (int i=0; i<expect.length; i++) {
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,62,"assertEquals(""no link, byte ""+i, expect[i], b[i]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,65,"a.setLinkedFile(""test"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,66,"expect = new byte[] {0x75, (byte)0x8E, 0x41, (byte)0xFD, // CRC"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,67,"0123, (byte)0xA0,                   // mode"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,68,"4, 0, 0, 0,                         // link length"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,69,"5, 0, 6, 0,                         // uid, gid"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,70,"(byte)'t', (byte)'e', (byte)'s', (byte)'t'};"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,71,b = a.getLocalFileDataData();
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,72,"assertEquals(""no link"", expect.length, b.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,73,for (int i=0; i<expect.length; i++) {
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,74,"assertEquals(""no link, byte ""+i, expect[i], b[i]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,80,* Test reparse
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,82,public void testReparse() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,83,"// CRC manually calculated, sorry"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,84,"byte[] data = {(byte)0xC6, 0x02, 0x78, (byte)0xB6, // CRC"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,85,"0123, (byte)0x80,                   // mode"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,86,"0, 0, 0, 0,                         // link length"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,87,"5, 0, 6, 0};                        // uid, gid"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,88,AsiExtraField a = new AsiExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,89,"a.parseFromLocalFileData(data, 0, data.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,90,"assertEquals(""length plain file"", data.length,"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,91,a.getLocalFileDataLength().getValue());
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,92,"assertTrue(""plain file, no link"", !a.isLink());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,93,"assertTrue(""plain file, no dir"", !a.isDirectory());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,94,"assertEquals(""mode plain file"", FILE_FLAG | 0123, a.getMode());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,95,"assertEquals(""uid plain file"", 5, a.getUserId());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,96,"assertEquals(""gid plain file"", 6, a.getGroupId());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,98,"data = new byte[] {0x75, (byte)0x8E, 0x41, (byte)0xFD, // CRC"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,99,"0123, (byte)0xA0,                   // mode"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,100,"4, 0, 0, 0,                         // link length"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,101,"5, 0, 6, 0,                         // uid, gid"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,102,"(byte)'t', (byte)'e', (byte)'s', (byte)'t'};"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,103,a = new AsiExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,104,"a.parseFromLocalFileData(data, 0, data.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,105,"assertEquals(""length link"", data.length,"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,106,a.getLocalFileDataLength().getValue());
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,107,"assertTrue(""link, is link"", a.isLink());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,108,"assertTrue(""link, no dir"", !a.isDirectory());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,109,"assertEquals(""mode link"", LINK_FLAG | 0123, a.getMode());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,110,"assertEquals(""uid link"", 5, a.getUserId());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,111,"assertEquals(""gid link"", 6, a.getGroupId());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,112,"assertEquals(""test"", a.getLinkedFile());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,114,"data = new byte[] {(byte)0x8E, 0x01, (byte)0xBF, (byte)0x0E, // CRC"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,115,"0123, (byte)0x40,                         // mode"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,116,"0, 0, 0, 0,                               // link"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,117,"5, 0, 6, 0};                          // uid, gid"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,118,a = new AsiExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,119,"a.parseFromLocalFileData(data, 0, data.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,120,"assertEquals(""length dir"", data.length,"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,121,a.getLocalFileDataLength().getValue());
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,122,"assertTrue(""dir, no link"", !a.isLink());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,123,"assertTrue(""dir, is dir"", a.isDirectory());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,124,"assertEquals(""mode dir"", DIR_FLAG | 0123, a.getMode());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,125,"assertEquals(""uid dir"", 5, a.getUserId());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,126,"assertEquals(""gid dir"", 6, a.getGroupId());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,128,"data = new byte[] {0, 0, 0, 0,                           // bad CRC"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,129,"0123, (byte)0x40,                     // mode"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,130,"0, 0, 0, 0,                           // link"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,131,"5, 0, 6, 0};                          // uid, gid"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,132,a = new AsiExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,133,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,134,"a.parseFromLocalFileData(data, 0, data.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,135,"fail(""should raise bad CRC exception"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,136,} catch (Exception e) {
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,137,"assertEquals(""bad CRC checksum 0 instead of ebf018e"","
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,138,e.getMessage());
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,142,public void testClone() {
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,143,AsiExtraField s1 = new AsiExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,144,s1.setUserId(42);
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,145,s1.setGroupId(12);
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,146,"s1.setLinkedFile(""foo"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,147,s1.setMode(0644);
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,148,s1.setDirectory(true);
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,149,AsiExtraField s2 = (AsiExtraField) s1.clone();
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,150,"assertNotSame(s1, s2);"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,151,"assertEquals(s1.getUserId(), s2.getUserId());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,152,"assertEquals(s1.getGroupId(), s2.getGroupId());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,153,"assertEquals(s1.getLinkedFile(), s2.getLinkedFile());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,154,"assertEquals(s1.getMode(), s2.getMode());"
True,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java,155,"assertEquals(s1.isDirectory(), s2.isDirectory());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,4,*  this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,7,*  the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,14,*  See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,15,*  limitations under the License.
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,19,package org.apache.commons.compress.archivers.zip;
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,21,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,24,* JUnit 3 testcases for org.apache.commons.compress.archivers.zip.ExtraFieldUtils.
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,27,public class ExtraFieldUtilsTest extends TestCase implements UnixStat {
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,28,public ExtraFieldUtilsTest(String name) {
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,29,super(name);
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,32,private AsiExtraField a;
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,33,private UnrecognizedExtraField dummy;
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,34,private byte[] data;
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,35,private byte[] aLocal;
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,37,public void setUp() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,38,a = new AsiExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,39,a.setMode(0755);
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,40,a.setDirectory(true);
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,41,dummy = new UnrecognizedExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,42,dummy.setHeaderId(new ZipShort(1));
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,43,dummy.setLocalFileDataData(new byte[] {0});
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,44,dummy.setCentralDirectoryData(new byte[] {0});
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,46,aLocal = a.getLocalFileDataData();
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,47,byte[] dummyLocal = dummy.getLocalFileDataData();
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,48,data = new byte[4 + aLocal.length + 4 + dummyLocal.length];
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,49,"System.arraycopy(a.getHeaderId().getBytes(), 0, data, 0, 2);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,50,"System.arraycopy(a.getLocalFileDataLength().getBytes(), 0, data, 2, 2);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,51,"System.arraycopy(aLocal, 0, data, 4, aLocal.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,52,"System.arraycopy(dummy.getHeaderId().getBytes(), 0, data,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,53,"4+aLocal.length, 2);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,54,"System.arraycopy(dummy.getLocalFileDataLength().getBytes(), 0, data,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,55,"4+aLocal.length+2, 2);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,56,"System.arraycopy(dummyLocal, 0, data,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,57,"4+aLocal.length+4, dummyLocal.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,62,* test parser.
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,64,public void testParse() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,65,ZipExtraField[] ze = ExtraFieldUtils.parse(data);
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,66,"assertEquals(""number of fields"", 2, ze.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,67,"assertTrue(""type field 1"", ze[0] instanceof AsiExtraField);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,68,"assertEquals(""mode field 1"", 040755,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,69,((AsiExtraField) ze[0]).getMode());
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,70,"assertTrue(""type field 2"", ze[1] instanceof UnrecognizedExtraField);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,71,"assertEquals(""data length field 2"", 1,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,72,ze[1].getLocalFileDataLength().getValue());
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,74,byte[] data2 = new byte[data.length-1];
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,75,"System.arraycopy(data, 0, data2, 0, data2.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,76,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,77,ExtraFieldUtils.parse(data2);
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,78,"fail(""data should be invalid"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,79,} catch (Exception e) {
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,80,"assertEquals(""message"","
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,81,"""data starting at ""+(4+aLocal.length)+"" is in unknown format"","
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,82,e.getMessage());
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,87,* Test merge methods
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,89,public void testMerge() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,90,byte[] local =
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,91,"ExtraFieldUtils.mergeLocalFileDataData(new ZipExtraField[] {a, dummy});"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,92,"assertEquals(""local length"", data.length, local.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,93,for (int i=0; i<local.length; i++) {
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,94,"assertEquals(""local byte ""+i, data[i], local[i]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,97,byte[] dummyCentral = dummy.getCentralDirectoryData();
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,98,byte[] data2 = new byte[4 + aLocal.length + 4 + dummyCentral.length];
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,99,"System.arraycopy(data, 0, data2, 0, 4 + aLocal.length + 2);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,100,"System.arraycopy(dummy.getCentralDirectoryLength().getBytes(), 0,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,101,"data2, 4+aLocal.length+2, 2);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,102,"System.arraycopy(dummyCentral, 0, data2,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,103,"4+aLocal.length+4, dummyCentral.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,106,byte[] central =
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,107,"ExtraFieldUtils.mergeCentralDirectoryData(new ZipExtraField[] {a, dummy});"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,108,"assertEquals(""central length"", data2.length, central.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,109,for (int i=0; i<central.length; i++) {
True,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java,110,"assertEquals(""central byte ""+i, data2[i], central[i]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,4,*  this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,7,*  the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,14,*  See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,15,*  limitations under the License.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,19,package org.apache.commons.compress.archivers.zip;
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,21,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,24,* JUnit 3 testcases for org.apache.commons.compress.archivers.zip.ZipEntry.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,27,public class ZipArchiveEntryTest extends TestCase {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,29,public ZipArchiveEntryTest(String name) {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,30,super(name);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,34,* test handling of extra fields
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,36,* @since 1.1
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,38,public void testExtraFields() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,39,AsiExtraField a = new AsiExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,40,a.setDirectory(true);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,41,a.setMode(0755);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,42,UnrecognizedExtraField u = new UnrecognizedExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,43,u.setHeaderId(new ZipShort(1));
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,44,u.setLocalFileDataData(new byte[0]);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,46,"ZipArchiveEntry ze = new ZipArchiveEntry(""test/"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,47,"ze.setExtraFields(new ZipExtraField[] {a, u});"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,48,byte[] data1 = ze.getExtra();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,49,ZipExtraField[] result = ze.getExtraFields();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,50,"assertEquals(""first pass"", 2, result.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,51,"assertSame(a, result[0]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,52,"assertSame(u, result[1]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,54,UnrecognizedExtraField u2 = new UnrecognizedExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,55,u2.setHeaderId(new ZipShort(1));
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,56,u2.setLocalFileDataData(new byte[] {1});
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,58,ze.addExtraField(u2);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,59,byte[] data2 = ze.getExtra();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,60,result = ze.getExtraFields();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,61,"assertEquals(""second pass"", 2, result.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,62,"assertSame(a, result[0]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,63,"assertSame(u2, result[1]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,64,"assertEquals(""length second pass"", data1.length+1, data2.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,66,UnrecognizedExtraField u3 = new UnrecognizedExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,67,u3.setHeaderId(new ZipShort(2));
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,68,u3.setLocalFileDataData(new byte[] {1});
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,69,ze.addExtraField(u3);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,70,result = ze.getExtraFields();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,71,"assertEquals(""third pass"", 3, result.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,73,ze.removeExtraField(new ZipShort(1));
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,74,byte[] data3 = ze.getExtra();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,75,result = ze.getExtraFields();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,76,"assertEquals(""fourth pass"", 2, result.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,77,"assertSame(a, result[0]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,78,"assertSame(u3, result[1]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,79,"assertEquals(""length fourth pass"", data2.length, data3.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,81,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,82,ze.removeExtraField(new ZipShort(1));
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,83,"fail(""should be no such element"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,84,} catch (java.util.NoSuchElementException nse) {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,88,public void testUnixMode() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,89,"ZipArchiveEntry ze = new ZipArchiveEntry(""foo"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,90,"assertEquals(0, ze.getPlatform());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,91,ze.setUnixMode(0755);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,92,"assertEquals(3, ze.getPlatform());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,93,"assertEquals(0755,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,94,(ze.getExternalAttributes() >> 16) & 0xFFFF);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,95,"assertEquals(0, ze.getExternalAttributes()  & 0xFFFF);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,97,ze.setUnixMode(0444);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,98,"assertEquals(3, ze.getPlatform());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,99,"assertEquals(0444,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,100,(ze.getExternalAttributes() >> 16) & 0xFFFF);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,101,"assertEquals(1, ze.getExternalAttributes()  & 0xFFFF);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,103,"ze = new ZipArchiveEntry(""foo/"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,104,"assertEquals(0, ze.getPlatform());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,105,ze.setUnixMode(0777);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,106,"assertEquals(3, ze.getPlatform());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,107,"assertEquals(0777,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,108,(ze.getExternalAttributes() >> 16) & 0xFFFF);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,109,"assertEquals(0x10, ze.getExternalAttributes()  & 0xFFFF);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,111,ze.setUnixMode(0577);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,112,"assertEquals(3, ze.getPlatform());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,113,"assertEquals(0577,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,114,(ze.getExternalAttributes() >> 16) & 0xFFFF);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,115,"assertEquals(0x11, ze.getExternalAttributes()  & 0xFFFF);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,4,*  this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,7,*  the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,14,*  See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,15,*  limitations under the License.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,19,package org.apache.commons.compress.archivers.zip;
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,21,import java.util.Calendar;
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,22,import java.util.Date;
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,24,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,26,public class ZipArchiveOutputStreamTest extends TestCase {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,28,private Date time;
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,29,private ZipLong zl;
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,32,* Constructor
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,34,public ZipArchiveOutputStreamTest(String name) {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,35,super(name);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,38,protected void setUp() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,39,time = new Date();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,40,Calendar cal = Calendar.getInstance();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,41,cal.setTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,42,int year = cal.get(Calendar.YEAR);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,43,int month = cal.get(Calendar.MONTH) + 1;
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,44,long value =  ((year - 1980) << 25)
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,45,|         (month << 21)
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,46,|	      (cal.get(Calendar.DAY_OF_MONTH) << 16)
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,47,|         (cal.get(Calendar.HOUR_OF_DAY) << 11)
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,48,|         (cal.get(Calendar.MINUTE) << 5)
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,49,|         (cal.get(Calendar.SECOND) >> 1);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,51,byte[] result = new byte[4];
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,52,result[0] = (byte) ((value & 0xFF));
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,53,result[1] = (byte) ((value & 0xFF00) >> 8);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,54,result[2] = (byte) ((value & 0xFF0000) >> 16);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,55,result[3] = (byte) ((value & 0xFF000000L) >> 24);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,56,zl = new ZipLong(result);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,59,protected void tearDown() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,60,super.tearDown();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,63,public void testZipLong() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,64,ZipLong test = ZipArchiveOutputStream.toDosTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,65,"assertEquals(test.getValue(), zl.getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,68,public void testAdjustToLong() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,69,"assertEquals((long) Integer.MAX_VALUE,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,70,ZipArchiveOutputStream.adjustToLong(Integer.MAX_VALUE));
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,71,"assertEquals(((long) Integer.MAX_VALUE) + 1,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,72,ZipArchiveOutputStream.adjustToLong(Integer.MAX_VALUE + 1));
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,73,"assertEquals(2 * ((long) Integer.MAX_VALUE),"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStreamTest.java,74,ZipArchiveOutputStream.adjustToLong(2 * Integer.MAX_VALUE));
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,4,*  this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,7,*  the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,14,*  See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,15,*  limitations under the License.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,19,package org.apache.commons.compress.archivers.zip;
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,21,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,24,* JUnit 3 testcases for org.apache.commons.compress.archivers.zip.ZipLong.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,27,public class ZipLongTest extends TestCase {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,29,public ZipLongTest(String name) {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,30,super(name);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,34,* Test conversion to bytes.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,36,public void testToBytes() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,37,ZipLong zl = new ZipLong(0x12345678);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,38,byte[] result = zl.getBytes();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,39,"assertEquals(""length getBytes"", 4, result.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,40,"assertEquals(""first byte getBytes"", 0x78, result[0]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,41,"assertEquals(""second byte getBytes"", 0x56, result[1]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,42,"assertEquals(""third byte getBytes"", 0x34, result[2]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,43,"assertEquals(""fourth byte getBytes"", 0x12, result[3]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,47,* Test conversion from bytes.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,49,public void testFromBytes() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,50,"byte[] val = new byte[] {0x78, 0x56, 0x34, 0x12};"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,51,ZipLong zl = new ZipLong(val);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,52,"assertEquals(""value from bytes"", 0x12345678, zl.getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,56,* Test the contract of the equals method.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,58,public void testEquals() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,59,ZipLong zl = new ZipLong(0x12345678);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,60,ZipLong zl2 = new ZipLong(0x12345678);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,61,ZipLong zl3 = new ZipLong(0x87654321);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,63,"assertTrue(""reflexive"", zl.equals(zl));"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,65,"assertTrue(""works"", zl.equals(zl2));"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,66,"assertTrue(""works, part two"", !zl.equals(zl3));"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,68,"assertTrue(""symmetric"", zl2.equals(zl));"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,70,"assertTrue(""null handling"", !zl.equals(null));"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,71,"assertTrue(""non ZipLong handling"", !zl.equals(new Integer(0x1234)));"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,75,* Test sign handling.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,77,public void testSign() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,78,"ZipLong zl = new ZipLong(new byte[] {(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF});"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,79,"assertEquals(0x00000000FFFFFFFFl, zl.getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,82,public void testClone() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,83,ZipLong s1 = new ZipLong(42);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,84,ZipLong s2 = (ZipLong) s1.clone();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,85,"assertNotSame(s1, s2);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,86,"assertEquals(s1, s2);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java,87,"assertEquals(s1.getValue(), s2.getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,4,*  this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,7,*  the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,14,*  See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,15,*  limitations under the License.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,19,package org.apache.commons.compress.archivers.zip;
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,21,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,24,* JUnit 3 testcases for org.apache.commons.compress.archivers.zip.ZipShort.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,27,public class ZipShortTest extends TestCase {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,29,public ZipShortTest(String name) {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,30,super(name);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,34,* Test conversion to bytes.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,36,public void testToBytes() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,37,ZipShort zs = new ZipShort(0x1234);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,38,byte[] result = zs.getBytes();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,39,"assertEquals(""length getBytes"", 2, result.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,40,"assertEquals(""first byte getBytes"", 0x34, result[0]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,41,"assertEquals(""second byte getBytes"", 0x12, result[1]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,45,* Test conversion from bytes.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,47,public void testFromBytes() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,48,"byte[] val = new byte[] {0x34, 0x12};"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,49,ZipShort zs = new ZipShort(val);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,50,"assertEquals(""value from bytes"", 0x1234, zs.getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,54,* Test the contract of the equals method.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,56,public void testEquals() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,57,ZipShort zs = new ZipShort(0x1234);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,58,ZipShort zs2 = new ZipShort(0x1234);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,59,ZipShort zs3 = new ZipShort(0x5678);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,61,"assertTrue(""reflexive"", zs.equals(zs));"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,63,"assertTrue(""works"", zs.equals(zs2));"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,64,"assertTrue(""works, part two"", !zs.equals(zs3));"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,66,"assertTrue(""symmetric"", zs2.equals(zs));"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,68,"assertTrue(""null handling"", !zs.equals(null));"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,69,"assertTrue(""non ZipShort handling"", !zs.equals(new Integer(0x1234)));"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,73,* Test sign handling.
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,75,public void testSign() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,76,"ZipShort zs = new ZipShort(new byte[] {(byte)0xFF, (byte)0xFF});"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,77,"assertEquals(0x0000FFFF, zs.getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,80,public void testClone() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,81,ZipShort s1 = new ZipShort(42);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,82,ZipShort s2 = (ZipShort) s1.clone();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,83,"assertNotSame(s1, s2);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,84,"assertEquals(s1, s2);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java,85,"assertEquals(s1.getValue(), s2.getValue());"
