is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,352,private final int memoryLimitInKb;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,358,this.memoryLimitInKb = -1;
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,367, @since 1.10
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,370,* @param memoryLimitInKb
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,371,*            Some streams require allocation of potentially significant
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,372,"*            byte arrays/tables, and they can offer checks to prevent OOMs"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,373,*            on corrupt files.  Set the maximum allowed memory allocation in KBs.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,375,* @since 1.14
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,369,ublic CompressorStreamFactory(final boolean decompressUntilEOF) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,377,"public CompressorStreamFactory(final boolean decompressUntilEOF, final int memoryLimitInKb) {"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,382,this.memoryLimitInKb = memoryLimitInKb;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,387,* Create an instance with the provided decompress Concatenated option.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,389,* @param decompressUntilEOF
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,390,"*            if true, decompress until the end of the input; if false, stop"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,391,*            after the first stream and leave the input position to point
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,392,*            to the next byte after the stream. This setting applies to the
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,393,"*            gzip, bzip2 and xz formats only."
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,394,* @since 1.10
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,396,public CompressorStreamFactory(final boolean decompressUntilEOF) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,397,"this(decompressUntilEOF, -1);"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,508,"eturn new XZCompressorInputStream(in, actualDecompressConcatenated);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,532,"return new XZCompressorInputStream(in, actualDecompressConcatenated, memoryLimitInKb);"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,515,eturn new LZMACompressorInputStream(in);
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,539,"return new LZMACompressorInputStream(in, memoryLimitInKb);"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,531,eturn new ZCompressorInputStream(in);
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,555,"return new ZCompressorInputStream(in, memoryLimitInKb);"
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,34,mport org.apache.commons.compress.MemoryLimit;
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,42,mport org.junit.AfterClass;
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,43,mport org.junit.Before;
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,77,Before
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,78,ublic void setUp() {
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,79,/make sure to reset this before each test
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,80,emoryLimit.setMemoryLimitInKb(MemoryLimit.NO_LIMIT);
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,83,AfterClass
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,84,ublic static void tearDown() {
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,85,"/make sure this is really, truly reset after all the tests"
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,86,emoryLimit.setMemoryLimitInKb(MemoryLimit.NO_LIMIT);
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,220,emoryLimit.setMemoryLimitInKb(memoryLimitInKb);
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,221,ompressorStreamFactory fac = new CompressorStreamFactory(true);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,205,"CompressorStreamFactory fac = new CompressorStreamFactory(true,"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,206,memoryLimitInKb);
