is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,71,"OException ioe = new IOException(""SHA-256 is unsupported by your Java implementation"");"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,72,oe.initCause(noSuchAlgorithmException);
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,73,hrow ioe;
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,74,/ TODO: simplify when Compress requires Java 1.6
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,75,"/                      throw new IOException(""SHA-256 is unsupported by your Java implementation"","
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,76,/                              noSuchAlgorithmException);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,71,"throw new IOException(""SHA-256 is unsupported by your Java implementation"","
True,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,72,noSuchAlgorithmException);
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,101,"OException ioe = new IOException(""Decryption error "" +"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,102,"(do you have the JCE Unlimited Strength Jurisdiction Policy Files installed?)"");"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,103,oe.initCause(generalSecurityException);
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,104,hrow ioe;
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,105,/ TODO: simplify when Compress requires Java 1.6
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,106,"/                  throw new IOException(""Decryption error "" +"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,107,"/                          ""(do you have the JCE Unlimited Strength Jurisdiction Policy Files installed?)"","
False,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,108,/                          generalSecurityException);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,97,"throw new IOException(""Decryption error "" +"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,98,"""(do you have the JCE Unlimited Strength Jurisdiction Policy Files installed?)"","
True,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java,99,generalSecurityException);
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,130,"OException ex = new IOException(""BCJ filter used in "" + archiveName"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,131," "" needs XZ for Java > 1.4 - see """
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,132," ""http://commons.apache.org/proper/commons-compress/limitations.html#7Z"");"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,133,x.initCause(e);
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,134,hrow ex;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,130,"throw new IOException(""BCJ filter used in "" + archiveName"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,131,"+ "" needs XZ for Java > 1.4 - see """
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,132,"+ ""http://commons.apache.org/proper/commons-compress/limitations.html#7Z"","
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,133,e);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,286,"OException ioe = new IOException(""Error detected parsing the header"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,287,oe.initCause(e);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,288,hrow ioe;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,286,"throw new IOException(""Error detected parsing the header"", e);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,79,/          throw new IOException(ex); // JDK 1.6+
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,80,OException ioe = new IOException();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,81,oe.initCause(ex);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,82,hrow ioe;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,79,throw new IOException(ex);
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,4,*  this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,7,*  the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,14,*  See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,15,*  limitations under the License.
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,18,package org.apache.commons.compress.archivers.sevenz;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,20,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,21,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,22,import org.junit.runner.RunWith;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,23,import org.mockito.InjectMocks;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,24,import org.mockito.Mockito;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,25,import org.powermock.api.mockito.PowerMockito;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,26,import org.powermock.core.classloader.annotations.PrepareForTest;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,27,import org.powermock.modules.junit4.PowerMockRunner;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,29,import java.io.ByteArrayInputStream;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,30,import java.io.ByteArrayOutputStream;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,31,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,32,import java.io.OutputStream;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,33,import java.util.zip.Deflater;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,34,import java.util.zip.Inflater;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,36,@RunWith(PowerMockRunner.class)
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,37,@PrepareForTest(Coders.DeflateDecoder.class)
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,38,public class SevenZNativeHeapTest extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,40,@InjectMocks
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,41,Coders.DeflateDecoder deflateDecoder;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,43,@Test
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,44,public void testEndDeflaterOnCloseStream() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,45,final Deflater deflater = PowerMockito.spy(new Deflater());
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,46,PowerMockito.whenNew(Deflater.class).withAnyArguments().thenReturn(deflater);
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,48,"final OutputStream outputStream = deflateDecoder.encode(new ByteArrayOutputStream(), 9);"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,49,outputStream.close();
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,51,Mockito.verify(deflater).end();
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,54,@Test
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,55,public void testEndInflaterOnCloseStream() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,56,final Inflater inflater = PowerMockito.spy(new Inflater());
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,57,PowerMockito.whenNew(Inflater.class).withAnyArguments().thenReturn(inflater);
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,59,"final InputStream inputStream = deflateDecoder.decode(""dummy"",new ByteArrayInputStream(new byte[0]),0,null,null);"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,60,inputStream.close();
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java,62,Mockito.verify(inflater).end();
