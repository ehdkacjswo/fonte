is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,19,package org.apache.commons.compress;
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,23,"* During initialization, some streams compute expected memory use."
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,24,* They should check this value and throw a MemoryLimitException if the
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,25,* estimated memory use is greater that {@link MemoryLimit#MEMORY_LIMIT_IN_KB}.
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,26,* <p/>
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,27,"* During compression/archiving, streams can allocate byte arrays based"
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,28,* on a value read in from the stream.  Corrupt files can cause compressors/archivers
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,29,* to cause {@link OutOfMemoryError}s.  Compressors/archivers should check
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,30,* this maximum threshold before allocating memory and throw a {@link MemoryLimitException}
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,31,* if the allocation would exceed this limit.
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,32,* <p/>
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,33,"* To avoid changes in legacy behavior, {@link MemoryLimit#MEMORY_LIMIT_IN_KB}"
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,34,"* is set to {@link MemoryLimit#NO_LIMIT}.  However, in applications that might"
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,35,"* encounter untrusted/corrupt files, we encourage setting the limit to something"
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,36,* reasonable for the application.
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,37,* <p/>
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,38,"* As of 1.14, this limit should be observed when instantiating CompressorStreams."
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,39,* Work remains to propagate memory limit checks throughout the codebase.
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,41,* @since 1.14
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,43,public class MemoryLimit {
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,45,public static final int NO_LIMIT = -1;
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,46,public static volatile int MEMORY_LIMIT_IN_KB = NO_LIMIT;
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,49,* Sets {@link MemoryLimit#MEMORY_LIMIT_IN_KB}.
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,50,* @param memoryLimitInKb limit in kilobytes
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,52,* @throws IllegalArgumentException if value is &lt; -1
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,54,public static void setMemoryLimitInKb(int memoryLimitInKb) {
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,55,if (memoryLimitInKb < -1) {
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,56,"throw new IllegalArgumentException(""MemoryLimit must be > -2"");"
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,58,//TODO: do we want to set an absolute upper limit?!
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,59,MEMORY_LIMIT_IN_KB = memoryLimitInKb;
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,62,public static int getMemoryLimitInKb() {
True,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,63,return MEMORY_LIMIT_IN_KB;
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,352,rivate final int memoryLimitInKb;
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,358,his.memoryLimitInKb = -1;
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,370, @param memoryLimitInKb
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,371,            Some streams require allocation of potentially significant
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,372,"            byte arrays/tables, and they can offer checks to prevent OOMs"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,373,            on corrupt files.  Set the maximum allowed memory allocation in KBs.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,375, @since 1.14
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,367,* @since 1.10
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,377,"ublic CompressorStreamFactory(final boolean decompressUntilEOF, final int memoryLimitInKb) {"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,369,public CompressorStreamFactory(final boolean decompressUntilEOF) {
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,382,his.memoryLimitInKb = memoryLimitInKb;
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,387, Create an instance with the provided decompress Concatenated option.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,389, @param decompressUntilEOF
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,390,"            if true, decompress until the end of the input; if false, stop"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,391,            after the first stream and leave the input position to point
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,392,            to the next byte after the stream. This setting applies to the
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,393,"            gzip, bzip2 and xz formats only."
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,394, @since 1.10
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,396,ublic CompressorStreamFactory(final boolean decompressUntilEOF) {
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,397,"his(decompressUntilEOF, -1);"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,532,"eturn new XZCompressorInputStream(in, actualDecompressConcatenated, memoryLimitInKb);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,508,"return new XZCompressorInputStream(in, actualDecompressConcatenated);"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,539,"eturn new LZMACompressorInputStream(in, memoryLimitInKb);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,515,return new LZMACompressorInputStream(in);
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,555,"eturn new ZCompressorInputStream(in, memoryLimitInKb);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,531,return new ZCompressorInputStream(in);
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,24,import org.apache.commons.compress.MemoryLimit;
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,36,ublic LZMACompressorInputStream(final InputStream inputStream)
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,37,hrows IOException {
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,38,"n = new LZMAInputStream(inputStream, -1);"
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,47, @param       memoryLimitInKb calculated memory use threshold.  Throws MemoryLimitException
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,48,                            if calculate memory use is above this threshold
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,53,"                          by this implementation, or the underlying"
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,54,                          <code>inputStream</code> throws an exception
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,46,"*                          by this implementation, the underlying"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,47,*                          <code>inputStream</code> throws an exception or
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,48,*                          if the calculated memory usage
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,49,*                          is &gt; {@link MemoryLimit#MEMORY_LIMIT_IN_KB}.
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,58,"ublic LZMACompressorInputStream(final InputStream inputStream, int memoryLimitInKb)"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,53,public LZMACompressorInputStream(final InputStream inputStream)
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,61,"n = new LZMAInputStream(inputStream, memoryLimitInKb);"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,56,"in = new LZMAInputStream(inputStream, MemoryLimit.getMemoryLimitInKb());"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,24,import org.apache.commons.compress.MemoryLimit;
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,97,"his(inputStream, decompressConcatenated, -1);"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,101, Creates a new input stream that decompresses XZ-compressed data
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,102, from the specified input stream.
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,104, @param       inputStream where to read the compressed data
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,105, @param       decompressConcatenated
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,106,"                          if true, decompress until the end of the"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,107,"                          input; if false, stop after the first .xz"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,108,                          stream and leave the input position to point
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,109,                          to the next byte after the .xz stream
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,110, @param       memoryLimitInKb memory limit used when reading blocks.  If
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,111,"                          the estimated memory limit is exceeded on {@link #read()},"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,112,                          a {@link MemoryLimitException} is thrown.
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,114," @throws      IOException if the input is not in the .xz format,"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,115,"                          the input is corrupt or truncated, the .xz"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,116,                          headers specify options that are not supported
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,117,"                          by this implementation,"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,118,                          or the underlying <code>inputStream</code> throws an exception
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,120, @since 1.14
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,122,"ublic XZCompressorInputStream(InputStream inputStream,"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,123,"oolean decompressConcatenated, int memoryLimitInKb)"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,124,hrows IOException {
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,126,"n = new XZInputStream(inputStream, memoryLimitInKb);"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,100,"in = new XZInputStream(inputStream, MemoryLimit.getMemoryLimitInKb());"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,128,"n = new SingleXZInputStream(inputStream, memoryLimitInKb);"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,102,"in = new SingleXZInputStream(inputStream, MemoryLimit.getMemoryLimitInKb());"
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,25,import org.apache.commons.compress.MemoryLimit;
False,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,41,"ublic ZCompressorInputStream(final InputStream inputStream, int memoryLimitInKb)"
False,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,42,hrows IOException {
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,42,public ZCompressorInputStream(final InputStream inputStream) throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,55,"nitializeTables(maxCodeSize, memoryLimitInKb);"
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,55,"initializeTables(maxCodeSize, MemoryLimit.getMemoryLimitInKb());"
False,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,59,ublic ZCompressorInputStream(final InputStream inputStream) throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,60,"his(inputStream, -1);"
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,9,*   http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,19,package org.apache.commons.compress;
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,21,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,23,public class MemoryLimitTest {
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,25,@Test(expected = IllegalArgumentException.class)
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,26,public void testRangeCheck() throws Exception {
True,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,27,MemoryLimit.setMemoryLimitInKb(-2);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,34,import org.apache.commons.compress.MemoryLimit;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,42,import org.junit.AfterClass;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,43,import org.junit.Before;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,77,@Before
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,78,public void setUp() {
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,79,//make sure to reset this before each test
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,80,MemoryLimit.setMemoryLimitInKb(MemoryLimit.NO_LIMIT);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,83,@AfterClass
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,84,public static void tearDown() {
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,85,"//make sure this is really, truly reset after all the tests"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,86,MemoryLimit.setMemoryLimitInKb(MemoryLimit.NO_LIMIT);
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,193,nt c = compressorIs.read();
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,208,compressorIs.read();
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,205,"ompressorStreamFactory fac = new CompressorStreamFactory(true,"
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,206,emoryLimitInKb);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,220,MemoryLimit.setMemoryLimitInKb(memoryLimitInKb);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,221,CompressorStreamFactory fac = new CompressorStreamFactory(true);
