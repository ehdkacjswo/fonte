is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,34,import org.apache.commons.compress.archivers.sevenz.SevenZFile;
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,115,* Constant used to identify the 7z archive format.
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,116,* @since 1.8
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,118,"public static final String SEVEN_Z = ""7z"";"
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,153,* @throws StreamingNotSupportedException if the format cannot be
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,154,* read from a stream
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,210,if (SEVEN_Z.equalsIgnoreCase(archiverName)) {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,211,throw new StreamingNotSupportedException(SEVEN_Z);
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,224,* @throws StreamingNotSupportedException if the format cannot be
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,225,* written to a stream
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,265,if (SEVEN_Z.equalsIgnoreCase(archiverName)) {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,266,throw new StreamingNotSupportedException(SEVEN_Z);
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,279,* @throws StreamingNotSupportedException if the format cannot be
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,280,* read from a stream
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,312,"} else if (SevenZFile.matches(signature, signatureLength)) {"
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,313,throw new StreamingNotSupportedException(SEVEN_Z);
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,19,package org.apache.commons.compress.archivers;
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,22,* Exception thrown by ArchiveStreamFactory if a format is
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,23,* requested/detected that doesn't support streaming.
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,24,* @since 1.8
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,26,public class StreamingNotSupportedException extends ArchiveException {
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,27,private final String format;
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,30,* Creates a new StreamingNotSupportedException.
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,31,* @param format the format that has been requested/detected.
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,33,public StreamingNotSupportedException(String format) {
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,34,"super(""The "" + format + "" doesn't support streaming."");"
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,35,this.format = format;
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,39,* Returns the format that has been requested/detected.
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,40,* @return the format that has been requested/detected.
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,42,public String getFormat() {
True,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,src/main/java/org/apache/commons/compress/archivers/StreamingNotSupportedException.java,43,return format;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,21,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,27,import java.io.ByteArrayOutputStream;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,89,@Test(expected = StreamingNotSupportedException.class)
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,90,public void cantRead7zFromStream() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,91,new ArchiveStreamFactory()
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,92,".createArchiveInputStream(ArchiveStreamFactory.SEVEN_Z,"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,93,new ByteArrayInputStream(new byte[0]));
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,96,@Test(expected = StreamingNotSupportedException.class)
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,97,public void cantWrite7zToStream() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,98,new ArchiveStreamFactory()
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,99,".createArchiveOutputStream(ArchiveStreamFactory.SEVEN_Z,"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,100,new ByteArrayOutputStream());
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,104,* Test case for
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,105,"* <a href=""https://issues.apache.org/jira/browse/COMPRESS-267"""
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,106,* >COMPRESS-267</a>.
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,108,@Test
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,109,public void detectsAndThrowsFor7z() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,110,"FileInputStream fis = new FileInputStream(""src/test/resources/bla.7z"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,111,try {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,112,InputStream bis = new BufferedInputStream(fis);
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,113,try {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,114,new ArchiveStreamFactory().createArchiveInputStream(bis);
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,115,"fail(""Expected a StreamingNotSupportedException"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,116,} catch (StreamingNotSupportedException ex) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,117,"assertEquals(ArchiveStreamFactory.SEVEN_Z, ex.getFormat());"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,118,} finally {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,119,bis.close();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,121,} finally {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,122,fis.close();
