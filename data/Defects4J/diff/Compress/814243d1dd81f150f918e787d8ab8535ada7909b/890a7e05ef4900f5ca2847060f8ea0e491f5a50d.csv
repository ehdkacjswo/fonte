is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,21,import java.io.InputStream;
False,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,22,nterface Change {
False,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,23,/ public void perform(ArchiveInputStream input);
False,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,24,ublic int type();
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,23,import org.apache.commons.compress.archivers.ArchiveEntry;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,26,public class Change {
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,27,private String targetFile = null;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,28,private ArchiveEntry entry = null;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,29,private InputStream input = null;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,30,private int type = 0;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,32,static final int TYPE_DELETE = 1;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,33,static final int TYPE_ADD = 2;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,34,static final int TYPE_MOVE = 3;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,37,* Constructor. Takes the filename of the file to be deleted
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,38,* from the stream as argument.
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,39,* @param pFilename the filename of the file to delete
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,41,public Change(final String pFilename) {
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,42,if(pFilename == null) {
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,43,throw new NullPointerException();
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,45,targetFile = pFilename;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,46,type = TYPE_DELETE;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,49,"//	public Change(final String pOldname, final ArchiveEntry pEntry) {"
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,50,//		if(pOldname == null || pEntry == null) {
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,51,//			throw new NullPointerException();
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,53,//		targetFile = pOldname;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,54,//		entry = pEntry;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,55,//		type = TYPE_MOVE;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,58,"public Change(final ArchiveEntry pEntry, final InputStream pInput) {"
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,59,if(pEntry == null || pInput == null) {
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,60,throw new NullPointerException();
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,62,this.entry = pEntry;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,63,this.input = pInput;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,64,type = TYPE_ADD;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,67,public ArchiveEntry getEntry() {
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,68,return entry;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,71,public InputStream getInput() {
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,72,return input;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,75,public String targetFile() {
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,76,return targetFile;
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,79,public int type() {
True,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,80,return type;
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,21,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,23,import java.util.Iterator;
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,28,import org.apache.commons.compress.archivers.ArchiveInputStream;
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,29,import org.apache.commons.compress.archivers.ArchiveOutputStream;
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,30,import org.apache.commons.compress.utils.IOUtils;
False,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,32,ublic static final int CHANGE_TYPE_DELETE = 1;
False,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,33,ublic static final int CHANGE_TYPE_ADD = 2;
False,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,37,hanges.add(new DeleteChange(pFilename));
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,38,changes.add(new Change(pFilename));
False,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,40,"ublic void move( final String pFrom, final String pTo ) {"
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,41,"//	public void move( final String pFrom, final String pTo ) {"
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,42,"//		changes.add(new Change(pFrom, pTo));"
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,46,"changes.add(new Change(pEntry, pInput));"
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,53,"public void perform(ArchiveInputStream in, ArchiveOutputStream out) throws IOException {"
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,54,ArchiveEntry entry = null;
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,55,while((entry = in.getNextEntry()) != null) {
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,56,boolean copy = true;
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,58,for (Iterator it = changes.iterator(); it.hasNext();) {
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,59,Change change = (Change)it.next();
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,61,if(change.type() == Change.TYPE_ADD) {
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,62,"copyStream(change.getInput(), out, change.getEntry());"
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,63,it.remove();
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,66,if( change.type() == Change.TYPE_DELETE &&
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,67,entry.getName() != null &&
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,68,entry.getName().equals(change.targetFile())) {
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,69,"System.out.println(""Delete: "" + entry.getName());"
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,70,copy = false;
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,71,it.remove();
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,72,break;
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,76,if(copy) {
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,77,"copyStream(in, out, entry);"
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,82,"private static void copyStream(InputStream in, ArchiveOutputStream out, ArchiveEntry entry) throws IOException {"
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,83,out.putArchiveEntry(entry);
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,84,"IOUtils.copy(in, out);"
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,85,out.closeArchiveEntry();
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,86,"System.out.println(""Copy: "" + entry.getName());"
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,3, or more contributor license agreements.  See the NOTICE file
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,4, distributed with this work for additional information
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,6," to you under the Apache License, Version 2.0 (the"
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,7," ""License""); you may not use this file except in compliance"
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,8, with the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,12," Unless required by applicable law or agreed to in writing,"
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,13, software distributed under the License is distributed on an
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,15," KIND, either express or implied.  See the License for the"
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,16, specific language governing permissions and limitations
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,17, under the License.
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,19,ackage org.apache.commons.compress.changes;
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,21,mport java.io.IOException;
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,22,mport java.io.InputStream;
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,23,mport java.util.Iterator;
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,25,mport org.apache.commons.compress.archivers.ArchiveEntry;
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,26,mport org.apache.commons.compress.archivers.ArchiveInputStream;
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,27,mport org.apache.commons.compress.archivers.ArchiveOutputStream;
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,28,mport org.apache.commons.compress.utils.IOUtils;
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,31, Performs the operations of a change set
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,33,ublic class ChangeWorker {
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,34,rivate ChangeWorker() {
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,35,/ nothing to do
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,39, TODO
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,40, @param changes
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,41, @param in
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,42, @param out
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,43, @throws IOException
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,45,"ublic static void perform(ChangeSet changes, ArchiveInputStream in, ArchiveOutputStream out) throws IOException {"
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,46,rchiveEntry entry = null;
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,47,hile((entry = in.getNextEntry()) != null) {
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,48,ystem.out.println(entry.getName());
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,49,oolean copy = true;
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,51,or (Iterator it = changes.asSet().iterator(); it.hasNext();) {
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,52,hange change = (Change)it.next();
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,54,f(change.type() == ChangeSet.CHANGE_TYPE_DELETE) {
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,55,eleteChange delete = ((DeleteChange)change);
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,56,f(entry.getName() != null &&
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,57,ntry.getName().equals(delete.targetFile())) {
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,58,opy = false;
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,63,f(copy) {
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,64,/ copy archive
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,65,/ TODO: unsafe long to int
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,66,"ystem.out.println(""Copy: "" + entry.getName());"
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,67,ong size = entry.getSize();
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,68,ut.putArchiveEntry(entry);
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,69,"OUtils.copy((InputStream)in, out, (int)size);"
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,70,ut.closeArchiveEntry();
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,74,"ystem.out.println(""---"");"
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,76,/ add operation stuff
False,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,src/main/java/org/apache/commons/compress/changes/ChangeWorker.java,77,ut.close();
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,3, or more contributor license agreements.  See the NOTICE file
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,4, distributed with this work for additional information
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,6," to you under the Apache License, Version 2.0 (the"
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,7," ""License""); you may not use this file except in compliance"
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,8, with the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,12," Unless required by applicable law or agreed to in writing,"
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,13, software distributed under the License is distributed on an
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,15," KIND, either express or implied.  See the License for the"
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,16, specific language governing permissions and limitations
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,17, under the License.
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,19,ackage org.apache.commons.compress.changes;
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,21,mport org.apache.commons.compress.archivers.ArchiveInputStream;
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,24, Implementation for a delete operation
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,26,lass DeleteChange implements Change {
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,27,rivate String filename = null;
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,30, Constructor. Takes the filename of the file to be deleted
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,31, from the stream as argument.
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,32, @param pFilename the filename of the file to delete
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,34,ublic DeleteChange(final String pFilename) {
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,35,f(pFilename == null) {
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,36,hrow new NullPointerException();
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,38,ilename = pFilename;
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,41,ublic void perform(ArchiveInputStream input) {
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,42,"ystem.out.println(""PERFORMING DELETE"");"
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,45,ublic String targetFile() {
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,46,eturn filename;
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,49,ublic int type() {
False,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,src/main/java/org/apache/commons/compress/changes/DeleteChange.java,50,eturn ChangeSet.CHANGE_TYPE_DELETE;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,21,mport java.io.IOException;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,23,import java.io.FileOutputStream;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,24,import java.io.InputStream;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,25,mport org.apache.commons.compress.archivers.ArchiveEntry;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,27,mport org.apache.commons.compress.archivers.memory.MemoryArchiveInputStream;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,29,import org.apache.commons.compress.archivers.ArchiveOutputStream;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,30,import org.apache.commons.compress.archivers.ArchiveStreamFactory;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,31,import org.apache.commons.compress.archivers.ar.ArArchiveEntry;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,32,import org.apache.commons.compress.archivers.jar.JarArchiveEntry;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,33,import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,34,import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,31,rivate void apply( final ChangeSet cs ) throws IOException {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,33,inal ArchiveInputStream is = new MemoryArchiveInputStream(new String[][] {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,34," ""test1"",      """" },"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,35," ""test2"",      """" },"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,36," ""dir1/test1"", """" },"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,37," ""dir1/test2"", """" },"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,38," ""dir2/test1"", """" },"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,39," ""dir2/test2"", """" }"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,42,hile(true) {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,43,inal ArchiveEntry entry = is.getNextEntry();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,45,f (entry == null) {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,46,reak;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,49,"/ delete, new name, new content"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,38,public void testDeleteFromZip() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,39,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,40,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,41,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,42,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,43,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,45,"final File input = new File(getClass().getClassLoader().getResource(""bla.zip"").getFile());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,46,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,47,"ais = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,49,"File temp = File.createTempFile(""test"", "".zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,50,"out = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,52,System.out.println(temp.getAbsolutePath());
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,53,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,54,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,55,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,56,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,60,public void testDeleteFromTar() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,61,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,62,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,63,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,64,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,65,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,67,"final File input = new File(getClass().getClassLoader().getResource(""bla.tar"").getFile());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,68,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,69,"ais = new ArchiveStreamFactory().createArchiveInputStream(""tar"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,71,"File temp = File.createTempFile(""test"", "".tar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,72,"out = new ArchiveStreamFactory().createArchiveOutputStream(""tar"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,74,System.out.println(temp.getAbsolutePath());
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,75,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,76,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,77,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,78,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,82,public void testDeleteFromJar() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,83,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,84,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,85,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,86,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,87,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,88,"changes.delete(""META-INF/MANIFEST.MF"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,90,"final File input = new File(getClass().getClassLoader().getResource(""bla.jar"").getFile());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,91,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,92,"ais = new ArchiveStreamFactory().createArchiveInputStream(""jar"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,94,"File temp = File.createTempFile(""test"", "".jar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,95,"out = new ArchiveStreamFactory().createArchiveOutputStream(""jar"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,97,System.out.println(temp.getAbsolutePath());
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,98,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,99,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,100,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,101,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,105,public void testDeleteFromAr() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,106,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,107,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,108,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,109,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,110,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,112,"final File input = new File(getClass().getClassLoader().getResource(""bla.ar"").getFile());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,113,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,114,"ais = new ArchiveStreamFactory().createArchiveInputStream(""ar"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,116,"File temp = File.createTempFile(""test"", "".ar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,117,"out = new ArchiveStreamFactory().createArchiveOutputStream(""ar"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,119,System.out.println(temp.getAbsolutePath());
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,120,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,121,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,122,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,123,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,127,public void testDeleteFromAndAddToZip() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,128,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,129,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,130,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,131,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,132,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,135,"final File file1 = new File(getClass().getClassLoader().getResource(""test.txt"").getFile());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,136,"ZipArchiveEntry entry = new ZipArchiveEntry(""testdata/test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,137,"changes.add(entry, new FileInputStream(file1));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,139,"final File input = new File(getClass().getClassLoader().getResource(""bla.zip"").getFile());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,140,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,141,"ais = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,143,"File temp = File.createTempFile(""test"", "".zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,144,"out = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,146,System.out.println(temp.getAbsolutePath());
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,147,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,148,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,149,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,150,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,154,public void testDeleteFromAndAddToTar() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,155,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,156,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,157,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,158,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,159,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,162,"final File file1 = new File(getClass().getClassLoader().getResource(""test.txt"").getFile());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,164,"final TarArchiveEntry entry = new TarArchiveEntry(""testdata/test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,165,entry.setModTime(0);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,166,entry.setSize(file1.length());
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,167,entry.setUserId(0);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,168,entry.setGroupId(0);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,169,"entry.setUserName(""avalon"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,170,"entry.setGroupName(""excalibur"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,171,entry.setMode(0100000);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,173,"changes.add(entry, new FileInputStream(file1));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,175,"final File input = new File(getClass().getClassLoader().getResource(""bla.tar"").getFile());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,176,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,177,"ais = new ArchiveStreamFactory().createArchiveInputStream(""tar"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,179,"File temp = File.createTempFile(""test"", "".tar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,180,"out = new ArchiveStreamFactory().createArchiveOutputStream(""tar"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,182,System.out.println(temp.getAbsolutePath());
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,183,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,184,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,185,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,186,if(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,53,ublic void testChangeSet() {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,190,public void testDeleteFromAndAddToJar() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,191,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,192,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,193,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,194,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,195,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,197,"final File file1 = new File(getClass().getClassLoader().getResource(""test.txt"").getFile());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,198,"JarArchiveEntry entry = new JarArchiveEntry(""testdata/test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,199,"changes.add(entry, new FileInputStream(file1));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,201,"final File input = new File(getClass().getClassLoader().getResource(""bla.jar"").getFile());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,202,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,203,"ais = new ArchiveStreamFactory().createArchiveInputStream(""jar"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,205,"File temp = File.createTempFile(""test"", "".jar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,206,"out = new ArchiveStreamFactory().createArchiveOutputStream(""jar"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,208,System.out.println(temp.getAbsolutePath());
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,209,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,210,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,211,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,212,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,216,public void testDeleteFromAndAddToAr() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,217,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,218,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,219,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,220,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,221,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,223,"final File file1 = new File(getClass().getClassLoader().getResource(""test.txt"").getFile());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,225,"final ArArchiveEntry entry = new ArArchiveEntry(""test.txt"", file1.length());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,227,"changes.add(entry, new FileInputStream(file1));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,229,"final File input = new File(getClass().getClassLoader().getResource(""bla.ar"").getFile());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,230,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,231,"ais = new ArchiveStreamFactory().createArchiveInputStream(""ar"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,233,"File temp = File.createTempFile(""test"", "".ar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,234,"out = new ArchiveStreamFactory().createArchiveOutputStream(""ar"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,236,System.out.println(temp.getAbsolutePath());
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,237,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,238,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,239,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,240,if(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,4, distributed with this work for additional information
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,7," ""License""); you may not use this file except in compliance"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,8, with the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,13, software distributed under the License is distributed on an
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,15," KIND, either express or implied.  See the License for the"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,16, specific language governing permissions and limitations
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,17, under the License.
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,19,ackage org.apache.commons.compress.changes;
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,21,mport java.io.File;
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,22,mport java.io.FileInputStream;
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,23,mport java.io.FileOutputStream;
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,24,mport java.io.InputStream;
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,26,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,28,mport org.apache.commons.compress.archivers.ArchiveInputStream;
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,29,mport org.apache.commons.compress.archivers.memory.MemoryArchiveInputStream;
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,30,mport org.apache.commons.compress.archivers.*;
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,32,ublic class ChangeWorkerTest extends TestCase {
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,34,inal ArchiveInputStream is = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,36,rotected void setUp() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,37,uper.setUp();
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,38,inal ArchiveInputStream is = new MemoryArchiveInputStream(new String[][] {
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,39," ""test1"",      """" },"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,40," ""test2"",      """" },"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,41," ""dir1/test1"", """" },"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,42," ""dir1/test2"", """" },"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,43," ""dir2/test1"", """" },"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,44," ""dir2/test2"", """" }"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,48,rotected void tearDown() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,49,uper.tearDown();
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,52,ublic void testPerform() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,53,hangeSet changes = new ChangeSet();
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,54,"hanges.delete(""test2.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,56,"inal File input = new File(getClass().getClassLoader().getResource(""bla.zip"").getFile());"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,57,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,58,"rchiveInputStream ais = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,60,"ile temp = File.createTempFile(""test"", "".zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,61,"rchiveOutputStream out = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(temp));"
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,63,ystem.out.println(temp.getAbsolutePath());
False,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,src/test/java/org/apache/commons/compress/changes/ChangeWorkerTest.java,64,"hangeWorker.perform(changes, ais, out);"
