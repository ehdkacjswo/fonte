is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,119,"f (method == -1) throw new IllegalArgumentException(""Method must be set on the supplied zipArchiveEntry"");"
True,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,119,if (method == ZipMethod.UNKNOWN_CODE) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,120,"throw new IllegalArgumentException(""Method must be set on the supplied zipArchiveEntry"");"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,56,public static final int CRC_UNKNOWN = -1;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,70,rivate int method = -1;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,71,private int method = ZipMethod.UNKNOWN_CODE;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,277,f (current.entry.getCompressedSize() != -1) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,277,if (current.entry.getCompressedSize() != ZipArchiveEntry.SIZE_UNKNOWN) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,548,oolean is2PhaseSource = ae.getCrc() != -1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,548,boolean is2PhaseSource = ae.getCrc() != ZipArchiveEntry.CRC_UNKNOWN
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,550,& ae.getCompressedSize() != -1;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,550,&& ae.getCompressedSize() != ArchiveEntry.SIZE_UNKNOWN;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,781,f (entry.entry.getCrc() == -1) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,781,if (entry.entry.getCrc() == ZipArchiveEntry.CRC_UNKNOWN) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java,167,NKNOWN(-1);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java,167,UNKNOWN();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java,169,static final int UNKNOWN_CODE = -1;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java,183,private ZipMethod() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java,184,this(UNKNOWN_CODE);
