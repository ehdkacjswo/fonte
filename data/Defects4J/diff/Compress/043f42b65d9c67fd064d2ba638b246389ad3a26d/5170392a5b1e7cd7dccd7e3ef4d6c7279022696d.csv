is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,482,hile (matchHead >= minIndex) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,482,"final int niceBackReferenceLength = Math.min(maxPossibleLength, params.getNiceBackReferenceLength());"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,483,final int maxCandidates = params.getMaxCandidates();
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,484,for (int candidates = 0; candidates < maxCandidates && matchHead >= minIndex; candidates++) {
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,493,f (currentLength == maxPossibleLength) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,495,if (currentLength >= niceBackReferenceLength) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,55,"private Integer niceBackReferenceLength, maxCandidates;"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,154,"* Sets the ""nice length"" of a back-reference."
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,156,"* <p>When a back-references if this size has been found, stop searching for longer back-references.</p>"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,158,* <p>This settings can be used to tune the tradeoff between compression speed and compression ratio.</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,160,public Builder withNiceBackReferenceLength(int niceLen) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,161,niceBackReferenceLength = niceLen;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,162,return this;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,166,* Sets the maximum number of back-reference candidates that should be consulted.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,168,* <p>This settings can be used to tune the tradeoff between compression speed and compression ratio.</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,170,public Builder withMaxNumberOfCandidates(int maxCandidates) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,171,this.maxCandidates = maxCandidates;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,172,return this;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,176,"* Changes the default setting for ""nice back-reference length"" and ""maximum number of candidates"" for improved"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,177,* compression speed at the cost of compression ratio.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,179,"* <p>Use this method after configuring ""maximum back-reference length"".</p>"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,181,public Builder tunedForSpeed() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,182,"niceBackReferenceLength = Math.max(minBackReferenceLength, maxBackReferenceLength / 8);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,183,"maxCandidates = Math.max(32, windowSize / 1024);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,184,return this;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,188,"* Changes the default setting for ""nice back-reference length"" and ""maximum number of candidates"" for improved"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,189,* compression ratio at the cost of compression speed.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,191,"* <p>Use this method after configuring ""maximum back-reference length"".</p>"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,193,public Builder tunedForCompressionRatio() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,194,niceBackReferenceLength = maxBackReferenceLength;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,195,"maxCandidates = Math.max(32, windowSize / 16);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,196,return this;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,204,// default settings tuned for a compromise of good compression and acceptable speed
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,205,int niceLen = niceBackReferenceLength != null ? niceBackReferenceLength
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,206,": Math.max(minBackReferenceLength, maxBackReferenceLength / 2);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,207,"int candidates = maxCandidates != null ? maxCandidates : Math.max(256, windowSize / 128);"
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,158,"axOffset, maxLiteralLength);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,210,"maxOffset, maxLiteralLength, niceLen, candidates);"
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,162,"rivate final int windowSize, minBackReferenceLength, maxBackReferenceLength, maxOffset, maxLiteralLength;"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,214,"private final int windowSize, minBackReferenceLength, maxBackReferenceLength, maxOffset, maxLiteralLength,"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,215,"niceBackReferenceLength, maxCandidates;"
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,165,nt maxLiteralLength) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,218,"int maxLiteralLength, int niceBackReferenceLength, int maxCandidates) {"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,224,this.niceBackReferenceLength = niceBackReferenceLength;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,225,this.maxCandidates = maxCandidates;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,266,* Gets the length of a back-reference that is considered nice enough to stop searching for longer ones.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,268,public int getNiceBackReferenceLength() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,269,return niceBackReferenceLength;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,273,* Gets the maximum number of back-reference candidates to consider.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,275,public int getMaxCandidates() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,276,return maxCandidates;
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,25,import java.util.Arrays;
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,26,import java.util.Collection;
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,28,import org.apache.commons.compress.compressors.lz77support.Parameters;
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,32,import org.junit.runners.Parameterized;
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,33,import org.junit.runner.RunWith;
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,35,@RunWith(Parameterized.class)
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,38,"@org.junit.runners.Parameterized.Parameters(name = ""using {0}"")"
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,39,public static Collection<Object[]> factory() {
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,40,return Arrays.asList(new Object[][] {
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,41,"new Object[] { ""default"", BlockLZ4CompressorOutputStream.createParameterBuilder().build() },"
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,42,"new Object[] { ""tuned for speed"","
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,43,"BlockLZ4CompressorOutputStream.createParameterBuilder().tunedForSpeed().build() },"
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,44,"new Object[] { ""tuned for compression ratio"","
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,45,BlockLZ4CompressorOutputStream.createParameterBuilder().tunedForCompressionRatio().build() }
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,49,private final String config;
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,50,private final Parameters params;
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,52,"public BlockLZ4CompressorRoundtripTest(String config, Parameters params) {"
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,53,this.config = config;
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,54,this.params = params;
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,38,lockLZ4CompressorOutputStream los = new BlockLZ4CompressorOutputStream(os)) {
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,63,"BlockLZ4CompressorOutputStream los = new BlockLZ4CompressorOutputStream(os, params)) {"
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,66,"System.err.println(""Configuration: "" + config);"
True,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,91,// yields no compression at all
False,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,152,"ssertEquals(LZ77Compressor.BackReference.class, blocks.get(1).getClass());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,349,.tunedForCompressionRatio()
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,64,"System.err.println(""Configuration: default"");"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,68,@Test
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,69,public void blaTarRoundtripTunedForSpeed() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,70,"System.err.println(""Configuration: tuned for speed"");"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,71,"roundTripTest(getFile(""bla.tar""),"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,72,SnappyCompressorOutputStream.createParameterBuilder(SnappyCompressorInputStream.DEFAULT_BLOCK_SIZE)
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,73,.tunedForSpeed()
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,74,.build());
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,77,@Test
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,78,public void blaTarRoundtripTunedForCompressionRatio() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,79,"System.err.println(""Configuration: tuned for compression ratio"");"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,80,"roundTripTest(getFile(""bla.tar""),"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,81,SnappyCompressorOutputStream.createParameterBuilder(SnappyCompressorInputStream.DEFAULT_BLOCK_SIZE)
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,82,.tunedForCompressionRatio()
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,83,.build());
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,92,// yields no compression at all
