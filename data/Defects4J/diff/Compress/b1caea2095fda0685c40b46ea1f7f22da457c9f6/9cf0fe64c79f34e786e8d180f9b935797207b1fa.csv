is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,362,// For Unit tests
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,363,boolean getDecompressConcatenated() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,364,return decompressConcatenated;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,4, distributed with this work for additional information
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,7," ""License""); you may not use this file except in compliance"
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,8, with the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,13, software distributed under the License is distributed on an
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,15," KIND, either express or implied.  See the License for the"
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,16, specific language governing permissions and limitations
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,17, under the License.
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,19,ackage org.apache.commons.compress;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,21,mport static org.apache.commons.compress.AbstractTestCase.getFile;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,23,mport java.io.BufferedInputStream;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,24,mport java.io.ByteArrayInputStream;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,25,mport java.io.FileInputStream;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,26,mport java.io.IOException;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,27,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,29,mport org.apache.commons.compress.compressors.CompressorException;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,30,mport org.apache.commons.compress.compressors.CompressorInputStream;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,31,mport org.apache.commons.compress.compressors.CompressorStreamFactory;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,32,mport org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,33,mport org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,34,mport org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,35,mport org.apache.commons.compress.compressors.xz.XZCompressorInputStream;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,37,ublic final class DetectCompressorTestCase extends TestCase {
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,39,ublic DetectCompressorTestCase(String name) {
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,40,uper(name);
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,43,inal CompressorStreamFactory factory = new CompressorStreamFactory();
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,45,ublic void testDetection() throws Exception {
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,46,"ompressorInputStream bzip2 = getStreamFor(""bla.txt.bz2"");"
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,47,ssertNotNull(bzip2);
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,48,ssertTrue(bzip2 instanceof BZip2CompressorInputStream);
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,50,"ompressorInputStream gzip = getStreamFor(""bla.tgz"");"
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,51,ssertNotNull(gzip);
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,52,ssertTrue(gzip instanceof GzipCompressorInputStream);
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,54,"ompressorInputStream pack200 = getStreamFor(""bla.pack"");"
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,55,ssertNotNull(pack200);
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,56,ssertTrue(pack200 instanceof Pack200CompressorInputStream);
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,58,"ompressorInputStream xz = getStreamFor(""bla.tar.xz"");"
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,59,ssertNotNull(xz);
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,60,ssertTrue(xz instanceof XZCompressorInputStream);
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,62,ry {
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,63,actory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,64,"ail(""No exception thrown for an empty input stream"");"
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,65, catch (CompressorException e) {
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,66,/ expected
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,70,rivate CompressorInputStream getStreamFor(String resource)
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,71,"hrows CompressorException, IOException {"
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,72,eturn factory.createCompressorInputStream(
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,73,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,74,etFile(resource))));
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,19,package org.apache.commons.compress.compressors;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,21,import static org.apache.commons.compress.AbstractTestCase.getFile;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,23,import java.io.BufferedInputStream;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,24,import java.io.ByteArrayInputStream;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,25,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,26,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,28,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,30,import org.apache.commons.compress.compressors.CompressorException;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,31,import org.apache.commons.compress.compressors.CompressorInputStream;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,32,import org.apache.commons.compress.compressors.CompressorStreamFactory;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,33,import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,34,import org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,35,import org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,36,import org.apache.commons.compress.compressors.xz.XZCompressorInputStream;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,38,"@SuppressWarnings(""deprecation"") // deliberately tests setDecompressConcatenated"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,39,public final class DetectCompressorTestCase extends TestCase {
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,41,public DetectCompressorTestCase(String name) {
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,42,super(name);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,45,final CompressorStreamFactory factory = new CompressorStreamFactory();
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,46,private static final CompressorStreamFactory factoryTrue = new CompressorStreamFactory(true);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,47,private static final CompressorStreamFactory factoryFalse = new CompressorStreamFactory(false);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,49,// Must be static to allow use in the TestData entries
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,50,private static final CompressorStreamFactory factorySetTrue;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,51,private static final CompressorStreamFactory factorySetFalse;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,53,static {
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,54,factorySetTrue = new CompressorStreamFactory();
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,55,factorySetTrue.setDecompressConcatenated(true);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,56,factorySetFalse = new CompressorStreamFactory();
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,57,factorySetFalse.setDecompressConcatenated(false);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,60,static class TestData {
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,61,final String fileName; // The multiple file name
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,62,final char[] entryNames; // expected entries ...
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,63,final CompressorStreamFactory factory; // ... when using this factory
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,64,final boolean concat; // expected value for decompressConcatenated
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,65,"TestData(String name, char[] names, CompressorStreamFactory factory, boolean concat) {"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,66,this.fileName = name;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,67,this.entryNames = names;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,68,this.factory = factory;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,69,this.concat = concat;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,73,private final TestData[] tests = {
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,74,"new TestData(""multiple.bz2"", new char[]{'a','b'}, factoryTrue, true),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,75,"new TestData(""multiple.bz2"", new char[]{'a','b'}, factorySetTrue, true),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,76,"new TestData(""multiple.bz2"", new char[]{'a'}, factoryFalse, false),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,77,"new TestData(""multiple.bz2"", new char[]{'a'}, factorySetFalse, false),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,78,"new TestData(""multiple.bz2"", new char[]{'a'}, factory, false),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,80,"new TestData(""multiple.gz"", new char[]{'a','b'}, factoryTrue, true),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,81,"new TestData(""multiple.gz"", new char[]{'a','b'}, factorySetTrue, true),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,82,"new TestData(""multiple.gz"", new char[]{'a'}, factoryFalse, false),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,83,"new TestData(""multiple.gz"", new char[]{'a'}, factorySetFalse, false),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,84,"new TestData(""multiple.gz"", new char[]{'a'}, factory, false),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,86,"new TestData(""multiple.xz"", new char[]{'a','b'}, factoryTrue, true),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,87,"new TestData(""multiple.xz"", new char[]{'a','b'}, factorySetTrue, true),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,88,"new TestData(""multiple.xz"", new char[]{'a'}, factoryFalse, false),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,89,"new TestData(""multiple.xz"", new char[]{'a'}, factorySetFalse, false),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,90,"new TestData(""multiple.xz"", new char[]{'a'}, factory, false),"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,93,public void testDetection() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,94,"CompressorInputStream bzip2 = getStreamFor(""bla.txt.bz2"");"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,95,assertNotNull(bzip2);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,96,assertTrue(bzip2 instanceof BZip2CompressorInputStream);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,98,"CompressorInputStream gzip = getStreamFor(""bla.tgz"");"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,99,assertNotNull(gzip);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,100,assertTrue(gzip instanceof GzipCompressorInputStream);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,102,"CompressorInputStream pack200 = getStreamFor(""bla.pack"");"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,103,assertNotNull(pack200);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,104,assertTrue(pack200 instanceof Pack200CompressorInputStream);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,106,"CompressorInputStream xz = getStreamFor(""bla.tar.xz"");"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,107,assertNotNull(xz);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,108,assertTrue(xz instanceof XZCompressorInputStream);
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,110,try {
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,111,factory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,112,"fail(""No exception thrown for an empty input stream"");"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,113,} catch (CompressorException e) {
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,114,// expected
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,118,public void testMutiples() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,119,for(int i=0; i <tests.length; i++) {
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,120,TestData test = tests[i];
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,121,final CompressorStreamFactory fac = test.factory;
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,122,"assertNotNull(""Test entry ""+i, fac);"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,123,"assertEquals(""Test entry ""+i, test.concat, fac.getDecompressConcatenated());"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,124,"CompressorInputStream in = getStreamFor(test.fileName, fac);"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,125,"assertNotNull(""Test entry ""+i,in);"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,126,for (char entry : test.entryNames) {
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,127,"assertEquals(""Test entry"" + i, entry, in.read());"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,129,"assertEquals(0, in.available());"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,130,"assertEquals(-1, in.read());"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,134,private CompressorInputStream getStreamFor(String resource)
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,135,"throws CompressorException, IOException {"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,136,return factory.createCompressorInputStream(
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,137,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,138,getFile(resource))));
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,141,"private CompressorInputStream getStreamFor(String resource, CompressorStreamFactory factory)"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,142,"throws CompressorException, IOException {"
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,143,return factory.createCompressorInputStream(
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,144,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,145,getFile(resource))));
