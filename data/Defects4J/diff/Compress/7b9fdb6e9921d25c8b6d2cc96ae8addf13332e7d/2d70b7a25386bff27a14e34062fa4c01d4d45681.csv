is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,19,package org.apache.commons.compress.compressors.snappy;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,21,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,22,import java.io.OutputStream;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,24,import org.apache.commons.compress.compressors.CompressorOutputStream;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,25,import org.apache.commons.compress.compressors.lz77support.LZ77Compressor;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,26,import org.apache.commons.compress.compressors.lz77support.Parameters;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,29,* CompressorOutputStream for the raw Snappy format.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,31,* <p>This implementation uses an internal buffer in order to handle
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,32,* the back-references that are at the heart of the LZ77 algorithm.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,33,* The size of the buffer must be at least as big as the biggest
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,34,* offset used in the compressed stream.  The current version of the
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,35,* Snappy algorithm as defined by Google works on 32k blocks and
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,36,* doesn't contain offsets bigger than 32k which is the default block
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,37,* size used by this class.</p>
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,39,* <p>The raw Snappy format requires the uncompressed size to be
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,40,* written at the beginning of the stream using a varint
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,41,"* representation, i.e. the number of bytes needed to write the"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,42,* information is not known before the uncompressed size is
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,43,* known. We've chosen to make the uncompressedSize a parameter of the
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,44,* constructor in favor of buffering the whole output until the size
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,45,* is known. When using the {@link FramedSnappyCompressorOutputStream}
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,46,* this limitation is taken care of by the warpping framing
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,47,* format.</p>
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,49,"* @see <a href=""https://github.com/google/snappy/blob/master/format_description.txt"">Snappy compressed format description</a>"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,50,* @since 1.14
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,51,* @NotThreadSafe
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,53,public class SnappyCompressorOutputStream extends CompressorOutputStream {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,54,private final LZ77Compressor compressor;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,55,private final OutputStream os;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,57,// used in one-arg write method
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,58,private final byte[] oneByte = new byte[1];
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,60,private boolean finished = false;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,63,* Constructor using the default block size of 32k.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,65,* @param os the outputstream to write compressed data to
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,66,* @param uncompressedSize the uncompressed size of data
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,67,* @throws IOException if writing of the size fails
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,69,"public SnappyCompressorOutputStream(final OutputStream os, final long uncompressedSize) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,70,"this(os, uncompressedSize, SnappyCompressorInputStream.DEFAULT_BLOCK_SIZE);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,74,* Constructor using a configurable block size.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,76,* @param os the outputstream to write compressed data to
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,77,* @param uncompressedSize the uncompressed size of data
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,78,* @param blockSize the block size used - must be a power of two
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,79,* @throws IOException if writing of the size fails
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,81,"public SnappyCompressorOutputStream(final OutputStream os, final long uncompressedSize, final int blockSize)"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,82,throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,83,"this(os, uncompressedSize, createParams(blockSize));"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,87,* Constructor providing full control over the underlying LZ77 compressor.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,89,* @param os the outputstream to write compressed data to
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,90,* @param uncompressedSize the uncompressed size of data
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,91,* @param params the parameters to use by the compressor - note
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,92,* that the format itself imposes some limits like a maximum match
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,93,* length of 64 bytes
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,94,* @throws IOException if writing of the size fails
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,96,"public SnappyCompressorOutputStream(final OutputStream os, final long uncompressedSize, Parameters params)"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,97,throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,98,this.os = os;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,99,"compressor = new LZ77Compressor(params, new LZ77Compressor.Callback() {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,100,public void accept(LZ77Compressor.Block block) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,101,//System.err.println(block);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,102,if (block instanceof LZ77Compressor.LiteralBlock) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,103,writeLiteralBlock((LZ77Compressor.LiteralBlock) block);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,104,} else if (block instanceof LZ77Compressor.BackReference) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,105,writeBackReference((LZ77Compressor.BackReference) block);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,109,writeUncompressedSize(uncompressedSize);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,112,@Override
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,113,public void write(int b) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,114,oneByte[0] = (byte) (b & 0xff);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,115,write(oneByte);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,118,@Override
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,119,"public void write(byte[] data, int off, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,120,"compressor.compress(data, off, len);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,123,@Override
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,124,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,125,finish();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,126,os.close();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,130,"* Compresses all remaining data and writes it to the stream,"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,131,* doesn't close the underlying stream.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,132,* @throws IOException if an error occurs
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,134,public void finish() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,135,if (!finished) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,136,compressor.finish();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,137,finished = true;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,141,private void writeUncompressedSize(long uncompressedSize) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,142,boolean more = false;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,143,do {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,144,int currentByte = (int) (uncompressedSize & 0x7F);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,145,more = uncompressedSize > currentByte;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,146,if (more) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,147,currentByte |= 0x80;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,149,os.write(currentByte);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,150,uncompressedSize >>= 7;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,151,} while (more);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,154,// literal length is stored as (len - 1) either inside the tag
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,155,// (six bits minus four flags) or in 1 to 4 bytes after the tag
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,156,private static final int MAX_LITERAL_SIZE_WITHOUT_SIZE_BYTES = 60;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,157,private static final int MAX_LITERAL_SIZE_WITH_ONE_SIZE_BYTE = 1 << 8;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,158,private static final int MAX_LITERAL_SIZE_WITH_TWO_SIZE_BYTES = 1 << 16;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,159,private static final int MAX_LITERAL_SIZE_WITH_THREE_SIZE_BYTES = 1 << 24;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,161,private static final int ONE_SIZE_BYTE_MARKER = 60 << 2;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,162,private static final int TWO_SIZE_BYTE_MARKER = 61 << 2;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,163,private static final int THREE_SIZE_BYTE_MARKER = 62 << 2;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,164,private static final int FOUR_SIZE_BYTE_MARKER = 63 << 2;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,166,private void writeLiteralBlock(LZ77Compressor.LiteralBlock block) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,167,int len = block.getLength();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,168,if (len <= MAX_LITERAL_SIZE_WITHOUT_SIZE_BYTES) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,169,"writeLiteralBlockNoSizeBytes(block, len);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,170,} else if (len <= MAX_LITERAL_SIZE_WITH_ONE_SIZE_BYTE) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,171,"writeLiteralBlockOneSizeByte(block, len);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,172,} else if (len <= MAX_LITERAL_SIZE_WITH_TWO_SIZE_BYTES) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,173,"writeLiteralBlockTwoSizeBytes(block, len);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,174,} else if (len <= MAX_LITERAL_SIZE_WITH_THREE_SIZE_BYTES) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,175,"writeLiteralBlockThreeSizeBytes(block, len);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,176,} else {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,177,"writeLiteralBlockFourSizeBytes(block, len);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,181,"private void writeLiteralBlockNoSizeBytes(LZ77Compressor.LiteralBlock block, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,182,"writeLiteralBlockWithSize(len - 1 << 2, 0, len, block);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,185,"private void writeLiteralBlockOneSizeByte(LZ77Compressor.LiteralBlock block, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,186,"writeLiteralBlockWithSize(ONE_SIZE_BYTE_MARKER, 1, len, block);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,189,"private void writeLiteralBlockTwoSizeBytes(LZ77Compressor.LiteralBlock block, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,190,"writeLiteralBlockWithSize(TWO_SIZE_BYTE_MARKER, 2, len, block);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,193,"private void writeLiteralBlockThreeSizeBytes(LZ77Compressor.LiteralBlock block, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,194,"writeLiteralBlockWithSize(THREE_SIZE_BYTE_MARKER, 3, len, block);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,197,"private void writeLiteralBlockFourSizeBytes(LZ77Compressor.LiteralBlock block, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,198,"writeLiteralBlockWithSize(FOUR_SIZE_BYTE_MARKER, 4, len, block);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,201,"private void writeLiteralBlockWithSize(int tagByte, int sizeBytes, int len, LZ77Compressor.LiteralBlock block)"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,202,throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,203,os.write(tagByte);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,204,"writeLittleEndian(sizeBytes, len - 1);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,205,"os.write(block.getData(), block.getOffset(), len);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,208,"private void writeLittleEndian(final int numBytes, int num) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,209,for (int i = 0; i < numBytes; i++) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,210,os.write(num & 0xff);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,211,num >>= 8;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,215,"// Back-references (""copies"") have their offset/size information"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,216,"// in two, three or five bytes."
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,217,private static final int MIN_MATCH_LENGTH_WITH_ONE_OFFSET_BYTE = 4;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,218,private static final int MAX_MATCH_LENGTH_WITH_ONE_OFFSET_BYTE = 11;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,219,private static final int MAX_OFFSET_WITH_ONE_OFFSET_BYTE = 1 << 11 - 1;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,220,private static final int MAX_OFFSET_WITH_TWO_OFFSET_BYTES = 1 << 16 - 1;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,222,private static final int ONE_BYTE_COPY_TAG = 1;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,223,private static final int TWO_BYTE_COPY_TAG = 2;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,224,private static final int FOUR_BYTE_COPY_TAG = 3;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,226,private void writeBackReference(LZ77Compressor.BackReference block) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,227,final int len = block.getLength();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,228,final int offset = block.getOffset();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,229,if (len >= MIN_MATCH_LENGTH_WITH_ONE_OFFSET_BYTE && len <= MAX_MATCH_LENGTH_WITH_ONE_OFFSET_BYTE
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,230,&& offset <= MAX_OFFSET_WITH_ONE_OFFSET_BYTE) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,231,"writeBackReferenceWithOneOffsetByte(len, offset);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,232,} else if (offset < MAX_OFFSET_WITH_TWO_OFFSET_BYTES) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,233,"writeBackReferenceWithTwoOffsetBytes(len, offset);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,234,} else {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,235,"writeBackReferenceWithFourOffsetBytes(len, offset);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,239,"private void writeBackReferenceWithOneOffsetByte(int len, int offset) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,240,os.write(ONE_BYTE_COPY_TAG | ((len - 4) << 2) | ((offset & 0x700) >> 3));
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,241,os.write(offset & 0xff);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,244,"private void writeBackReferenceWithTwoOffsetBytes(int len, int offset) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,245,"writeBackReferenceWithLittleEndianOffset(TWO_BYTE_COPY_TAG, 2, len, offset);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,248,"private void writeBackReferenceWithFourOffsetBytes(int len, int offset) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,249,"writeBackReferenceWithLittleEndianOffset(FOUR_BYTE_COPY_TAG, 4, len, offset);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,252,"private void writeBackReferenceWithLittleEndianOffset(int tag, int offsetBytes, int len, int offset)"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,253,throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,254,os.write(tag | ((len - 1) << 2));
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,255,"writeLittleEndian(offsetBytes, offset);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,258,// technically the format could use shorter matches but with a
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,259,// length of three the offset would be encoded as at least two
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,260,"// bytes in addition to the tag, so yield no compression at all"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,261,private static final int MIN_MATCH_LENGTH = 4;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,262,// Snappy stores the match length in six bits of the tag
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,263,private static final int MAX_MATCH_LENGTH = 64;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,265,// package private for tests
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,266,static Parameters createParams(int blockSize) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,267,// the max offset and max literal length defined by the format
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,268,// are 2^32 - 1 and 2^32 respectively - with blockSize being
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,269,// an integer we will never exceed that
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java,270,"return new Parameters(blockSize, MIN_MATCH_LENGTH, MAX_MATCH_LENGTH, blockSize, blockSize);"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,19,package org.apache.commons.compress.compressors.snappy;
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,23,import java.io.FileOutputStream;
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,24,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,25,import java.util.Random;
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,26,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,27,import org.apache.commons.compress.compressors.lz77support.Parameters;
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,28,import org.apache.commons.compress.utils.IOUtils;
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,29,import org.junit.Assert;
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,30,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,32,public final class SnappyRoundtripTest extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,34,private void roundTripTest(String testFile) throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,35,"roundTripTest(getFile(testFile),"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,36,SnappyCompressorOutputStream.createParams(SnappyCompressorInputStream.DEFAULT_BLOCK_SIZE));
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,39,"private void roundTripTest(final File input, Parameters params) throws IOException {"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,40,long start = System.currentTimeMillis();
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,41,"final File outputSz = new File(dir, input.getName() + "".raw.sz"");"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,42,try (FileInputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,43,FileOutputStream os = new FileOutputStream(outputSz);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,44,"SnappyCompressorOutputStream sos = new SnappyCompressorOutputStream(os, input.length(), params)) {"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,45,"IOUtils.copy(is, sos);"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,47,"System.err.println(input.getName() + "" written, uncompressed bytes: "" + input.length()"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,48,"+ "", compressed bytes: "" + outputSz.length() + "" after "" + (System.currentTimeMillis() - start) + ""ms"");"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,49,try (FileInputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,50,"SnappyCompressorInputStream sis = new SnappyCompressorInputStream(new FileInputStream(outputSz),"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,51,params.getWindowSize())) {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,52,byte[] expected = IOUtils.toByteArray(is);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,53,byte[] actual = IOUtils.toByteArray(sis);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,54,"Assert.assertArrayEquals(expected, actual);"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,58,// should yield decent compression
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,59,@Test
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,60,public void blaTarRoundtrip() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,61,"roundTripTest(""bla.tar"");"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,64,// yields no compression at all
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,65,@Test
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,66,public void gzippedLoremIpsumRoundtrip() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,67,"roundTripTest(""lorem-ipsum.txt.gz"");"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,70,@Test
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,71,public void biggerFileRoundtrip() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,72,"roundTripTest(""COMPRESS-256.7z"");"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,75,@Test
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,76,public void tryReallyBigOffset() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,77,"// ""normal"" Snappy files will never reach offsets beyond"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,78,// 16bits (i.e. those using four bytes to encode the length)
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,79,// as the block size is only 32k. This means we never execute
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,80,// the code for four-byte length copies in either stream class
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,81,// using real-world Snappy files.
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,82,// This is an artifical stream using a bigger block size that
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,83,// may not even be expandable by other Snappy implementations.
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,84,// Start with the four byte sequence 0000 after that add > 64k
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,85,"// of random noise that doesn't contain any 0000 at all, then"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,86,// add 0000.
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,87,"File f = new File(dir, ""reallyBigOffsetTest"");"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,88,try (FileOutputStream fs = new FileOutputStream(f)) {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,89,fs.write(0);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,90,fs.write(0);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,91,fs.write(0);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,92,fs.write(0);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,93,int cnt = 1 << 16 + 5;
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,94,Random r = new Random();
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,95,for (int i = 0 ; i < cnt; i++) {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,96,fs.write(r.nextInt(255) + 1);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,98,fs.write(0);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,99,fs.write(0);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,100,fs.write(0);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,101,fs.write(0);
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,103,"roundTripTest(f, new Parameters(1 << 17, 4, 64, 1 << 17 - 1, 1 << 17 - 1));"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,106,@Test
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,107,public void tryReallyLongLiterals() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,108,"// ""normal"" Snappy files will never reach literal blocks with"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,109,// length beyond 16bits (i.e. those using three or four bytes
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,110,// to encode the length) as the block size is only 32k. This
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,111,// means we never execute the code for the three/four byte
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,112,// length literals in either stream class using real-world
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,113,// Snappy files.
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,114,// What we'd need would be a sequence of bytes with no four
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,115,"// byte subsequence repeated that is longer than 64k, we try"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,116,"// our best with random, but will probably only hit the three byte"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,117,// methods in a few lucky cases.
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,118,// The four byte methods would require even more luck and a
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,119,// buffer (and a file written to disk) that was 2^5 bigger
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,120,// than the buffer used here.
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,121,"File f = new File(dir, ""reallyBigLiteralTest"");"
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,122,try (FileOutputStream fs = new FileOutputStream(f)) {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,123,int cnt = 1 << 19;
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,124,Random r = new Random();
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,125,for (int i = 0 ; i < cnt; i++) {
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,126,fs.write(r.nextInt(256));
True,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/snappy/SnappyRoundtripTest.java,129,"roundTripTest(f, new Parameters(1 << 18, 4, 64, 1 << 16 - 1, 1 << 18 - 1));"
