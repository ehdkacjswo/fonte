is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,806,iles[i].setHasStream(isEmptyStream == null ? true : !isEmptyStream.get(i));
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,806,files[i].setHasStream(isEmptyStream == null || !isEmptyStream.get(i));
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,815,iles[i].setDirectory(isEmptyFile == null ? true : !isEmptyFile.get(emptyFileCounter));
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,816,iles[i].setAntiItem(isAnti == null ? false : isAnti.get(emptyFileCounter));
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,815,files[i].setDirectory(isEmptyFile == null || !isEmptyFile.get(emptyFileCounter));
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,816,files[i].setAntiItem(isAnti != null && isAnti.get(emptyFileCounter));
False,src/main/java/org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.java,67,f (alignment < 0 || alignment > 0x7fff)
True,src/main/java/org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.java,67,if (alignment < 0 || alignment > 0x7fff) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,1060,"ldAlignmentEx != null ? oldAlignmentEx.allowMethodChange() : false, padding));"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,1060,"oldAlignmentEx != null && oldAlignmentEx.allowMethodChange(), padding));"
False,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,20,mport java.io.FilterInputStream;
False,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,43,rivate static final int MIN_LENGTH_OF_LAST_LITERAL = 5;
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,251,oolean lazy = lazyMatches != null ? lazyMatches : true;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,251,boolean lazy = lazyMatches == null || lazyMatches;
