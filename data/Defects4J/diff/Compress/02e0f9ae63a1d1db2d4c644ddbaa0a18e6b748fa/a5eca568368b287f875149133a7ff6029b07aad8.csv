is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,4,*  this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,7,*  the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,14,*  See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,15,*  limitations under the License.
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,19,package org.apache.commons.compress.archivers.tar;
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,21,import java.io.BufferedInputStream;
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,22,import java.io.File;
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,23,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,24,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,27,* Simple command line application that lists the contents of a tar archive.
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,29,* <p>The name of the archive must be given as a command line argument.</p>
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,30,* <p>The optional second argument specifies the encoding to assume for file names.</p>
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,32,* @since 1.11
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,34,public final class TarLister {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,36,public static void main(String[] args) throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,37,if (args.length == 0) {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,38,usage();
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,39,return;
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,41,"System.out.println(""Analysing "" + args[0]);"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,42,File f = new File(args[0]);
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,43,if (!f.isFile()) {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,44,"System.err.println(f + "" doesn't exist or is a directory"");"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,46,InputStream fis = new BufferedInputStream(new FileInputStream(f));
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,47,TarArchiveInputStream ais;
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,48,if (args.length > 1) {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,49,"ais = new TarArchiveInputStream(fis, args[1]);"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,50,} else {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,51,ais = new TarArchiveInputStream(fis);
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,53,"System.out.println(""Created "" + ais.toString());"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,54,TarArchiveEntry ae;
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,55,while((ae=ais.getNextTarEntry()) != null){
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,56,log(ae);
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,58,ais.close();
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,59,fis.close();
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,62,private static void usage() {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,63,"System.out.println(""Parameters: archive-name [encoding]"");"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,66,private static void log(TarArchiveEntry ae) {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,67,System.out.print(ae.getName());
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,68,if (ae.isSymbolicLink() || ae.isLink()) {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,69,if (ae.isSymbolicLink()) {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,70,"System.out.print("" -> "");"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,71,} else {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,72,"System.out.print("" link to "");"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,74,System.out.print(ae.getLinkName());
True,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java,76,System.out.println();
