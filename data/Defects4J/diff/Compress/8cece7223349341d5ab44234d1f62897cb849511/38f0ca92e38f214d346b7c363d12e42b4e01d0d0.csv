is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,4,*  this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,7,*  the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,14,*  See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,15,*  limitations under the License.
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,19,package org.apache.commons.compress.archivers.tar;
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,21,import java.util.Random;
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,23,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,24,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,25,import static org.junit.Assert.assertNotNull;
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,26,import static org.junit.Assert.assertNull;
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,28,import org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,30,public class BigFilesIT {
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,32,@Test
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,33,public void readFileBiggerThan8GByte() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,34,GzipCompressorInputStream in = null;
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,35,TarArchiveInputStream tin = null;
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,36,try {
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,37,in =
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,38,new GzipCompressorInputStream(BigFilesIT.class
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,39,".getResourceAsStream(""/8.tar.gz""));"
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,40,tin = new TarArchiveInputStream(in);
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,41,TarArchiveEntry e = tin.getNextTarEntry();
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,42,assertNotNull(e);
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,43,"assertEquals(8200l * 1024 * 1024, e.getSize());"
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,45,long read = 0;
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,46,Random r = new Random(System.currentTimeMillis());
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,47,int readNow;
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,48,byte[] buf = new byte[1024 * 1024];
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,49,"while ((readNow = tin.read(buf, 0, buf.length)) > 0) {"
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,50,// testing all bytes for a value of 0 is going to take
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,51,"// too long, just pick a few ones randomly"
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,52,for (int i = 0; i < 100; i++) {
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,53,int idx = r.nextInt(readNow);
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,54,"assertEquals(""testing byte "" + (read + idx), 0, buf[idx]);"
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,56,read += readNow;
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,58,"assertEquals(8200l * 1024 * 1024, read);"
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,59,assertNull(tin.getNextTarEntry());
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,60,} finally {
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,61,if (tin != null) {
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,62,tin.close();
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,64,if (in != null) {
True,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java,65,in.close();
