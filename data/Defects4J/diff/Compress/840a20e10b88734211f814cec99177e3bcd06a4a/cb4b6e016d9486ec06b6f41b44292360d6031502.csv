is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,32,private static final int MAXIMUM_CACHE_SIZE = 31; // bits in int minus sign bit
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,33,private static final int[] MASKS = new int[MAXIMUM_CACHE_SIZE + 1];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,35,static {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,36,for (int i = 1; i <= MAXIMUM_CACHE_SIZE; i++) {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,37,MASKS[i] = (MASKS[i - 1] << 1) + 1;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,70,f (count < 0 || count > 31) {
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,71,"hrow new IllegalArgumentException(""count must be between 0 and 32"");"
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,79,if (count < 0 || count > MAXIMUM_CACHE_SIZE) {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,80,"throw new IllegalArgumentException(""count must be between 0 and "" + MAXIMUM_CACHE_SIZE);"
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,87,inal int mask = (1 << count) - 1;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,90,itsOut = (bitsCached & mask);
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,98,bitsOut = (bitsCached & MASKS[count]);
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,93,itsOut = (bitsCached >> (bitsCachedSize - count)) & mask;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,101,bitsOut = (bitsCached >> (bitsCachedSize - count)) & MASKS[count];
