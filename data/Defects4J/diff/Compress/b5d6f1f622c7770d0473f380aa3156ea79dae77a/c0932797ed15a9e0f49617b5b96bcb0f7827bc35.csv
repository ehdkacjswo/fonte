is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,19,package org.apache.commons.compress.compressors.lz4;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,21,import static java.lang.Integer.rotateLeft;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,23,import java.nio.ByteBuffer;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,24,import java.nio.ByteOrder;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,25,import java.util.zip.Checksum;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,28,* Implementation of the xxhash32 hash algorithm.
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,30,"* @see <a href=""http://cyan4973.github.io/xxHash/"">xxHash</a>"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,31,* @NotThreadSafe
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,32,* @since 1.14
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,34,public class XXHash32 implements Checksum {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,36,private static final int BUF_SIZE = 16;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,37,private static final int ROTATE_BITS = 13;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,39,private static final int PRIME1 = (int) 2654435761l;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,40,private static final int PRIME2 = (int) 2246822519l;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,41,private static final int PRIME3 = (int) 3266489917l;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,42,private static final int PRIME4 =  668265263;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,43,private static final int PRIME5 =  374761393;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,45,private final byte[] oneByte = new byte[1];
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,46,private final int[] state = new int[4];
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,47,private final ByteBuffer buffer = ByteBuffer.allocate(BUF_SIZE).order(ByteOrder.LITTLE_ENDIAN);
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,48,private final int seed;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,50,private int totalLen;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,51,private int pos;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,54,* Creates an XXHash32 instance with a seed of 0.
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,56,public XXHash32() {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,57,this(0);
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,61,* Creates an XXHash32 instance.
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,63,public XXHash32(int seed) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,64,this.seed = seed;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,65,initializeState();
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,68,@Override
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,69,public void reset() {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,70,initializeState();
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,71,buffer.clear();
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,72,totalLen = 0;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,73,pos = 0;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,76,@Override
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,77,public void update(int b) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,78,oneByte[0] = (byte) (b & 0xff);
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,79,"update(oneByte, 0, 1);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,82,@Override
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,83,"public void update(byte[] b, int off, final int len) {"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,84,if (len <= 0) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,85,return;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,87,totalLen += len;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,89,final int end = off + len;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,91,if (pos + len < BUF_SIZE) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,92,"buffer.put(b, off, len);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,93,pos += len;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,94,return;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,97,if (pos > 0) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,98,final int size = BUF_SIZE - pos;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,99,"buffer.put(b, off, size);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,100,process();
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,101,off += size;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,104,final int limit = end - BUF_SIZE;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,105,while (off <= limit) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,106,"buffer.put(b, off, BUF_SIZE);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,107,process();
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,108,off += BUF_SIZE;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,111,if (off < end) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,112,pos = end - off;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,113,"buffer.put(b, off, pos);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,117,@Override
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,118,public long getValue() {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,119,int hash;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,120,if (totalLen > BUF_SIZE) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,121,hash =
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,122,"rotateLeft(state[0],  1) +"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,123,"rotateLeft(state[1],  7) +"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,124,"rotateLeft(state[2], 12) +"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,125,"rotateLeft(state[3], 18);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,126,} else {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,127,hash = state[2] + PRIME5;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,129,hash += totalLen;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,131,buffer.flip();
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,133,int idx = 0;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,134,final int limit = pos - 4;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,135,for (; idx <= limit; idx += 4) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,136,"hash = rotateLeft(hash + buffer.getInt() * PRIME3, 17) * PRIME4;"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,138,while (idx < pos) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,139,"hash = rotateLeft(hash + (buffer.get() & 0xff) * PRIME5, 11) * PRIME1;"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,140,idx++;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,143,hash ^= hash >>> 15;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,144,hash *= PRIME2;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,145,hash ^= hash >>> 13;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,146,hash *= PRIME3;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,147,hash ^= hash >>> 16;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,148,return hash & 0xffffffffl;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,151,private void initializeState() {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,152,state[0] = seed + PRIME1 + PRIME2;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,153,state[1] = seed + PRIME2;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,154,state[2] = seed;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,155,state[3] = seed - PRIME1;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,158,private void process() {
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,159,buffer.flip();
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,161,// local shadows for performance
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,162,int s0 = state[0];
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,163,int s1 = state[1];
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,164,int s2 = state[2];
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,165,int s3 = state[3];
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,167,"s0 = rotateLeft(s0 + buffer.getInt() * PRIME2, ROTATE_BITS) * PRIME1;"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,168,"s1 = rotateLeft(s1 + buffer.getInt() * PRIME2, ROTATE_BITS) * PRIME1;"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,169,"s2 = rotateLeft(s2 + buffer.getInt() * PRIME2, ROTATE_BITS) * PRIME1;"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,170,"s3 = rotateLeft(s3 + buffer.getInt() * PRIME2, ROTATE_BITS) * PRIME1;"
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,172,state[0] = s0;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,173,state[1] = s1;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,174,state[2] = s2;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,175,state[3] = s3;
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,177,buffer.clear();
True,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,src/main/java/org/apache/commons/compress/compressors/lz4/XXHash32.java,178,pos = 0;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,19,package org.apache.commons.compress.compressors.lz4;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,23,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,24,import java.util.Arrays;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,25,import java.util.Collection;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,27,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,28,import org.apache.commons.compress.utils.IOUtils;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,30,import org.junit.Assert;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,31,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,32,import org.junit.runners.Parameterized;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,33,import org.junit.runners.Parameterized.Parameters;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,34,import org.junit.runner.RunWith;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,36,@RunWith(Parameterized.class)
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,37,public class XXHash32Test {
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,39,private final File file;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,40,private final String expectedChecksum;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,42,"public XXHash32Test(String fileName, String c) throws IOException {"
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,43,file = AbstractTestCase.getFile(fileName);
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,44,expectedChecksum = c;
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,47,@Parameters
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,48,public static Collection<Object[]> factory() {
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,49,return Arrays.asList(new Object[][] {
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,50,// reference checksums created with xxh32sum
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,51,"{ ""bla.tar"", ""fbb5c8d1"" },"
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,52,"{ ""bla.tar.xz"", ""4106a208"" },"
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,53,"{ ""8.posix.tar.gz"", ""9fce116a"" },"
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,57,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,58,public void verifyChecksum() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,59,XXHash32 h = new XXHash32();
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,60,try (FileInputStream s = new FileInputStream(file)) {
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,61,byte[] b = IOUtils.toByteArray(s);
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,62,"h.update(b, 0, b.length);"
True,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,src/test/java/org/apache/commons/compress/compressors/lz4/XXHash32Test.java,64,"Assert.assertEquals(""checksum for "" + file.getName(), expectedChecksum, Long.toHexString(h.getValue()));"
