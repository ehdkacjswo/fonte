is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java,163,* Doesn't do anything special since this class always uses the
True,src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java,164,* same data in central directory and local file data.
True,src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java,166,"public void parseFromCentralDirectoryData(byte[] buffer, int offset,"
True,src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java,167,int length)
True,src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java,168,throws ZipException {
True,src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java,169,"parseFromLocalFileData(buffer, offset, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,291,* Doesn't do anything special since this class always uses the
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,292,* same data in central directory and local file data.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,294,"public void parseFromCentralDirectoryData(byte[] buffer, int offset,"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,295,int length)
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,296,throws ZipException {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,297,"parseFromLocalFileData(buffer, offset, length);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,89, give data.
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,90, @param data an array of bytes
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,89,* given data as local file data.
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,90,* @param data an array of bytes as it appears in local file data
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,95,"return parse(data, true);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,99,* Split the array into ExtraFields and populate them with the
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,100,* given data.
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,101,* @param data an array of bytes
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,102,* @param local whether data originates from the local file data
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,103,* or the central directory
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,104,* @return an array of ExtraFields
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,105,* @throws ZipException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,107,"public static ZipExtraField[] parse(byte[] data, boolean local)"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,108,throws ZipException {
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,106,"e.parseFromLocalFileData(data, start + WORD, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,120,if (local) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,121,"ze.parseFromLocalFileData(data, start + WORD, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,122,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,123,"ze.parseFromCentralDirectoryData(data, start + WORD,"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,124,length);
True,src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java,src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java,106,* Doesn't do anything special since this class always uses the
True,src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java,src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java,107,* same data in central directory and local file data.
True,src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java,src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java,109,"public void parseFromCentralDirectoryData(byte[] buffer, int offset,"
True,src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java,src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java,110,int length)
True,src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java,src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java,111,throws ZipException {
True,src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java,src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java,112,"parseFromLocalFileData(buffer, offset, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,133,* @param data the array of bytes.
True,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,134,* @param offset the source location in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,135,* @param length the number of bytes to use in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,136,"* @see ZipExtraField#parseFromCentralDirectoryData(byte[], int, int)"
True,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,138,"public void parseFromCentralDirectoryData(byte[] data, int offset,"
True,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,139,int length) {
True,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,140,byte[] tmp = new byte[length];
True,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,141,"System.arraycopy(data, offset, tmp, 0, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,142,setCentralDirectoryData(tmp);
True,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,143,if (localData == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,144,setLocalFileDataData(tmp);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,268,etExtraFields(ExtraFieldUtils.parse(extra));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,268,"ZipExtraField[] local = ExtraFieldUtils.parse(extra, true);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,269,"mergeExtraFields(local, true);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,286,* Sets the central directory part of extra fields.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,288,public void setCentralDirectoryExtra(byte[] b) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,289,try {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,290,"ZipExtraField[] central = ExtraFieldUtils.parse(b, false);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,291,"mergeExtraFields(central, false);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,292,} catch (Exception e) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,293,"throw new RuntimeException(e.getMessage(), e);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,362,"* If there are no extra fields, use the given fields as new extra"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,363,* data - otherwise merge the fields assuming the existing fields
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,364,* and the new fields stem from different locations inside the
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,365,* archive.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,366,* @param f the extra fields to merge
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,367,* @param local whether the new fields originate from local data
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,369,"private void mergeExtraFields(ZipExtraField[] f, boolean local)"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,370,throws ZipException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,371,if (extraFields == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,372,setExtraFields(f);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,373,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,374,for (int i = 0; i < f.length; i++) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,375,ZipExtraField existing = getExtraField(f[i].getHeaderId());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,376,if (existing == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,377,addExtraField(f[i]);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,378,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,379,if (local) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,380,byte[] b = f[i].getLocalFileDataData();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,381,"existing.parseFromLocalFileData(b, 0, b.length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,382,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,383,byte[] b = f[i].getCentralDirectoryData();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,384,"existing.parseFromCentralDirectoryData(b, 0, b.length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,388,setExtra();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,31,ublic interface ZipExtraField
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,31,public interface ZipExtraField {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,80,"oid parseFromLocalFileData( byte[] buffer, int offset, int length )"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,79,"void parseFromLocalFileData(byte[] buffer, int offset, int length)"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,80,throws ZipException;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,83,* Populate data from this array as if it was in central directory data.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,85,* @param buffer the buffer to read data from
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,86,* @param offset offset into buffer to read data
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,87,* @param length the length of data
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,88,* @exception ZipException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,90,"void parseFromCentralDirectoryData(byte[] buffer, int offset, int length)"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,391,nt lenToSkip = extraLen;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,392,hile (lenToSkip > 0) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,393,nt skipped = archive.skipBytes(lenToSkip);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,394,f (skipped <= 0) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,395,"hrow new RuntimeException(""failed to skip extra data in"""
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,396," "" central directory"");"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,398,enToSkip -= skipped;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,391,byte[] cdExtraData = new byte[extraLen];
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,392,archive.readFully(cdExtraData);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,393,ze.setCentralDirectoryExtra(cdExtraData);
True,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,103,"* WinZIP created archive, uses Unicode Extra Fields but only in"
True,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,104,* the central directory.
True,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,106,"public void testReadWinZipArchive() throws IOException, URISyntaxException {"
True,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,107,"URL zip = getClass().getResource(""/utf8-winzip-test.zip"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,108,File archive = new File(new URI(zip.toString()));
True,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,109,ZipFile zf = null;
True,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,110,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,111,"zf = new ZipFile(archive, null, true);"
True,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,112,assertNotNull(zf.getEntry(ASCII_TXT));
True,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,113,assertNotNull(zf.getEntry(EURO_FOR_DOLLAR_TXT));
True,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,114,assertNotNull(zf.getEntry(OIL_BARREL_TXT));
True,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,115,} finally {
True,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java,116,ZipFile.closeQuietly(zf);
False,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,36, @since 1.1
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,87,* test handling of extra fields via central directory
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,89,public void testExtraFieldMerging() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,90,AsiExtraField a = new AsiExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,91,a.setDirectory(true);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,92,a.setMode(0755);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,93,UnrecognizedExtraField u = new UnrecognizedExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,94,u.setHeaderId(new ZipShort(1));
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,95,u.setLocalFileDataData(new byte[0]);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,97,"ZipArchiveEntry ze = new ZipArchiveEntry(""test/"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,98,"ze.setExtraFields(new ZipExtraField[] {a, u});"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,100,// merge
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,101,// Header-ID 1 + length 1 + one byte of data
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,102,"ze.setCentralDirectoryExtra(new byte[] {1, 0, 1, 0, 127});"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,104,ZipExtraField[] result = ze.getExtraFields();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,105,"assertEquals(""first pass"", 2, result.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,106,"assertSame(a, result[0]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,107,"assertEquals(new ZipShort(1), result[1].getHeaderId());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,108,"assertEquals(new ZipShort(0), result[1].getLocalFileDataLength());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,109,"assertEquals(new ZipShort(1), result[1].getCentralDirectoryLength());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,111,// add new
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,112,// Header-ID 2 + length 0
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,113,"ze.setCentralDirectoryExtra(new byte[] {2, 0, 0, 0});"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,115,result = ze.getExtraFields();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,116,"assertEquals(""second pass"", 3, result.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,118,// merge
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,119,// Header-ID 2 + length 1 + one byte of data
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,120,"ze.setExtra(new byte[] {2, 0, 1, 0, 127});"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,122,result = ze.getExtraFields();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,123,"assertEquals(""third pass"", 3, result.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,124,"assertSame(a, result[0]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,125,"assertEquals(new ZipShort(2), result[2].getHeaderId());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,126,"assertEquals(new ZipShort(1), result[2].getLocalFileDataLength());"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,127,"assertEquals(new ZipShort(0), result[2].getCentralDirectoryLength());"
False,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,91, @since 1.1
