is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,19,package org.apache.commons.compress.archivers.dump;
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,23,* Directory entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,25,public class Dirent {
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,26,private int ino;
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,27,private int parentIno;
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,28,private int type;
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,29,private String name;
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,32,* Constructor
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,34,* @param ino
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,35,* @param parentIno
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,36,* @param type
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,37,* @param name
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,39,"public Dirent(int ino, int parentIno, int type, String name) {"
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,40,this.ino = ino;
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,41,this.parentIno = parentIno;
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,42,this.type = type;
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,43,this.name = name;
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,47,* Get ino.
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,48,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,50,public int getIno() {
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,51,return ino;
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,55,* Get ino of parent directory.
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,56,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,58,public int getParentIno() {
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,59,return parentIno;
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,63,* Get entry type.
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,64,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,66,public int getType() {
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,67,return type;
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,71,* Get name of directory entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,72,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,74,public String getName() {
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,75,return name;
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,79,* @see java.lang.Object#toString()
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,81,@Override
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,82,public String toString() {
True,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,src/main/java/org/apache/commons/compress/archivers/dump/Dirent.java,83,"return String.format(""[%d]: %s"", ino, name);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,19,package org.apache.commons.compress.archivers.dump;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,22,* Various constants associated with dump archives.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,24,public final class DumpArchiveConstants {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,25,public static final int TP_SIZE = 1024;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,26,public static final int NTREC = 10;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,27,public static final int HIGH_DENSITY_NTREC = 32;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,28,public static final int OFS_MAGIC = 60011;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,29,public static final int NFS_MAGIC = 60012;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,30,public static final int FS_UFS2_MAGIC = 0x19540119;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,31,public static final int CHECKSUM = 84446;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,32,public static final int LBLSIZE = 16;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,33,public static final int NAMELEN = 64;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,35,/* do not instantiate */
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,36,private DumpArchiveConstants() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,40,* The type of tape segment.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,42,public enum SEGMENT_TYPE {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,43,"TAPE(1),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,44,"INODE(2),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,45,"BITS(3),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,46,"ADDR(4),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,47,"END(5),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,48,CLRI(6);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,50,int code;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,52,private SEGMENT_TYPE(int code) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,53,this.code = code;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,56,public static SEGMENT_TYPE find(int code) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,57,for (SEGMENT_TYPE t : values()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,58,if (t.code == code) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,59,return t;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,63,return null;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,68,* The type of compression.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,70,public enum COMPRESSION_TYPE {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,71,"ZLIB(0),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,72,"BZLIB(1),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,73,LZO(2);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,75,int code;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,77,private COMPRESSION_TYPE(int code) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,78,this.code = code;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,81,public static COMPRESSION_TYPE find(int code) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,82,for (COMPRESSION_TYPE t : values()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,83,if (t.code == code) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,84,return t;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java,88,return null;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,19,package org.apache.commons.compress.archivers.dump;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,21,import java.util.Collections;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,22,import java.util.Date;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,23,import java.util.EnumSet;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,24,import java.util.HashSet;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,25,import java.util.Set;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,26,import org.apache.commons.compress.archivers.ArchiveEntry;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,29,* This class represents an entry in a Dump archive. It consists
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,30,"* of the entry's header, the entry's File and any extended attributes."
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,31,* <p>
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,32,* DumpEntries that are created from the header bytes read from
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,33,* an archive are instantiated with the DumpArchiveEntry( byte[] )
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,34,* constructor. These entries will be used when extracting from
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,35,* or listing the contents of an archive. These entries have their
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,36,* header filled in using the header bytes. They also set the File
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,37,"* to null, since they reference an archive entry not a file."
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,38,* <p>
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,39,* DumpEntries can also be constructed from nothing but a name.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,40,"* This allows the programmer to construct the entry by hand, for"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,41,* instance when only an InputStream is available for writing to
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,42,"* the archive, and the header information is constructed from"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,43,* other information. In this case the header fields are set to
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,44,* defaults and the File is set to null.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,46,* <p>
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,47,* The C structure for a Dump Entry's header is:
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,48,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,49,* #define TP_BSIZE    1024          // size of each file block
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,50,* #define NTREC       10            // number of blocks to write at once
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,51,* #define HIGHDENSITYTREC 32        // number of blocks to write on high-density tapes
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,52,* #define TP_NINDIR   (TP_BSIZE/2)  // number if indirect inodes in record
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,53,* #define TP_NINOS    (TP_NINDIR / sizeof (int32_t))
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,54,* #define LBLSIZE     16
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,55,* #define NAMELEN     64
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,57,* #define OFS_MAGIC     (int)60011  // old format magic value
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,58,* #define NFS_MAGIC     (int)60012  // new format magic value
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,59,* #define FS_UFS2_MAGIC (int)0x19540119
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,60,* #define CHECKSUM      (int)84446  // constant used in checksum algorithm
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,62,* struct  s_spcl {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,63,*   int32_t c_type;             // record type (see below)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,64,*   int32_t <b>c_date</b>;             // date of this dump
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,65,*   int32_t <b>c_ddate</b>;            // date of previous dump
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,66,*   int32_t c_volume;           // dump volume number
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,67,*   u_int32_t c_tapea;          // logical block of this record
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,68,*   dump_ino_t c_ino;           // number of inode
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,69,*   int32_t <b>c_magic</b>;            // magic number (see above)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,70,*   int32_t c_checksum;         // record checksum
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,71,* #ifdef  __linux__
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,72,*   struct  new_bsd_inode c_dinode;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,73,* #else
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,74,* #ifdef sunos
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,75,*   struct  new_bsd_inode c_dinode;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,76,* #else
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,77,*   struct  dinode  c_dinode;   // ownership and mode of inode
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,78,* #endif
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,79,* #endif
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,80,*   int32_t c_count;            // number of valid c_addr entries
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,81,*   union u_data c_data;        // see above
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,82,*   char    <b>c_label[LBLSIZE]</b>;   // dump label
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,83,*   int32_t <b>c_level</b>;            // level of this dump
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,84,*   char    <b>c_filesys[NAMELEN]</b>; // name of dumpped file system
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,85,*   char    <b>c_dev[NAMELEN]</b>;     // name of dumpped device
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,86,*   char    <b>c_host[NAMELEN]</b>;    // name of dumpped host
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,87,*   int32_t c_flags;            // additional information (see below)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,88,*   int32_t c_firstrec;         // first record on volume
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,89,*   int32_t c_ntrec;            // blocksize on volume
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,90,*   int32_t c_extattributes;    // additional inode info (see below)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,91,*   int32_t c_spare[30];        // reserved for future uses
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,92,* } s_spcl;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,95,* // flag values
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,97,* #define DR_NEWHEADER     0x0001  // new format tape header
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,98,* #define DR_NEWINODEFMT   0x0002  // new format inodes on tape
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,99,* #define DR_COMPRESSED    0x0080  // dump tape is compressed
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,100,* #define DR_METAONLY      0x0100  // only the metadata of the inode has been dumped
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,101,* #define DR_INODEINFO     0x0002  // [SIC] TS_END header contains c_inos information
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,102,* #define DR_EXTATTRIBUTES 0x8000
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,105,* // extattributes inode info
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,107,* #define EXT_REGULAR         0
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,108,* #define EXT_MACOSFNDRINFO   1
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,109,* #define EXT_MACOSRESFORK    2
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,110,* #define EXT_XATTR           3
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,112,* // used for EA on tape
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,113,* #define EXT2_GOOD_OLD_INODE_SIZE    128
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,114,* #define EXT2_XATTR_MAGIC        0xEA020000  // block EA
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,115,* #define EXT2_XATTR_MAGIC2       0xEA020001  // in inode EA
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,116,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,117,* The fields in <b>bold</b> are the same for all blocks. (This permitted
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,118,* multiple dumps to be written to a single tape.)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,119,* </p>
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,121,* <p>
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,122,* The C structure for the inode (file) information is:
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,123,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,124,* struct bsdtimeval {           //  **** alpha-*-linux is deviant
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,125,*   __u32   tv_sec;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,126,*   __u32   tv_usec;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,129,* #define NDADDR      12
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,130,* #define NIADDR       3
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,133,* // This is the new (4.4) BSD inode structure
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,134,* // copied from the FreeBSD 2.0 <ufs/ufs/dinode.h> include file
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,136,* struct new_bsd_inode {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,137,"*   __u16       di_mode;           // file type, standard Unix permissions"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,138,*   __s16       di_nlink;          // number of hard links to file.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,139,*   union {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,140,*      __u16       oldids[2];
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,141,*      __u32       inumber;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,142,*   }           di_u;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,143,*   u_quad_t    di_size;           // file size
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,144,*   struct bsdtimeval   di_atime;  // time file was last accessed
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,145,*   struct bsdtimeval   di_mtime;  // time file was last modified
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,146,*   struct bsdtimeval   di_ctime;  // time file was created
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,147,*   __u32       di_db[NDADDR];
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,148,*   __u32       di_ib[NIADDR];
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,149,*   __u32       di_flags;          //
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,150,*   __s32       di_blocks;         // number of disk blocks
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,151,*   __s32       di_gen;            // generation number
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,152,*   __u32       di_uid;            // user id (see /etc/passwd)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,153,*   __u32       di_gid;            // group id (see /etc/group)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,154,*   __s32       di_spare[2];       // unused
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,156,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,157,* It is important to note that the header DOES NOT have the name of the
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,158,* file. It can't since hard links mean that you may have multiple filenames
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,159,* for a single physical file. You must read the contents of the directory
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,160,* entries to learn the mapping(s) from filename to inode.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,161,* </p>
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,163,* <p>
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,164,* The C structure that indicates if a specific block is a real block
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,165,* that contains data or is a sparse block that is not persisted to the
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,166,* disk is:
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,167,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,168,* #define TP_BSIZE    1024
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,169,* #define TP_NINDIR   (TP_BSIZE/2)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,171,* union u_data {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,172,*   char    s_addrs[TP_NINDIR]; // 1 => data; 0 => hole in inode
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,173,*   int32_t s_inos[TP_NINOS];   // table of first inode on each volume
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,174,* } u_data;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,175,* </pre></p>
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,177,* @NotThreadSafe
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,179,public class DumpArchiveEntry implements ArchiveEntry {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,180,private String name;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,181,private TYPE type = TYPE.UNKNOWN;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,182,private int mode;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,183,private Set<PERMISSION> permissions = Collections.emptySet();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,184,private long size;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,185,private Date atime;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,186,private Date mtime;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,187,private int uid;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,188,private int gid;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,190,private DumpArchiveSummary summary = null;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,192,// this information is available from standard index.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,193,private TapeSegmentHeader header = new TapeSegmentHeader();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,194,private String simpleName;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,196,// this information is available from QFA index
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,197,private int volume;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,198,private long offset;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,199,private int ino;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,200,private int nlink;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,201,private Date ctime;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,202,private int generation;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,203,private boolean isDeleted;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,206,* Default constructor.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,208,public DumpArchiveEntry() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,212,* Constructor taking only filename.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,213,* @param name pathname
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,214,* @param simpleName actual filename.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,216,"public DumpArchiveEntry(String name, String simpleName) {"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,217,this.name = name;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,218,this.simpleName = simpleName;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,222,"* Constructor taking name, inode and type."
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,224,* @param name
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,225,* @param simpleName
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,226,* @param ino
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,227,* @param type
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,229,"protected DumpArchiveEntry(String name, String simpleName, int ino,"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,230,TYPE type) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,231,"this(name, simpleName);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,232,setType(type);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,233,this.ino = ino;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,234,this.offset = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,238,* Constructor taking tape buffer.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,239,* @param buffer
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,240,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,244,* Returns the path of the entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,245,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,247,public String getSimpleName() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,248,return simpleName;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,252,* Sets the path of the entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,253,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,255,protected void setSimpleName(String simpleName) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,256,this.simpleName = simpleName;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,260,* Returns the ino of the entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,262,public int getIno() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,263,return header.getIno();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,267,* Return the number of hard links to the entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,269,public int getNlink() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,270,return nlink;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,274,* Set the number of hard links.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,276,public void setNlink(int nlink) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,277,this.nlink = nlink;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,281,* Get file creation time.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,283,public Date getCreationTime() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,284,return ctime;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,288,* Set the file creation time.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,290,public void setCreationTime(Date ctime) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,291,this.ctime = ctime;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,295,* Return the generation of the file.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,297,public int getGeneration() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,298,return generation;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,302,* Set the generation of the file.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,304,public void setGeneration(int generation) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,305,this.generation = generation;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,309,* Has this file been deleted? (On valid on incremental dumps.)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,311,public boolean isDeleted() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,312,return isDeleted;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,316,* Set whether this file has been deleted.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,318,public void setDeleted(boolean isDeleted) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,319,this.isDeleted = isDeleted;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,323,* Return the offset within the archive
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,325,public long getOffset() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,326,return offset;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,330,* Set the offset within the archive.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,332,public void setOffset(long offset) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,333,this.offset = offset;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,337,* Return the tape volume where this file is located.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,339,public int getVolume() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,340,return volume;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,344,* Set the tape volume.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,346,public void setVolume(int volume) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,347,this.volume = volume;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,351,* Return the type of the tape segment header.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,353,public DumpArchiveConstants.SEGMENT_TYPE getHeaderType() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,354,return header.getType();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,358,* Return the number of records in this segment.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,360,public int getHeaderCount() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,361,return header.getCount();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,365,* Return the number of sparse records in this segment.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,367,public int getHeaderHoles() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,368,return header.getHoles();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,372,* Is this a sparse record?
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,374,public boolean isSparseRecord(int idx) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,375,return (header.getCdata(idx) & 0x01) == 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,379,* @see java.lang.Object#hashCode()
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,381,@Override
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,382,public int hashCode() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,383,return ino;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,387,* @see java.lang.Object#equals(Object o)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,389,@Override
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,390,public boolean equals(Object o) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,391,if (o == this) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,392,return true;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,393,} else if (!o.getClass().equals(getClass())) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,394,return false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,397,DumpArchiveEntry rhs = (DumpArchiveEntry) o;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,399,if ((header == null) || (rhs.header == null)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,400,return false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,403,if (ino != rhs.ino) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,404,return false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,407,if ((summary != null) || summary.equals(rhs.summary)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,408,return false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,411,return true;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,415,* @see java.lang.Object#toString()
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,417,@Override
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,418,public String toString() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,419,return getName();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,423,* Populate the dump archive entry and tape segment header with
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,424,* the contents of the buffer.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,426,* @param buffer
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,427,* @throws Exception
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,429,public static DumpArchiveEntry parse(byte[] buffer) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,430,DumpArchiveEntry entry = new DumpArchiveEntry();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,431,TapeSegmentHeader header = entry.header;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,433,header.type = DumpArchiveConstants.SEGMENT_TYPE.find(DumpArchiveUtil.convert32(
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,434,"buffer, 0));"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,436,"//header.dumpDate = new Date(1000L * DumpArchiveUtil.convert32(buffer, 4));"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,437,//header.previousDumpDate = new Date(1000L * DumpArchiveUtil.convert32(
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,438,"//            buffer, 8));"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,439,"header.volume = DumpArchiveUtil.convert32(buffer, 12);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,440,"//header.tapea = DumpArchiveUtil.convert32(buffer, 16);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,441,"entry.ino = header.ino = DumpArchiveUtil.convert32(buffer, 20);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,443,"//header.magic = DumpArchiveUtil.convert32(buffer, 24);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,444,"//header.checksum = DumpArchiveUtil.convert32(buffer, 28);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,445,"int m = DumpArchiveUtil.convert16(buffer, 32);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,447,// determine the type of the file.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,448,entry.setType(TYPE.find((m >> 12) & 0x0F));
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,450,// determine the standard permissions
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,451,entry.setMode(m);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,453,"entry.nlink = DumpArchiveUtil.convert16(buffer, 34);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,454,"// inumber, oldids?"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,455,"entry.setSize(DumpArchiveUtil.convert64(buffer, 40));"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,457,"long t = (1000L * DumpArchiveUtil.convert32(buffer, 48)) +"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,458,"(DumpArchiveUtil.convert32(buffer, 52) / 1000);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,459,entry.setAccessTime(new Date(t));
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,460,"t = (1000L * DumpArchiveUtil.convert32(buffer, 56)) +"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,461,"(DumpArchiveUtil.convert32(buffer, 60) / 1000);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,462,entry.setLastModifiedDate(new Date(t));
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,463,"t = (1000L * DumpArchiveUtil.convert32(buffer, 64)) +"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,464,"(DumpArchiveUtil.convert32(buffer, 68) / 1000);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,465,entry.ctime = new Date(t);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,467,// db: 72-119 - direct blocks
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,468,// id: 120-131 - indirect blocks
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,469,"//entry.flags = DumpArchiveUtil.convert32(buffer, 132);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,470,"//entry.blocks = DumpArchiveUtil.convert32(buffer, 136);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,471,"entry.generation = DumpArchiveUtil.convert32(buffer, 140);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,472,"entry.setUserId(DumpArchiveUtil.convert32(buffer, 144));"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,473,"entry.setGroupId(DumpArchiveUtil.convert32(buffer, 148));"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,474,// two 32-bit spare values.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,475,"header.count = DumpArchiveUtil.convert32(buffer, 160);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,477,header.holes = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,479,for (int i = 0; (i < 512) && (i < header.count); i++) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,480,if (buffer[164 + i] == 0) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,481,header.holes++;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,485,"System.arraycopy(buffer, 164, header.cdata, 0, 512);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,487,entry.volume = header.getVolume();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,489,//entry.isSummaryOnly = false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,490,return entry;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,494,* Update entry with information from next tape segment header.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,496,public void update(byte[] buffer) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,497,"header.volume = DumpArchiveUtil.convert32(buffer, 16);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,498,"header.count = DumpArchiveUtil.convert32(buffer, 160);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,500,header.holes = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,502,for (int i = 0; (i < 512) && (i < header.count); i++) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,503,if (buffer[164 + i] == 0) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,504,header.holes++;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,508,"System.arraycopy(buffer, 164, header.cdata, 0, 512);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,512,* Archive entry as stored on tape. There is one TSH for (at most)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,513,* every 512k in the file.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,515,public static class TapeSegmentHeader {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,516,private DumpArchiveConstants.SEGMENT_TYPE type;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,517,private int volume;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,518,private int ino;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,519,private int count;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,520,private int holes;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,521,private byte[] cdata = new byte[512]; // map of any 'holes'
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,523,public DumpArchiveConstants.SEGMENT_TYPE getType() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,524,return type;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,527,public int getVolume() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,528,return volume;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,531,public int getIno() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,532,return ino;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,535,void setIno(int ino) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,536,this.ino = ino;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,539,public int getCount() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,540,return count;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,543,public int getHoles() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,544,return holes;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,547,public int getCdata(int idx) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,548,return cdata[idx];
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,553,* Returns the name of the entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,554,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,556,public String getName() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,557,return name;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,561,* Sets the name of the entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,562,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,564,public void setName(String name) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,565,this.name = name;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,568,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,569,public Date getLastModifiedDate() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,570,return mtime;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,574,* Is this a directory?
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,576,public boolean isDirectory() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,577,return type == TYPE.DIRECTORY;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,581,* Is this a regular file?
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,583,public boolean isFile() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,584,return type == TYPE.FILE;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,588,* Is this a network device?
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,590,public boolean isSocket() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,591,return type == TYPE.SOCKET;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,595,* Is this a character device?
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,597,public boolean isChrDev() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,598,return type == TYPE.CHRDEV;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,602,* Is this a block device?
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,604,public boolean isBlkDev() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,605,return type == TYPE.BLKDEV;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,609,* Is this a fifo/pipe?
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,611,public boolean isFifo() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,612,return type == TYPE.FIFO;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,616,* Get the type of the entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,618,public TYPE getType() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,619,return type;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,623,* Set the type of the entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,625,public void setType(TYPE type) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,626,this.type = type;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,630,* Return the access permissions on the entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,632,public int getMode() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,633,return mode;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,637,* Set the access permissions on the entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,639,public void setMode(int mode) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,640,this.mode = mode & 07777;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,641,this.permissions = PERMISSION.find(mode);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,645,* Returns the permissions on the entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,647,public Set<PERMISSION> getPermissions() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,648,return permissions;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,652,* Returns the size of the entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,654,public long getSize() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,655,return size;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,659,* Set the size of the entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,661,public void setSize(long size) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,662,this.size = size;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,666,* Set the time the file was last modified.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,668,public void setLastModifiedDate(Date mtime) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,669,this.mtime = mtime;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,673,* Returns the time the file was last accessed.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,675,public Date getAccessTime() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,676,return atime;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,680,* Set the time the file was last accessed.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,682,public void setAccessTime(Date atime) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,683,this.atime = atime;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,687,* Return the user id.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,689,public int getUserId() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,690,return uid;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,694,* Set the user id.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,696,public void setUserId(int uid) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,697,this.uid = uid;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,701,* Return the group id
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,703,public int getGroupId() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,704,return gid;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,708,* Set the group id.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,710,public void setGroupId(int gid) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,711,this.gid = gid;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,714,public enum TYPE {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,715,"WHITEOUT(14),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,716,"SOCKET(12),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,717,"LINK(10),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,718,"FILE(8),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,719,"BLKDEV(6),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,720,"DIRECTORY(4),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,721,"CHRDEV(2),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,722,"FIFO(1),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,723,UNKNOWN(15);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,725,private int code;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,727,private TYPE(int code) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,728,this.code = code;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,731,public static TYPE find(int code) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,732,TYPE type = UNKNOWN;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,734,for (TYPE t : TYPE.values()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,735,if (code == t.code) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,736,type = t;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,740,return type;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,744,public enum PERMISSION {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,745,"SETUID(04000),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,746,"SETGUI(02000),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,747,"STICKY(01000),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,748,"USER_READ(00400),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,749,"USER_WRITE(00200),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,750,"USER_EXEC(00100),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,751,"GROUP_READ(00040),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,752,"GROUP_WRITE(00020),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,753,"GROUP_EXEC(00010),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,754,"WORLD_READ(00004),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,755,"WORLD_WRITE(00002),"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,756,WORLD_EXEC(00001);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,758,private int code;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,760,private PERMISSION(int code) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,761,this.code = code;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,764,public static Set<PERMISSION> find(int code) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,765,Set<PERMISSION> set = new HashSet<PERMISSION>();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,767,for (PERMISSION p : PERMISSION.values()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,768,if ((code & p.code) == p.code) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,769,set.add(p);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,773,if (set.isEmpty()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,774,return Collections.emptySet();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java,777,return EnumSet.copyOf(set);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,19,package org.apache.commons.compress.archivers.dump;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,21,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,25,* Dump Archive Exception
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,27,public class DumpArchiveException extends IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,28,private static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,30,public DumpArchiveException() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,33,public DumpArchiveException(String msg) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,34,super(msg);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,37,public DumpArchiveException(Throwable cause) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,38,super(cause);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,41,"public DumpArchiveException(String msg, Throwable cause) {"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java,42,"super(msg, cause);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,19,package org.apache.commons.compress.archivers.dump;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,21,import org.apache.commons.compress.archivers.ArchiveInputStream;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,23,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,24,import java.io.InputStream;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,26,import java.util.Arrays;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,27,import java.util.Comparator;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,28,import java.util.HashMap;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,29,import java.util.Map;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,30,import java.util.PriorityQueue;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,31,import java.util.Queue;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,32,import java.util.Stack;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,36,* The DumpArchiveInputStream reads a UNIX dump archive as an InputStream.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,37,* Methods are provided to position at each successive entry in
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,38,"* the archive, and the read each entry as a normal input stream"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,39,* using read().
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,41,* @NotThreadSafe
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,43,public class DumpArchiveInputStream extends ArchiveInputStream {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,44,private DumpArchiveSummary summary;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,45,private DumpArchiveEntry active;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,46,private boolean isClosed;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,47,private boolean hasHitEOF;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,48,private long entrySize;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,49,private long entryOffset;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,50,private int readIdx;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,51,private byte[] readBuf = new byte[DumpArchiveConstants.TP_SIZE];
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,52,private byte[] blockBuffer;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,53,private int recordOffset;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,54,private long filepos;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,55,protected TapeInputStream raw;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,57,// map of ino -> dirent entry. We can use this to reconstruct full paths.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,58,"private Map<Integer, Dirent> names = new HashMap<Integer, Dirent>();"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,60,// map of ino -> (directory) entry when we're missing one or more elements in the path.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,61,"private Map<Integer, DumpArchiveEntry> pending = new HashMap<Integer, DumpArchiveEntry>();"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,63,// queue of (directory) entries where we now have the full path.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,64,private Queue<DumpArchiveEntry> queue;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,67,* Constructor.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,69,* @param is
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,70,* @throws Exception
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,72,public DumpArchiveInputStream(InputStream is) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,73,this.raw = new TapeInputStream(is);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,74,this.hasHitEOF = false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,76,"// read header, verify it's a dump archive."
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,77,byte[] headerBytes = raw.readRecord();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,79,if (!DumpArchiveUtil.verify(headerBytes)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,80,throw new UnrecognizedFormatException();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,83,// get summary information
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,84,summary = new DumpArchiveSummary(headerBytes);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,86,// reset buffer with actual block size.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,87,"raw.resetBlockSize(summary.getNTRec(), summary.isCompressed());"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,89,// allocate our read buffer.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,90,blockBuffer = new byte[4 * DumpArchiveConstants.TP_SIZE];
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,92,// skip past CLRI and BITS segments since we don't handle them yet.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,93,readCLRI();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,94,readBITS();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,96,// put in a dummy record for the root node.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,97,"Dirent root = new Dirent(2, 2, 4, ""."");"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,98,"names.put(2, root);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,100,// use priority based on queue to ensure parent directories are
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,101,// released first.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,102,"queue = new PriorityQueue<DumpArchiveEntry>(10,"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,103,new Comparator<DumpArchiveEntry>() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,104,"public int compare(DumpArchiveEntry p, DumpArchiveEntry q) {"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,105,if ((p.getName() == null) || (q.getName() == null)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,106,return Integer.MAX_VALUE;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,109,return p.getName().compareTo(q.getName());
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,115,* Return the archive summary information.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,117,public DumpArchiveSummary getSummary() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,118,return summary;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,122,* Read CLRI (deleted inode) segment.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,124,public void readCLRI() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,125,byte[] readBuf = raw.readRecord();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,127,if (!DumpArchiveUtil.verify(readBuf)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,128,throw new InvalidFormatException();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,131,active = DumpArchiveEntry.parse(readBuf);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,133,if (DumpArchiveConstants.SEGMENT_TYPE.CLRI != active.getHeaderType()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,134,throw new InvalidFormatException();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,137,// we don't do anything with this yet.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,138,raw.skip(DumpArchiveConstants.TP_SIZE * active.getHeaderCount());
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,139,readIdx = active.getHeaderCount();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,143,* Read BITS segment.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,145,public void readBITS() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,146,byte[] readBuf = raw.readRecord();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,148,if (!DumpArchiveUtil.verify(readBuf)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,149,throw new InvalidFormatException();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,152,active = DumpArchiveEntry.parse(readBuf);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,154,if (DumpArchiveConstants.SEGMENT_TYPE.BITS != active.getHeaderType()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,155,throw new InvalidFormatException();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,158,// we don't do anything with this yet.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,159,raw.skip(DumpArchiveConstants.TP_SIZE * active.getHeaderCount());
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,160,readIdx = active.getHeaderCount();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,164,* Read the next entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,166,public DumpArchiveEntry getNextEntry() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,167,DumpArchiveEntry entry = null;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,168,String path = null;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,170,// is there anything in the queue?
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,171,if (!queue.isEmpty()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,172,return queue.remove();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,175,while (entry == null) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,176,if (hasHitEOF) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,177,return null;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,180,// skip any remaining records in this segment for prior file.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,181,// we might still have holes... easiest to do it
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,182,// block by block. We may want to revisit this if
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,183,// the unnecessary decompression time adds up.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,184,while (readIdx < active.getHeaderCount()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,185,if (!active.isSparseRecord(readIdx++)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,186,raw.skip(DumpArchiveConstants.TP_SIZE);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,190,readIdx = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,191,filepos = raw.getBytesRead();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,193,byte[] headerBytes = raw.readRecord();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,195,if (!DumpArchiveUtil.verify(headerBytes)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,196,throw new InvalidFormatException();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,199,active = DumpArchiveEntry.parse(headerBytes);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,201,// skip any remaining segments for prior file.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,202,while (DumpArchiveConstants.SEGMENT_TYPE.ADDR == active.getHeaderType()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,203,raw.skip(DumpArchiveConstants.TP_SIZE * (active.getHeaderCount() -
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,204,active.getHeaderHoles()));
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,206,filepos = raw.getBytesRead();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,207,headerBytes = raw.readRecord();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,209,if (!DumpArchiveUtil.verify(headerBytes)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,210,throw new InvalidFormatException();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,213,active = DumpArchiveEntry.parse(headerBytes);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,216,// check if this is an end-of-volume marker.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,217,if (DumpArchiveConstants.SEGMENT_TYPE.END == active.getHeaderType()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,218,hasHitEOF = true;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,219,raw.close();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,221,return null;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,224,entry = active;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,226,if (entry.isDirectory()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,227,readDirectoryEntry(active);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,229,// now we create an empty InputStream.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,230,entryOffset = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,231,entrySize = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,232,readIdx = active.getHeaderCount();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,233,} else {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,234,entryOffset = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,235,entrySize = active.getSize();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,236,readIdx = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,239,recordOffset = readBuf.length;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,241,path = getPath(entry);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,243,if (path == null) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,244,entry = null;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,248,entry.setName(path);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,249,entry.setSimpleName(names.get(entry.getIno()).getName());
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,250,entry.setOffset(filepos);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,252,isClosed = false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,254,return entry;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,258,* Read directory entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,260,public void readDirectoryEntry(DumpArchiveEntry entry)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,261,throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,262,long size = entry.getSize();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,263,boolean first = true;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,265,while (first ||
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,266,(DumpArchiveConstants.SEGMENT_TYPE.ADDR == entry.getHeaderType())) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,267,// read the header that we just peeked at.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,268,if (!first) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,269,raw.readRecord();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,272,if (!names.containsKey(entry.getIno()) &&
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,273,(DumpArchiveConstants.SEGMENT_TYPE.INODE == entry.getHeaderType())) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,274,"pending.put(entry.getIno(), entry);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,277,int datalen = DumpArchiveConstants.TP_SIZE * entry.getHeaderCount();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,279,if (blockBuffer.length < datalen) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,280,blockBuffer = new byte[datalen];
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,283,"raw.read(blockBuffer, 0, datalen);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,285,int reclen = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,287,for (int i = 0; (i < (datalen - 8)) && (i < (size - 8));
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,288,i += reclen) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,289,"int ino = DumpArchiveUtil.convert32(blockBuffer, i);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,290,"reclen = DumpArchiveUtil.convert16(blockBuffer, i + 4);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,292,byte type = blockBuffer[i + 6];
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,294,"String name = new String(blockBuffer, i + 8, blockBuffer[i + 7]);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,296,"if (""."".equals(name) || "".."".equals(name)) {"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,297,// do nothing...
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,298,continue;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,301,"Dirent d = new Dirent(ino, entry.getIno(), type, name);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,303,if ((type == 4) && names.containsKey(ino)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,304,"//System.out.println(""we already have ino: "" +"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,305,//    names.get(ino));
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,308,"names.put(ino, d);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,310,// check whether this allows us to fill anything in the pending list.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,311,"for (Map.Entry<Integer, DumpArchiveEntry> e : pending.entrySet()) {"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,312,String path = getPath(e.getValue());
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,314,if (path != null) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,315,e.getValue().setName(path);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,316,e.getValue()
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,317,.setSimpleName(names.get(e.getKey()).getName());
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,318,queue.add(e.getValue());
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,322,// remove anything that we found. (We can't do it earlier
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,323,// because of concurrent modification exceptions.)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,324,for (DumpArchiveEntry e : queue) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,325,pending.remove(e.getIno());
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,329,byte[] peekBytes = raw.peek();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,331,if (!DumpArchiveUtil.verify(peekBytes)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,332,throw new InvalidFormatException();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,335,entry = DumpArchiveEntry.parse(peekBytes);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,336,first = false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,337,size -= DumpArchiveConstants.TP_SIZE;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,342,"* Get full path for specified archive entry, or null if there's a gap."
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,344,* @param entry
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,345,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,347,public String getPath(DumpArchiveEntry entry) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,348,// build the stack of elements. It's possible that we're
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,349,// still missing an intermediate value and if so we
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,350,Stack<String> elements = new Stack<String>();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,351,Dirent dirent = null;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,353,outer:
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,354,for (int i = entry.getIno();; i = dirent.getParentIno()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,355,if (!names.containsKey(i)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,356,elements.clear();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,358,break outer;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,361,dirent = names.get(i);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,362,elements.push(dirent.getName());
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,364,if (dirent.getIno() == dirent.getParentIno()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,365,break;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,369,// if an element is missing defer the work and read next entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,370,if (elements.isEmpty()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,371,"pending.put(entry.getIno(), entry);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,373,return null;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,376,// generate full path from stack of elements.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,377,StringBuilder sb = new StringBuilder(elements.pop());
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,379,while (!elements.isEmpty()) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,380,sb.append('/');
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,381,sb.append(elements.pop());
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,384,return sb.toString();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,388,* Reads bytes from the current dump archive entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,390,* This method is aware of the boundaries of the current
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,391,* entry in the archive and will deal with them as if they
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,392,* were this stream's start and EOF.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,394,* @param buf The buffer into which to place bytes read.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,395,* @param off The offset at which to place bytes read.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,396,* @param len The number of bytes to read.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,397,"* @return The number of bytes read, or -1 at EOF."
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,398,* @throws IOException on error
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,400,"public int read(byte[] buf, int off, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,401,int totalRead = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,403,if (isClosed || (entryOffset >= entrySize)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,404,return -1;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,407,if ((len + entryOffset) > entrySize) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,408,len = (int) (entrySize - entryOffset);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,411,while (len > 0) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,412,int sz = (len > (readBuf.length - recordOffset))
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,413,? (readBuf.length - recordOffset) : len;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,415,// copy any data we have
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,416,if ((recordOffset + sz) <= readBuf.length) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,417,"System.arraycopy(readBuf, recordOffset, buf, off, sz);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,418,totalRead += sz;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,419,recordOffset += sz;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,420,len -= sz;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,421,off += sz;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,424,// load next block if necessary.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,425,if (len > 0) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,426,if (readIdx >= 512) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,427,byte[] headerBytes = raw.readRecord();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,429,if (!DumpArchiveUtil.verify(headerBytes)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,430,throw new InvalidFormatException();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,433,active = DumpArchiveEntry.parse(headerBytes);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,434,readIdx = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,437,if (!active.isSparseRecord(readIdx++)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,438,"raw.read(readBuf, 0, readBuf.length);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,439,} else {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,440,"Arrays.fill(readBuf, (byte) 0);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,443,recordOffset = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,447,entryOffset += totalRead;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,449,return totalRead;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,453,* Closes the stream for this entry.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,455,@Override
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,456,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,457,isClosed = true;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,461,* Look at the first few bytes of the file to decide if it's a dump
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,462,"* archive. With 32 bytes we can look at the magic value, with a full"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,463,* 1k we can verify the checksum.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,465,"public static boolean matches(byte[] buffer, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,466,// do we have enough of the header?
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,467,if (length < 32) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,468,return false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,471,// this is the best test
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,472,if (length >= DumpArchiveConstants.TP_SIZE) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,473,return DumpArchiveUtil.verify(buffer);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,476,// this will work in a pinch.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,477,"return DumpArchiveConstants.NFS_MAGIC == DumpArchiveUtil.convert32(buffer,"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,478,7);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,19,package org.apache.commons.compress.archivers.dump;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,21,import java.util.Date;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,25,* This class represents identifying information about a Dump archive volume.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,26,"* It consists the archive's dump date, label, hostname, device name and possibly"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,27,* last mount point plus the volume's volume id andfirst record number.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,29,* For the corresponding C structure see the header of {@link DumpArchiveEntry}.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,31,public class DumpArchiveSummary {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,32,private Date dumpDate;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,33,private Date previousDumpDate;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,34,private int volume;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,35,private String label;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,36,private int level;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,37,private String filesys;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,38,private String devname;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,39,private String hostname;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,40,private int flags;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,41,private int firstrec;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,42,private int ntrec;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,44,public DumpArchiveSummary(byte[] buffer) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,45,"dumpDate = new Date(1000L * DumpArchiveUtil.convert32(buffer, 4));"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,46,"previousDumpDate = new Date(1000L * DumpArchiveUtil.convert32(buffer, 8));"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,47,"volume = DumpArchiveUtil.convert32(buffer, 12);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,48,"label = new String(buffer, 676, DumpArchiveConstants.LBLSIZE).trim();"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,49,"level = DumpArchiveUtil.convert32(buffer, 692);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,50,"filesys = new String(buffer, 696, DumpArchiveConstants.NAMELEN).trim();"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,51,"devname = new String(buffer, 760, DumpArchiveConstants.NAMELEN).trim();"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,52,"hostname = new String(buffer, 824, DumpArchiveConstants.NAMELEN).trim();"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,53,"flags = DumpArchiveUtil.convert32(buffer, 888);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,54,"firstrec = DumpArchiveUtil.convert32(buffer, 892);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,55,"ntrec = DumpArchiveUtil.convert32(buffer, 896);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,57,"//extAttributes = DumpArchiveUtil.convert32(buffer, 900);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,61,* Get the date of this dump.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,62,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,64,public Date getDumpDate() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,65,return dumpDate;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,69,* Set dump date.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,71,public void setDumpDate(Date dumpDate) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,72,this.dumpDate = dumpDate;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,76,* Get the date of the previous dump at this level higher.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,77,* @return dumpdate may be null
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,79,public Date getPreviousDumpDate() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,80,return previousDumpDate;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,84,* Set previous dump date.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,86,public void setPreviousDumpDate(Date previousDumpDate) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,87,this.previousDumpDate = previousDumpDate;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,91,* Get volume (tape) number.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,92,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,94,public int getVolume() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,95,return volume;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,99,* Set volume (tape) number.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,101,public void setVolume(int volume) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,102,this.volume = volume;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,106,"* Get the level of this dump. This is a number between 0 and 9, inclusive,"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,107,* and a level 0 dump is a complete dump of the partition. For any other dump
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,108,* 'n' this dump contains all files that have changed since the last dump
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,109,* at this level or lower. This is used to support different levels of
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,110,* incremental backups.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,111,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,113,public int getLevel() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,114,return level;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,118,* Set level.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,120,public void setLevel(int level) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,121,this.level = level;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,125,* Get dump label. This may be autogenerated or it may be specified
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,126,* bu the user.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,127,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,129,public String getLabel() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,130,return label;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,134,* Set dump label.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,135,* @param label
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,137,public void setLabel(String label) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,138,this.label = label;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,142,"* Get the last mountpoint, e.g., /home."
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,143,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,145,public String getFilesystem() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,146,return filesys;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,150,* Set the last mountpoint.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,152,public void setFilesystem(String filesystem) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,153,this.filesys = filesystem;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,157,"* Get the device name, e.g., /dev/sda3 or /dev/mapper/vg0-home."
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,158,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,160,public String getDevname() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,161,return devname;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,165,* Set the device name.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,166,* @param devname
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,168,public void setDevname(String devname) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,169,this.devname = devname;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,173,* Get the hostname of the system where the dump was performed.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,174,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,176,public String getHostname() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,177,return hostname;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,181,* Set the hostname.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,183,public void setHostname(String hostname) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,184,this.hostname = hostname;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,188,* Get the miscellaneous flags. See below.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,189,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,191,public int getFlags() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,192,return flags;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,196,* Set the miscellaneous flags.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,197,* @param flags
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,199,public void setFlags(int flags) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,200,this.flags = flags;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,204,* Get the inode of the first record on this volume.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,205,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,207,public int getFirstRecord() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,208,return firstrec;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,212,* Set the inode of the first record.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,213,* @param firstrec
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,215,public void setFirstRecord(int firstrec) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,216,this.firstrec = firstrec;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,220,* Get the number of records per tape block. This is typically
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,221,* between 10 and 32.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,222,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,224,public int getNTRec() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,225,return ntrec;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,229,* Set the number of records per tape block.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,231,public void setNTRec(int ntrec) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,232,this.ntrec = ntrec;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,236,* Is this the new header format? (We do not currently support the
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,237,* old format.)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,239,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,241,public boolean isNewHeader() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,242,return (flags & 0x0001) == 0x0001;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,246,* Is this the new inode format? (We do not currently support the
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,247,* old format.)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,248,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,250,public boolean isNewInode() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,251,return (flags & 0x0002) == 0x0002;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,255,"* Is this volume compressed? N.B., individual blocks may or may not be compressed."
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,256,* The first block is never compressed.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,257,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,259,public boolean isCompressed() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,260,return (flags & 0x0080) == 0x0080;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,264,* Does this volume only contain metadata?
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,265,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,267,public boolean isMetaDataOnly() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,268,return (flags & 0x0100) == 0x0100;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,272,* Does this volume cotain extended attributes.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,273,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,275,public boolean isExtendedAttributes() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,276,return (flags & 0x8000) == 0x8000;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,280,* @see java.lang.hashCode()
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,282,@Override
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,283,public int hashCode() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,284,int hash = 17;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,286,if (label != null) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,287,hash = label.hashCode();
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,290,if (dumpDate != null) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,291,hash = (31 * dumpDate.hashCode()) + 17;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,294,if (hostname != null) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,295,hash = (31 * hostname.hashCode()) + 17;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,298,if (devname != null) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,299,hash = (31 * devname.hashCode()) + 17;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,302,return hash;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,306,* @see java.lang.Object#equals(Object)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,308,@Override
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,309,public boolean equals(Object o) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,310,if (this == o) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,311,return true;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,314,if (!(o instanceof DumpArchiveSummary)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,315,return false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,318,DumpArchiveSummary rhs = (DumpArchiveSummary) o;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,320,if ((dumpDate == null) || !dumpDate.equals(rhs.dumpDate)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,321,return false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,324,if ((getHostname() == null) ||
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,325,!getHostname().equals(rhs.getHostname())) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,326,return false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,329,if ((getDevname() == null) || !getDevname().equals(rhs.getDevname())) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,330,return false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java,333,return true;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,19,package org.apache.commons.compress.archivers.dump;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,23,* Various utilities for dump archives.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,25,public class DumpArchiveUtil {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,27,* Private constructor to prevent instantiation.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,29,private DumpArchiveUtil() {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,33,* Calculate checksum for buffer.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,35,* @param buffer buffer containing tape segment header
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,36,* @returns checksum
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,38,public static int calculateChecksum(byte[] buffer) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,39,int calc = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,41,for (int i = 0; i < 256; i++) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,42,"calc += DumpArchiveUtil.convert32(buffer, 4 * i);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,45,return DumpArchiveConstants.CHECKSUM -
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,46,"(calc - DumpArchiveUtil.convert32(buffer, 28));"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,50,* Verify that the buffer contains a tape segment header.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,52,* @param buffer
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,53,* @throws Exception
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,55,public static final boolean verify(byte[] buffer) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,56,// verify magic. for now only accept NFS_MAGIC.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,57,"int magic = convert32(buffer, 24);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,59,if (magic != DumpArchiveConstants.NFS_MAGIC) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,60,return false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,63,//verify checksum...
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,64,"int checksum = convert32(buffer, 28);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,66,if (checksum != calculateChecksum(buffer)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,67,return false;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,70,return true;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,74,* Get the ino associated with this buffer.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,76,* @param buffer
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,77,* @throws Exception
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,79,public static final int getIno(byte[] buffer) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,80,"return convert32(buffer, 20);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,84,* Read 8-byte integer from buffer.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,86,* @param buffer
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,87,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,88,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,90,"public static final long convert64(byte[] buffer, int offset) {"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,91,long i = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,92,i += (((long) buffer[offset + 7]) << 56);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,93,i += (((long) buffer[offset + 6] << 48) & 0x00FF000000000000L);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,94,i += (((long) buffer[offset + 5] << 40) & 0x0000FF0000000000L);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,95,i += (((long) buffer[offset + 4] << 32) & 0x000000FF00000000L);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,96,i += (((long) buffer[offset + 3] << 24) & 0x00000000FF000000L);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,97,i += (((long) buffer[offset + 2] << 16) & 0x0000000000FF0000L);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,98,i += (((long) buffer[offset + 1] << 8) & 0x000000000000FF00L);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,99,i += (((long) buffer[offset]) & 0x00000000000000FFL);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,101,return i;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,105,* Read 4-byte integer from buffer.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,107,* @param buffer
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,108,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,109,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,111,"public static final int convert32(byte[] buffer, int offset) {"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,112,int i = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,113,i = ((int) buffer[offset + 3]) << 24;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,114,i += (((int) buffer[offset + 2] << 16) & 0x00FF0000);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,115,i += (((int) buffer[offset + 1] << 8) & 0x0000FF00);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,116,i += (((int) buffer[offset]) & 0x000000FF);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,118,return i;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,122,* Read 2-byte integer from buffer.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,124,* @param buffer
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,125,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,126,* @return
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,128,"public static final int convert16(byte[] buffer, int offset) {"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,129,int i = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,130,i += (((int) buffer[offset + 1] << 8) & 0x0000FF00);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,131,i += (((int) buffer[offset]) & 0x000000FF);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,133,return i;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,137,* Dump the start of a block.
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,139,* @param buffer
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,141,public static final void dumpBlock(byte[] buffer) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,142,for (int i = 0; i < 128; i += 32) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,143,"System.out.printf(""%08x "", DumpArchiveUtil.convert32(buffer, i));"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,144,"System.out.printf(""%08x "", DumpArchiveUtil.convert32(buffer, i + 4));"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,145,"System.out.printf(""%08x "", DumpArchiveUtil.convert32(buffer, i + 8));"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,146,"System.out.printf(""%08x - "","
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,147,"DumpArchiveUtil.convert32(buffer, i + 12));"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,148,"System.out.printf(""%08x "", DumpArchiveUtil.convert32(buffer, i +"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,149,16));
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,150,"System.out.printf(""%08x "", DumpArchiveUtil.convert32(buffer, i +"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,151,20));
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,152,"System.out.printf(""%08x "", DumpArchiveUtil.convert32(buffer, i +"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,153,24));
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,154,"System.out.printf(""%08x "", DumpArchiveUtil.convert32(buffer, i +"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,155,28));
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java,156,System.out.println();
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,19,package org.apache.commons.compress.archivers.dump;
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,23,* Invalid Format Exception. There was an error decoding a
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,24,* tape segment header.
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,26,public class InvalidFormatException extends DumpArchiveException {
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,27,private static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,28,protected long offset;
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,30,public InvalidFormatException() {
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,31,"super(""there was an error decoding a tape segment"");"
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,34,public InvalidFormatException(long offset) {
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,35,"super(""there was an error decoding a tape segment header at offset "" +"
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,36,"offset + ""."");"
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,37,this.offset = offset;
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,40,public long getOffset() {
True,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/InvalidFormatException.java,41,return offset;
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,19,package org.apache.commons.compress.archivers.dump;
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,23,* Short File Exception. There was an unexpected EOF when reading
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,24,* the input stream.
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,26,public class ShortFileException extends DumpArchiveException {
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,27,private static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,29,public ShortFileException() {
True,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,src/main/java/org/apache/commons/compress/archivers/dump/ShortFileException.java,30,"super(""unexpected EOF"");"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,19,package org.apache.commons.compress.archivers.dump;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,21,import java.io.FilterInputStream;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,22,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,23,import java.io.InputStream;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,25,import java.util.Arrays;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,26,import java.util.zip.DataFormatException;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,27,import java.util.zip.Inflater;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,31,* Filter stream that mimics a physical tape drive capable of compressing
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,32,* the data stream.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,34,* @NotThreadSafe
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,36,public class TapeInputStream extends FilterInputStream {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,37,private byte[] blockBuffer = new byte[DumpArchiveConstants.TP_SIZE];
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,38,private int currBlkIdx = -1;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,39,private int blockSize = DumpArchiveConstants.TP_SIZE;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,40,private int recordSize = DumpArchiveConstants.TP_SIZE;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,41,private int readOffset = DumpArchiveConstants.TP_SIZE;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,42,private boolean isCompressed = false;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,43,private long bytesRead = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,46,* Constructor
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,48,public TapeInputStream(InputStream in) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,49,super(in);
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,53,* Set the DumpArchive Buffer's block size. We need to sync the block size with the
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,54,* dump archive's actual block size since compression is handled at the
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,55,* block level.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,57,* @param blockSize
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,58,*            actual blockSize according to dump archive
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,59,* @param isCompressed
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,60,*            true if the archive is compressed
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,61,* @throws IOException
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,62,*             more than one block has been read
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,63,* @throws IOException
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,64,*             there was an error reading additional blocks.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,66,"public void resetBlockSize(int recsPerBlock, boolean isCompressed)"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,67,throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,68,this.isCompressed = isCompressed;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,70,blockSize = recordSize * recsPerBlock;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,72,// save first block in case we need it again
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,73,byte[] oldBuffer = blockBuffer;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,75,// read rest of new block
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,76,blockBuffer = new byte[blockSize];
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,77,"System.arraycopy(oldBuffer, 0, blockBuffer, 0, recordSize);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,78,"readFully(blockBuffer, recordSize, blockSize - recordSize);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,80,this.currBlkIdx = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,81,this.readOffset = recordSize;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,85,* {@see java.io.InputStream#available}
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,87,@Override
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,88,public int available() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,89,if (readOffset < blockSize) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,90,return blockSize - readOffset;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,93,return in.available();
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,97,* {@see java.io.InputStream#read()
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,99,@Override
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,100,public int read() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,101,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,102,"""all reads must be multiple of record size ("" + recordSize +"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,103,""" bytes."");"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,107,"* {@see java.io.InputStream#read(byte[], int, int) }"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,109,@Override
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,110,"public int read(byte[] b, int off, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,111,if ((len % recordSize) != 0) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,112,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,113,"""all reads must be multiple of record size ("" + recordSize +"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,114,""" bytes."");"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,117,int bytes = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,119,while (bytes < len) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,120,// we need to read from the underlying stream.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,121,// this will reset readOffset value.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,122,// return -1 if there's a problem.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,123,if ((readOffset == blockSize) && !readBlock(true)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,124,return -1;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,127,int n = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,129,if ((readOffset + (len - bytes)) <= blockSize) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,130,// we can read entirely from the buffer.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,131,n = len - bytes;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,132,} else {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,133,// copy what we can from the buffer.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,134,n = blockSize - readOffset;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,137,"// copy data, increment counters."
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,138,"System.arraycopy(blockBuffer, readOffset, b, off, n);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,139,readOffset += n;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,140,bytes += n;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,141,off += n;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,144,return bytes;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,148,* Skip bytes. Same as read but without the arraycopy.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,149,"* {@see java.io.InputStream#read(byte[], int, int) }"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,151,@Override
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,152,public long skip(long len) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,153,if ((len % recordSize) != 0) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,154,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,155,"""all reads must be multiple of record size ("" + recordSize +"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,156,""" bytes."");"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,159,long bytes = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,161,while (bytes < len) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,162,// we need to read from the underlying stream.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,163,// this will reset readOffset value. We do not perform
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,164,// any decompression if we won't eventually read the data.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,165,// return -1 if there's a problem.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,166,if ((readOffset == blockSize) &&
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,167,!readBlock((len - bytes) < blockSize)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,168,return -1;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,171,long n = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,173,if ((readOffset + (len - bytes)) <= blockSize) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,174,// we can read entirely from the buffer.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,175,n = len - bytes;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,176,} else {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,177,// copy what we can from the buffer.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,178,n = blockSize - readOffset;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,181,// do not copy data but still increment counters.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,182,readOffset += n;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,183,bytes += n;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,186,return bytes;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,190,* Close the input stream.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,192,* @throws IOException on error
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,194,@Override
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,195,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,196,if (in != null) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,197,if (in != System.in) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,198,in.close();
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,204,* Peek at the next record from the input stream and return the data.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,206,* @return The record data.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,207,* @throws IOException on error
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,209,public byte[] peek() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,210,// we need to read from the underlying stream. This
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,211,// isn't a problem since it would be the first step in
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,212,// any subsequent read() anyway.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,213,if ((readOffset == blockSize) && !readBlock(true)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,214,return null;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,217,"// copy data, increment counters."
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,218,byte[] b = new byte[recordSize];
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,219,"System.arraycopy(blockBuffer, readOffset, b, 0, b.length);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,221,return b;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,225,* Read a record from the input stream and return the data.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,227,* @return The record data.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,228,* @throws IOException on error
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,230,public byte[] readRecord() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,231,byte[] result = new byte[recordSize];
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,233,"if (-1 == read(result, 0, result.length)) {"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,234,throw new ShortFileException();
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,237,return result;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,241,* Read next block. All decompression is handled here.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,243,* @param decompress if false the buffer will not be decompressed.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,244,*        This is an optimization for longer seeks.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,245,"* @return false if End-Of-File, else true"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,247,private boolean readBlock(boolean decompress) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,248,boolean success = true;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,250,if (in == null) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,251,"throw new IOException(""input buffer is closed"");"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,254,if (!isCompressed || (currBlkIdx == -1)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,255,// file is not compressed
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,256,"success = readFully(blockBuffer, 0, blockSize);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,257,bytesRead += blockSize;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,258,} else {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,259,"in.read(blockBuffer, 0, 4);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,260,bytesRead += 4;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,262,"int h = DumpArchiveUtil.convert32(blockBuffer, 0);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,263,boolean compressed = (h & 0x01) == 0x01;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,265,if (!compressed) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,266,// file is compressed but this block is not.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,267,"success = readFully(blockBuffer, 0, blockSize);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,268,bytesRead += blockSize;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,269,} else {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,270,// this block is compressed.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,271,int flags = (h >> 1) & 0x07;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,272,int length = (h >> 4) & 0x0FFFFFFF;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,273,byte[] compBuffer = new byte[length];
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,274,"success = readFully(compBuffer, 0, length);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,275,bytesRead += length;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,277,if (!decompress) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,278,// just in case someone reads the data.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,279,"Arrays.fill(blockBuffer, (byte) 0);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,280,} else {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,281,switch (DumpArchiveConstants.COMPRESSION_TYPE.find(flags &
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,282,0x03)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,283,case ZLIB:
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,285,try {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,286,Inflater inflator = new Inflater();
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,287,"inflator.setInput(compBuffer, 0, compBuffer.length);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,288,length = inflator.inflate(blockBuffer);
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,290,if (length != blockSize) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,291,throw new ShortFileException();
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,294,inflator.end();
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,295,} catch (DataFormatException e) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,296,"throw new DumpArchiveException(""bad data"", e);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,299,break;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,301,case BZLIB:
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,302,throw new UnsupportedCompressionAlgorithmException(
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,303,"""BZLIB2"");"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,305,case LZO:
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,306,throw new UnsupportedCompressionAlgorithmException(
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,307,"""LZO"");"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,309,default:
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,310,throw new UnsupportedCompressionAlgorithmException();
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,316,currBlkIdx++;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,317,readOffset = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,319,return success;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,323,* Read buffer
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,325,"private boolean readFully(byte[] b, int off, int len)"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,326,throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,327,int count = 0;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,329,while (count < len) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,330,"int n = in.read(b, off + count, len - count);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,332,if (n == -1) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,333,throw new ShortFileException();
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,336,count += n;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,339,return true;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,343,* Get number of bytes read.
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,345,public long getBytesRead() {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,346,return bytesRead;
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,19,package org.apache.commons.compress.archivers.dump;
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,23,* Unrecognized Format Exception. This is either not a recognized dump archive or there's
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,24,* a bad tape segment header.
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,26,public class UnrecognizedFormatException extends DumpArchiveException {
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,27,private static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,29,public UnrecognizedFormatException() {
True,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.java,30,"super(""this is not a recognized format."");"
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,19,package org.apache.commons.compress.archivers.dump;
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,23,* Unsupported compression algorithm. The dump archive uses an unsupported
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,24,* compression algorithm (BZLIB2 or LZO).
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,26,public class UnsupportedCompressionAlgorithmException
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,27,extends DumpArchiveException {
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,28,private static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,30,public UnsupportedCompressionAlgorithmException() {
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,31,"super(""this file uses an unsupported compression algorithm."");"
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,34,public UnsupportedCompressionAlgorithmException(String alg) {
True,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,src/main/java/org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.java,35,"super(""this file uses an unsupported compression algorithm: "" + alg +"
