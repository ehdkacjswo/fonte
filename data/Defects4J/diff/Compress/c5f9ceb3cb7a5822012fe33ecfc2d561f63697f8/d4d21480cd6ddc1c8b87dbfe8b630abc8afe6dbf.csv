is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,182,"if (ZCompressorInputStream.matches(signature, signatureLength)) {"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,183,return new ZCompressorInputStream(in);
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,153,* Checks if the signature matches what is expected for a Unix compress file.
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,155,* @param signature
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,156,*            the bytes to check
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,157,* @param length
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,158,*            the number of bytes to check
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,159,"* @return true, if this stream is a Unix compress compressed"
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,160,"* stream, false otherwise"
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,162,* @since 1.9
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,164,"public static boolean matches(byte[] signature, int length) {"
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,165,return length > 3 && signature[0] == MAGIC_1 && signature[1] == (byte) MAGIC_2;
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,21,import java.io.BufferedInputStream;
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,51,public void testZUnarchiveViaAutoDetection() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,52,testUnarchive(new StreamWrapper<CompressorInputStream>() {
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,53,public CompressorInputStream wrap(InputStream is) throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,54,return new CompressorStreamFactory()
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,55,.createCompressorInputStream(new BufferedInputStream(is));
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,60,public void testMatches() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,61,"assertFalse(ZCompressorInputStream.matches(new byte[] { 1, 2, 3, 4 }, 4));"
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,62,"assertFalse(ZCompressorInputStream.matches(new byte[] { 0x1f, 2, 3, 4 }, 4));"
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,63,"assertFalse(ZCompressorInputStream.matches(new byte[] { 1, (byte)0x9d, 3, 4 },"
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,64,4));
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,65,"assertFalse(ZCompressorInputStream.matches(new byte[] { 0x1f, (byte) 0x9d, 3, 4 },"
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,66,3));
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,67,"assertTrue(ZCompressorInputStream.matches(new byte[] { 0x1f, (byte) 0x9d, 3, 4 },"
True,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,src/test/java/org/apache/commons/compress/compressors/ZTestCase.java,68,4));
