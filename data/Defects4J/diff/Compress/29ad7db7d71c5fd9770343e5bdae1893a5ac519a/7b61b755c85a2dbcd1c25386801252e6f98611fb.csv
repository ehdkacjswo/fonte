is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,47, Constructor.
False,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,48, @param name name of the implementation
False,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,39,"ublic static void copy( final InputStream input,"
False,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,40,inal OutputStream output )
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,40,"public static void copy( final InputStream input, final OutputStream output )"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,17, under the License.
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,20,ackage org.apache.commons.compress.bzip2;
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,23," This package is based on the work done by Keiron Liddle, Aftex Software"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,24, <keiron@aftexsw.com> to whom the Ant project is very grateful for his
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,25, great code.
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,29," Base class for both the compress and decompress classes. Holds common arrays,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,30, and static data.
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,32," @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,34,nterface BZip2Constants
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,36,nt BASE_BLOCK_SIZE = 100000;
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,37,nt MAX_ALPHA_SIZE = 258;
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,38,nt MAX_CODE_LEN = 23;
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,39,nt RUNA = 0;
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,40,nt RUNB = 1;
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,41,nt N_GROUPS = 6;
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,42,nt G_SIZE = 50;
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,43,nt N_ITERS = 4;
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,44,nt MAX_SELECTORS = ( 2 + ( 900000 / G_SIZE ) );
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,45,nt NUM_OVERSHOOT_BYTES = 20;
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,47,nt[] RAND_NUMS = new int[]
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,49,"19, 720, 127, 481, 931, 816, 813, 233, 566, 247,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,50,"85, 724, 205, 454, 863, 491, 741, 242, 949, 214,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,51,"33, 859, 335, 708, 621, 574, 73, 654, 730, 472,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,52,"19, 436, 278, 496, 867, 210, 399, 680, 480, 51,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,53,"78, 465, 811, 169, 869, 675, 611, 697, 867, 561,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,54,"62, 687, 507, 283, 482, 129, 807, 591, 733, 623,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,55,"50, 238, 59, 379, 684, 877, 625, 169, 643, 105,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,56,"70, 607, 520, 932, 727, 476, 693, 425, 174, 647,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,57,"3, 122, 335, 530, 442, 853, 695, 249, 445, 515,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,58,"09, 545, 703, 919, 874, 474, 882, 500, 594, 612,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,59,"41, 801, 220, 162, 819, 984, 589, 513, 495, 799,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,60,"61, 604, 958, 533, 221, 400, 386, 867, 600, 782,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,61,"82, 596, 414, 171, 516, 375, 682, 485, 911, 276,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,62,"8, 553, 163, 354, 666, 933, 424, 341, 533, 870,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,63,"27, 730, 475, 186, 263, 647, 537, 686, 600, 224,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,64,"69, 68, 770, 919, 190, 373, 294, 822, 808, 206,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,65,"84, 943, 795, 384, 383, 461, 404, 758, 839, 887,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,66,"15, 67, 618, 276, 204, 918, 873, 777, 604, 560,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,67,"51, 160, 578, 722, 79, 804, 96, 409, 713, 940,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,68,"52, 934, 970, 447, 318, 353, 859, 672, 112, 785,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,69,"45, 863, 803, 350, 139, 93, 354, 99, 820, 908,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,70,"09, 772, 154, 274, 580, 184, 79, 626, 630, 742,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,71,"53, 282, 762, 623, 680, 81, 927, 626, 789, 125,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,72,"11, 521, 938, 300, 821, 78, 343, 175, 128, 250,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,73,"70, 774, 972, 275, 999, 639, 495, 78, 352, 126,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,74,"57, 956, 358, 619, 580, 124, 737, 594, 701, 612,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,75,"69, 112, 134, 694, 363, 992, 809, 743, 168, 974,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,76,"44, 375, 748, 52, 600, 747, 642, 182, 862, 81,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,77,"44, 805, 988, 739, 511, 655, 814, 334, 249, 515,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,78,"97, 955, 664, 981, 649, 113, 974, 459, 893, 228,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,79,"33, 837, 553, 268, 926, 240, 102, 654, 459, 51,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,80,"86, 754, 806, 760, 493, 403, 415, 394, 687, 700,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,81,"46, 670, 656, 610, 738, 392, 760, 799, 887, 653,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,82,"78, 321, 576, 617, 626, 502, 894, 679, 243, 440,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,83,"80, 879, 194, 572, 640, 724, 926, 56, 204, 700,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,84,"07, 151, 457, 449, 797, 195, 791, 558, 945, 679,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,85,"97, 59, 87, 824, 713, 663, 412, 693, 342, 606,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,86,"34, 108, 571, 364, 631, 212, 174, 643, 304, 329,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,87,"43, 97, 430, 751, 497, 314, 983, 374, 822, 928,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,88,"40, 206, 73, 263, 980, 736, 876, 478, 430, 305,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,89,"70, 514, 364, 692, 829, 82, 855, 953, 676, 246,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,90,"69, 970, 294, 750, 807, 827, 150, 790, 288, 923,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,91,"04, 378, 215, 828, 592, 281, 565, 555, 710, 82,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,92,"96, 831, 547, 261, 524, 462, 293, 465, 502, 56,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,93,"61, 821, 976, 991, 658, 869, 905, 758, 745, 193,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,94,"68, 550, 608, 933, 378, 286, 215, 979, 792, 961,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,95,"1, 688, 793, 644, 986, 403, 106, 366, 905, 644,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,96,"72, 567, 466, 434, 645, 210, 389, 550, 919, 135,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,97,"80, 773, 635, 389, 707, 100, 626, 958, 165, 504,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,98,"20, 176, 193, 713, 857, 265, 203, 50, 668, 108,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,99,"45, 990, 626, 197, 510, 357, 358, 850, 858, 364,"
False,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,100,"36, 638"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,17, under the License.
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,19,ackage org.apache.commons.compress.bzip2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,21,mport java.io.IOException;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,22,mport java.io.InputStream;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,25," This package is based on the work done by Keiron Liddle, Aftex Software"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,26, <keiron@aftexsw.com> to whom the Ant project is very grateful for his
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,27, great code.
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,31, An input stream that decompresses from the BZip2 format (without the file
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,32, header chars) to be read as any other stream.
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,34," @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,36,ublic class CBZip2InputStream
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,37,xtends InputStream
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,38,mplements BZip2Constants
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,40,rivate static final int START_BLOCK_STATE = 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,41,rivate static final int RAND_PART_A_STATE = 2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,42,rivate static final int RAND_PART_B_STATE = 3;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,43,rivate static final int RAND_PART_C_STATE = 4;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,44,rivate static final int NO_RAND_PART_A_STATE = 5;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,45,rivate static final int NO_RAND_PART_B_STATE = 6;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,46,rivate static final int NO_RAND_PART_C_STATE = 7;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,48,rivate CRC m_crc = new CRC();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,49,rivate boolean[] m_inUse = new boolean[ 256 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,50,rivate char[] m_seqToUnseq = new char[ 256 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,51,rivate char[] m_unseqToSeq = new char[ 256 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,52,rivate char[] m_selector = new char[ MAX_SELECTORS ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,53,rivate char[] m_selectorMtf = new char[ MAX_SELECTORS ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,56, freq table collected to save a pass over the data
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,57, during decompression.
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,59,rivate int[] m_unzftab = new int[ 256 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,61,rivate int[][] m_limit = new int[ N_GROUPS ][ MAX_ALPHA_SIZE ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,62,rivate int[][] m_base = new int[ N_GROUPS ][ MAX_ALPHA_SIZE ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,63,rivate int[][] m_perm = new int[ N_GROUPS ][ MAX_ALPHA_SIZE ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,64,rivate int[] m_minLens = new int[ N_GROUPS ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,66,rivate boolean m_streamEnd;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,67,rivate int m_currentChar = -1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,69,rivate int m_currentState = START_BLOCK_STATE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,70,rivate int m_rNToGo;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,71,rivate int m_rTPos;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,72,rivate int m_tPos;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,74,rivate int i2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,75,rivate int count;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,76,rivate int chPrev;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,77,rivate int ch2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,78,rivate int j2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,79,rivate char z;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,81,rivate boolean m_blockRandomised;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,84, always: in the range 0 .. 9.
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,85, The current block size is 100000 * this number.
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,87,rivate int m_blockSize100k;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,88,rivate int m_bsBuff;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,89,rivate int m_bsLive;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,91,rivate InputStream m_input;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,93,rivate int m_computedBlockCRC;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,94,rivate int m_computedCombinedCRC;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,97," index of the last char in the block, so"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,98, the block size == last + 1.
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,100,rivate int m_last;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,101,rivate char[] m_ll8;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,102,rivate int m_nInUse;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,105, index in zptr[] of original string after sorting.
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,107,rivate int m_origPtr;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,109,rivate int m_storedBlockCRC;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,110,rivate int m_storedCombinedCRC;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,111,rivate int[] m_tt;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,113,ublic CBZip2InputStream( final InputStream input )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,115,sSetStream( input );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,116,nitialize();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,117,nitBlock();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,118,etupBlock();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,121,rivate static void badBlockHeader()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,123,advise();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,126,rivate static void blockOverrun()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,128,advise();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,131,rivate static void cadvise()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,133,"ystem.out.println( ""CRC Error"" );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,134,/throw new CCoruptionError();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,137,rivate static void compressedStreamEOF()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,139,advise();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,142,rivate static void crcError()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,144,advise();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,147,ublic int read()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,149,f( m_streamEnd )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,151,eturn -1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,153,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,155,nt retChar = m_currentChar;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,156,witch( m_currentState )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,158,ase START_BLOCK_STATE:
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,159,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,160,ase RAND_PART_A_STATE:
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,161,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,162,ase RAND_PART_B_STATE:
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,163,etupRandPartB();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,164,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,165,ase RAND_PART_C_STATE:
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,166,etupRandPartC();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,167,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,168,ase NO_RAND_PART_A_STATE:
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,169,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,170,ase NO_RAND_PART_B_STATE:
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,171,etupNoRandPartB();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,172,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,173,ase NO_RAND_PART_C_STATE:
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,174,etupNoRandPartC();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,175,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,176,efault:
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,177,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,179,eturn retChar;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,183,rivate void setDecompressStructureSizes( int newSize100k )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,185,f( !( 0 <= newSize100k && newSize100k <= 9 && 0 <= m_blockSize100k
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,186,& m_blockSize100k <= 9 ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,188,"/ throw new IOException(""Invalid block size"");"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,191,_blockSize100k = newSize100k;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,193,f( newSize100k == 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,195,eturn;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,198,nt n = BASE_BLOCK_SIZE * newSize100k;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,199,_ll8 = new char[ n ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,200,_tt = new int[ n ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,203,rivate void setupBlock()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,205,nt[] cftab = new int[ 257 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,206,har ch;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,208,ftab[ 0 ] = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,209,or( int i = 1; i <= 256; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,211,ftab[ i ] = m_unzftab[ i - 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,213,or( int i = 1; i <= 256; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,215,ftab[ i ] += cftab[ i - 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,218,or( int i = 0; i <= m_last; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,220,h = m_ll8[ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,221,_tt[ cftab[ ch ] ] = i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,222,ftab[ ch ]++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,224,ftab = null;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,226,_tPos = m_tt[ m_origPtr ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,228,ount = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,229,2 = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,230,h2 = 256;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,232, not a char and not EOF
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,234,f( m_blockRandomised )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,236,_rNToGo = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,237,_rTPos = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,238,etupRandPartA();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,240,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,242,etupNoRandPartA();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,246,rivate void setupNoRandPartA()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,248,f( i2 <= m_last )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,250,hPrev = ch2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,251,h2 = m_ll8[ m_tPos ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,252,_tPos = m_tt[ m_tPos ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,253,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,255,_currentChar = ch2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,256,_currentState = NO_RAND_PART_B_STATE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,257,_crc.updateCRC( ch2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,259,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,261,ndBlock();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,262,nitBlock();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,263,etupBlock();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,267,rivate void setupNoRandPartB()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,269,f( ch2 != chPrev )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,271,_currentState = NO_RAND_PART_A_STATE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,272,ount = 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,273,etupNoRandPartA();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,275,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,277,ount++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,278,f( count >= 4 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,280, = m_ll8[ m_tPos ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,281,_tPos = m_tt[ m_tPos ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,282,_currentState = NO_RAND_PART_C_STATE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,283,2 = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,284,etupNoRandPartC();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,286,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,288,_currentState = NO_RAND_PART_A_STATE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,289,etupNoRandPartA();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,294,rivate void setupNoRandPartC()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,296,f( j2 < z )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,298,_currentChar = ch2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,299,_crc.updateCRC( ch2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,300,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,302,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,304,_currentState = NO_RAND_PART_A_STATE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,305,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,306,ount = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,307,etupNoRandPartA();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,311,rivate void setupRandPartA()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,313,f( i2 <= m_last )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,315,hPrev = ch2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,316,h2 = m_ll8[ m_tPos ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,317,_tPos = m_tt[ m_tPos ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,318,f( m_rNToGo == 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,320,_rNToGo = RAND_NUMS[ m_rTPos ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,321,_rTPos++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,322,f( m_rTPos == 512 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,324,_rTPos = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,327,_rNToGo--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,328,h2 ^= ( ( m_rNToGo == 1 ) ? 1 : 0 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,329,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,331,_currentChar = ch2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,332,_currentState = RAND_PART_B_STATE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,333,_crc.updateCRC( ch2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,335,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,337,ndBlock();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,338,nitBlock();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,339,etupBlock();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,343,rivate void setupRandPartB()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,345,f( ch2 != chPrev )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,347,_currentState = RAND_PART_A_STATE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,348,ount = 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,349,etupRandPartA();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,351,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,353,ount++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,354,f( count >= 4 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,356, = m_ll8[ m_tPos ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,357,_tPos = m_tt[ m_tPos ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,358,f( m_rNToGo == 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,360,_rNToGo = RAND_NUMS[ m_rTPos ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,361,_rTPos++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,362,f( m_rTPos == 512 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,364,_rTPos = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,367,_rNToGo--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,368, ^= ( ( m_rNToGo == 1 ) ? 1 : 0 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,369,2 = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,370,_currentState = RAND_PART_C_STATE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,371,etupRandPartC();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,373,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,375,_currentState = RAND_PART_A_STATE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,376,etupRandPartA();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,381,rivate void setupRandPartC()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,383,f( j2 < z )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,385,_currentChar = ch2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,386,_crc.updateCRC( ch2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,387,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,389,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,391,_currentState = RAND_PART_A_STATE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,392,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,393,ount = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,394,etupRandPartA();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,398,rivate void getAndMoveToFrontDecode()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,400,nt nextSym;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,402,nt limitLast = BASE_BLOCK_SIZE * m_blockSize100k;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,403,_origPtr = readVariableSizedInt( 24 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,405,ecvDecodingTables();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,406,nt EOB = m_nInUse + 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,407,nt groupNo = -1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,408,nt groupPos = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,411, Setting up the unzftab entries here is not strictly
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,412," necessary, but it does save having to do it later"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,413," in a separate pass, and so saves a block's worth of"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,414, cache misses.
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,416,or( int i = 0; i <= 255; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,418,_unzftab[ i ] = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,421,inal char[] yy = new char[ 256 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,422,or( int i = 0; i <= 255; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,424,y[ i ] = (char)i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,427,_last = -1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,428,nt zt;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,429,nt zn;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,430,nt zvec;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,431,nt zj;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,432,roupNo++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,433,roupPos = G_SIZE - 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,435,t = m_selector[ groupNo ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,436,n = m_minLens[ zt ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,437,vec = bsR( zn );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,438,hile( zvec > m_limit[ zt ][ zn ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,440,n++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,442,hile( m_bsLive < 1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,444,nt zzi;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,445,har thech = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,446,ry
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,448,hech = (char)m_input.read();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,450,atch( IOException e )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,452,ompressedStreamEOF();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,454,f( thech == -1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,456,ompressedStreamEOF();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,458,zi = thech;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,459,_bsBuff = ( m_bsBuff << 8 ) | ( zzi & 0xff );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,460,_bsLive += 8;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,463,j = ( m_bsBuff >> ( m_bsLive - 1 ) ) & 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,464,_bsLive--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,466,vec = ( zvec << 1 ) | zj;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,468,extSym = m_perm[ zt ][ zvec - m_base[ zt ][ zn ] ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,470,hile( true )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,472,f( nextSym == EOB )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,474,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,477,f( nextSym == RUNA || nextSym == RUNB )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,479,har ch;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,480,nt s = -1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,481,nt N = 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,482,o
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,484,f( nextSym == RUNA )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,486, = s + ( 0 + 1 ) * N;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,488,lse// if( nextSym == RUNB )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,490, = s + ( 1 + 1 ) * N;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,492, = N * 2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,494,f( groupPos == 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,496,roupNo++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,497,roupPos = G_SIZE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,499,roupPos--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,500,t = m_selector[ groupNo ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,501,n = m_minLens[ zt ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,502,vec = bsR( zn );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,503,hile( zvec > m_limit[ zt ][ zn ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,505,n++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,507,hile( m_bsLive < 1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,509,nt zzi;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,510,har thech = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,511,ry
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,513,hech = (char)m_input.read();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,515,atch( IOException e )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,517,ompressedStreamEOF();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,519,f( thech == -1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,521,ompressedStreamEOF();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,523,zi = thech;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,524,_bsBuff = ( m_bsBuff << 8 ) | ( zzi & 0xff );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,525,_bsLive += 8;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,528,j = ( m_bsBuff >> ( m_bsLive - 1 ) ) & 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,529,_bsLive--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,530,vec = ( zvec << 1 ) | zj;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,533,extSym = m_perm[ zt ][ zvec - m_base[ zt ][ zn ] ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,535, while( nextSym == RUNA || nextSym == RUNB );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,537,++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,538,h = m_seqToUnseq[ yy[ 0 ] ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,539,_unzftab[ ch ] += s;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,541,hile( s > 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,543,_last++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,544,_ll8[ m_last ] = ch;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,545,--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,548,f( m_last >= limitLast )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,550,lockOverrun();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,552,ontinue;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,554,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,556,har tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,557,_last++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,558,f( m_last >= limitLast )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,560,lockOverrun();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,563,mp = yy[ nextSym - 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,564,_unzftab[ m_seqToUnseq[ tmp ] ]++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,565,_ll8[ m_last ] = m_seqToUnseq[ tmp ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,568," This loop is hammered during decompression,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,569, hence the unrolling.
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,570, for (j = nextSym-1; j > 0; j--) yy[j] = yy[j-1];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,572,nt j = nextSym - 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,573,or( ; j > 3; j -= 4 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,575,y[ j ] = yy[ j - 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,576,y[ j - 1 ] = yy[ j - 2 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,577,y[ j - 2 ] = yy[ j - 3 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,578,y[ j - 3 ] = yy[ j - 4 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,580,or( ; j > 0; j-- )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,582,y[ j ] = yy[ j - 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,585,y[ 0 ] = tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,587,f( groupPos == 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,589,roupNo++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,590,roupPos = G_SIZE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,592,roupPos--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,593,t = m_selector[ groupNo ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,594,n = m_minLens[ zt ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,595,vec = bsR( zn );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,596,hile( zvec > m_limit[ zt ][ zn ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,598,n++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,600,hile( m_bsLive < 1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,602,har ch = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,603,ry
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,605,h = (char)m_input.read();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,607,atch( IOException e )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,609,ompressedStreamEOF();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,612,_bsBuff = ( m_bsBuff << 8 ) | ( ch & 0xff );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,613,_bsLive += 8;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,616,j = ( m_bsBuff >> ( m_bsLive - 1 ) ) & 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,617,_bsLive--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,619,vec = ( zvec << 1 ) | zj;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,621,extSym = m_perm[ zt ][ zvec - m_base[ zt ][ zn ] ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,623,ontinue;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,628,rivate void bsFinishedWithStream()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,630,f (m_input != null)
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,632,ry
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,634,_input.close();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,636,atch ( IOException e )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,640,_input = null;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,643,rivate int readVariableSizedInt( final int numBits )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,645,eturn bsR( numBits );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,648,rivate char readUnsignedChar()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,650,eturn (char)bsR( 8 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,653,rivate int readInt()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,655,nt u = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,656, = ( u << 8 ) | bsR( 8 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,657, = ( u << 8 ) | bsR( 8 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,658, = ( u << 8 ) | bsR( 8 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,659, = ( u << 8 ) | bsR( 8 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,660,eturn u;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,663,rivate int bsR( final int n )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,665,hile( m_bsLive < n )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,667,har ch = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,668,ry
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,670,h = (char)m_input.read();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,672,atch( final IOException ioe )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,674,ompressedStreamEOF();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,677,f( ch == -1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,679,ompressedStreamEOF();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,682,_bsBuff = ( m_bsBuff << 8 ) | ( ch & 0xff );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,683,_bsLive += 8;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,686,inal int result = ( m_bsBuff >> ( m_bsLive - n ) ) & ( ( 1 << n ) - 1 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,687,_bsLive -= n;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,688,eturn result;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,691,rivate void bsSetStream( final InputStream input )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,693,_input = input;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,694,_bsLive = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,695,_bsBuff = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,698,rivate void complete()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,700,_storedCombinedCRC = readInt();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,701,f( m_storedCombinedCRC != m_computedCombinedCRC )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,703,rcError();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,706,sFinishedWithStream();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,707,_streamEnd = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,710,rivate void endBlock()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,712,_computedBlockCRC = m_crc.getFinalCRC();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,714, A bad CRC is considered a fatal error.
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,716,f( m_storedBlockCRC != m_computedBlockCRC )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,718,rcError();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,721,_computedCombinedCRC = ( m_computedCombinedCRC << 1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,722, ( m_computedCombinedCRC >>> 31 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,723,_computedCombinedCRC ^= m_computedBlockCRC;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,726,"rivate void hbCreateDecodeTables( final int[] limit,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,727,"inal int[] base,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,728,"inal int[] perm,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,729,"inal char[] length,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,730,"inal int minLen,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,731,"inal int maxLen,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,732,inal int alphaSize )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,734,nt pp = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,735,or( int i = minLen; i <= maxLen; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,737,or( int j = 0; j < alphaSize; j++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,739,f( length[ j ] == i )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,741,erm[ pp ] = j;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,742,p++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,747,or( int i = 0; i < MAX_CODE_LEN; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,749,ase[ i ] = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,752,or( int i = 0; i < alphaSize; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,754,ase[ length[ i ] + 1 ]++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,757,or( int i = 1; i < MAX_CODE_LEN; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,759,ase[ i ] += base[ i - 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,762,or( int i = 0; i < MAX_CODE_LEN; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,764,imit[ i ] = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,767,nt vec = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,768,or( int i = minLen; i <= maxLen; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,770,ec += ( base[ i + 1 ] - base[ i ] );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,771,imit[ i ] = vec - 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,772,ec <<= 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,775,or( int i = minLen + 1; i <= maxLen; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,777,ase[ i ] = ( ( limit[ i - 1 ] + 1 ) << 1 ) - base[ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,781,rivate void initBlock()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,783,inal char magic1 = readUnsignedChar();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,784,inal char magic2 = readUnsignedChar();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,785,inal char magic3 = readUnsignedChar();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,786,inal char magic4 = readUnsignedChar();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,787,inal char magic5 = readUnsignedChar();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,788,inal char magic6 = readUnsignedChar();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,789,f( magic1 == 0x17 && magic2 == 0x72 && magic3 == 0x45 &&
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,790,agic4 == 0x38 && magic5 == 0x50 && magic6 == 0x90 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,792,omplete();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,793,eturn;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,796,f( magic1 != 0x31 || magic2 != 0x41 || magic3 != 0x59 ||
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,797,agic4 != 0x26 || magic5 != 0x53 || magic6 != 0x59 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,799,adBlockHeader();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,800,_streamEnd = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,801,eturn;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,804,_storedBlockCRC = readInt();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,806,f( bsR( 1 ) == 1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,808,_blockRandomised = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,810,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,812,_blockRandomised = false;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,815,/        currBlockNo++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,816,etAndMoveToFrontDecode();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,818,_crc.initialiseCRC();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,819,_currentState = START_BLOCK_STATE;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,822,rivate void initialize()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,824,inal char magic3 = readUnsignedChar();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,825,inal char magic4 = readUnsignedChar();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,826,f( magic3 != 'h' || magic4 < '1' || magic4 > '9' )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,828,sFinishedWithStream();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,829,_streamEnd = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,830,eturn;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,833,etDecompressStructureSizes( magic4 - '0' );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,834,_computedCombinedCRC = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,837,rivate void makeMaps()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,839,_nInUse = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,840,or( int i = 0; i < 256; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,842,f( m_inUse[ i ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,844,_seqToUnseq[ m_nInUse ] = (char)i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,845,_unseqToSeq[ i ] = (char)m_nInUse;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,846,_nInUse++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,851,rivate void recvDecodingTables()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,853,uildInUseTable();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,854,akeMaps();
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,855,inal int alphaSize = m_nInUse + 2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,858, Now the selectors
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,860,inal int groupCount = bsR( 3 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,861,inal int selectorCount = bsR( 15 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,862,or( int i = 0; i < selectorCount; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,864,nt run = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,865,hile( bsR( 1 ) == 1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,867,un++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,869,_selectorMtf[ i ] = (char)run;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,873, Undo the MTF values for the selectors.
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,875,inal char[] pos = new char[ N_GROUPS ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,876,or( char v = 0; v < groupCount; v++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,878,os[ v ] = v;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,881,or( int i = 0; i < selectorCount; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,883,nt v = m_selectorMtf[ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,884,inal char tmp = pos[ v ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,885,hile( v > 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,887,os[ v ] = pos[ v - 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,888,--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,890,os[ 0 ] = tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,891,_selector[ i ] = tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,894,inal char[][] len = new char[ N_GROUPS ][ MAX_ALPHA_SIZE ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,896, Now the coding tables
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,898,or( int i = 0; i < groupCount; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,900,nt curr = bsR( 5 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,901,or( int j = 0; j < alphaSize; j++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,903,hile( bsR( 1 ) == 1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,905,f( bsR( 1 ) == 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,907,urr++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,909,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,911,urr--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,914,en[ i ][ j ] = (char)curr;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,919, Create the Huffman decoding tables
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,921,or( int k = 0; k < groupCount; k++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,923,nt minLen = 32;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,924,nt maxLen = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,925,or( int i = 0; i < alphaSize; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,927,f( len[ k ][ i ] > maxLen )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,929,axLen = len[ k ][ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,931,f( len[ k ][ i ] < minLen )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,933,inLen = len[ k ][ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,936,"bCreateDecodeTables( m_limit[ k ], m_base[ k ], m_perm[ k ], len[ k ], minLen,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,937,"axLen, alphaSize );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,938,_minLens[ k ] = minLen;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,942,rivate void buildInUseTable()
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,944,inal boolean[] inUse16 = new boolean[ 16 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,947, Receive the mapping table
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,949,or( int i = 0; i < 16; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,951,f( bsR( 1 ) == 1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,953,nUse16[ i ] = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,955,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,957,nUse16[ i ] = false;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,961,or( int i = 0; i < 256; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,963,_inUse[ i ] = false;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,966,or( int i = 0; i < 16; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,968,f( inUse16[ i ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,970,or( int j = 0; j < 16; j++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,972,f( bsR( 1 ) == 1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,974,_inUse[ i * 16 + j ] = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,981,ublic void close() throws IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,983,sFinishedWithStream();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,17, under the License.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,19,ackage org.apache.commons.compress.bzip2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,21,mport java.io.IOException;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,22,mport java.io.OutputStream;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,25," This package is based on the work done by Keiron Liddle, Aftex Software"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,26, <keiron@aftexsw.com> to whom the Ant project is very grateful for his
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,27, great code.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,31, An output stream that compresses into the BZip2 format (without the file
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,32, header chars) into another stream. TODO: Update to BZip2 1.0.1
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,34," @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,36,ublic class CBZip2OutputStream
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,37,xtends OutputStream
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,38,mplements BZip2Constants
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,40,rivate static final int LOWER_BYTE_MASK = 0x000000ff;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,41,rivate static final int UPPER_BYTE_MASK = 0xffffff00;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,42,rivate static final int SETMASK = ( 1 << 21 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,43,rivate static final int CLEARMASK = ( ~SETMASK );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,44,rivate static final int GREATER_ICOST = 15;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,45,rivate static final int LESSER_ICOST = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,46,rivate static final int SMALL_THRESH = 20;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,47,rivate static final int DEPTH_THRESH = 10;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,50, If you are ever unlucky/improbable enough
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,51," to get a stack overflow whilst sorting,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,52, increase the following constant and try
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,53, again.  In practice I have never seen the
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,54," stack go above 27 elems, so the following"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,55, limit seems very generous.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,57,rivate static final int QSORT_STACK_SIZE = 1000;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,59,rivate CRC m_crc = new CRC();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,61,rivate boolean[] m_inUse = new boolean[ 256 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,63,rivate char[] m_seqToUnseq = new char[ 256 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,64,rivate char[] m_unseqToSeq = new char[ 256 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,66,rivate char[] m_selector = new char[ MAX_SELECTORS ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,67,rivate char[] m_selectorMtf = new char[ MAX_SELECTORS ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,69,rivate int[] m_mtfFreq = new int[ MAX_ALPHA_SIZE ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,71,rivate int m_currentChar = -1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,72,rivate int m_runLength;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,74,rivate boolean m_closed;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,77, Knuth's increments seem to work better
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,78, than Incerpi-Sedgewick here.  Possibly
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,79, because the number of elems to sort is
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,80," usually small, typically <= 20."
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,82,rivate int[] m_incs = new int[]
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,84,", 4, 13, 40, 121, 364, 1093, 3280,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,85,"841, 29524, 88573, 265720,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,86,"97161, 2391484"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,89,rivate boolean m_blockRandomised;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,92, always: in the range 0 .. 9.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,93, The current block size is 100000 * this number.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,95,rivate int m_blockSize100k;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,96,rivate int m_bsBuff;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,97,rivate int m_bsLive;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,100," index of the last char in the block, so"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,101, the block size == last + 1.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,103,rivate int m_last;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,106, index in zptr[] of original string after sorting.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,108,rivate int m_origPtr;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,110,rivate int m_allowableBlockSize;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,112,rivate char[] m_block;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,114,rivate int m_blockCRC;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,115,rivate int m_combinedCRC;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,117,rivate OutputStream m_bsStream;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,118,rivate boolean m_firstAttempt;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,119,rivate int[] m_ftab;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,120,rivate int m_nInUse;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,122,rivate int m_nMTF;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,123,rivate int[] m_quadrant;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,124,rivate short[] m_szptr;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,125,rivate int m_workDone;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,128, Used when sorting.  If too many long comparisons
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,129," happen, we stop sorting, randomise the block"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,130," slightly, and try again."
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,132,rivate int m_workFactor;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,133,rivate int m_workLimit;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,134,rivate int[] m_zptr;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,136,ublic CBZip2OutputStream( final OutputStream output )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,137,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,139,"his( output, 9 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,142,"ublic CBZip2OutputStream( final OutputStream output, final int blockSize )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,143,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,145,sSetStream( output );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,146,_workFactor = 50;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,148,nt outBlockSize = blockSize;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,149,f( outBlockSize > 9 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,151,utBlockSize = 9;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,153,f( outBlockSize < 1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,155,utBlockSize = 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,157,_blockSize100k = outBlockSize;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,158,llocateCompressStructures();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,159,nitialize();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,160,nitBlock();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,163,"rivate static void hbMakeCodeLengths( char[] len, int[] freq,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,164,"nt alphaSize, int maxLen )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,167, Nodes and heap entries run from 1.  Entry 0
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,168, for both the heap and nodes is a sentinel.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,170,nt nNodes;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,172, Nodes and heap entries run from 1.  Entry 0
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,173, for both the heap and nodes is a sentinel.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,175,nt nHeap;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,177, Nodes and heap entries run from 1.  Entry 0
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,178, for both the heap and nodes is a sentinel.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,180,nt n1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,182, Nodes and heap entries run from 1.  Entry 0
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,183, for both the heap and nodes is a sentinel.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,185,nt n2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,187, Nodes and heap entries run from 1.  Entry 0
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,188, for both the heap and nodes is a sentinel.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,190,nt i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,192, Nodes and heap entries run from 1.  Entry 0
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,193, for both the heap and nodes is a sentinel.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,195,nt j;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,197, Nodes and heap entries run from 1.  Entry 0
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,198, for both the heap and nodes is a sentinel.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,200,nt k;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,201,oolean tooLong;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,203,nt[] heap = new int[ MAX_ALPHA_SIZE + 2 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,204,nt[] weights = new int[ MAX_ALPHA_SIZE * 2 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,205,nt[] parent = new int[ MAX_ALPHA_SIZE * 2 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,207,or( i = 0; i < alphaSize; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,209,eights[ i + 1 ] = ( freq[ i ] == 0 ? 1 : freq[ i ] ) << 8;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,212,hile( true )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,214,Nodes = alphaSize;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,215,Heap = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,217,eap[ 0 ] = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,218,eights[ 0 ] = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,219,arent[ 0 ] = -2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,221,or( i = 1; i <= alphaSize; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,223,arent[ i ] = -1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,224,Heap++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,225,eap[ nHeap ] = i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,227,nt zz;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,228,nt tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,229,z = nHeap;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,230,mp = heap[ zz ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,231,hile( weights[ tmp ] < weights[ heap[ zz >> 1 ] ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,233,eap[ zz ] = heap[ zz >> 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,234,z >>= 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,236,eap[ zz ] = tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,239,f( !( nHeap < ( MAX_ALPHA_SIZE + 2 ) ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,241,anic();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,244,hile( nHeap > 1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,246,1 = heap[ 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,247,eap[ 1 ] = heap[ nHeap ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,248,Heap--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,250,nt zz = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,251,nt yy = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,252,nt tmp = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,253,z = 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,254,mp = heap[ zz ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,255,hile( true )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,257,y = zz << 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,258,f( yy > nHeap )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,260,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,262,f( yy < nHeap &&
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,263,eights[ heap[ yy + 1 ] ] < weights[ heap[ yy ] ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,265,y++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,267,f( weights[ tmp ] < weights[ heap[ yy ] ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,269,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,271,eap[ zz ] = heap[ yy ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,272,z = yy;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,274,eap[ zz ] = tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,276,2 = heap[ 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,277,eap[ 1 ] = heap[ nHeap ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,278,Heap--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,280,nt zz = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,281,nt yy = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,282,nt tmp = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,283,z = 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,284,mp = heap[ zz ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,285,hile( true )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,287,y = zz << 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,288,f( yy > nHeap )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,290,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,292,f( yy < nHeap &&
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,293,eights[ heap[ yy + 1 ] ] < weights[ heap[ yy ] ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,295,y++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,297,f( weights[ tmp ] < weights[ heap[ yy ] ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,299,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,301,eap[ zz ] = heap[ yy ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,302,z = yy;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,304,eap[ zz ] = tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,306,Nodes++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,307,arent[ n1 ] = nNodes;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,308,arent[ n2 ] = nNodes;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,310,inal int v1 = weights[ n1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,311,inal int v2 = weights[ n2 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,312,"inal int weight = calculateWeight( v1, v2 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,313,eights[ nNodes ] = weight;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,315,arent[ nNodes ] = -1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,316,Heap++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,317,eap[ nHeap ] = nNodes;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,319,nt zz = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,320,nt tmp = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,321,z = nHeap;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,322,mp = heap[ zz ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,323,hile( weights[ tmp ] < weights[ heap[ zz >> 1 ] ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,325,eap[ zz ] = heap[ zz >> 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,326,z >>= 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,328,eap[ zz ] = tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,331,f( !( nNodes < ( MAX_ALPHA_SIZE * 2 ) ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,333,anic();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,336,ooLong = false;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,337,or( i = 1; i <= alphaSize; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,339, = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,340, = i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,341,hile( parent[ k ] >= 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,343, = parent[ k ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,344,++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,346,en[ i - 1 ] = (char)j;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,347,f( j > maxLen )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,349,ooLong = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,353,f( !tooLong )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,355,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,358,or( i = 1; i < alphaSize; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,360, = weights[ i ] >> 8;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,361, = 1 + ( j / 2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,362,eights[ i ] = j << 8;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,367,"rivate static int calculateWeight( final int v1, final int v2 )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,369,inal int upper = ( v1 & UPPER_BYTE_MASK ) + ( v2 & UPPER_BYTE_MASK );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,370,inal int v1Lower = ( v1 & LOWER_BYTE_MASK );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,371,inal int v2Lower = ( v2 & LOWER_BYTE_MASK );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,372,inal int nnnn = ( v1Lower > v2Lower ) ? v1Lower : v2Lower;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,373,eturn upper | ( 1 + nnnn );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,376,rivate static void panic()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,378,"ystem.out.println( ""panic"" );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,379,/throw new CError();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,382,ublic void close()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,383,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,385,f( m_closed )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,387,eturn;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,390,f( m_runLength > 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,392,riteRun();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,394,_currentChar = -1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,395,ndBlock();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,396,ndCompression();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,397,_closed = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,398,uper.close();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,399,_bsStream.close();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,402,ublic void finalize()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,403,hrows Throwable
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,405,lose();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,408,ublic void flush()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,409,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,411,uper.flush();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,412,_bsStream.flush();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,416," modified by Oliver Merkel, 010128"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,418, @param bv Description of Parameter
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,419, @exception java.io.IOException Description of Exception
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,421,ublic void write( int bv )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,422,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,424,nt b = ( 256 + bv ) % 256;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,425,f( m_currentChar != -1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,427,f( m_currentChar == b )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,429,_runLength++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,430,f( m_runLength > 254 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,432,riteRun();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,433,_currentChar = -1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,434,_runLength = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,437,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,439,riteRun();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,440,_runLength = 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,441,_currentChar = b;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,444,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,446,_currentChar = b;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,447,_runLength++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,451,rivate void allocateCompressStructures()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,453,nt n = BASE_BLOCK_SIZE * m_blockSize100k;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,454,_block = new char[ ( n + 1 + NUM_OVERSHOOT_BYTES ) ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,455,_quadrant = new int[ ( n + NUM_OVERSHOOT_BYTES ) ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,456,_zptr = new int[ n ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,457,_ftab = new int[ 65537 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,459,f( m_block == null || m_quadrant == null || m_zptr == null
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,460,| m_ftab == null )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,462,/int totalDraw = (n + 1 + NUM_OVERSHOOT_BYTES) + (n + NUM_OVERSHOOT_BYTES) + n + 65537;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,463,"/compressOutOfMemory ( totalDraw, n );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,467, The back end needs a place to store the MTF values
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,468, whilst it calculates the coding tables.  We could
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,469," put them in the zptr array.  However, these values"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,470," will fit in a short, so we overlay szptr at the"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,471," start of zptr, in the hope of reducing the number"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,472, of cache misses induced by the multiple traversals
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,473, of the MTF values when calculating coding tables.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,474, Seems to improve compression speed by about 1%.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,476,/    szptr = zptr;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,478,_szptr = new short[ 2 * n ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,481,rivate void bsFinishedWithStream()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,482,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,484,hile( m_bsLive > 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,486,nt ch = ( m_bsBuff >> 24 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,487,ry
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,489,_bsStream.write( ch );// write 8-bit
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,491,atch( IOException e )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,493,hrow e;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,495,_bsBuff <<= 8;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,496,_bsLive -= 8;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,500,"rivate void bsPutIntVS( int numBits, int c )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,501,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,503,"sW( numBits, c );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,506,rivate void bsPutUChar( int c )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,507,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,509,"sW( 8, c );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,512,rivate void bsPutint( int u )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,513,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,515,"sW( 8, ( u >> 24 ) & 0xff );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,516,"sW( 8, ( u >> 16 ) & 0xff );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,517,"sW( 8, ( u >> 8 ) & 0xff );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,518,"sW( 8, u & 0xff );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,521,rivate void bsSetStream( OutputStream f )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,523,_bsStream = f;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,524,_bsLive = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,525,_bsBuff = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,528,"rivate void bsW( int n, int v )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,529,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,531,hile( m_bsLive >= 8 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,533,nt ch = ( m_bsBuff >> 24 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,534,ry
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,536,_bsStream.write( ch );// write 8-bit
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,538,atch( IOException e )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,540,hrow e;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,542,_bsBuff <<= 8;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,543,_bsLive -= 8;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,545,_bsBuff |= ( v << ( 32 - m_bsLive - n ) );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,546,_bsLive += n;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,549,rivate void doReversibleTransformation()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,551,nt i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,553,_workLimit = m_workFactor * m_last;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,554,_workDone = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,555,_blockRandomised = false;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,556,_firstAttempt = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,558,ainSort();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,560,f( m_workDone > m_workLimit && m_firstAttempt )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,562,andomiseBlock();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,563,_workLimit = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,564,_workDone = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,565,_blockRandomised = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,566,_firstAttempt = false;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,567,ainSort();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,570,_origPtr = -1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,571,or( i = 0; i <= m_last; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,573,f( m_zptr[ i ] == 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,575,_origPtr = i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,576,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,581,f( m_origPtr == -1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,583,anic();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,587,rivate void endBlock()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,588,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,590,_blockCRC = m_crc.getFinalCRC();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,591,_combinedCRC = ( m_combinedCRC << 1 ) | ( m_combinedCRC >>> 31 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,592,_combinedCRC ^= m_blockCRC;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,595, sort the block and establish posn of original string
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,597,oReversibleTransformation();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,600," A 6-byte block header, the value chosen arbitrarily"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,601, as 0x314159265359 :-).  A 32 bit value does not really
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,602, give a strong enough guarantee that the value will not
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,603, appear by chance in the compressed datastream.  Worst-case
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,604," probability of this event, for a 900k block, is about"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,605," 2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits."
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,606, For a compressed file of size 100Gb -- about 100000 blocks --
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,607, only a 48-bit marker will do.  NB: normal compression/
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,608, decompression do *not* rely on these statistical properties.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,609, They are only important when trying to recover blocks from
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,610, damaged files.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,612,sPutUChar( 0x31 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,613,sPutUChar( 0x41 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,614,sPutUChar( 0x59 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,615,sPutUChar( 0x26 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,616,sPutUChar( 0x53 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,617,sPutUChar( 0x59 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,620," Now the block's CRC, so it is in a known place."
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,622,sPutint( m_blockCRC );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,625, Now a single bit indicating randomisation.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,627,f( m_blockRandomised )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,629,"sW( 1, 1 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,631,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,633,"sW( 1, 0 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,637," Finally, block's contents proper."
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,639,oveToFrontCodeAndSend();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,642,rivate void endCompression()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,643,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,646," Now another magic 48-bit number, 0x177245385090, to"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,647," indicate the end of the last block.  (sqrt(pi), if"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,648," you want to know.  I did want to use e, but it contains"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,649, too much repetition -- 27 18 28 18 28 46 -- for me
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,650, to feel statistically comfortable.  Call me paranoid.)
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,652,sPutUChar( 0x17 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,653,sPutUChar( 0x72 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,654,sPutUChar( 0x45 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,655,sPutUChar( 0x38 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,656,sPutUChar( 0x50 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,657,sPutUChar( 0x90 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,659,sPutint( m_combinedCRC );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,661,sFinishedWithStream();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,664,"rivate boolean fullGtU( int i1, int i2 )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,666,nt k;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,667,har c1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,668,har c2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,669,nt s1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,670,nt s2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,672,1 = m_block[ i1 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,673,2 = m_block[ i2 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,674,f( c1 != c2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,676,eturn ( c1 > c2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,678,1++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,679,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,681,1 = m_block[ i1 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,682,2 = m_block[ i2 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,683,f( c1 != c2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,685,eturn ( c1 > c2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,687,1++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,688,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,690,1 = m_block[ i1 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,691,2 = m_block[ i2 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,692,f( c1 != c2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,694,eturn ( c1 > c2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,696,1++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,697,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,699,1 = m_block[ i1 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,700,2 = m_block[ i2 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,701,f( c1 != c2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,703,eturn ( c1 > c2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,705,1++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,706,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,708,1 = m_block[ i1 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,709,2 = m_block[ i2 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,710,f( c1 != c2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,712,eturn ( c1 > c2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,714,1++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,715,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,717,1 = m_block[ i1 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,718,2 = m_block[ i2 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,719,f( c1 != c2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,721,eturn ( c1 > c2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,723,1++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,724,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,726, = m_last + 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,728,o
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,730,1 = m_block[ i1 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,731,2 = m_block[ i2 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,732,f( c1 != c2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,734,eturn ( c1 > c2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,736,1 = m_quadrant[ i1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,737,2 = m_quadrant[ i2 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,738,f( s1 != s2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,740,eturn ( s1 > s2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,742,1++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,743,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,745,1 = m_block[ i1 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,746,2 = m_block[ i2 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,747,f( c1 != c2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,749,eturn ( c1 > c2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,751,1 = m_quadrant[ i1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,752,2 = m_quadrant[ i2 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,753,f( s1 != s2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,755,eturn ( s1 > s2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,757,1++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,758,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,760,1 = m_block[ i1 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,761,2 = m_block[ i2 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,762,f( c1 != c2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,764,eturn ( c1 > c2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,766,1 = m_quadrant[ i1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,767,2 = m_quadrant[ i2 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,768,f( s1 != s2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,770,eturn ( s1 > s2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,772,1++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,773,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,775,1 = m_block[ i1 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,776,2 = m_block[ i2 + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,777,f( c1 != c2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,779,eturn ( c1 > c2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,781,1 = m_quadrant[ i1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,782,2 = m_quadrant[ i2 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,783,f( s1 != s2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,785,eturn ( s1 > s2 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,787,1++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,788,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,790,f( i1 > m_last )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,792,1 -= m_last;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,793,1--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,796,f( i2 > m_last )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,798,2 -= m_last;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,799,2--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,803, -= 4;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,804,_workDone++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,805, while( k >= 0 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,807,eturn false;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,810,rivate void generateMTFValues()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,812,har[] yy = new char[ 256 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,813,nt i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,814,nt j;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,815,har tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,816,har tmp2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,817,nt zPend;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,818,nt wr;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,819,nt EOB;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,821,akeMaps();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,822,OB = m_nInUse + 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,824,or( i = 0; i <= EOB; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,826,_mtfFreq[ i ] = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,829,r = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,830,Pend = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,831,or( i = 0; i < m_nInUse; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,833,y[ i ] = (char)i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,836,or( i = 0; i <= m_last; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,838,har ll_i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,840,l_i = m_unseqToSeq[ m_block[ m_zptr[ i ] ] ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,842, = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,843,mp = yy[ j ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,844,hile( ll_i != tmp )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,846,++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,847,mp2 = tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,848,mp = yy[ j ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,849,y[ j ] = tmp2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,852,y[ 0 ] = tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,854,f( j == 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,856,Pend++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,858,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,860,f( zPend > 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,862,Pend--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,863,hile( true )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,865,witch( zPend % 2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,867,ase 0:
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,868,_szptr[ wr ] = (short)RUNA;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,869,r++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,870,_mtfFreq[ RUNA ]++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,871,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,872,ase 1:
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,873,_szptr[ wr ] = (short)RUNB;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,874,r++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,875,_mtfFreq[ RUNB ]++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,876,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,879,f( zPend < 2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,881,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,883,Pend = ( zPend - 2 ) / 2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,886,Pend = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,888,_szptr[ wr ] = (short)( j + 1 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,889,r++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,890,_mtfFreq[ j + 1 ]++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,894,f( zPend > 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,896,Pend--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,897,hile( true )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,899,witch( zPend % 2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,901,ase 0:
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,902,_szptr[ wr ] = (short)RUNA;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,903,r++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,904,_mtfFreq[ RUNA ]++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,905,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,906,ase 1:
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,907,_szptr[ wr ] = (short)RUNB;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,908,r++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,909,_mtfFreq[ RUNB ]++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,910,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,912,f( zPend < 2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,914,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,916,Pend = ( zPend - 2 ) / 2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,920,_szptr[ wr ] = (short)EOB;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,921,r++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,922,_mtfFreq[ EOB ]++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,924,_nMTF = wr;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,927,"rivate void hbAssignCodes( int[] code, char[] length, int minLen,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,928,"nt maxLen, int alphaSize )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,930,nt n;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,931,nt vec;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,932,nt i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,934,ec = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,935,or( n = minLen; n <= maxLen; n++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,937,or( i = 0; i < alphaSize; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,939,f( length[ i ] == n )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,941,ode[ i ] = vec;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,942,ec++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,946,ec <<= 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,950,rivate void initBlock()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,952,/        blockNo++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,953,_crc.initialiseCRC();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,954,_last = -1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,955,/        ch = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,957,or( int i = 0; i < 256; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,959,_inUse[ i ] = false;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,963, 20 is just a paranoia constant
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,965,_allowableBlockSize = BASE_BLOCK_SIZE * m_blockSize100k - 20;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,968,rivate void initialize()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,969,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,972," Write `magic' bytes h indicating file-format == huffmanised,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,973, followed by a digit indicating blockSize100k.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,975,sPutUChar( 'h' );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,976,sPutUChar( '0' + m_blockSize100k );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,978,_combinedCRC = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,981,rivate void mainSort()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,983,nt i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,984,nt j;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,985,nt ss;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,986,nt sb;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,987,nt[] runningOrder = new int[ 256 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,988,nt[] copy = new int[ 256 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,989,oolean[] bigDone = new boolean[ 256 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,990,nt c1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,991,nt c2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,994," In the various block-sized structures, live data runs"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,995," from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,996, set up the overshoot area for block.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,998,"/   if (verbosity >= 4) fprintf ( stderr, ""        sort initialise ...\n"" );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,999,or( i = 0; i < NUM_OVERSHOOT_BYTES; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1001,_block[ m_last + i + 2 ] = m_block[ ( i % ( m_last + 1 ) ) + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1003,or( i = 0; i <= m_last + NUM_OVERSHOOT_BYTES; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1005,_quadrant[ i ] = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1008,_block[ 0 ] = m_block[ m_last + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1010,f( m_last < 4000 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1013," Use simpleSort(), since the full sorting mechanism"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1014, has quite a large constant overhead.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1016,or( i = 0; i <= m_last; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1018,_zptr[ i ] = i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1020,_firstAttempt = false;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1021,_workDone = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1022,_workLimit = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1023,"impleSort( 0, m_last, 0 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1025,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1027,or( i = 0; i <= 255; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1029,igDone[ i ] = false;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1032,or( i = 0; i <= 65536; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1034,_ftab[ i ] = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1037,1 = m_block[ 0 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1038,or( i = 0; i <= m_last; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1040,2 = m_block[ i + 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1041,_ftab[ ( c1 << 8 ) + c2 ]++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1042,1 = c2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1045,or( i = 1; i <= 65536; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1047,_ftab[ i ] += m_ftab[ i - 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1050,1 = m_block[ 1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1051,or( i = 0; i < m_last; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1053,2 = m_block[ i + 2 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1054, = ( c1 << 8 ) + c2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1055,1 = c2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1056,_ftab[ j ]--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1057,_zptr[ m_ftab[ j ] ] = i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1060, = ( ( m_block[ m_last + 1 ] ) << 8 ) + ( m_block[ 1 ] );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1061,_ftab[ j ]--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1062,_zptr[ m_ftab[ j ] ] = m_last;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1065, Now ftab contains the first loc of every small bucket.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1066," Calculate the running order, from smallest to largest"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1067, big bucket.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1069,or( i = 0; i <= 255; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1071,unningOrder[ i ] = i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1074,nt vv;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1075,nt h = 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1076,o
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1078, = 3 * h + 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1079, while( h <= 256 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1080,o
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1082, = h / 3;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1083,or( i = h; i <= 255; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1085,v = runningOrder[ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1086, = i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1087,hile( ( m_ftab[ ( ( runningOrder[ j - h ] ) + 1 ) << 8 ]
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1088, m_ftab[ ( runningOrder[ j - h ] ) << 8 ] ) >
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1089, m_ftab[ ( ( vv ) + 1 ) << 8 ] - m_ftab[ ( vv ) << 8 ] ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1091,unningOrder[ j ] = runningOrder[ j - h ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1092, = j - h;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1093,f( j <= ( h - 1 ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1095,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1098,unningOrder[ j ] = vv;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1100, while( h != 1 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1104, The main sorting loop.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1106,or( i = 0; i <= 255; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1110," Process big buckets, starting with the least full."
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1112,s = runningOrder[ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1115, Complete the big bucket [ss] by quicksorting
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1116," any unsorted small buckets [ss, j].  Hopefully"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1117, previous pointer-scanning phases have already
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1118," completed many of the small buckets [ss, j], so"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1119, we don't have to sort them at all.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1121,or( j = 0; j <= 255; j++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1123,b = ( ss << 8 ) + j;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1124,f( !( ( m_ftab[ sb ] & SETMASK ) == SETMASK ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1126,nt lo = m_ftab[ sb ] & CLEARMASK;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1127,nt hi = ( m_ftab[ sb + 1 ] & CLEARMASK ) - 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1128,f( hi > lo )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1130,"Sort3( lo, hi, 2 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1131,f( m_workDone > m_workLimit && m_firstAttempt )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1133,eturn;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1136,_ftab[ sb ] |= SETMASK;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1141," The ss big bucket is now done.  Record this fact,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1142, and update the quadrant descriptors.  Remember to
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1143," update quadrants in the overshoot area too, if"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1144," necessary.  The ""if (i < 255)"" test merely skips"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1145," this updating for the last bucket processed, since"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1146, updating for the last bucket is pointless.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1148,igDone[ ss ] = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1150,f( i < 255 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1152,nt bbStart = m_ftab[ ss << 8 ] & CLEARMASK;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1153,nt bbSize = ( m_ftab[ ( ss + 1 ) << 8 ] & CLEARMASK ) - bbStart;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1154,nt shifts = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1156,hile( ( bbSize >> shifts ) > 65534 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1158,hifts++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1161,or( j = 0; j < bbSize; j++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1163,nt a2update = m_zptr[ bbStart + j ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1164,nt qVal = ( j >> shifts );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1165,_quadrant[ a2update ] = qVal;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1166,f( a2update < NUM_OVERSHOOT_BYTES )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1168,_quadrant[ a2update + m_last + 1 ] = qVal;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1172,f( !( ( ( bbSize - 1 ) >> shifts ) <= 65535 ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1174,anic();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1179, Now scan this big bucket so as to synthesise the
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1180," sorted order for small buckets [t, ss] for all t != ss."
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1182,or( j = 0; j <= 255; j++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1184,opy[ j ] = m_ftab[ ( j << 8 ) + ss ] & CLEARMASK;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1187,or( j = m_ftab[ ss << 8 ] & CLEARMASK;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1188, < ( m_ftab[ ( ss + 1 ) << 8 ] & CLEARMASK ); j++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1190,1 = m_block[ m_zptr[ j ] ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1191,f( !bigDone[ c1 ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1193,_zptr[ copy[ c1 ] ] = m_zptr[ j ] == 0 ? m_last : m_zptr[ j ] - 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1194,opy[ c1 ]++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1198,or( j = 0; j <= 255; j++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1200,_ftab[ ( j << 8 ) + ss ] |= SETMASK;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1206,rivate void makeMaps()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1208,nt i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1209,_nInUse = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1210,or( i = 0; i < 256; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1212,f( m_inUse[ i ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1214,_seqToUnseq[ m_nInUse ] = (char)i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1215,_unseqToSeq[ i ] = (char)m_nInUse;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1216,_nInUse++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1221,"rivate char med3( char a, char b, char c )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1223,har t;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1224,f( a > b )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1226, = a;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1227, = b;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1228, = t;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1230,f( b > c )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1232, = b;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1233, = c;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1234, = t;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1236,f( a > b )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1238, = a;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1240,eturn b;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1243,rivate void moveToFrontCodeAndSend()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1244,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1246,"sPutIntVS( 24, m_origPtr );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1247,enerateMTFValues();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1248,endMTFValues();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1251,"rivate void qSort3( int loSt, int hiSt, int dSt )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1253,nt unLo;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1254,nt unHi;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1255,nt ltLo;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1256,nt gtHi;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1257,nt med;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1258,nt n;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1259,nt m;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1260,nt sp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1261,nt lo;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1262,nt hi;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1263,nt d;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1264,tackElem[] stack = new StackElem[ QSORT_STACK_SIZE ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1265,or( int count = 0; count < QSORT_STACK_SIZE; count++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1267,tack[ count ] = new StackElem();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1270,p = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1272,tack[ sp ].m_ll = loSt;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1273,tack[ sp ].m_hh = hiSt;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1274,tack[ sp ].m_dd = dSt;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1275,p++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1277,hile( sp > 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1279,f( sp >= QSORT_STACK_SIZE )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1281,anic();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1284,p--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1285,o = stack[ sp ].m_ll;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1286,i = stack[ sp ].m_hh;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1287, = stack[ sp ].m_dd;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1289,f( hi - lo < SMALL_THRESH || d > DEPTH_THRESH )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1291,"impleSort( lo, hi, d );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1292,f( m_workDone > m_workLimit && m_firstAttempt )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1294,eturn;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1296,ontinue;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1299,"ed = med3( m_block[ m_zptr[ lo ] + d + 1 ],"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1300,"_block[ m_zptr[ hi ] + d + 1 ],"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1301,_block[ m_zptr[ ( lo + hi ) >> 1 ] + d + 1 ] );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1303,nLo = lo;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1304,tLo = lo;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1305,nHi = hi;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1306,tHi = hi;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1308,hile( true )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1310,hile( true )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1312,f( unLo > unHi )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1314,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1316, = m_block[ m_zptr[ unLo ] + d + 1 ] - med;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1317,f( n == 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1319,nt temp = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1320,emp = m_zptr[ unLo ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1321,_zptr[ unLo ] = m_zptr[ ltLo ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1322,_zptr[ ltLo ] = temp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1323,tLo++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1324,nLo++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1325,ontinue;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1328,f( n > 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1330,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1332,nLo++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1334,hile( true )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1336,f( unLo > unHi )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1338,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1340, = m_block[ m_zptr[ unHi ] + d + 1 ] - med;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1341,f( n == 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1343,nt temp = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1344,emp = m_zptr[ unHi ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1345,_zptr[ unHi ] = m_zptr[ gtHi ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1346,_zptr[ gtHi ] = temp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1347,tHi--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1348,nHi--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1349,ontinue;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1352,f( n < 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1354,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1356,nHi--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1358,f( unLo > unHi )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1360,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1362,nt temp = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1363,emp = m_zptr[ unLo ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1364,_zptr[ unLo ] = m_zptr[ unHi ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1365,_zptr[ unHi ] = temp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1366,nLo++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1367,nHi--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1370,f( gtHi < ltLo )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1372,tack[ sp ].m_ll = lo;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1373,tack[ sp ].m_hh = hi;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1374,tack[ sp ].m_dd = d + 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1375,p++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1376,ontinue;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1379, = ( ( ltLo - lo ) < ( unLo - ltLo ) ) ? ( ltLo - lo ) : ( unLo - ltLo );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1380,"swap( lo, unLo - n, n );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1381, = ( ( hi - gtHi ) < ( gtHi - unHi ) ) ? ( hi - gtHi ) : ( gtHi - unHi );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1382,"swap( unLo, hi - m + 1, m );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1384, = lo + unLo - ltLo - 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1385, = hi - ( gtHi - unHi ) + 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1387,tack[ sp ].m_ll = lo;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1388,tack[ sp ].m_hh = n;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1389,tack[ sp ].m_dd = d;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1390,p++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1392,tack[ sp ].m_ll = n + 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1393,tack[ sp ].m_hh = m - 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1394,tack[ sp ].m_dd = d + 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1395,p++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1397,tack[ sp ].m_ll = m;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1398,tack[ sp ].m_hh = hi;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1399,tack[ sp ].m_dd = d;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1400,p++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1404,rivate void randomiseBlock()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1406,nt i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1407,nt rNToGo = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1408,nt rTPos = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1409,or( i = 0; i < 256; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1411,_inUse[ i ] = false;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1414,or( i = 0; i <= m_last; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1416,f( rNToGo == 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1418,NToGo = (char)RAND_NUMS[ rTPos ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1419,TPos++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1420,f( rTPos == 512 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1422,TPos = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1425,NToGo--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1426,_block[ i + 1 ] ^= ( ( rNToGo == 1 ) ? 1 : 0 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1427,/ handle 16 bit signed numbers
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1428,_block[ i + 1 ] &= 0xFF;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1430,_inUse[ m_block[ i + 1 ] ] = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1434,rivate void sendMTFValues()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1435,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1437,har[][] len = new char[ N_GROUPS ][ MAX_ALPHA_SIZE ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1439,nt v;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1441,nt t;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1443,nt i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1445,nt j;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1447,nt gs;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1449,nt ge;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1451,nt bt;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1453,nt bc;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1455,nt iter;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1456,nt nSelectors = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1457,nt alphaSize;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1458,nt minLen;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1459,nt maxLen;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1460,nt selCtr;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1461,nt nGroups;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1463,lphaSize = m_nInUse + 2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1464,or( t = 0; t < N_GROUPS; t++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1466,or( v = 0; v < alphaSize; v++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1468,en[ t ][ v ] = (char)GREATER_ICOST;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1473, Decide how many coding tables to use
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1475,f( m_nMTF <= 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1477,anic();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1480,f( m_nMTF < 200 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1482,Groups = 2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1484,lse if( m_nMTF < 600 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1486,Groups = 3;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1488,lse if( m_nMTF < 1200 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1490,Groups = 4;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1492,lse if( m_nMTF < 2400 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1494,Groups = 5;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1496,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1498,Groups = 6;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1502, Generate an initial set of coding tables
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1504,nt nPart;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1505,nt remF;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1506,nt tFreq;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1507,nt aFreq;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1509,Part = nGroups;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1510,emF = m_nMTF;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1511,s = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1512,hile( nPart > 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1514,Freq = remF / nPart;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1515,e = gs - 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1516,Freq = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1517,hile( aFreq < tFreq && ge < alphaSize - 1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1519,e++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1520,Freq += m_mtfFreq[ ge ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1523,f( ge > gs && nPart != nGroups && nPart != 1
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1524,& ( ( nGroups - nPart ) % 2 == 1 ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1526,Freq -= m_mtfFreq[ ge ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1527,e--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1530,or( v = 0; v < alphaSize; v++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1532,f( v >= gs && v <= ge )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1534,en[ nPart - 1 ][ v ] = (char)LESSER_ICOST;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1536,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1538,en[ nPart - 1 ][ v ] = (char)GREATER_ICOST;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1542,Part--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1543,s = ge + 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1544,emF -= aFreq;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1548,nt[][] rfreq = new int[ N_GROUPS ][ MAX_ALPHA_SIZE ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1549,nt[] fave = new int[ N_GROUPS ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1550,hort[] cost = new short[ N_GROUPS ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1552, Iterate up to N_ITERS times to improve the tables.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1554,or( iter = 0; iter < N_ITERS; iter++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1556,or( t = 0; t < nGroups; t++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1558,ave[ t ] = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1561,or( t = 0; t < nGroups; t++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1563,or( v = 0; v < alphaSize; v++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1565,freq[ t ][ v ] = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1569,Selectors = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1570,s = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1571,hile( true )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1575, Set group start & end marks.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1577,f( gs >= m_nMTF )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1579,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1581,e = gs + G_SIZE - 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1582,f( ge >= m_nMTF )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1584,e = m_nMTF - 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1588, Calculate the cost of this group as coded
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1589, by each of the coding tables.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1591,or( t = 0; t < nGroups; t++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1593,ost[ t ] = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1596,f( nGroups == 6 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1598,hort cost0 = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1599,hort cost1 = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1600,hort cost2 = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1601,hort cost3 = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1602,hort cost4 = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1603,hort cost5 = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1605,or( i = gs; i <= ge; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1607,hort icv = m_szptr[ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1608,ost0 += len[ 0 ][ icv ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1609,ost1 += len[ 1 ][ icv ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1610,ost2 += len[ 2 ][ icv ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1611,ost3 += len[ 3 ][ icv ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1612,ost4 += len[ 4 ][ icv ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1613,ost5 += len[ 5 ][ icv ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1615,ost[ 0 ] = cost0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1616,ost[ 1 ] = cost1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1617,ost[ 2 ] = cost2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1618,ost[ 3 ] = cost3;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1619,ost[ 4 ] = cost4;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1620,ost[ 5 ] = cost5;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1622,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1624,or( i = gs; i <= ge; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1626,hort icv = m_szptr[ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1627,or( t = 0; t < nGroups; t++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1629,ost[ t ] += len[ t ][ icv ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1635," Find the coding table which is best for this group,"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1636, and record its identity in the selector table.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1638,c = 999999999;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1639,t = -1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1640,or( t = 0; t < nGroups; t++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1642,f( cost[ t ] < bc )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1644,c = cost[ t ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1645,t = t;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1649,ave[ bt ]++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1650,_selector[ nSelectors ] = (char)bt;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1651,Selectors++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1654, Increment the symbol frequencies for the selected table.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1656,or( i = gs; i <= ge; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1658,freq[ bt ][ m_szptr[ i ] ]++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1661,s = ge + 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1665, Recompute the tables based on the accumulated frequencies.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1667,or( t = 0; t < nGroups; t++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1669,"bMakeCodeLengths( len[ t ], rfreq[ t ], alphaSize, 20 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1673,freq = null;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1674,ave = null;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1675,ost = null;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1677,f( !( nGroups < 8 ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1679,anic();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1681,f( !( nSelectors < 32768 && nSelectors <= ( 2 + ( 900000 / G_SIZE ) ) ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1683,anic();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1687, Compute MTF values for the selectors.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1689,har[] pos = new char[ N_GROUPS ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1690,har ll_i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1691,har tmp2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1692,har tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1693,or( i = 0; i < nGroups; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1695,os[ i ] = (char)i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1697,or( i = 0; i < nSelectors; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1699,l_i = m_selector[ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1700, = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1701,mp = pos[ j ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1702,hile( ll_i != tmp )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1704,++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1705,mp2 = tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1706,mp = pos[ j ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1707,os[ j ] = tmp2;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1709,os[ 0 ] = tmp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1710,_selectorMtf[ i ] = (char)j;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1714,nt[][] code = new int[ N_GROUPS ][ MAX_ALPHA_SIZE ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1717, Assign actual codes for the tables.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1719,or( t = 0; t < nGroups; t++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1721,inLen = 32;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1722,axLen = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1723,or( i = 0; i < alphaSize; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1725,f( len[ t ][ i ] > maxLen )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1727,axLen = len[ t ][ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1729,f( len[ t ][ i ] < minLen )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1731,inLen = len[ t ][ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1734,f( maxLen > 20 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1736,anic();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1738,f( minLen < 1 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1740,anic();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1742,"bAssignCodes( code[ t ], len[ t ], minLen, maxLen, alphaSize );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1746, Transmit the mapping table.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1748,oolean[] inUse16 = new boolean[ 16 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1749,or( i = 0; i < 16; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1751,nUse16[ i ] = false;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1752,or( j = 0; j < 16; j++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1754,f( m_inUse[ i * 16 + j ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1756,nUse16[ i ] = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1761,or( i = 0; i < 16; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1763,f( inUse16[ i ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1765,"sW( 1, 1 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1767,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1769,"sW( 1, 0 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1773,or( i = 0; i < 16; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1775,f( inUse16[ i ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1777,or( j = 0; j < 16; j++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1779,f( m_inUse[ i * 16 + j ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1781,"sW( 1, 1 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1783,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1785,"sW( 1, 0 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1794, Now the selectors.
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1796,"sW( 3, nGroups );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1797,"sW( 15, nSelectors );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1798,or( i = 0; i < nSelectors; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1800,or( j = 0; j < m_selectorMtf[ i ]; j++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1802,"sW( 1, 1 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1804,"sW( 1, 0 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1807,or( t = 0; t < nGroups; t++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1809,nt curr = len[ t ][ 0 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1810,"sW( 5, curr );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1811,or( i = 0; i < alphaSize; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1813,hile( curr < len[ t ][ i ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1815,"sW( 2, 2 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1816,urr++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1818, 10
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1821,hile( curr > len[ t ][ i ] )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1823,"sW( 2, 3 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1824,urr--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1826, 11
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1829,"sW( 1, 0 );"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1834," And finally, the block data proper"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1836,elCtr = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1837,s = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1838,hile( true )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1840,f( gs >= m_nMTF )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1842,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1844,e = gs + G_SIZE - 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1845,f( ge >= m_nMTF )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1847,e = m_nMTF - 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1849,or( i = gs; i <= ge; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1851,"sW( len[ m_selector[ selCtr ] ][ m_szptr[ i ] ],"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1852,ode[ m_selector[ selCtr ] ][ m_szptr[ i ] ] );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1855,s = ge + 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1856,elCtr++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1858,f( !( selCtr == nSelectors ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1860,anic();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1864,"rivate void simpleSort( int lo, int hi, int d )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1866,nt i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1867,nt j;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1868,nt h;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1869,nt bigN;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1870,nt hp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1871,nt v;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1873,igN = hi - lo + 1;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1874,f( bigN < 2 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1876,eturn;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1879,p = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1880,hile( m_incs[ hp ] < bigN )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1882,p++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1884,p--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1886,or( ; hp >= 0; hp-- )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1888, = m_incs[ hp ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1890, = lo + h;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1891,hile( true )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1894, copy 1
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1896,f( i > hi )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1898,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1900, = m_zptr[ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1901, = i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1902,"hile( fullGtU( m_zptr[ j - h ] + d, v + d ) )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1904,_zptr[ j ] = m_zptr[ j - h ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1905, = j - h;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1906,f( j <= ( lo + h - 1 ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1908,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1911,_zptr[ j ] = v;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1912,++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1915, copy 2
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1917,f( i > hi )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1919,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1921, = m_zptr[ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1922, = i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1923,"hile( fullGtU( m_zptr[ j - h ] + d, v + d ) )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1925,_zptr[ j ] = m_zptr[ j - h ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1926, = j - h;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1927,f( j <= ( lo + h - 1 ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1929,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1932,_zptr[ j ] = v;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1933,++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1936, copy 3
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1938,f( i > hi )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1940,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1942, = m_zptr[ i ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1943, = i;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1944,"hile( fullGtU( m_zptr[ j - h ] + d, v + d ) )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1946,_zptr[ j ] = m_zptr[ j - h ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1947, = j - h;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1948,f( j <= ( lo + h - 1 ) )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1950,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1953,_zptr[ j ] = v;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1954,++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1956,f( m_workDone > m_workLimit && m_firstAttempt )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1958,eturn;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1964,"rivate void vswap( int p1, int p2, int n )"
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1966,nt temp = 0;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1967,hile( n > 0 )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1969,emp = m_zptr[ p1 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1970,_zptr[ p1 ] = m_zptr[ p2 ];
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1971,_zptr[ p2 ] = temp;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1972,1++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1973,2++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1974,--;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1978,rivate void writeRun()
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1979,hrows IOException
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1981,f( m_last < m_allowableBlockSize )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1983,_inUse[ m_currentChar ] = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1984,or( int i = 0; i < m_runLength; i++ )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1986,_crc.updateCRC( (char)m_currentChar );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1988,witch( m_runLength )
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1990,ase 1:
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1991,_last++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1992,_block[ m_last + 1 ] = (char)m_currentChar;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1993,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1994,ase 2:
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1995,_last++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1996,_block[ m_last + 1 ] = (char)m_currentChar;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1997,_last++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1998,_block[ m_last + 1 ] = (char)m_currentChar;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1999,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2000,ase 3:
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2001,_last++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2002,_block[ m_last + 1 ] = (char)m_currentChar;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2003,_last++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2004,_block[ m_last + 1 ] = (char)m_currentChar;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2005,_last++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2006,_block[ m_last + 1 ] = (char)m_currentChar;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2007,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2008,efault:
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2009,_inUse[ m_runLength - 4 ] = true;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2010,_last++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2011,_block[ m_last + 1 ] = (char)m_currentChar;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2012,_last++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2013,_block[ m_last + 1 ] = (char)m_currentChar;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2014,_last++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2015,_block[ m_last + 1 ] = (char)m_currentChar;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2016,_last++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2017,_block[ m_last + 1 ] = (char)m_currentChar;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2018,_last++;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2019,_block[ m_last + 1 ] = (char)( m_runLength - 4 );
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2020,reak;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2023,lse
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2025,ndBlock();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2026,nitBlock();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2027,riteRun();
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2031,rivate static class StackElem
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2033,nt m_dd;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2034,nt m_hh;
False,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2035,nt m_ll;
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,17, under the License.
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,19,ackage org.apache.commons.compress.bzip2;
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,22," This package is based on the work done by Keiron Liddle, Aftex Software"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,23, <keiron@aftexsw.com> to whom the Ant project is very grateful for his
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,24, great code.
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,28, A simple class the hold and calculate the CRC for sanity checking of the
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,29, data.
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,31," @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,33,lass CRC
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,35,rivate static int[] CRC32_TABLE = new int[]
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,37,"x00000000, 0x04c11db7, 0x09823b6e, 0x0d4326d9,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,38,"x130476dc, 0x17c56b6b, 0x1a864db2, 0x1e475005,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,39,"x2608edb8, 0x22c9f00f, 0x2f8ad6d6, 0x2b4bcb61,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,40,"x350c9b64, 0x31cd86d3, 0x3c8ea00a, 0x384fbdbd,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,41,"x4c11db70, 0x48d0c6c7, 0x4593e01e, 0x4152fda9,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,42,"x5f15adac, 0x5bd4b01b, 0x569796c2, 0x52568b75,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,43,"x6a1936c8, 0x6ed82b7f, 0x639b0da6, 0x675a1011,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,44,"x791d4014, 0x7ddc5da3, 0x709f7b7a, 0x745e66cd,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,45,"x9823b6e0, 0x9ce2ab57, 0x91a18d8e, 0x95609039,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,46,"x8b27c03c, 0x8fe6dd8b, 0x82a5fb52, 0x8664e6e5,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,47,"xbe2b5b58, 0xbaea46ef, 0xb7a96036, 0xb3687d81,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,48,"xad2f2d84, 0xa9ee3033, 0xa4ad16ea, 0xa06c0b5d,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,49,"xd4326d90, 0xd0f37027, 0xddb056fe, 0xd9714b49,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,50,"xc7361b4c, 0xc3f706fb, 0xceb42022, 0xca753d95,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,51,"xf23a8028, 0xf6fb9d9f, 0xfbb8bb46, 0xff79a6f1,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,52,"xe13ef6f4, 0xe5ffeb43, 0xe8bccd9a, 0xec7dd02d,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,53,"x34867077, 0x30476dc0, 0x3d044b19, 0x39c556ae,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,54,"x278206ab, 0x23431b1c, 0x2e003dc5, 0x2ac12072,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,55,"x128e9dcf, 0x164f8078, 0x1b0ca6a1, 0x1fcdbb16,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,56,"x018aeb13, 0x054bf6a4, 0x0808d07d, 0x0cc9cdca,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,57,"x7897ab07, 0x7c56b6b0, 0x71159069, 0x75d48dde,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,58,"x6b93dddb, 0x6f52c06c, 0x6211e6b5, 0x66d0fb02,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,59,"x5e9f46bf, 0x5a5e5b08, 0x571d7dd1, 0x53dc6066,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,60,"x4d9b3063, 0x495a2dd4, 0x44190b0d, 0x40d816ba,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,61,"xaca5c697, 0xa864db20, 0xa527fdf9, 0xa1e6e04e,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,62,"xbfa1b04b, 0xbb60adfc, 0xb6238b25, 0xb2e29692,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,63,"x8aad2b2f, 0x8e6c3698, 0x832f1041, 0x87ee0df6,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,64,"x99a95df3, 0x9d684044, 0x902b669d, 0x94ea7b2a,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,65,"xe0b41de7, 0xe4750050, 0xe9362689, 0xedf73b3e,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,66,"xf3b06b3b, 0xf771768c, 0xfa325055, 0xfef34de2,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,67,"xc6bcf05f, 0xc27dede8, 0xcf3ecb31, 0xcbffd686,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,68,"xd5b88683, 0xd1799b34, 0xdc3abded, 0xd8fba05a,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,69,"x690ce0ee, 0x6dcdfd59, 0x608edb80, 0x644fc637,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,70,"x7a089632, 0x7ec98b85, 0x738aad5c, 0x774bb0eb,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,71,"x4f040d56, 0x4bc510e1, 0x46863638, 0x42472b8f,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,72,"x5c007b8a, 0x58c1663d, 0x558240e4, 0x51435d53,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,73,"x251d3b9e, 0x21dc2629, 0x2c9f00f0, 0x285e1d47,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,74,"x36194d42, 0x32d850f5, 0x3f9b762c, 0x3b5a6b9b,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,75,"x0315d626, 0x07d4cb91, 0x0a97ed48, 0x0e56f0ff,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,76,"x1011a0fa, 0x14d0bd4d, 0x19939b94, 0x1d528623,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,77,"xf12f560e, 0xf5ee4bb9, 0xf8ad6d60, 0xfc6c70d7,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,78,"xe22b20d2, 0xe6ea3d65, 0xeba91bbc, 0xef68060b,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,79,"xd727bbb6, 0xd3e6a601, 0xdea580d8, 0xda649d6f,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,80,"xc423cd6a, 0xc0e2d0dd, 0xcda1f604, 0xc960ebb3,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,81,"xbd3e8d7e, 0xb9ff90c9, 0xb4bcb610, 0xb07daba7,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,82,"xae3afba2, 0xaafbe615, 0xa7b8c0cc, 0xa379dd7b,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,83,"x9b3660c6, 0x9ff77d71, 0x92b45ba8, 0x9675461f,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,84,"x8832161a, 0x8cf30bad, 0x81b02d74, 0x857130c3,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,85,"x5d8a9099, 0x594b8d2e, 0x5408abf7, 0x50c9b640,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,86,"x4e8ee645, 0x4a4ffbf2, 0x470cdd2b, 0x43cdc09c,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,87,"x7b827d21, 0x7f436096, 0x7200464f, 0x76c15bf8,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,88,"x68860bfd, 0x6c47164a, 0x61043093, 0x65c52d24,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,89,"x119b4be9, 0x155a565e, 0x18197087, 0x1cd86d30,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,90,"x029f3d35, 0x065e2082, 0x0b1d065b, 0x0fdc1bec,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,91,"x3793a651, 0x3352bbe6, 0x3e119d3f, 0x3ad08088,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,92,"x2497d08d, 0x2056cd3a, 0x2d15ebe3, 0x29d4f654,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,93,"xc5a92679, 0xc1683bce, 0xcc2b1d17, 0xc8ea00a0,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,94,"xd6ad50a5, 0xd26c4d12, 0xdf2f6bcb, 0xdbee767c,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,95,"xe3a1cbc1, 0xe760d676, 0xea23f0af, 0xeee2ed18,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,96,"xf0a5bd1d, 0xf464a0aa, 0xf9278673, 0xfde69bc4,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,97,"x89b8fd09, 0x8d79e0be, 0x803ac667, 0x84fbdbd0,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,98,"x9abc8bd5, 0x9e7d9662, 0x933eb0bb, 0x97ffad0c,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,99,"xafb010b1, 0xab710d06, 0xa6322bdf, 0xa2f33668,"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,100,"xbcb4666d, 0xb8757bda, 0xb5365d03, 0xb1f740b4"
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,103,rivate int m_globalCrc;
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,105,rotected CRC()
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,107,nitialiseCRC();
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,110,nt getFinalCRC()
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,112,eturn ~m_globalCrc;
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,115,oid initialiseCRC()
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,117,_globalCrc = 0xffffffff;
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,120,oid updateCRC( final int inCh )
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,122,nt temp = ( m_globalCrc >> 24 ) ^ inCh;
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,123,f( temp < 0 )
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,125,emp = 256 + temp;
False,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,127,_globalCrc = ( m_globalCrc << 8 ) ^ CRC32_TABLE[ temp ];
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,17, under the License.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,19,ackage org.apache.commons.compress.tar;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,21,mport java.io.IOException;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,22,mport java.io.InputStream;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,23,mport java.io.OutputStream;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,24,mport java.util.Arrays;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,27, The TarBuffer class implements the tar archive concept of a buffered input
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,28, stream. This concept goes back to the days of blocked tape drives and special
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,29," io devices. In the Java universe, the only real function that this class"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,30," performs is to ensure that files have the correct ""block"" size, or other tars"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,31, will complain. <p>
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,33, You should never have a need to access this class directly. TarBuffers are
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,34, created by Tar IO Streams.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,36," @author <a href=""mailto:time@ice.com"">Timothy Gerard Endres</a>"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,37," @author <a href=""mailto:peter@apache.org"">Peter Donald</a>"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,38, @version $Revision$ $Date$
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,40,lass TarBuffer
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,42,ublic static final int DEFAULT_RECORDSIZE = ( 512 );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,43,ublic static final int DEFAULT_BLOCKSIZE = ( DEFAULT_RECORDSIZE * 20 );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,45,rivate byte[] m_blockBuffer;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,46,rivate int m_blockSize;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,47,rivate int m_currBlkIdx;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,48,rivate int m_currRecIdx;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,49,rivate boolean m_debug;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,51,rivate InputStream m_input;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,52,rivate OutputStream m_output;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,53,rivate int m_recordSize;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,54,rivate int m_recsPerBlock;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,56,ublic TarBuffer( final InputStream input )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,58,"his( input, TarBuffer.DEFAULT_BLOCKSIZE );"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,61,"ublic TarBuffer( final InputStream input, final int blockSize )"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,63,"his( input, blockSize, TarBuffer.DEFAULT_RECORDSIZE );"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,66,"ublic TarBuffer( final InputStream input,"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,67,"inal int blockSize,"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,68,inal int recordSize )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,70,_input = input;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,71,"nitialize( blockSize, recordSize );"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,74,ublic TarBuffer( final OutputStream output )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,76,"his( output, TarBuffer.DEFAULT_BLOCKSIZE );"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,79,"ublic TarBuffer( final OutputStream output, final int blockSize )"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,81,"his( output, blockSize, TarBuffer.DEFAULT_RECORDSIZE );"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,84,"ublic TarBuffer( final OutputStream output,"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,85,"inal int blockSize,"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,86,inal int recordSize )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,88,_output = output;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,89,"nitialize( blockSize, recordSize );"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,93, Set the debugging flag for the buffer.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,95," @param debug If true, print debugging output."
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,97,ublic void setDebug( final boolean debug )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,99,_debug = debug;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,103, Get the TAR Buffer's block size. Blocks consist of multiple records.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,105, @return The BlockSize value
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,107,ublic int getBlockSize()
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,109,eturn m_blockSize;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,113," Get the current block number, zero based."
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,115, @return The current zero based block number.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,117,ublic int getCurrentBlockNum()
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,119,eturn m_currBlkIdx;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,123," Get the current record number, within the current block, zero based."
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,124," Thus, current offset = (currentBlockNum * recsPerBlk) + currentRecNum."
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,126, @return The current zero based record number.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,128,ublic int getCurrentRecordNum()
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,130,eturn m_currRecIdx - 1;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,134, Get the TAR Buffer's record size.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,136, @return The RecordSize value
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,138,ublic int getRecordSize()
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,140,eturn m_recordSize;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,144, Determine if an archive record indicate End of Archive. End of archive is
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,145, indicated by a record that consists entirely of null bytes.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,147, @param record The record data to check.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,148, @return The EOFRecord value
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,150,ublic boolean isEOFRecord( final byte[] record )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,152,inal int size = getRecordSize();
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,153,or( int i = 0; i < size; ++i )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,155,f( record[ i ] != 0 )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,157,eturn false;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,161,eturn true;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,165," Close the TarBuffer. If this is an output buffer, also flush the current"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,166, block before closing.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,168,ublic void close()
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,169,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,171,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,173,"ebug( ""TarBuffer.closeBuffer()."" );"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,176,f( null != m_output )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,178,lushBlock();
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,180,f( m_output != System.out && m_output != System.err )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,182,_output.close();
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,183,_output = null;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,186,lse if( m_input != null )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,188,f( m_input != System.in )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,190,_input.close();
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,191,_input = null;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,197, Read a record from the input stream and return the data.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,199, @return The record data.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,200, @exception IOException Description of Exception
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,202,ublic byte[] readRecord()
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,203,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,205,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,207,"inal String message = ""ReadRecord: recIdx = "" + m_currRecIdx +"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,208," blkIdx = "" + m_currBlkIdx;"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,209,ebug( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,212,f( null == m_input )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,214,"inal String message = ""reading from an output buffer"";"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,215,hrow new IOException( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,218,f( m_currRecIdx >= m_recsPerBlock )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,220,f( !readBlock() )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,222,eturn null;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,226,inal byte[] result = new byte[ m_recordSize ];
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,227,"ystem.arraycopy( m_blockBuffer,"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,228," m_currRecIdx * m_recordSize ),"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,229,"esult,"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,230,","
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,231,_recordSize );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,233,_currRecIdx++;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,235,eturn result;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,239, Skip over a record on the input stream.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,241,ublic void skipRecord()
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,242,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,244,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,246,"inal String message = ""SkipRecord: recIdx = "" + m_currRecIdx +"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,247," blkIdx = "" + m_currBlkIdx;"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,248,ebug( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,251,f( null == m_input )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,253,"inal String message = ""reading (via skip) from an output buffer"";"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,254,hrow new IOException( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,257,f( m_currRecIdx >= m_recsPerBlock )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,259,f( !readBlock() )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,261,eturn;// UNDONE
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,265,_currRecIdx++;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,269, Write an archive record to the archive.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,271, @param record The record data to write to the archive.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,273,ublic void writeRecord( final byte[] record )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,274,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,276,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,278,"inal String message = ""WriteRecord: recIdx = "" + m_currRecIdx +"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,279," blkIdx = "" + m_currBlkIdx;"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,280,ebug( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,283,f( null == m_output )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,285,"inal String message = ""writing to an input buffer"";"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,286,hrow new IOException( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,289,f( record.length != m_recordSize )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,291,"inal String message = ""record to write has length '"" +"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,292,"ecord.length + ""' which is not the record size of '"" +"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,293,"_recordSize + ""'"";"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,294,hrow new IOException( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,297,f( m_currRecIdx >= m_recsPerBlock )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,299,riteBlock();
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,302,"ystem.arraycopy( record,"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,303,","
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,304,"_blockBuffer,"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,305," m_currRecIdx * m_recordSize ),"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,306,_recordSize );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,308,_currRecIdx++;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,312," Write an archive record to the archive, where the record may be inside of"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,313," a larger array buffer. The buffer must be ""offset plus record size"" long."
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,315, @param buffer The buffer containing the record data to write.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,316, @param offset The offset of the record data within buf.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,318,"ublic void writeRecord( final byte[] buffer, final int offset )"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,319,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,321,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,323,"inal String message = ""WriteRecord: recIdx = "" + m_currRecIdx +"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,324," blkIdx = "" + m_currBlkIdx;"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,325,ebug( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,328,f( null == m_output )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,330,"inal String message = ""writing to an input buffer"";"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,331,hrow new IOException( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,334,f( ( offset + m_recordSize ) > buffer.length )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,336,"inal String message = ""record has length '"" + buffer.length +"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,337,"' with offset '"" + offset + ""' which is less than the record size of '"" +"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,338,"_recordSize + ""'"";"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,339,hrow new IOException( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,342,f( m_currRecIdx >= m_recsPerBlock )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,344,riteBlock();
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,347,"ystem.arraycopy( buffer,"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,348,"ffset,"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,349,"_blockBuffer,"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,350," m_currRecIdx * m_recordSize ),"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,351,_recordSize );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,353,_currRecIdx++;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,357, Flush the current data block if it has any data in it.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,359,rivate void flushBlock()
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,360,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,362,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,364,"inal String message = ""TarBuffer.flushBlock() called."";"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,365,ebug( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,368,f( m_output == null )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,370,"inal String message = ""writing to an input buffer"";"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,371,hrow new IOException( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,374,f( m_currRecIdx > 0 )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,376,riteBlock();
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,381, Initialization common to all constructors.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,383,"rivate void initialize( final int blockSize, final int recordSize )"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,385,_debug = false;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,386,_blockSize = blockSize;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,387,_recordSize = recordSize;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,388,_recsPerBlock = ( m_blockSize / m_recordSize );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,389,_blockBuffer = new byte[ m_blockSize ];
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,391,f( null != m_input )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,393,_currBlkIdx = -1;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,394,_currRecIdx = m_recsPerBlock;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,396,lse
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,398,_currBlkIdx = 0;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,399,_currRecIdx = 0;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,404," @return false if End-Of-File, else true"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,406,rivate boolean readBlock()
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,407,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,409,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,411,"inal String message = ""ReadBlock: blkIdx = "" + m_currBlkIdx;"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,412,ebug( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,415,f( null == m_input )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,417,"inal String message = ""reading from an output buffer"";"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,418,hrow new IOException( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,421,_currRecIdx = 0;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,423,nt offset = 0;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,424,nt bytesNeeded = m_blockSize;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,426,hile( bytesNeeded > 0 )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,428,"inal long numBytes = m_input.read( m_blockBuffer, offset, bytesNeeded );"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,431,/ NOTE
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,432,"/ We have fit EOF, and the block is not full!"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,434,/ This is a broken archive. It does not follow the standard
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,435,"/ blocking algorithm. However, because we are generous, and"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,436,"/ it requires little effort, we will simply ignore the error"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,437,/ and continue as if the entire block were read. This does
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,438,/ not appear to break anything upstream. We used to return
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,439,/ false in this case.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,441,/ Thanks to 'Yohann.Roussel@alcatel.fr' for this fix.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,443,f( numBytes == -1 )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,445,"/ However, just leaving the unread portion of the buffer dirty does"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,446,/ cause problems in some cases.  This problem is described in
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,447,/ http://issues.apache.org/bugzilla/show_bug.cgi?id=29877
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,449,/ The solution is to fill the unused portion of the buffer with zeros.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,451,"rrays.fill(m_blockBuffer, offset, offset + bytesNeeded, (byte) 0);"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,453,reak;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,456,ffset += numBytes;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,457,ytesNeeded -= numBytes;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,459,f( numBytes != m_blockSize )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,461,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,463,"ystem.err.println( ""ReadBlock: INCOMPLETE READ """
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,464," numBytes + "" of "" + m_blockSize"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,465," "" bytes read."" );"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,470,_currBlkIdx++;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,472,eturn true;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,476, Write a TarBuffer block to the archive.
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,478, @exception IOException Description of Exception
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,480,rivate void writeBlock()
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,481,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,483,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,485,"inal String message = ""WriteBlock: blkIdx = "" + m_currBlkIdx;"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,486,ebug( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,489,f( null == m_output )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,491,"inal String message = ""writing to an input buffer"";"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,492,hrow new IOException( message );
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,495,"_output.write( m_blockBuffer, 0, m_blockSize );"
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,496,_output.flush();
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,498,_currRecIdx = 0;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,499,_currBlkIdx++;
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,502,rotected void debug( final String message )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,504,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarBuffer.java,src/java/org/apache/commons/compress/tar/TarBuffer.java,506,ystem.err.println( message );
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,17, under the License.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,19,ackage org.apache.commons.compress.tar;
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,22, This interface contains all the definitions used in the package.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,24," @author <a href=""mailto:time@ice.com"">Timothy Gerard Endres</a>"
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,25," @author <a href=""mailto:stefano@apache.org"">Stefano Mazzocchi</a>"
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,26, @version $Revision$ $Date$
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,28,nterface TarConstants
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,31, The length of the mode field in a header buffer.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,33,nt MODELEN = 8;
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,36, The length of the user id field in a header buffer.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,38,nt UIDLEN = 8;
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,41, The length of the group id field in a header buffer.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,43,nt GIDLEN = 8;
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,46, The length of the checksum field in a header buffer.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,48,nt CHKSUMLEN = 8;
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,51, The length of the size field in a header buffer.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,53,nt SIZELEN = 12;
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,56, The length of the magic field in a header buffer.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,58,nt MAGICLEN = 8;
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,61, The length of the modification time field in a header buffer.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,63,nt MODTIMELEN = 12;
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,66, The length of the user name field in a header buffer.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,68,nt UNAMELEN = 32;
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,71, The length of the group name field in a header buffer.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,73,nt GNAMELEN = 32;
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,76, The length of the devices field in a header buffer.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,78,nt DEVLEN = 8;
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,81," LF_ constants represent the ""link flag"" of an entry, or more commonly,"
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,82," the ""entry type"". This is the ""old way"" of indicating a normal file."
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,84,yte LF_OLDNORM = 0;
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,87, Normal file type.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,89,yte LF_NORMAL = (byte)'0';
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,92, Link file type.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,94,yte LF_LINK = (byte)'1';
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,97, Symbolic link file type.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,99,yte LF_SYMLINK = (byte)'2';
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,102, Character device file type.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,104,yte LF_CHR = (byte)'3';
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,107, Block device file type.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,109,yte LF_BLK = (byte)'4';
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,112, Directory file type.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,114,yte LF_DIR = (byte)'5';
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,117, FIFO (pipe) file type.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,119,yte LF_FIFO = (byte)'6';
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,122, Contiguous file type.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,124,yte LF_CONTIG = (byte)'7';
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,127, The magic tag representing a POSIX tar archive.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,129,"tring TMAGIC = ""ustar"";"
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,132, The magic tag representing a GNU tar archive.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,134,"tring GNU_TMAGIC = ""ustar  "";"
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,137, The namr of the GNU tar entry which contains a long name.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,139,"tring GNU_LONGLINK = ""././@LongLink"";"
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,142, Identifies the *next* file on the tape as having a long name.
False,src/java/org/apache/commons/compress/tar/TarConstants.java,src/java/org/apache/commons/compress/tar/TarConstants.java,144,yte LF_GNUTYPE_LONGNAME = (byte)'L';
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,17, under the License.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,19,ackage org.apache.commons.compress.tar;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,21,mport java.io.File;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,22,mport java.util.Date;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,23,mport java.util.Locale;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,26, This class represents an entry in a Tar archive. It consists of the entry's
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,27," header, as well as the entry's File. Entries can be instantiated in one of"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,28," three ways, depending on how they are to be used. <p>"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,30, TarEntries that are created from the header bytes read from an archive are
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,31, instantiated with the TarEntry( byte[] ) constructor. These entries will be
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,32, used when extracting from or listing the contents of an archive. These
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,33, entries have their header filled in using the header bytes. They also set the
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,34," File to null, since they reference an archive entry not a file. <p>"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,36, TarEntries that are created from Files that are to be written into an archive
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,37, are instantiated with the TarEntry( File ) constructor. These entries have
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,38, their header filled in using the File's information. They also keep a
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,39, reference to the File for convenience when writing entries. <p>
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,41," Finally, TarEntries can be constructed from nothing but a name. This allows"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,42," the programmer to construct the entry by hand, for instance when only an"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,43," InputStream is available for writing to the archive, and the header"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,44, information is constructed from other information. In this case the header
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,45, fields are set to defaults and the File is set to null. <p>
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,47, The C structure for a Tar Entry's header is: <pre>
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,48, struct header {
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,49, char name[NAMSIZ];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,50, char mode[8];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,51, char uid[8];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,52, char gid[8];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,53, char size[12];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,54, char mtime[12];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,55, char chksum[8];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,56, char linkflag;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,57, char linkname[NAMSIZ];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,58, char magic[8];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,59, char uname[TUNMLEN];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,60, char gname[TGNMLEN];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,61, char devmajor[8];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,62, char devminor[8];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,63, } header;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,64, </pre>
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,66," @author <a href=""mailto:time@ice.com"">Timothy Gerard Endres</a>"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,67," @author <a href=""mailto:stefano@apache.org"">Stefano Mazzocchi</a>"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,68," @author <a href=""mailto:peter@apache.org"">Peter Donald</a>"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,69, @version $Revision$ $Date$
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,70, @see TarInputStream
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,71, @see TarOutputStream
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,73,ublic class TarEntry
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,76, The length of the name field in a header buffer.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,78,ublic static final int NAMELEN = 100;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,81, The entry's modification time.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,83,rivate int m_checkSum;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,86, The entry's group name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,88,rivate int m_devMajor;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,91, The entry's major device number.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,93,rivate int m_devMinor;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,96, The entry's minor device number.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,98,rivate File m_file;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,101, The entry's user id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,103,rivate int m_groupID;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,106, The entry's user name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,108,rivate StringBuffer m_groupName;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,111, The entry's checksum.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,113,rivate byte m_linkFlag;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,116, The entry's link flag.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,118,rivate StringBuffer m_linkName;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,121, The entry's link name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,123,rivate StringBuffer m_magic;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,126, The entry's size.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,128,rivate long m_modTime;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,131, The entry's name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,133,rivate int m_mode;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,135,rivate StringBuffer m_name;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,138, The entry's group id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,140,rivate long m_size;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,143, The entry's permission mode.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,145,rivate int m_userID;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,148, The entry's magic tag.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,150,rivate StringBuffer m_userName;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,153, Construct an entry with only a name. This allows the programmer to
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,154," construct the entry's header ""by hand"". File is set to null."
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,156, @param name the name of the entry
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,158,ublic TarEntry( final String name )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,160,his();
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,162,"inal boolean isDir = name.endsWith( ""/"" );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,164,_name = new StringBuffer( name );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,165,_mode = isDir ? 040755 : 0100644;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,166,_linkFlag = isDir ? TarConstants.LF_DIR : TarConstants.LF_NORMAL;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,167,_modTime = ( new Date() ).getTime() / 1000;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,168,"_linkName = new StringBuffer( """" );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,169,"_userName = new StringBuffer( """" );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,170,"_groupName = new StringBuffer( """" );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,174, Construct an entry with a name an a link flag.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,176, @param name Description of Parameter
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,177, @param linkFlag Description of Parameter
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,179,"ublic TarEntry( final String name, final byte linkFlag )"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,181,his( name );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,182,_linkFlag = linkFlag;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,186," Construct an entry for a file. File is set to file, and the header is"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,187, constructed from information from the file.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,189, @param file The file that the entry represents.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,191,ublic TarEntry( final File file )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,193,his();
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,195,_file = file;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,197,tring name = file.getPath();
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,199,/ Strip off drive letters!
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,200,inal String osName =
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,201,"ystem.getProperty( ""os.name"" ).toLowerCase( Locale.US );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,202,"f( -1 != osName.indexOf( ""netware"" ) )"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,204,f( name.length() > 2 )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,206,inal char ch1 = name.charAt( 0 );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,207,inal char ch2 = name.charAt( 1 );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,209,f( ch2 == ':' &&
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,210, ( ch1 >= 'a' && ch1 <= 'z' ) ||
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,211, ch1 >= 'A' && ch1 <= 'Z' ) ) )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,213,ame = name.substring( 2 );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,217,"lse if( -1 != osName.indexOf( ""netware"" ) )"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,219,inal int colon = name.indexOf( ':' );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,220,f( colon != -1 )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,222,ame = name.substring( colon + 1 );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,226,"ame = name.replace( File.separatorChar, '/' );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,228,/ No absolute pathnames
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,229,"/ Windows (and Posix?) paths can start with ""\\NetworkDrive\"","
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,230,/ so we loop on starting /'s.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,231,"hile( name.startsWith( ""/"" ) )"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,233,ame = name.substring( 1 );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,236,"_linkName = new StringBuffer( """" );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,237,_name = new StringBuffer( name );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,239,f( file.isDirectory() )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,241,_mode = 040755;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,242,_linkFlag = TarConstants.LF_DIR;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,244,f( m_name.charAt( m_name.length() - 1 ) != '/' )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,246,"_name.append( ""/"" );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,249,lse
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,251,_mode = 0100644;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,252,_linkFlag = TarConstants.LF_NORMAL;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,255,_size = file.length();
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,256,_modTime = file.lastModified() / 1000;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,257,_checkSum = 0;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,258,_devMajor = 0;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,259,_devMinor = 0;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,263, Construct an entry from an archive's header bytes. File is set to null.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,265, @param header The header bytes from a tar archive entry.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,267,ublic TarEntry( final byte[] header )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,269,his();
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,270,arseTarHeader( header );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,274, Construct an empty entry and prepares the header values.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,276,rivate TarEntry()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,278,_magic = new StringBuffer( TarConstants.TMAGIC );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,279,_name = new StringBuffer();
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,280,_linkName = new StringBuffer();
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,282,"tring user = System.getProperty( ""user.name"", """" );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,283,f( user.length() > 31 )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,285,"ser = user.substring( 0, 31 );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,288,_userName = new StringBuffer( user );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,289,"_groupName = new StringBuffer( """" );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,293, Set this entry's group id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,295, @param groupId This entry's new group id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,297,ublic void setGroupID( final int groupId )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,299,_groupID = groupId;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,303, Set this entry's group id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,305, @param groupId This entry's new group id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,306, @deprecated Use setGroupID() instead
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,307, @see #setGroupID(int)
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,309,ublic void setGroupId( final int groupId )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,311,_groupID = groupId;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,315, Set this entry's group name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,317, @param groupName This entry's new group name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,319,ublic void setGroupName( final String groupName )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,321,_groupName = new StringBuffer( groupName );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,325, Set this entry's modification time. The parameter passed to this method
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,326," is in ""Java time""."
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,328, @param time This entry's new modification time.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,330,ublic void setModTime( final long time )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,332,_modTime = time / 1000;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,336, Set this entry's modification time.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,338, @param time This entry's new modification time.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,340,ublic void setModTime( final Date time )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,342,_modTime = time.getTime() / 1000;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,346, Set the mode for this entry
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,348, @param mode The new Mode value
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,350,ublic void setMode( final int mode )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,352,_mode = mode;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,356, Set this entry's name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,358, @param name This entry's new name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,360,ublic void setName( final String name )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,362,_name = new StringBuffer( name );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,366, Set this entry's file size.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,368, @param size This entry's new file size.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,370,ublic void setSize( final long size )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,372,_size = size;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,376, Set this entry's user id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,378, @param userId This entry's new user id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,380,ublic void setUserID( final int userId )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,382,_userID = userId;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,386, Set this entry's user id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,388, @param userId This entry's new user id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,389, @deprecated Use setUserID() instead
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,390, @see #setUserID(int)
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,392,ublic void setUserId( final int userId )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,394,_userID = userId;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,398, Set this entry's user name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,400, @param userName This entry's new user name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,402,ublic void setUserName( final String userName )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,404,_userName = new StringBuffer( userName );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,408," If this entry represents a file, and the file is a directory, return an"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,409, array of TarEntries for this entry's children.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,411, @return An array of TarEntry's for this entry's children.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,413,ublic TarEntry[] getDirectoryEntries()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,415,f( null == m_file || !m_file.isDirectory() )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,417,eturn new TarEntry[ 0 ];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,420,inal String[] list = m_file.list();
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,421,inal TarEntry[] result = new TarEntry[ list.length ];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,423,or( int i = 0; i < list.length; ++i )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,425,"esult[ i ] = new TarEntry( new File( m_file, list[ i ] ) );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,428,eturn result;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,432, Get this entry's file.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,434, @return This entry's file.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,436,ublic File getFile()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,438,eturn m_file;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,442, Get this entry's group id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,444, @return This entry's group id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,445, @deprecated Use getGroupID() instead
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,446, @see #getGroupID()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,448,ublic int getGroupId()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,450,eturn m_groupID;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,454, Get this entry's group id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,456, @return This entry's group id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,458,ublic int getGroupID()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,460,eturn m_groupID;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,464, Get this entry's group name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,466, @return This entry's group name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,468,ublic String getGroupName()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,470,eturn m_groupName.toString();
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,474, Set this entry's modification time.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,476, @return The ModTime value
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,478,ublic Date getModTime()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,480,eturn new Date( m_modTime * 1000 );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,484, Get this entry's mode.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,486, @return This entry's mode.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,488,ublic int getMode()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,490,eturn m_mode;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,494, Get this entry's name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,496, @return This entry's name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,498,ublic String getName()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,500,eturn m_name.toString();
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,504, Get this entry's file size.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,506, @return This entry's file size.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,508,ublic long getSize()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,510,eturn m_size;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,514, Get this entry's checksum.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,516, @return This entry's checksum.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,518,ublic int getCheckSum()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,520,eturn m_checkSum;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,524, Get this entry's user id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,526, @return This entry's user id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,527, @deprecated Use getUserID() instead
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,528, @see #getUserID()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,530,ublic int getUserId()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,532,eturn m_userID;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,536, Get this entry's user id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,538, @return This entry's user id.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,540,ublic int getUserID()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,542,eturn m_userID;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,546, Get this entry's user name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,548, @return This entry's user name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,550,ublic String getUserName()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,552,eturn m_userName.toString();
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,556, Determine if the given entry is a descendant of this entry. Descendancy
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,557, is determined by the name of the descendant starting with this entry's
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,558, name.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,560, @param desc Entry to be checked as a descendent of
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,561, @return True if entry is a descendant of
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,563,ublic boolean isDescendent( final TarEntry desc )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,565,eturn desc.getName().startsWith( getName() );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,569, Return whether or not this entry represents a directory.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,571, @return True if this entry is a directory.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,573,ublic boolean isDirectory()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,575,f( m_file != null )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,577,eturn m_file.isDirectory();
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,580,f( m_linkFlag == TarConstants.LF_DIR )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,582,eturn true;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,585,"f( getName().endsWith( ""/"" ) )"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,587,eturn true;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,590,eturn false;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,594, Indicate if this entry is a GNU long name block
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,596, @return true if this is a long name extension provided by GNU tar
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,598,ublic boolean isGNULongNameEntry()
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,600,eturn m_linkFlag == TarConstants.LF_GNUTYPE_LONGNAME &&
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,601,_name.toString().equals( TarConstants.GNU_LONGLINK );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,605, Determine if the two entries are equal. Equality is determined by the
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,606, header names being equal.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,608, @param other Entry to be checked for equality.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,609, @return True if the entries are equal.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,611,ublic boolean equals( final TarEntry other )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,613,eturn getName().equals( other.getName() );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,617, Parse an entry's header information from a header buffer.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,619, @param header The tar entry header buffer to get information from.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,621,rivate void parseTarHeader( final byte[] header )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,623,nt offset = 0;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,625,"_name = TarUtils.parseName( header, offset, NAMELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,626,ffset += NAMELEN;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,627,"_mode = (int)TarUtils.parseOctal( header, offset, TarConstants.MODELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,628,ffset += TarConstants.MODELEN;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,629,"_userID = (int)TarUtils.parseOctal( header, offset, TarConstants.UIDLEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,630,ffset += TarConstants.UIDLEN;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,631,"_groupID = (int)TarUtils.parseOctal( header, offset, TarConstants.GIDLEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,632,ffset += TarConstants.GIDLEN;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,633,"_size = TarUtils.parseOctal( header, offset, TarConstants.SIZELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,634,ffset += TarConstants.SIZELEN;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,635,"_modTime = TarUtils.parseOctal( header, offset, TarConstants.MODTIMELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,636,ffset += TarConstants.MODTIMELEN;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,637,"_checkSum = (int)TarUtils.parseOctal( header, offset, TarConstants.CHKSUMLEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,638,ffset += TarConstants.CHKSUMLEN;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,639,_linkFlag = header[ offset++ ];
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,640,"_linkName = TarUtils.parseName( header, offset, NAMELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,641,ffset += NAMELEN;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,642,"_magic = TarUtils.parseName( header, offset, TarConstants.MAGICLEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,643,ffset += TarConstants.MAGICLEN;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,644,"_userName = TarUtils.parseName( header, offset, TarConstants.UNAMELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,645,ffset += TarConstants.UNAMELEN;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,646,"_groupName = TarUtils.parseName( header, offset, TarConstants.GNAMELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,647,ffset += TarConstants.GNAMELEN;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,648,"_devMajor = (int)TarUtils.parseOctal( header, offset, TarConstants.DEVLEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,649,ffset += TarConstants.DEVLEN;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,650,"_devMinor = (int)TarUtils.parseOctal( header, offset, TarConstants.DEVLEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,654, Write an entry's header information to a header buffer.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,656, @param buffer The tar entry header buffer to fill in.
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,658,ublic void writeEntryHeader( final byte[] buffer )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,660,nt offset = 0;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,662,"ffset = TarUtils.getNameBytes( m_name, buffer, offset, NAMELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,663,"ffset = TarUtils.getOctalBytes( m_mode, buffer, offset, TarConstants.MODELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,664,"ffset = TarUtils.getOctalBytes( m_userID, buffer, offset, TarConstants.UIDLEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,665,"ffset = TarUtils.getOctalBytes( m_groupID, buffer, offset, TarConstants.GIDLEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,666,"ffset = TarUtils.getLongOctalBytes( m_size, buffer, offset, TarConstants.SIZELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,667,"ffset = TarUtils.getLongOctalBytes( m_modTime, buffer, offset, TarConstants.MODTIMELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,669,inal int checkSumOffset = offset;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,670,or( int i = 0; i < TarConstants.CHKSUMLEN; ++i )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,672,uffer[ offset++ ] = (byte)' ';
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,675,uffer[ offset++ ] = m_linkFlag;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,676,"ffset = TarUtils.getNameBytes( m_linkName, buffer, offset, NAMELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,677,"ffset = TarUtils.getNameBytes( m_magic, buffer, offset, TarConstants.MAGICLEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,678,"ffset = TarUtils.getNameBytes( m_userName, buffer, offset, TarConstants.UNAMELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,679,"ffset = TarUtils.getNameBytes( m_groupName, buffer, offset, TarConstants.GNAMELEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,680,"ffset = TarUtils.getOctalBytes( m_devMajor, buffer, offset, TarConstants.DEVLEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,681,"ffset = TarUtils.getOctalBytes( m_devMinor, buffer, offset, TarConstants.DEVLEN );"
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,683,hile( offset < buffer.length )
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,685,uffer[ offset++ ] = 0;
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,688,inal long checkSum = TarUtils.computeCheckSum( buffer );
False,src/java/org/apache/commons/compress/tar/TarEntry.java,src/java/org/apache/commons/compress/tar/TarEntry.java,689,"arUtils.getCheckSumOctalBytes( checkSum, buffer, checkSumOffset, TarConstants.CHKSUMLEN );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,17, under the License.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,19,ackage org.apache.commons.compress.tar;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,21,mport java.io.FilterInputStream;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,22,mport java.io.IOException;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,23,mport java.io.InputStream;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,24,mport java.io.OutputStream;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,27, The TarInputStream reads a UNIX tar archive as an InputStream. methods are
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,28," provided to position at each successive entry in the archive, and the read"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,29, each entry as a normal input stream using read().
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,31," @author <a href=""mailto:time@ice.com"">Timothy Gerard Endres</a>"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,32," @author <a href=""mailto:stefano@apache.org"">Stefano Mazzocchi</a>"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,33," @author <a href=""mailto:peter@apache.org"">Peter Donald</a>"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,34, @version $Revision$ $Date$
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,35, @see TarInputStream
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,36, @see TarEntry
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,38,ublic class TarInputStream
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,39,xtends FilterInputStream
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,41,rivate TarBuffer m_buffer;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,42,rivate TarEntry m_currEntry;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,43,rivate boolean m_debug;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,44,rivate int m_entryOffset;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,45,rivate int m_entrySize;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,46,rivate boolean m_hasHitEOF;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,47,rivate byte[] m_oneBuf;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,48,rivate byte[] m_readBuf;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,51, Construct a TarInputStream using specified input
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,52, stream and default block and record sizes.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,54, @param input stream to create TarInputStream from
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,55, @see TarBuffer#DEFAULT_BLOCKSIZE
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,56, @see TarBuffer#DEFAULT_RECORDSIZE
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,58,ublic TarInputStream( final InputStream input )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,60,"his( input, TarBuffer.DEFAULT_BLOCKSIZE, TarBuffer.DEFAULT_RECORDSIZE );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,64, Construct a TarInputStream using specified input
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,65," stream, block size and default record sizes."
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,67, @param input stream to create TarInputStream from
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,68, @param blockSize the block size to use
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,69, @see TarBuffer#DEFAULT_RECORDSIZE
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,71,"ublic TarInputStream( final InputStream input,"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,72,inal int blockSize )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,74,"his( input, blockSize, TarBuffer.DEFAULT_RECORDSIZE );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,78, Construct a TarInputStream using specified input
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,79," stream, block size and record sizes."
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,81, @param input stream to create TarInputStream from
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,82, @param blockSize the block size to use
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,83, @param recordSize the record size to use
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,85,"ublic TarInputStream( final InputStream input,"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,86,"inal int blockSize,"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,87,inal int recordSize )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,89,uper( input );
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,91,"_buffer = new TarBuffer( input, blockSize, recordSize );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,92,_oneBuf = new byte[ 1 ];
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,96, Sets the debugging flag.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,98, @param debug The new Debug value
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,100,ublic void setDebug( final boolean debug )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,102,_debug = debug;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,103,_buffer.setDebug( debug );
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,107, Get the next entry in this tar archive. This will skip over any remaining
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,108," data in the current entry, if there is one, and place the input stream at"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,109," the header of the next entry, and read the header and instantiate a new"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,110, TarEntry from the header bytes and return that entry. If there are no
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,111," more entries in the archive, null will be returned to indicate that the"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,112, end of the archive has been reached.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,114," @return The next TarEntry in the archive, or null."
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,115, @exception IOException Description of Exception
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,117,ublic TarEntry getNextEntry()
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,118,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,120,f( m_hasHitEOF )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,122,eturn null;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,125,f( m_currEntry != null )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,127,inal int numToSkip = m_entrySize - m_entryOffset;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,129,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,131,"inal String message = ""TarInputStream: SKIP currENTRY '"" +"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,132,"_currEntry.getName() + ""' SZ "" + m_entrySize +"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,133," OFF "" + m_entryOffset + ""  skipping "" + numToSkip + "" bytes"";"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,134,ebug( message );
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,137,f( numToSkip > 0 )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,139,kip( numToSkip );
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,142,_readBuf = null;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,145,inal byte[] headerBuf = m_buffer.readRecord();
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,146,f( headerBuf == null )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,148,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,150,"ebug( ""READ NULL RECORD"" );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,152,_hasHitEOF = true;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,154,lse if( m_buffer.isEOFRecord( headerBuf ) )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,156,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,158,"ebug( ""READ EOF RECORD"" );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,160,_hasHitEOF = true;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,163,f( m_hasHitEOF )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,165,_currEntry = null;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,167,lse
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,169,_currEntry = new TarEntry( headerBuf );
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,171,f( !( headerBuf[ 257 ] == 'u' && headerBuf[ 258 ] == 's' &&
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,172,eaderBuf[ 259 ] == 't' && headerBuf[ 260 ] == 'a' &&
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,173,eaderBuf[ 261 ] == 'r' ) )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,175,/Must be v7Format
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,178,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,180,"inal String message = ""TarInputStream: SET CURRENTRY '"" +"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,181,"_currEntry.getName() + ""' size = "" + m_currEntry.getSize();"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,182,ebug( message );
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,185,_entryOffset = 0;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,187,/ REVIEW How do we resolve this discrepancy?!
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,188,_entrySize = (int)m_currEntry.getSize();
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,191,f( null != m_currEntry && m_currEntry.isGNULongNameEntry() )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,193,/ read in the name
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,194,inal StringBuffer longName = new StringBuffer();
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,195,inal byte[] buffer = new byte[ 256 ];
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,196,nt length = 0;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,197,hile( ( length = read( buffer ) ) >= 0 )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,199,"inal String str = new String( buffer, 0, length );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,200,ongName.append( str );
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,202,etNextEntry();
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,204,/ remove trailing null terminator
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,205,f (longName.length() > 0
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,206,& longName.charAt(longName.length() - 1) == 0) {
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,207,ongName.deleteCharAt(longName.length() - 1);
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,210,_currEntry.setName( longName.toString() );
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,213,eturn m_currEntry;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,217, Get the record size being used by this stream's TarBuffer.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,219, @return The TarBuffer record size.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,221,ublic int getRecordSize()
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,223,eturn m_buffer.getRecordSize();
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,227, Get the available data that can be read from the current entry in the
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,228, archive. This does not indicate how much data is left in the entire
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,229," archive, only in the current entry. This value is determined from the"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,230, entry's size header field and the amount of data already read from the
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,231, current entry.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,233, @return The number of available bytes for the current entry.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,234, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,236,ublic int available()
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,237,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,239,eturn m_entrySize - m_entryOffset;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,243, Closes this stream. Calls the TarBuffer's close() method.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,245, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,247,ublic void close()
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,248,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,250,_buffer.close();
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,254, Copies the contents of the current tar archive entry directly into an
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,255, output stream.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,257, @param output The OutputStream into which to write the entry's data.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,258, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,260,ublic void copyEntryContents( final OutputStream output )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,261,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,263,inal byte[] buffer = new byte[ 32 * 1024 ];
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,264,hile( true )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,266,"inal int numRead = read( buffer, 0, buffer.length );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,267,f( numRead == -1 )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,269,reak;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,272,"utput.write( buffer, 0, numRead );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,277," Since we do not support marking just yet, we do nothing."
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,279, @param markLimit The limit to mark.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,281,ublic void mark( int markLimit )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,286," Since we do not support marking just yet, we return false."
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,288, @return False.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,290,ublic boolean markSupported()
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,292,eturn false;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,296, Reads a byte from the current tar archive entry. This method simply calls
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,297," read( byte[], int, int )."
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,299," @return The byte read, or -1 at EOF."
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,300, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,302,ublic int read()
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,303,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,305,"inal int num = read( m_oneBuf, 0, 1 );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,306,f( num == -1 )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,308,eturn num;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,310,lse
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,312,eturn (int)m_oneBuf[ 0 ];
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,317, Reads bytes from the current tar archive entry. This method simply calls
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,318," read( byte[], int, int )."
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,320, @param buffer The buffer into which to place bytes read.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,321," @return The number of bytes read, or -1 at EOF."
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,322, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,324,ublic int read( final byte[] buffer )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,325,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,327,"eturn read( buffer, 0, buffer.length );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,331, Reads bytes from the current tar archive entry. This method is aware of
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,332, the boundaries of the current entry in the archive and will deal with
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,333, them as if they were this stream's start and EOF.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,335, @param buffer The buffer into which to place bytes read.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,336, @param offset The offset at which to place bytes read.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,337, @param count The number of bytes to read.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,338," @return The number of bytes read, or -1 at EOF."
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,339, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,341,"ublic int read( final byte[] buffer,"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,342,"inal int offset,"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,343,inal int count )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,344,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,346,nt position = offset;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,347,nt numToRead = count;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,348,nt totalRead = 0;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,350,f( m_entryOffset >= m_entrySize )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,352,eturn -1;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,355,f( ( numToRead + m_entryOffset ) > m_entrySize )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,357,umToRead = ( m_entrySize - m_entryOffset );
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,360,f( null != m_readBuf )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,362,inal int size =
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,363, numToRead > m_readBuf.length ) ? m_readBuf.length : numToRead;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,365,"ystem.arraycopy( m_readBuf, 0, buffer, position, size );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,367,f( size >= m_readBuf.length )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,369,_readBuf = null;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,371,lse
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,373,inal int newLength = m_readBuf.length - size;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,374,inal byte[] newBuffer = new byte[ newLength ];
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,376,"ystem.arraycopy( m_readBuf, size, newBuffer, 0, newLength );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,378,_readBuf = newBuffer;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,381,otalRead += size;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,382,umToRead -= size;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,383,osition += size;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,386,hile( numToRead > 0 )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,388,inal byte[] rec = m_buffer.readRecord();
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,389,f( null == rec )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,391,/ Unexpected EOF!
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,392,inal String message =
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,393,"unexpected EOF with "" + numToRead + "" bytes unread"";"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,394,hrow new IOException( message );
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,397,nt size = numToRead;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,398,inal int recordLength = rec.length;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,400,f( recordLength > size )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,402,"ystem.arraycopy( rec, 0, buffer, position, size );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,404,_readBuf = new byte[ recordLength - size ];
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,406,"ystem.arraycopy( rec, size, m_readBuf, 0, recordLength - size );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,408,lse
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,410,ize = recordLength;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,412,"ystem.arraycopy( rec, 0, buffer, position, recordLength );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,415,otalRead += size;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,416,umToRead -= size;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,417,osition += size;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,420,_entryOffset += totalRead;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,422,eturn totalRead;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,426," Since we do not support marking just yet, we do nothing."
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,428,ublic void reset()
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,433, Skip bytes in the input buffer. This skips bytes in the current entry's
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,434," data, not the entire archive, and will stop at the end of the current"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,435, entry's data if the number to skip extends beyond that point.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,437, @param numToSkip The number of bytes to skip.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,438, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,440,ublic void skip( final int numToSkip )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,441,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,443,/ REVIEW
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,444,"/ This is horribly inefficient, but it ensures that we"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,445,/ properly skip over bytes via the TarBuffer...
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,447,inal byte[] skipBuf = new byte[ 8 * 1024 ];
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,448,nt num = numToSkip;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,449,hile( num > 0 )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,451,inal int count = ( num > skipBuf.length ) ? skipBuf.length : num;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,452,"inal int numRead = read( skipBuf, 0, count );"
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,453,f( numRead == -1 )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,455,reak;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,458,um -= numRead;
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,463, Utility method to do debugging.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,464, Capable of being overidden in sub-classes.
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,466, @param message the message to use in debugging
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,468,rotected void debug( final String message )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,470,f( m_debug )
False,src/java/org/apache/commons/compress/tar/TarInputStream.java,src/java/org/apache/commons/compress/tar/TarInputStream.java,472,ystem.err.println( message );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,17, under the License.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,19,ackage org.apache.commons.compress.tar;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,21,mport java.io.FilterOutputStream;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,22,mport java.io.IOException;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,23,mport java.io.InputStream;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,24,mport java.io.OutputStream;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,27, The TarOutputStream writes a UNIX tar archive as an OutputStream. Methods are
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,28," provided to put entries, and then write their contents by writing to this"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,29, stream using write().
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,31," @author Timothy Gerard Endres <a href=""mailto:time@ice.com"">time@ice.com</a>"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,32," @author <a href=""mailto:peter@apache.org"">Peter Donald</a>"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,33, @version $Revision$ $Date$
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,34, @see TarInputStream
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,35, @see TarEntry
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,37,ublic class TarOutputStream
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,38,xtends FilterOutputStream
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,41, Flag to indicate that an error should be generated if
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,42, an attempt is made to write an entry that exceeds the 100 char
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,43, POSIX limit.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,45,ublic static final int LONGFILE_ERROR = 0;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,48, Flag to indicate that entry name should be truncated if
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,49, an attempt is made to write an entry that exceeds the 100 char
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,50, POSIX limit.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,52,ublic static final int LONGFILE_TRUNCATE = 1;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,55, Flag to indicate that entry name should be formatted
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,56, according to GNU tar extension if an attempt is made
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,57, to write an entry that exceeds the 100 char POSIX
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,58, limit. Note that this makes the jar unreadable by
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,59, non-GNU tar commands.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,61,ublic static final int LONGFILE_GNU = 2;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,63,rivate int m_longFileMode = LONGFILE_ERROR;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,64,rivate byte[] m_assemBuf;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,65,rivate int m_assemLen;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,66,rivate TarBuffer m_buffer;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,67,rivate int m_currBytes;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,68,rivate int m_currSize;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,70,rivate byte[] m_oneBuf;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,71,rivate byte[] m_recordBuf;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,74, Construct a TarOutputStream using specified input
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,75, stream and default block and record sizes.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,77, @param output stream to create TarOutputStream from
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,78, @see TarBuffer#DEFAULT_BLOCKSIZE
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,79, @see TarBuffer#DEFAULT_RECORDSIZE
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,81,ublic TarOutputStream( final OutputStream output )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,83,"his( output, TarBuffer.DEFAULT_BLOCKSIZE, TarBuffer.DEFAULT_RECORDSIZE );"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,87, Construct a TarOutputStream using specified input
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,88," stream, block size and default record sizes."
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,90, @param output stream to create TarOutputStream from
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,91, @param blockSize the block size
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,92, @see TarBuffer#DEFAULT_RECORDSIZE
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,94,"ublic TarOutputStream( final OutputStream output,"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,95,inal int blockSize )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,97,"his( output, blockSize, TarBuffer.DEFAULT_RECORDSIZE );"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,101, Construct a TarOutputStream using specified input
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,102," stream, block size and record sizes."
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,104, @param output stream to create TarOutputStream from
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,105, @param blockSize the block size
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,106, @param recordSize the record size
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,108,"ublic TarOutputStream( final OutputStream output,"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,109,"inal int blockSize,"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,110,inal int recordSize )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,112,uper( output );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,114,"_buffer = new TarBuffer( output, blockSize, recordSize );"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,115,_assemLen = 0;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,116,_assemBuf = new byte[ recordSize ];
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,117,_recordBuf = new byte[ recordSize ];
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,118,_oneBuf = new byte[ 1 ];
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,122, Sets the debugging flag in this stream's TarBuffer.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,124, @param debug The new BufferDebug value
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,126,ublic void setBufferDebug( boolean debug )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,128,_buffer.setDebug( debug );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,132, Set the mode used to work with entrys exceeding
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,133, 100 chars (and thus break the POSIX standard).
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,134, Must be one of the LONGFILE_* constants.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,136, @param longFileMode the mode
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,138,ublic void setLongFileMode( final int longFileMode )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,140,f( LONGFILE_ERROR != longFileMode &&
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,141,ONGFILE_GNU != longFileMode &&
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,142,ONGFILE_TRUNCATE != longFileMode )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,144,"hrow new IllegalArgumentException( ""longFileMode"" );"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,146,_longFileMode = longFileMode;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,150, Get the record size being used by this stream's TarBuffer.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,152, @return The TarBuffer record size.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,154,ublic int getRecordSize()
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,156,eturn m_buffer.getRecordSize();
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,160, Ends the TAR archive and closes the underlying OutputStream. This means
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,161, that finish() is called followed by calling the TarBuffer's close().
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,163, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,165,ublic void close()
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,166,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,168,inish();
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,169,_buffer.close();
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,173, Close an entry. This method MUST be called for all file entries that
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,174, contain data. The reason is that we must buffer data written to the
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,175," stream in order to satisfy the buffer's record based writes. Thus, there"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,176, may be data fragments still being assembled that must be written to the
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,177, output stream before this entry is closed and the next entry written.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,179, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,181,ublic void closeEntry()
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,182,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,184,f( m_assemLen > 0 )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,186,or( int i = m_assemLen; i < m_assemBuf.length; ++i )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,188,_assemBuf[ i ] = 0;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,191,_buffer.writeRecord( m_assemBuf );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,193,_currBytes += m_assemLen;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,194,_assemLen = 0;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,197,f( m_currBytes < m_currSize )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,199,"inal String message = ""entry closed at '"" + m_currBytes +"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,200,"' before the '"" + m_currSize +"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,201,"' bytes specified in the header were written"";"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,202,hrow new IOException( message );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,207, Ends the TAR archive without closing the underlying OutputStream. The
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,208, result is that the EOF record of nulls is written.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,210, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,212,ublic void finish()
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,213,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,215,riteEOFRecord();
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,219, Put an entry on the output stream. This writes the entry's header record
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,220, and positions the output stream for writing the contents of the entry.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,221," Once this method is called, the stream is ready for calls to write() to"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,222," write the entry's contents. Once the contents are written, closeEntry()"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,223, <B>MUST</B> be called to ensure that all buffered data is completely
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,224, written to the output stream.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,226, @param entry The TarEntry to be written to the archive.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,227, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,229,ublic void putNextEntry( final TarEntry entry )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,230,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,232,f( entry.getName().length() >= TarEntry.NAMELEN )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,234,f( m_longFileMode == LONGFILE_GNU )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,236,"/ create a TarEntry for the LongLink, the contents"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,237,/ of which are the entry's name
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,238,inal TarEntry longLinkEntry =
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,239,"ew TarEntry( TarConstants.GNU_LONGLINK,"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,240,arConstants.LF_GNUTYPE_LONGNAME );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,242,ongLinkEntry.setSize( entry.getName().length() );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,243,utNextEntry( longLinkEntry );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,244,rite( entry.getName().getBytes() );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,245,/write( 0 );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,246,loseEntry();
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,248,lse if( m_longFileMode != LONGFILE_TRUNCATE )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,250,"inal String message = ""file name '"" + entry.getName() +"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,251,"' is too long ( > "" + TarEntry.NAMELEN + "" bytes)"";"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,252,hrow new IOException( message );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,256,ntry.writeEntryHeader( m_recordBuf );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,257,_buffer.writeRecord( m_recordBuf );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,259,_currBytes = 0;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,261,f( entry.isDirectory() )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,263,_currSize = 0;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,265,lse
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,267,_currSize = (int)entry.getSize();
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,272, Copies the contents of the specified stream into current tar
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,273, archive entry.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,275, @param input The InputStream from which to read entrys data
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,276, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,278,ublic void copyEntryContents( final InputStream input )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,279,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,281,inal byte[] buffer = new byte[ 32 * 1024 ];
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,282,hile( true )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,284,"inal int numRead = input.read( buffer, 0, buffer.length );"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,285,f( numRead == -1 )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,287,reak;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,290,"rite( buffer, 0, numRead );"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,295, Writes a byte to the current tar archive entry. This method simply calls
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,296," read( byte[], int, int )."
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,298, @param data The byte written.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,299, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,301,ublic void write( final int data )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,302,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,304,_oneBuf[ 0 ] = (byte)data;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,306,"rite( m_oneBuf, 0, 1 );"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,310, Writes bytes to the current tar archive entry. This method simply calls
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,311," write( byte[], int, int )."
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,313, @param buffer The buffer to write to the archive.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,314, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,316,ublic void write( final byte[] buffer )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,317,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,319,"rite( buffer, 0, buffer.length );"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,323, Writes bytes to the current tar archive entry. This method is aware of
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,324, the current entry and will throw an exception if you attempt to write
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,325, bytes past the length specified for the current entry. The method is also
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,326," (painfully) aware of the record buffering required by TarBuffer, and"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,327," manages buffers that are not a multiple of recordsize in length,"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,328, including assembling records from small buffers.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,330, @param buffer The buffer to write to the archive.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,331, @param offset The offset in the buffer from which to get bytes.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,332, @param count The number of bytes to write.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,333, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,335,"ublic void write( final byte[] buffer,"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,336,"inal int offset,"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,337,inal int count )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,338,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,340,nt position = offset;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,341,nt numToWrite = count;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,342,f( ( m_currBytes + numToWrite ) > m_currSize )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,344,"inal String message = ""request to write '"" + numToWrite +"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,345,"' bytes exceeds size in header of '"" + m_currSize + ""' bytes"";"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,346,hrow new IOException( message );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,348,/ We have to deal with assembly!!!
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,349,/ The programmer can be writing little 32 byte chunks for all
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,350,"/ we know, and we must assemble complete records for writing."
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,351,/ REVIEW Maybe this should be in TarBuffer? Could that help to
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,352,/ eliminate some of the buffer copying.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,356,f( m_assemLen > 0 )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,358,f( ( m_assemLen + numToWrite ) >= m_recordBuf.length )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,360,inal int length = m_recordBuf.length - m_assemLen;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,362,"ystem.arraycopy( m_assemBuf, 0, m_recordBuf, 0,"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,363,_assemLen );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,364,"ystem.arraycopy( buffer, position, m_recordBuf,"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,365,"_assemLen, length );"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,366,_buffer.writeRecord( m_recordBuf );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,368,_currBytes += m_recordBuf.length;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,369,osition += length;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,370,umToWrite -= length;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,371,_assemLen = 0;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,373,lse
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,375,"ystem.arraycopy( buffer, position, m_assemBuf, m_assemLen,"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,376,umToWrite );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,378,osition += numToWrite;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,379,_assemLen += numToWrite;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,380,umToWrite -= numToWrite;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,385,/ When we get here we have EITHER:
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,386,"/ o An empty ""assemble"" buffer."
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,387,/ o No bytes to write (numToWrite == 0)
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,389,hile( numToWrite > 0 )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,391,f( numToWrite < m_recordBuf.length )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,393,"ystem.arraycopy( buffer, position, m_assemBuf, m_assemLen,"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,394,umToWrite );
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,396,_assemLen += numToWrite;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,398,reak;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,401,"_buffer.writeRecord( buffer, position );"
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,403,nt num = m_recordBuf.length;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,405,_currBytes += num;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,406,umToWrite -= num;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,407,osition += num;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,412, Write an EOF (end of archive) record to the tar archive. An EOF record
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,413, consists of a record of all zeros.
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,415, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,417,rivate void writeEOFRecord()
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,418,hrows IOException
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,420,or( int i = 0; i < m_recordBuf.length; ++i )
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,422,_recordBuf[ i ] = 0;
False,src/java/org/apache/commons/compress/tar/TarOutputStream.java,src/java/org/apache/commons/compress/tar/TarOutputStream.java,425,_buffer.writeRecord( m_recordBuf );
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,17, under the License.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,19,ackage org.apache.commons.compress.tar;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,22, This class provides static utility methods to work with byte streams.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,24," @author <a href=""mailto:time@ice.com"">Timothy Gerard Endres</a>"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,25," @author <a href=""mailto:stefano@apache.org"">Stefano Mazzocchi</a>"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,26, @version $Revision$ $Date$
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,28,lass TarUtils
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,31, Parse the checksum octal integer from a header buffer.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,33, @param offset The offset into the buffer from which to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,34, @param length The number of header bytes to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,35, @param value Description of Parameter
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,36, @param buf Description of Parameter
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,37, @return The integer value of the entry's checksum.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,39,"ublic static int getCheckSumOctalBytes( final long value,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,40,"inal byte[] buf,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,41,"inal int offset,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,42,inal int length )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,44,"etOctalBytes( value, buf, offset, length );"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,46,uf[ offset + length - 1 ] = (byte)' ';
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,47,uf[ offset + length - 2 ] = 0;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,49,eturn offset + length;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,53, Parse an octal long integer from a header buffer.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,55, @param offset The offset into the buffer from which to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,56, @param length The number of header bytes to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,57, @param value Description of Parameter
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,58, @param buf Description of Parameter
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,59, @return The long value of the octal bytes.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,61,"ublic static int getLongOctalBytes( final long value,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,62,"inal byte[] buf,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,63,"inal int offset,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,64,inal int length )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,66,yte[] temp = new byte[ length + 1 ];
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,68,"etOctalBytes( value, temp, 0, length + 1 );"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,69,"ystem.arraycopy( temp, 0, buf, offset, length );"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,71,eturn offset + length;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,75, Determine the number of bytes in an entry name.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,77, @param offset The offset into the buffer from which to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,78, @param length The number of header bytes to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,79, @param name Description of Parameter
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,80, @param buffer Description of Parameter
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,81, @return The number of bytes in a header's entry name.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,83,"ublic static int getNameBytes( final StringBuffer name,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,84,"inal byte[] buffer,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,85,"inal int offset,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,86,inal int length )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,88,nt i;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,90,or( i = 0; i < length && i < name.length(); ++i )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,92,uffer[ offset + i ] = (byte)name.charAt( i );
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,95,or( ; i < length; ++i )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,97,uffer[ offset + i ] = 0;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,100,eturn offset + length;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,104, Parse an octal integer from a header buffer.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,106, @param offset The offset into the buffer from which to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,107, @param length The number of header bytes to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,108, @return The integer value of the octal bytes.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,110,"ublic static int getOctalBytes( final long value,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,111,"inal byte[] buffer,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,112,"inal int offset,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,113,inal int length )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,115,nt idx = length - 1;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,117,uffer[ offset + idx ] = 0;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,118,-idx;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,119,uffer[ offset + idx ] = (byte)' ';
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,120,-idx;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,122,f( value == 0 )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,124,uffer[ offset + idx ] = (byte)'0';
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,125,-idx;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,127,lse
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,129,ong val = value;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,130,hile( idx >= 0 && val > 0 )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,132,uffer[ offset + idx ] = (byte)( (byte)'0' + (byte)( val & 7 ) );
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,133,al = val >> 3;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,134,dx--;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,138,hile( idx >= 0 )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,140,uffer[ offset + idx ] = (byte)' ';
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,141,dx--;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,144,eturn offset + length;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,148, Compute the checksum of a tar entry header.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,150, @param buffer The tar entry's header buffer.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,151, @return The computed checksum.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,153,ublic static long computeCheckSum( final byte[] buffer )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,155,ong sum = 0;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,157,or( int i = 0; i < buffer.length; ++i )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,159,um += 255 & buffer[ i ];
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,162,eturn sum;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,166, Parse an entry name from a header buffer.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,168, @param header The header buffer from which to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,169, @param offset The offset into the buffer from which to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,170, @param length The number of header bytes to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,171, @return The header's entry name.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,173,"ublic static StringBuffer parseName( final byte[] header,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,174,"inal int offset,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,175,inal int length )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,177,tringBuffer result = new StringBuffer( length );
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,178,nt end = offset + length;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,180,or( int i = offset; i < end; ++i )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,182,f( header[ i ] == 0 )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,184,reak;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,187,esult.append( (char)header[ i ] );
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,190,eturn result;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,194, Parse an octal string from a header buffer. This is used for the file
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,195, permission mode value.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,197, @param header The header buffer from which to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,198, @param offset The offset into the buffer from which to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,199, @param length The number of header bytes to parse.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,200, @return The long value of the octal string.
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,202,"ublic static long parseOctal( final byte[] header,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,203,"inal int offset,"
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,204,inal int length )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,206,ong result = 0;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,207,oolean stillPadding = true;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,208,nt end = offset + length;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,210,or( int i = offset; i < end; ++i )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,212,f( header[ i ] == 0 )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,214,reak;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,217,f( header[ i ] == (byte)' ' || header[ i ] == '0' )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,219,f( stillPadding )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,221,ontinue;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,224,f( header[ i ] == (byte)' ' )
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,226,reak;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,230,tillPadding = false;
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,231,esult = ( result << 3 ) + ( header[ i ] - '0' );
False,src/java/org/apache/commons/compress/tar/TarUtils.java,src/java/org/apache/commons/compress/tar/TarUtils.java,234,eturn result;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,17, under the License.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,19,ackage org.apache.commons.compress.zip;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,21,mport java.util.zip.CRC32;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,22,mport java.util.zip.ZipException;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,25, Adds Unix file permission and UID/GID fields as well as symbolic link
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,26, handling. <p>
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,28, This class uses the ASi extra field in the format: <pre>
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,29,         Value         Size            Description
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,31, (Unix3) 0x756e        Short           tag for this extra block type
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,32,         TSize         Short           total data size for this block
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,33,         CRC           Long            CRC-32 of the remaining data
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,34,         Mode          Short           file permissions
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,35,         SizDev        Long            symlink'd size OR major/minor dev num
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,36,         UID           Short           user ID
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,37,         GID           Short           group ID
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,38,         (var.)        variable        symbolic link filename
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,39," </pre> taken from appnote.iz (Info-ZIP note, 981119) found at <a"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,40," href=""ftp://ftp.uu.net/pub/archiving/zip/doc/"">"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,41, ftp://ftp.uu.net/pub/archiving/zip/doc/</a> </p> <p>
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,43," Short is two bytes and Long is four bytes in big endian byte and word order,"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,44, device numbers are currently not supported.</p>
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,46," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,47, @version $Revision$
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,49,ublic class AsiExtraField
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,50,"mplements ZipExtraField, UnixStat, Cloneable"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,52,rivate static final ZipShort HEADER_ID = new ZipShort( 0x756E );
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,55, Standard Unix stat(2) file mode.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,57, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,59,rivate int m_mode;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,62, User ID.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,64, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,66,rivate int m_uid;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,69, Group ID.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,71, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,73,rivate int m_gid;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,76," File this entry points to, if it is a symbolic link. <p>"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,78, empty string - if entry is not a symbolic link.</p>
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,80, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,82,"rivate String m_link = """";"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,85, Is this an entry for a directory?
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,87, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,89,rivate boolean m_dirFlag;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,92, Instance used to calculate checksums.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,94, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,96,rivate CRC32 m_crc = new CRC32();
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,99, Indicate whether this entry is a directory.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,101, @param dirFlag The new Directory value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,102, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,104,ublic void setDirectory( final boolean dirFlag )
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,106,_dirFlag = dirFlag;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,107,_mode = getMode( m_mode );
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,111, Set the group id.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,113, @param gid The new GroupId value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,114, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,116,ublic void setGroupId( int gid )
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,118,_gid = gid;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,122, Indicate that this entry is a symbolic link to the given filename.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,124," @param name Name of the file this entry links to, empty String if it is"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,125,      not a symbolic link.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,126, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,128,ublic void setLinkedFile( final String name )
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,130,_link = name;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,131,_mode = getMode( m_mode );
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,135, File mode of this file.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,137, @param mode The new Mode value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,138, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,140,ublic void setMode( final int mode )
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,142,_mode = getMode( mode );
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,146, Set the user id.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,148, @param uid The new UserId value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,149, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,150, @deprecated Use setUserID(int)
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,151, @see #setUserID(int)
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,153,ublic void setUserId( final int uid )
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,155,_uid = uid;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,159, Set the user id.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,161, @param uid The new UserId value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,163,ublic void setUserID( final int uid )
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,165,_uid = uid;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,169, Delegate to local file data.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,171, @return The CentralDirectoryData value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,172, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,174,ublic byte[] getCentralDirectoryData()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,176,eturn getLocalFileDataData();
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,180, Delegate to local file data.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,182, @return The CentralDirectoryLength value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,183, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,185,ublic ZipShort getCentralDirectoryLength()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,187,eturn getLocalFileDataLength();
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,191, Get the group id.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,193, @return The GroupId value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,194, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,196,ublic int getGroupID()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,198,eturn m_gid;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,202, Get the group id.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,204, @return The GroupId value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,205, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,206, @deprecated Use getGroupID() instead
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,207, @see #getGroupID()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,209,ublic int getGroupId()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,211,eturn m_gid;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,215, The Header-ID.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,217, @return The HeaderId value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,218, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,220,ublic ZipShort getHeaderID()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,222,eturn HEADER_ID;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,226, Name of linked file
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,228," @return name of the file this entry links to if it is a symbolic link,"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,229,      the empty string otherwise.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,230, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,232,ublic String getLinkedFile()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,234,eturn m_link;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,238, The actual data to put into local file data - without Header-ID or length
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,239, specifier.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,241, @return The LocalFileDataData value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,242, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,244,ublic byte[] getLocalFileDataData()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,246,/ CRC will be added later
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,247,yte[] data = new byte[ getLocalFileDataLength().getValue() - 4 ];
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,248,"ystem.arraycopy( ( new ZipShort( getMode() ) ).getBytes(), 0, data, 0, 2 );"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,250,yte[] linkArray = getLinkedFile().getBytes();
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,251,"ystem.arraycopy( ( new ZipLong( linkArray.length ) ).getBytes(),"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,252,", data, 2, 4 );"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,254,"ystem.arraycopy( ( new ZipShort( getUserID() ) ).getBytes(),"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,255,", data, 6, 2 );"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,256,"ystem.arraycopy( ( new ZipShort( getGroupID() ) ).getBytes(),"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,257,", data, 8, 2 );"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,259,"ystem.arraycopy( linkArray, 0, data, 10, linkArray.length );"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,261,_crc.reset();
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,262,_crc.update( data );
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,263,ong checksum = m_crc.getValue();
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,265,yte[] result = new byte[ data.length + 4 ];
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,266,"ystem.arraycopy( ( new ZipLong( checksum ) ).getBytes(), 0, result, 0, 4 );"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,267,"ystem.arraycopy( data, 0, result, 4, data.length );"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,268,eturn result;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,272, Length of the extra field in the local file data - without Header-ID or
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,273, length specifier.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,275, @return The LocalFileDataLength value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,276, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,278,ublic ZipShort getLocalFileDataLength()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,280,eturn new ZipShort( 4 + // CRC
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,281, + // Mode
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,282, + // SizDev
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,283, + // UID
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,284, + // GID
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,285,etLinkedFile().getBytes().length );
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,289, File mode of this file.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,291, @return The Mode value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,292, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,294,ublic int getMode()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,296,eturn m_mode;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,300, Get the user id.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,302, @return The UserId value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,303, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,304, @deprecated Use getUserID()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,305, @see #getUserID()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,307,ublic int getUserId()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,309,eturn m_uid;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,313, Get the user id.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,315, @return The UserID value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,317,ublic int getUserID()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,319,eturn m_uid;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,323, Is this entry a directory?
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,325, @return The Directory value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,326, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,328,ublic boolean isDirectory()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,330,eturn m_dirFlag && !isLink();
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,334, Is this entry a symbolic link?
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,336, @return The Link value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,337, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,339,ublic boolean isLink()
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,341,eturn getLinkedFile().length() != 0;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,345, Populate data from this array as if it was in local file data.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,347, @param buffer the buffer
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,348, @param offset the offset into buffer
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,349, @param length the length of data in buffer
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,350, @throws ZipException on error
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,351, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,353,"ublic void parseFromLocalFileData( final byte[] buffer,"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,354,"inal int offset,"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,355,inal int length )
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,356,hrows ZipException
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,359,"ong givenChecksum = ( new ZipLong( buffer, offset ) ).getValue();"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,360,yte[] tmp = new byte[ length - 4 ];
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,361,"ystem.arraycopy( buffer, offset + 4, tmp, 0, length - 4 );"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,362,_crc.reset();
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,363,_crc.update( tmp );
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,364,ong realChecksum = m_crc.getValue();
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,365,f( givenChecksum != realChecksum )
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,367,"hrow new ZipException( ""bad CRC checksum "" + Long.toHexString( givenChecksum ) +"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,368," instead of "" + Long.toHexString( realChecksum ) );"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,371,"nt newMode = ( new ZipShort( tmp, 0 ) ).getValue();"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,372,"yte[] linkArray = new byte[ (int)( new ZipLong( tmp, 2 ) ).getValue() ];"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,373,"_uid = ( new ZipShort( tmp, 6 ) ).getValue();"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,374,"_gid = ( new ZipShort( tmp, 8 ) ).getValue();"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,376,f( linkArray.length == 0 )
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,378,"_link = """";"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,380,lse
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,382,"ystem.arraycopy( tmp, 10, linkArray, 0, linkArray.length );"
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,383,_link = new String( linkArray );
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,385,etDirectory( ( newMode & DIR_FLAG ) != 0 );
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,386,etMode( newMode );
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,390, Get the file mode for given permissions with the correct file type.
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,392, @param mode Description of Parameter
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,393, @return The Mode value
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,394, @since 1.1
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,396,rotected int getMode( final int mode )
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,398,nt type = FILE_FLAG;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,399,f( isLink() )
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,401,ype = LINK_FLAG;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,403,lse if( isDirectory() )
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,405,ype = DIR_FLAG;
False,src/java/org/apache/commons/compress/zip/AsiExtraField.java,src/java/org/apache/commons/compress/zip/AsiExtraField.java,407,eturn type | ( mode & PERM_MASK );
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,17, under the License.
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,19,ackage org.apache.commons.compress.zip;
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,21,mport java.util.ArrayList;
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,22,mport java.util.Hashtable;
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,23,mport java.util.zip.ZipException;
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,26, ZipExtraField related methods
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,28," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,29, @version $Revision$
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,31,ublic class ExtraFieldUtils
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,34, Static registry of known extra fields.
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,36, @since 1.1
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,38,rivate static final Hashtable c_implementations;
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,40,tatic
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,42,_implementations = new Hashtable();
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,43,egister( AsiExtraField.class );
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,47," Create an instance of the approriate ExtraField, falls back to {@link"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,48, UnrecognizedExtraField UnrecognizedExtraField}.
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,50, Throws java.lang.IllegalAccessException if cant create implementation.
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,52, @param headerID the header ID
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,53, @return the extra field implementation
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,54, @throws InstantiationException if cant create implementation
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,55, @throws IllegalAccessException if cant create implementation
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,56, @since 1.1
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,58,ublic static ZipExtraField createExtraField( final ZipShort headerID )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,59,"hrows InstantiationException, IllegalAccessException"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,61,inal Class clazz =
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,62,Class)c_implementations.get( headerID );
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,63,f( clazz != null )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,65,eturn (ZipExtraField)clazz.newInstance();
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,67,inal UnrecognizedExtraField unrecognized = new UnrecognizedExtraField();
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,68,nrecognized.setHeaderID( headerID );
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,69,eturn unrecognized;
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,73, Merges the central directory fields of the given ZipExtraFields.
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,75, @param data the central directory data
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,76, @return the merged data
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,77, @since 1.1
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,79,ublic static byte[] mergeCentralDirectoryData( final ZipExtraField[] data )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,81,nt sum = 4 * data.length;
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,82,or( int i = 0; i < data.length; i++ )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,84,um += data[ i ].getCentralDirectoryLength().getValue();
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,86,yte[] result = new byte[ sum ];
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,87,nt start = 0;
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,88,or( int i = 0; i < data.length; i++ )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,90,"ystem.arraycopy( data[ i ].getHeaderID().getBytes(),"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,91,", result, start, 2 );"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,92,"ystem.arraycopy( data[ i ].getCentralDirectoryLength().getBytes(),"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,93,", result, start + 2, 2 );"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,94,yte[] local = data[ i ].getCentralDirectoryData();
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,95,"ystem.arraycopy( local, 0, result, start + 4, local.length );"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,96,tart += ( local.length + 4 );
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,98,eturn result;
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,102, Merges the local file data fields of the given ZipExtraFields.
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,104, @param data the data
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,105, @return the merged data
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,106, @since 1.1
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,108,ublic static byte[] mergeLocalFileDataData( final ZipExtraField[] data )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,110,nt sum = 4 * data.length;
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,111,or( int i = 0; i < data.length; i++ )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,113,um += data[ i ].getLocalFileDataLength().getValue();
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,115,yte[] result = new byte[ sum ];
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,116,nt start = 0;
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,117,or( int i = 0; i < data.length; i++ )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,119,"ystem.arraycopy( data[ i ].getHeaderID().getBytes(),"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,120,", result, start, 2 );"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,121,"ystem.arraycopy( data[ i ].getLocalFileDataLength().getBytes(),"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,122,", result, start + 2, 2 );"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,123,yte[] local = data[ i ].getLocalFileDataData();
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,124,"ystem.arraycopy( local, 0, result, start + 4, local.length );"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,125,tart += ( local.length + 4 );
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,127,eturn result;
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,131, Split the array into ExtraFields and populate them with the give data.
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,133, @param data the data to parse
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,134, @return the parsed fields
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,135, @exception ZipException on error
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,136, @since 1.1
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,138,ublic static ZipExtraField[] parse( final byte[] data )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,139,hrows ZipException
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,141,rrayList v = new ArrayList();
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,142,nt start = 0;
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,143,hile( start <= data.length - 4 )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,145,"inal ZipShort headerID = new ZipShort( data, start );"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,146,"nt length = ( new ZipShort( data, start + 2 ) ).getValue();"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,147,f( start + 4 + length > data.length )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,149,"hrow new ZipException( ""data starting at "" + start + "" is in unknown format"" );"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,151,ry
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,153,ipExtraField ze = createExtraField( headerID );
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,154,"e.parseFromLocalFileData( data, start + 4, length );"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,155,.add( ze );
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,157,atch( InstantiationException ie )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,159,hrow new ZipException( ie.getMessage() );
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,161,atch( IllegalAccessException iae )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,163,hrow new ZipException( iae.getMessage() );
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,165,tart += ( length + 4 );
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,167,f( start != data.length )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,168,// array not exhausted
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,169,"hrow new ZipException( ""data starting at "" + start + "" is in unknown format"" );"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,172,inal ZipExtraField[] result = new ZipExtraField[ v.size() ];
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,173,eturn (ZipExtraField[])v.toArray( result );
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,177, Register a ZipExtraField implementation. <p>
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,179, The given class must have a no-arg constructor and implement the {@link
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,180, ZipExtraField ZipExtraField interface}.</p>
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,182, @param clazz The Class for particular implementation
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,183, @since 1.1
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,185,ublic static void register( final Class clazz )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,187,ry
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,189,ipExtraField ze = (ZipExtraField)clazz.newInstance();
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,190,"_implementations.put( ze.getHeaderID(), clazz );"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,192,atch( ClassCastException cc )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,194,hrow new RuntimeException( clazz +
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,195," doesn\'t implement ZipExtraField"" );"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,197,atch( InstantiationException ie )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,199,"hrow new RuntimeException( clazz + "" is not a concrete class"" );"
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,201,atch( IllegalAccessException ie )
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,203,hrow new RuntimeException( clazz +
False,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,src/java/org/apache/commons/compress/zip/ExtraFieldUtils.java,204,"\'s no-arg constructor is not public"" );"
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,17, under the License.
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,19,ackage org.apache.commons.compress.zip;
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,22, Constants from stat.h on Unix systems.
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,24," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,25, @version $Revision$
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,27,ublic interface UnixStat
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,30, Bits used for permissions (and sticky bit)
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,32, @since 1.1
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,34,nt PERM_MASK = 07777;
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,36, Indicates symbolic links.
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,38, @since 1.1
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,40,nt LINK_FLAG = 0120000;
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,42, Indicates plain files.
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,44, @since 1.1
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,46,nt FILE_FLAG = 0100000;
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,48, Indicates directories.
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,50, @since 1.1
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,52,nt DIR_FLAG = 040000;
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,55,/ somewhat arbitrary choices that are quite common for shared
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,56,/ installations
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,60, Default permissions for symbolic links.
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,62, @since 1.1
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,64,nt DEFAULT_LINK_PERM = 0777;
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,67, Default permissions for directories.
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,69, @since 1.1
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,71,nt DEFAULT_DIR_PERM = 0755;
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,74, Default permissions for plain files.
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,76, @since 1.1
False,src/java/org/apache/commons/compress/zip/UnixStat.java,src/java/org/apache/commons/compress/zip/UnixStat.java,78,nt DEFAULT_FILE_PERM = 0644;
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,17, under the License.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,19,ackage org.apache.commons.compress.zip;
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,22, Simple placeholder for all those extra fields we don't want to deal with. <p>
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,24, Assumes local file data and central directory entries are identical - unless
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,25, told the opposite.</p>
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,27," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,28, @version $Revision$
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,30,ublic class UnrecognizedExtraField
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,31,mplements ZipExtraField
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,34, Extra field data in central directory - without Header-ID or length
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,35, specifier.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,37, @since 1.1
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,39,rivate byte[] m_centralData;
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,42, The Header-ID.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,44, @since 1.1
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,46,rivate ZipShort m_headerID;
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,49, Extra field data in local file data - without Header-ID or length
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,50, specifier.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,52, @since 1.1
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,54,rivate byte[] m_localData;
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,57, Set the central directory data
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,59, @param centralData the central directory data
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,61,ublic void setCentralDirectoryData( final byte[] centralData )
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,63,_centralData = centralData;
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,67, Set the header ID.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,69, @param headerID the header ID
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,70, @deprecated Use setHeaderID() instead
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,71, @see #setHeaderID(ZipShort)
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,73,ublic void setHeaderId( final ZipShort headerID )
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,75,etHeaderID( headerID );
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,79, Set the header ID.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,81, @param headerID the header ID
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,83,ublic void setHeaderID( final ZipShort headerID )
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,85,_headerID = headerID;
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,89, Set the local file data.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,91, @param localData the local file data
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,93,ublic void setLocalFileDataData( final byte[] localData )
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,95,_localData = localData;
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,99, Get the central directory data.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,101, @return the central directory data.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,103,ublic byte[] getCentralDirectoryData()
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,105,f( m_centralData != null )
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,107,eturn m_centralData;
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,109,eturn getLocalFileDataData();
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,113, Get the length of the central directory in bytes.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,115, @return the length of the central directory in bytes.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,117,ublic ZipShort getCentralDirectoryLength()
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,119,f( m_centralData != null )
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,121,eturn new ZipShort( m_centralData.length );
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,123,eturn getLocalFileDataLength();
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,127, Get the HeaderID.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,129, @return the HeaderID
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,130, @deprecated Use getHeaderID() instead
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,131, @see #getHeaderID()
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,133,ublic ZipShort getHeaderId()
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,135,eturn m_headerID;
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,139, Get the HeaderID.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,141, @return the HeaderID
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,143,ublic ZipShort getHeaderID()
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,145,eturn m_headerID;
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,149, Get the local file data.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,151, @return the local file data
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,153,ublic byte[] getLocalFileDataData()
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,155,eturn m_localData;
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,159, Get the length of local file data in bytes.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,161, @return the length of local file data in bytes
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,163,ublic ZipShort getLocalFileDataLength()
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,165,eturn new ZipShort( m_localData.length );
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,169, Parse LocalFiledata out of supplied buffer.
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,171, @param buffer the buffer to use
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,172, @param offset the offset into buffer
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,173, @param length then length of data
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,175,"ublic void parseFromLocalFileData( final byte[] buffer,"
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,176,"inal int offset,"
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,177,inal int length )
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,179,inal byte[] fileData = new byte[ length ];
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,180,"ystem.arraycopy( buffer, offset, fileData, 0, length );"
False,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,src/java/org/apache/commons/compress/zip/UnrecognizedExtraField.java,181,etLocalFileDataData( fileData );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,17, under the License.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,19,ackage org.apache.commons.compress.zip;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,21,mport java.lang.reflect.InvocationTargetException;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,22,mport java.lang.reflect.Method;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,23,mport java.util.ArrayList;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,24,mport java.util.zip.ZipException;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,27, Extension that adds better handling of extra fields and provides access to
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,28, the internal and external file attributes.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,30," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,31, @version $Revision$
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,33,ublic class ZipEntry
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,34,xtends java.util.zip.ZipEntry
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,37, Helper for JDK 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,39, @since 1.2
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,41,rivate static Method c_setCompressedSizeMethod;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,44, Helper for JDK 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,46, @since 1.2
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,48,rivate static final Object c_lockReflection = new Object();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,51, Helper for JDK 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,53, @since 1.2
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,55,rivate static boolean c_triedToGetMethod;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,57,rivate final ArrayList m_extraFields = new ArrayList();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,59,rivate int m_internalAttributes;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,60,rivate long m_externalAttributes;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,63, Helper for JDK 1.1 <-> 1.2 incompatibility.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,65, @since 1.2
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,67,rivate Long m_compressedSize;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,70, Creates a new zip entry with the specified name.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,72, @param name the name of entry
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,73, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,75,ublic ZipEntry( final String name )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,77,uper( name );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,81, Creates a new zip entry with fields taken from the specified zip entry.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,83, @param entry the JDK ZipEntry to adapt
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,84, @exception ZipException if can not create entry
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,85, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,87,ublic ZipEntry( java.util.zip.ZipEntry entry )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,88,hrows ZipException
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,91," REVISIT: call super(entry) instead of this stuff in Ant2,"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,92," ""copy constructor"" has not been available in JDK 1.1"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,94,uper( entry.getName() );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,96,etComment( entry.getComment() );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,97,etMethod( entry.getMethod() );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,98,etTime( entry.getTime() );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,100,inal long size = entry.getSize();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,101,f( size > 0 )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,103,etSize( size );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,106,inal long cSize = entry.getCompressedSize();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,107,f( cSize > 0 )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,109,etComprSize( cSize );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,112,inal long crc = entry.getCrc();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,113,f( crc > 0 )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,115,etCrc( crc );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,118,inal byte[] extra = entry.getExtra();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,119,f( extra != null )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,121,etExtraFields( ExtraFieldUtils.parse( extra ) );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,123,lse
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,125,/ initializes extra data to an empty byte array
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,126,etExtra();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,131, Creates a new zip entry with fields taken from the specified zip entry.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,133, @param entry the entry to adapt
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,134, @exception ZipException if can not create entry
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,135, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,137,ublic ZipEntry( final ZipEntry entry )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,138,hrows ZipException
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,140,his( (java.util.zip.ZipEntry)entry );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,141,etInternalAttributes( entry.getInternalAttributes() );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,142,etExternalAttributes( entry.getExternalAttributes() );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,143,etExtraFields( entry.getExtraFields() );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,147, Try to get a handle to the setCompressedSize method.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,149, @since 1.2
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,151,rivate static void checkSCS()
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,153,f( !c_triedToGetMethod )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,155,ynchronized( c_lockReflection )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,157,_triedToGetMethod = true;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,158,ry
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,160,_setCompressedSizeMethod =
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,161,"ava.util.zip.ZipEntry.class.getMethod( ""setCompressedSize"","
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,162,ew Class[]{Long.TYPE} );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,164,atch( NoSuchMethodException nse )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,172, Are we running JDK 1.2 or higher?
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,174, @return Description of the Returned Value
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,175, @since 1.2
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,177,rivate static boolean haveSetCompressedSize()
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,179,heckSCS();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,180,eturn c_setCompressedSizeMethod != null;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,184, Invoke setCompressedSize via reflection.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,186, @param entry Description of Parameter
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,187, @param size Description of Parameter
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,188, @since 1.2
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,190,"rivate static void performSetCompressedSize( final ZipEntry entry,"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,191,inal long size )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,193,inal Long[] s = {new Long( size )};
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,194,ry
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,196,"_setCompressedSizeMethod.invoke( entry, s );"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,198,atch( final InvocationTargetException ite )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,200,inal Throwable nested = ite.getTargetException();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,201,"inal String message = ""Exception setting the compressed size "" +"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,202,"of "" + entry + "": "" + nested.getMessage();"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,203,hrow new RuntimeException( message );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,205,atch( final Throwable t )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,207,"inal String message = ""Exception setting the compressed size "" +"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,208,"of "" + entry + "": "" + t.getMessage();"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,209,hrow new RuntimeException( message );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,214, Make this class work in JDK 1.1 like a 1.2 class. <p>
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,216, This either stores the size for later usage or invokes setCompressedSize
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,217, via reflection.</p>
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,219, @param size The new ComprSize value
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,220, @since 1.2
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,222,ublic void setComprSize( final long size )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,224,f( haveSetCompressedSize() )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,226,"erformSetCompressedSize( this, size );"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,228,lse
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,230,_compressedSize = new Long( size );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,235, Sets the external file attributes.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,237, @param externalAttributes The new ExternalAttributes value
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,238, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,240,ublic void setExternalAttributes( final long externalAttributes )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,242,_externalAttributes = externalAttributes;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,246, Throws an Exception if extra data cannot be parsed into extra fields.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,248, @param extra The new Extra value
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,249, @throws RuntimeException if fail to set extra data
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,250, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,252,ublic void setExtra( final byte[] extra )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,253,hrows RuntimeException
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,255,ry
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,257,etExtraFields( ExtraFieldUtils.parse( extra ) );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,259,atch( final Exception e )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,261,hrow new RuntimeException( e.getMessage() );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,266, Replaces all currently attached extra fields with the new array.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,268, @param fields The new ExtraFields value
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,269, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,271,ublic void setExtraFields( final ZipExtraField[] fields )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,273,_extraFields.clear();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,274,or( int i = 0; i < fields.length; i++ )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,276,_extraFields.add( fields[ i ] );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,278,etExtra();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,282, Sets the internal file attributes.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,284, @param value The new InternalAttributes value
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,285, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,287,ublic void setInternalAttributes( final int value )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,289,_internalAttributes = value;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,293, Retrieves the extra data for the central directory.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,295, @return The CentralDirectoryExtra value
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,296, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,298,ublic byte[] getCentralDirectoryExtra()
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,300,eturn ExtraFieldUtils.mergeCentralDirectoryData( getExtraFields() );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,304, Override to make this class work in JDK 1.1 like a 1.2 class.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,306, @return The CompressedSize value
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,307, @since 1.2
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,309,ublic long getCompressedSize()
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,311,f( m_compressedSize != null )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,313,/ has been set explicitly and we are running in a 1.1 VM
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,314,eturn m_compressedSize.longValue();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,316,eturn super.getCompressedSize();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,320, Retrieves the external file attributes.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,322, @return The ExternalAttributes value
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,323, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,325,ublic long getExternalAttributes()
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,327,eturn m_externalAttributes;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,331, Retrieves extra fields.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,333, @return The ExtraFields value
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,334, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,336,ublic ZipExtraField[] getExtraFields()
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,338,inal ZipExtraField[] result = new ZipExtraField[ m_extraFields.size() ];
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,339,eturn (ZipExtraField[])m_extraFields.toArray( result );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,343, Retrieves the internal file attributes.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,345, @return The InternalAttributes value
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,346, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,348,ublic int getInternalAttributes()
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,350,eturn m_internalAttributes;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,354, Retrieves the extra data for the local file data.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,356, @return The LocalFileDataExtra value
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,357, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,359,ublic byte[] getLocalFileDataExtra()
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,361,yte[] extra = getExtra();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,362,eturn extra != null ? extra : new byte[ 0 ];
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,366, Adds an extra fields - replacing an already present extra field of the
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,367, same type.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,369, @param extraField The feature to be added to the ExtraField attribute
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,370, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,372,ublic void addExtraField( final ZipExtraField extraField )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,374,inal ZipShort type = extraField.getHeaderID();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,375,oolean done = false;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,376,or( int i = 0; !done && i < m_extraFields.size(); i++ )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,378,inal ZipExtraField other = (ZipExtraField)m_extraFields.get( i );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,379,f( other.getHeaderID().equals( type ) )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,381,"_extraFields.set( i, extraField );"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,382,one = true;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,385,f( !done )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,387,_extraFields.add( extraField );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,389,etExtra();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,393, Overwrite clone
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,395, @return Description of the Returned Value
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,396, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,398,ublic Object clone()
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,400,ipEntry entry = null;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,401,ry
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,403,ntry = new ZipEntry( (java.util.zip.ZipEntry)super.clone() );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,405,atch( final Exception e )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,407,/ impossible as extra data is in correct format
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,408,.printStackTrace();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,409,eturn null;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,412,ntry.setInternalAttributes( getInternalAttributes() );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,413,ntry.setExternalAttributes( getExternalAttributes() );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,414,ntry.setExtraFields( getExtraFields() );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,415,eturn entry;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,419, Remove an extra fields.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,421, @param type Description of Parameter
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,422, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,424,ublic void removeExtraField( final ZipShort type )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,426,oolean done = false;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,427,or( int i = 0; !done && i < m_extraFields.size(); i++ )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,429,f( ( (ZipExtraField)m_extraFields.get( i ) ).getHeaderID().equals( type ) )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,431,_extraFields.remove( i );
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,432,one = true;
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,435,f( !done )
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,437,hrow new java.util.NoSuchElementException();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,439,etExtra();
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,443, Unfortunately {@link java.util.zip.ZipOutputStream
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,444," java.util.zip.ZipOutputStream} seems to access the extra data directly,"
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,445, so overriding getExtra doesn't help - we need to modify super's data
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,446, directly.
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,448, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,450,rotected void setExtra()
False,src/java/org/apache/commons/compress/zip/ZipEntry.java,src/java/org/apache/commons/compress/zip/ZipEntry.java,452,uper.setExtra( ExtraFieldUtils.mergeLocalFileDataData( getExtraFields() ) );
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,17, under the License.
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,19,ackage org.apache.commons.compress.zip;
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,21,mport java.util.zip.ZipException;
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,24, General format of extra field data. <p>
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,26," Extra fields usually appear twice per file, once in the local file data and"
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,27," once in the central directory. Usually they are the same, but they don't have"
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,28, to be. {@link java.util.zip.ZipOutputStream java.util.zip.ZipOutputStream}
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,29, will only use the local file data in both places.</p>
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,31," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,32, @version $Revision$
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,34,ublic interface ZipExtraField
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,37, The Header-ID.
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,39, @return The HeaderId value
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,40, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,42,ipShort getHeaderID();
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,45, Length of the extra field in the local file data - without Header-ID or
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,46, length specifier.
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,48, @return The LocalFileDataLength value
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,49, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,51,ipShort getLocalFileDataLength();
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,54, Length of the extra field in the central directory - without Header-ID or
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,55, length specifier.
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,57, @return The CentralDirectoryLength value
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,58, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,60,ipShort getCentralDirectoryLength();
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,63, The actual data to put into local file data - without Header-ID or length
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,64, specifier.
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,66, @return The LocalFileDataData value
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,67, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,69,yte[] getLocalFileDataData();
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,72, The actual data to put central directory - without Header-ID or length
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,73, specifier.
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,75, @return The CentralDirectoryData value
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,76, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,78,yte[] getCentralDirectoryData();
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,81, Populate data from this array as if it was in local file data.
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,83, @param buffer the buffer to read data from
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,84, @param offset offset into buffer to read data
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,85, @param length the length of data
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,86, @exception ZipException on error
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,87, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,89,"oid parseFromLocalFileData( byte[] buffer, int offset, int length )"
False,src/java/org/apache/commons/compress/zip/ZipExtraField.java,src/java/org/apache/commons/compress/zip/ZipExtraField.java,90,hrows ZipException;
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,17, under the License.
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,19,ackage org.apache.commons.compress.zip;
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,22, Utility class that represents a four byte integer with conversion rules for
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,23, the big endian byte order of ZIP files.
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,25," @author <a href=""mailto:stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,26, @version $Revision$
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,28,ublic final class ZipLong
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,29,mplements Cloneable
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,31,rivate long m_value;
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,34, Create instance from a number.
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,36, @param value the value
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,37, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,39,ublic ZipLong( final long value )
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,41,_value = value;
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,45, Create instance from bytes.
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,47, @param buffer the buffer to read data from
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,48, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,50,ublic ZipLong( final byte[] buffer )
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,52,"his( buffer, 0 );"
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,56, Create instance from the four bytes starting at offset.
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,58, @param buffer buffer to read data from
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,59, @param offset offset into buffer
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,60, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,62,"ublic ZipLong( final byte[] buffer, final int offset )"
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,64,_value = ( buffer[ offset + 3 ] << 24 ) & 0xFF000000l;
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,65,_value += ( buffer[ offset + 2 ] << 16 ) & 0xFF0000;
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,66,_value += ( buffer[ offset + 1 ] << 8 ) & 0xFF00;
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,67,_value += ( buffer[ offset ] & 0xFF );
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,71, Get value as two bytes in big endian byte order.
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,73, @return The value as bytes
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,74, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,76,ublic byte[] getBytes()
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,78,yte[] result = new byte[ 4 ];
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,79,esult[ 0 ] = (byte)( ( m_value & 0xFF ) );
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,80,esult[ 1 ] = (byte)( ( m_value & 0xFF00 ) >> 8 );
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,81,esult[ 2 ] = (byte)( ( m_value & 0xFF0000 ) >> 16 );
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,82,esult[ 3 ] = (byte)( ( m_value & 0xFF000000l ) >> 24 );
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,83,eturn result;
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,87, Get value as Java int.
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,89, @return The value
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,90, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,92,ublic long getValue()
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,94,eturn m_value;
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,98, Override to make two instances with same value equal.
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,100, @param o the object to compare against
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,101," @return true if equyal, false otherwise"
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,102, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,104,ublic boolean equals( final Object o )
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,106,f( o == null || !( o instanceof ZipLong ) )
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,108,eturn false;
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,110,eturn m_value == ( (ZipLong)o ).getValue();
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,114, Override to make two instances with same value equal.
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,116, @return the hashcode
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,117, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,119,ublic int hashCode()
False,src/java/org/apache/commons/compress/zip/ZipLong.java,src/java/org/apache/commons/compress/zip/ZipLong.java,121,eturn (int)m_value;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,17, under the License.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,19,ackage org.apache.commons.compress.zip;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,21,mport java.io.IOException;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,22,mport java.io.OutputStream;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,23,mport java.io.UnsupportedEncodingException;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,24,mport java.util.ArrayList;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,25,mport java.util.Date;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,26,mport java.util.Calendar;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,27,mport java.util.Hashtable;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,28,mport java.util.zip.CRC32;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,29,mport java.util.zip.Deflater;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,30,mport java.util.zip.DeflaterOutputStream;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,31,mport java.util.zip.ZipException;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,34, Reimplementation of {@link java.util.zip.ZipOutputStream
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,35, java.util.zip.ZipOutputStream} that does handle the extended functionality of
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,36," this package, especially internal/external file attributes and extra fields"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,37, with different layouts for local file data and central directory entries. <p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,39, This implementation will use a Data Descriptor to store size and CRC
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,40," information for DEFLATED entries, this means, you don't need to calculate"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,41," them yourself. Unfortunately this is not possible for the STORED method, here"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,42, setting the CRC and uncompressed size information is required before {@link
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,43, #putNextEntry putNextEntry} will be called.</p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,45," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,46, @version $Revision$
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,48,ublic class ZipOutputStream
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,49,xtends DeflaterOutputStream
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,52," Helper, a 0 as ZipShort."
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,54, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,56,"rivate static final byte[] ZERO = {0, 0};"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,59," Helper, a 0 as ZipLong."
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,61, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,63,"rivate static final byte[] LZERO = {0, 0, 0, 0};"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,66, Compression method for deflated entries.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,68, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,70,ublic static final int DEFLATED = ZipEntry.DEFLATED;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,73, Compression method for deflated entries.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,75, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,77,ublic static final int STORED = ZipEntry.STORED;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,80, Various ZIP constants
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,83, local file header signature
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,85, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,87,rotected static final ZipLong LFH_SIG = new ZipLong( 0X04034B50L );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,89, data descriptor signature
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,91, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,93,rotected static final ZipLong DD_SIG = new ZipLong( 0X08074B50L );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,95, central file header signature
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,97, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,99,rotected static final ZipLong CFH_SIG = new ZipLong( 0X02014B50L );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,101, end of central dir signature
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,103, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,105,rotected static final ZipLong EOCD_SIG = new ZipLong( 0X06054B50L );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,108, Smallest date/time ZIP can handle.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,110, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,112,rivate static final ZipLong DOS_TIME_MIN = new ZipLong( 0x00002100L );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,115, The file comment.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,117, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,119,"rivate String m_comment = """";"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,122, Compression level for next entry.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,124, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,126,rivate int m_level = Deflater.DEFAULT_COMPRESSION;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,129, Default compression method for next entry.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,131, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,133,rivate int m_method = DEFLATED;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,136, List of ZipEntries written so far.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,138, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,140,rivate final ArrayList m_entries = new ArrayList();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,143, CRC instance to avoid parsing DEFLATED data twice.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,145, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,147,rivate final CRC32 m_crc = new CRC32();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,150, Count the bytes written to out.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,152, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,154,rivate long m_written;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,157, Data for current entry started here.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,159, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,161,rivate long m_dataStart;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,164, Start of central directory.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,166, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,168,rivate ZipLong m_cdOffset = new ZipLong( 0 );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,171, Length of central directory.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,173, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,175,rivate ZipLong m_cdLength = new ZipLong( 0 );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,178, Holds the offsets of the LFH starts for each entry
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,180, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,182,rivate final Hashtable m_offsets = new Hashtable();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,185, The encoding to use for filenames and the file comment. <p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,187, For a list of possible values see <a
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,188," href=""http://java.sun.com/products/jdk/1.2/docs/guide/internat/encoding.doc.html"">"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,189, http://java.sun.com/products/jdk/1.2/docs/guide/internat/encoding.doc.html
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,190, </a>. Defaults to the platform's default character encoding.</p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,192, @since 1.3
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,194,rivate String m_encoding;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,197, Current entry.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,199, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,201,rivate ZipEntry m_entry;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,204, Creates a new ZIP OutputStream filtering the underlying stream.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,206, @param output the output stream to write to
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,207, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,209,ublic ZipOutputStream( final OutputStream output )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,211,"uper( output, new Deflater( Deflater.DEFAULT_COMPRESSION, true ) );"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,215, Convert a Date object to a DOS date/time field. <p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,217, Stolen from InfoZip's <code>fileio.c</code></p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,219, @param time Description of Parameter
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,220, @return Description of the Returned Value
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,221, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,223,rotected static ZipLong toDosTime( Date time )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,225,alendar cal = Calendar.getInstance();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,226,al.setTime( time );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,227,nt year = cal.get(Calendar.YEAR);
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,228,nt month = cal.get(Calendar.MONTH) + 1;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,229,f( year < 1980 )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,231,eturn DOS_TIME_MIN;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,233,ong value = ( ( year - 1980 ) << 25 )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,234, ( month << 21 )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,235, ( cal.get(Calendar.DAY_OF_MONTH) << 16 )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,236, ( cal.get(Calendar.HOUR_OF_DAY) << 11 )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,237, ( cal.get(Calendar.MINUTE) << 5 )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,238, ( cal.get(Calendar.SECOND) >> 1 );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,240,yte[] result = new byte[ 4 ];
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,241,esult[ 0 ] = (byte)( ( value & 0xFF ) );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,242,esult[ 1 ] = (byte)( ( value & 0xFF00 ) >> 8 );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,243,esult[ 2 ] = (byte)( ( value & 0xFF0000 ) >> 16 );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,244,esult[ 3 ] = (byte)( ( value & 0xFF000000l ) >> 24 );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,245,eturn new ZipLong( result );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,249, Set the file comment.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,251, @param comment The new Comment value
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,252, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,254,ublic void setComment( String comment )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,256,_comment = comment;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,260, The encoding to use for filenames and the file comment. <p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,262, For a list of possible values see <a
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,263," href=""http://java.sun.com/products/jdk/1.2/docs/guide/internat/encoding.doc.html"">"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,264, http://java.sun.com/products/jdk/1.2/docs/guide/internat/encoding.doc.html
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,265, </a>. Defaults to the platform's default character encoding.</p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,267, @param encoding The new Encoding value
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,268, @since 1.3
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,270,ublic void setEncoding( String encoding )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,272,_encoding = encoding;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,276, Sets the compression level for subsequent entries. <p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,278, Default is Deflater.DEFAULT_COMPRESSION.</p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,280, @param level The new Level value
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,281, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,283,ublic void setLevel( int level )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,285,_level = level;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,289, Sets the default compression method for subsequent entries. <p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,291, Default is DEFLATED.</p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,293, @param method The new Method value
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,294, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,296,ublic void setMethod( final int method )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,298,_method = method;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,302, The encoding to use for filenames and the file comment.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,304, @return null if using the platform's default character encoding.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,305, @since 1.3
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,307,ublic String getEncoding()
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,309,eturn m_encoding;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,313, Writes all necessary data for this entry.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,315, @throws IOException if an IO failure causes operation to fail
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,316, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,318,ublic void closeEntry()
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,319,hrows IOException
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,321,f( m_entry == null )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,323,eturn;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,326,ong realCrc = m_crc.getValue();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,327,_crc.reset();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,329,f( m_entry.getMethod() == DEFLATED )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,331,ef.finish();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,332,hile( !def.finished() )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,334,eflate();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,337,_entry.setSize( def.getTotalIn() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,338,_entry.setComprSize( def.getTotalOut() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,339,_entry.setCrc( realCrc );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,341,ef.reset();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,343,_written += m_entry.getCompressedSize();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,345,lse
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,347,f( m_entry.getCrc() != realCrc )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,349,"hrow new ZipException( ""bad CRC checksum for entry """
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,350," m_entry.getName() + "": """
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,351, Long.toHexString( m_entry.getCrc() )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,352," "" instead of """
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,353, Long.toHexString( realCrc ) );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,356,f( m_entry.getSize() != m_written - m_dataStart )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,358,"hrow new ZipException( ""bad size for entry """
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,359," m_entry.getName() + "": """
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,360, m_entry.getSize()
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,361," "" instead of """
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,362, ( m_written - m_dataStart ) );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,367,riteDataDescriptor( m_entry );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,368,_entry = null;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,372," Found out by experiment, that DeflaterOutputStream.close()"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,373, will call finish() - so we don't need to override close
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,374, ourselves.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,377, Finishs writing the contents and closes this as well as the underlying
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,378, stream.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,380, @throws IOException if an IO failure causes operation to fail
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,381, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,383,ublic void finish()
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,384,hrows IOException
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,386,loseEntry();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,387,_cdOffset = new ZipLong( m_written );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,388,inal int size = m_entries.size();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,389,or( int i = 0; i < size; i++ )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,391,inal ZipEntry entry = (ZipEntry)m_entries.get( i );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,392,riteCentralFileHeader( entry );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,394,_cdLength = new ZipLong( m_written - m_cdOffset.getValue() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,395,riteCentralDirectoryEnd();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,396,_offsets.clear();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,397,_entries.clear();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,401, Begin writing next entry.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,403, @param entry the entry
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,404, @throws IOException if an IO failure causes operation to fail
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,405, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,407,ublic void putNextEntry( final ZipEntry entry )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,408,hrows IOException
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,410,loseEntry();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,412,_entry = entry;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,413,_entries.add( m_entry );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,415,f( m_entry.getMethod() == -1 )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,416,// not specified
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,417,_entry.setMethod( m_method );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,420,f( m_entry.getTime() == -1 )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,421,// not specified
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,422,_entry.setTime( System.currentTimeMillis() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,425,f( m_entry.getMethod() == STORED )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,427,f( m_entry.getSize() == -1 )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,429,"hrow new ZipException( ""uncompressed size is required for STORED method"" );"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,431,f( m_entry.getCrc() == -1 )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,433,"hrow new ZipException( ""crc checksum is required for STORED method"" );"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,435,_entry.setComprSize( m_entry.getSize() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,437,lse
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,439,ef.setLevel( m_level );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,441,riteLocalFileHeader( m_entry );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,445, Writes bytes to ZIP entry. <p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,447," Override is necessary to support STORED entries, as well as calculationg"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,448, CRC automatically for DEFLATED entries.</p>
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,450, @param buffer the buffer to write to
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,451, @param offset the offset to write to
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,452, @param length the length of data to write
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,453, @exception IOException if an IO error causes operation to fail
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,455,"ublic void write( final byte[] buffer,"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,456,"inal int offset,"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,457,inal int length )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,458,hrows IOException
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,460,f( m_entry.getMethod() == DEFLATED )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,462,"uper.write( buffer, offset, length );"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,464,lse
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,466,"ut.write( buffer, offset, length );"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,467,_written += length;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,469,"_crc.update( buffer, offset, length );"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,473, Retrieve the bytes for the given String in the encoding set for this
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,474, Stream.
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,476, @param name the name to decode
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,477, @return the bytes for string
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,478, @exception ZipException if fail to retrieve bytes for specified string
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,479, @since 1.3
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,481,rotected byte[] getBytes( String name )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,482,hrows ZipException
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,484,f( m_encoding == null )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,486,eturn name.getBytes();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,488,lse
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,490,ry
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,492,eturn name.getBytes( m_encoding );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,494,atch( UnsupportedEncodingException uee )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,496,hrow new ZipException( uee.getMessage() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,502, Writes the &quot;End of central dir record&quot;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,504, @exception IOException when an IO erro causes operation to fail
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,505, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,507,rotected void writeCentralDirectoryEnd()
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,508,hrows IOException
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,510,ut.write( EOCD_SIG.getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,512,/ disk numbers
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,513,ut.write( ZERO );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,514,ut.write( ZERO );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,516,/ number of entries
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,517,yte[] num = ( new ZipShort( m_entries.size() ) ).getBytes();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,518,ut.write( num );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,519,ut.write( num );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,521,/ length and location of CD
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,522,ut.write( m_cdLength.getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,523,ut.write( m_cdOffset.getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,525,/ ZIP file comment
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,526,yte[] data = getBytes( m_comment );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,527,ut.write( ( new ZipShort( data.length ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,528,ut.write( data );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,532, Writes the central file header entry
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,534, @param entry the zip entry
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,535, @throws IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,536, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,538,rotected void writeCentralFileHeader( final ZipEntry entry )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,539,hrows IOException
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,541,ut.write( CFH_SIG.getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,542,_written += 4;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,544,/ version made by
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,545,ut.write( ( new ZipShort( 20 ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,546,_written += 2;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,548,/ version needed to extract
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,549,/ general purpose bit flag
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,550,f( entry.getMethod() == DEFLATED )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,552,/ requires version 2 as we are going to store length info
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,553,/ in the data descriptor
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,554,ut.write( ( new ZipShort( 20 ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,556,"/ bit3 set to signal, we use a data descriptor"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,557,ut.write( ( new ZipShort( 8 ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,559,lse
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,561,ut.write( ( new ZipShort( 10 ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,562,ut.write( ZERO );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,564,_written += 4;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,566,/ compression method
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,567,ut.write( ( new ZipShort( entry.getMethod() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,568,_written += 2;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,570,/ last mod. time and date
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,571,ut.write( toDosTime( new Date( entry.getTime() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,572,_written += 4;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,574,/ CRC
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,575,/ compressed length
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,576,/ uncompressed length
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,577,ut.write( ( new ZipLong( entry.getCrc() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,578,ut.write( ( new ZipLong( entry.getCompressedSize() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,579,ut.write( ( new ZipLong( entry.getSize() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,580,_written += 12;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,582,/ file name length
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,583,yte[] name = getBytes( entry.getName() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,584,ut.write( ( new ZipShort( name.length ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,585,_written += 2;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,587,/ extra field length
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,588,yte[] extra = entry.getCentralDirectoryExtra();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,589,ut.write( ( new ZipShort( extra.length ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,590,_written += 2;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,592,/ file comment length
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,593,tring comm = entry.getComment();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,594,f( comm == null )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,596,"omm = """";"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,598,yte[] comment = getBytes( comm );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,599,ut.write( ( new ZipShort( comment.length ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,600,_written += 2;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,602,/ disk number start
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,603,ut.write( ZERO );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,604,_written += 2;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,606,/ internal file attributes
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,607,ut.write( ( new ZipShort( entry.getInternalAttributes() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,608,_written += 2;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,610,/ external file attributes
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,611,ut.write( ( new ZipLong( entry.getExternalAttributes() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,612,_written += 4;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,614,/ relative offset of LFH
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,615,ut.write( ( (ZipLong)m_offsets.get( entry ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,616,_written += 4;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,618,/ file name
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,619,ut.write( name );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,620,_written += name.length;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,622,/ extra field
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,623,ut.write( extra );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,624,_written += extra.length;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,626,/ file comment
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,627,ut.write( comment );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,628,_written += comment.length;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,632, Writes the data descriptor entry
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,634, @param ze Description of Parameter
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,635, @throws IOException if an IO failure causes operation to fail
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,636, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,638,rotected void writeDataDescriptor( ZipEntry ze )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,639,hrows IOException
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,641,f( ze.getMethod() != DEFLATED )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,643,eturn;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,645,ut.write( DD_SIG.getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,646,ut.write( ( new ZipLong( m_entry.getCrc() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,647,ut.write( ( new ZipLong( m_entry.getCompressedSize() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,648,ut.write( ( new ZipLong( m_entry.getSize() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,649,_written += 16;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,653, Writes the local file header entry
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,655, @param entry the zip entry
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,656, @exception IOException when an IO error causes operation to fail
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,657, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,659,rotected void writeLocalFileHeader( final ZipEntry entry )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,660,hrows IOException
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,662,"_offsets.put( entry, new ZipLong( m_written ) );"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,664,ut.write( LFH_SIG.getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,665,_written += 4;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,667,/ version needed to extract
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,668,/ general purpose bit flag
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,669,f( entry.getMethod() == DEFLATED )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,671,/ requires version 2 as we are going to store length info
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,672,/ in the data descriptor
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,673,ut.write( ( new ZipShort( 20 ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,675,"/ bit3 set to signal, we use a data descriptor"
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,676,ut.write( ( new ZipShort( 8 ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,678,lse
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,680,ut.write( ( new ZipShort( 10 ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,681,ut.write( ZERO );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,683,_written += 4;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,685,/ compression method
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,686,ut.write( ( new ZipShort( entry.getMethod() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,687,_written += 2;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,689,/ last mod. time and date
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,690,ut.write( toDosTime( new Date( entry.getTime() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,691,_written += 4;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,693,/ CRC
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,694,/ compressed length
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,695,/ uncompressed length
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,696,f( entry.getMethod() == DEFLATED )
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,698,ut.write( LZERO );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,699,ut.write( LZERO );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,700,ut.write( LZERO );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,702,lse
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,704,ut.write( ( new ZipLong( entry.getCrc() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,705,ut.write( ( new ZipLong( entry.getSize() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,706,ut.write( ( new ZipLong( entry.getSize() ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,708,_written += 12;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,710,/ file name length
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,711,yte[] name = getBytes( entry.getName() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,712,ut.write( ( new ZipShort( name.length ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,713,_written += 2;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,715,/ extra field length
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,716,yte[] extra = entry.getLocalFileDataExtra();
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,717,ut.write( ( new ZipShort( extra.length ) ).getBytes() );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,718,_written += 2;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,720,/ file name
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,721,ut.write( name );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,722,_written += name.length;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,724,/ extra field
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,725,ut.write( extra );
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,726,_written += extra.length;
False,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,src/java/org/apache/commons/compress/zip/ZipOutputStream.java,728,_dataStart = m_written;
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,17, under the License.
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,19,ackage org.apache.commons.compress.zip;
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,22, Utility class that represents a two byte integer with conversion rules for
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,23, the big endian byte order of ZIP files.
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,25," @author <a href=""mailto:stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,26, @version $Revision$
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,28,ublic final class ZipShort
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,29,mplements Cloneable
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,31,rivate int m_value;
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,34, Create instance from a number.
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,36, @param value Description of Parameter
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,37, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,39,ublic ZipShort( int value )
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,41,his.m_value = value;
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,45, Create instance from bytes.
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,47, @param bytes Description of Parameter
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,48, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,50,ublic ZipShort( byte[] bytes )
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,52,"his( bytes, 0 );"
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,56, Create instance from the two bytes starting at offset.
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,58, @param bytes Description of Parameter
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,59, @param offset Description of Parameter
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,60, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,62,"ublic ZipShort( byte[] bytes, int offset )"
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,64,_value = ( bytes[ offset + 1 ] << 8 ) & 0xFF00;
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,65,_value += ( bytes[ offset ] & 0xFF );
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,69, Get value as two bytes in big endian byte order.
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,71, @return The Bytes value
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,72, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,74,ublic byte[] getBytes()
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,76,yte[] result = new byte[ 2 ];
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,77,esult[ 0 ] = (byte)( m_value & 0xFF );
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,78,esult[ 1 ] = (byte)( ( m_value & 0xFF00 ) >> 8 );
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,79,eturn result;
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,83, Get value as Java int.
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,85, @return The Value value
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,86, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,88,ublic int getValue()
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,90,eturn m_value;
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,94, Override to make two instances with same value equal.
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,96, @param o Description of Parameter
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,97, @return Description of the Returned Value
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,98, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,100,ublic boolean equals( Object o )
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,102,f( o == null || !( o instanceof ZipShort ) )
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,104,eturn false;
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,106,eturn m_value == ( (ZipShort)o ).getValue();
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,110, Override to make two instances with same value equal.
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,112, @return Description of the Returned Value
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,113, @since 1.1
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,115,ublic int hashCode()
False,src/java/org/apache/commons/compress/zip/ZipShort.java,src/java/org/apache/commons/compress/zip/ZipShort.java,117,eturn m_value;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,17, under the License.
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,20,ackage org.apache.commons.compress.bzip2.example;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,21,mport java.io.File;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,22,mport java.io.FileInputStream;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,23,mport java.io.FileOutputStream;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,24,mport java.io.IOException;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,25,mport java.io.InputStream;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,26,mport java.io.OutputStream;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,28,mport org.apache.commons.compress.bzip2.CBZip2OutputStream;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,31, This simple example shows how to use the Bzip2 classes to compress a file.
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,33," @author <a href=""mailto:peter@apache.org"">Peter Donald</a>"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,34, @version $Revision$ $Date$
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,36,ublic class Bzip2Compress
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,38,ublic static void main( final String[] args )
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,39,hrows Exception
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,41,f( 2 != args.length )
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,43,"ystem.out.println( ""java Bzip2Compress <input> <output>"" );"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,44,ystem.exit( 1 );
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,47,inal File source = new File( args[ 0 ] );
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,48,inal File destination = new File( args[ 1 ] );
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,49,inal CBZip2OutputStream output =
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,50,ew CBZip2OutputStream( new FileOutputStream( destination ) );
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,51,inal FileInputStream input = new FileInputStream( source );
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,52,"opy( input, output );"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,53,nput.close();
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,54,utput.close();
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,58, Copy bytes from an <code>InputStream</code> to an <code>OutputStream</code>.
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,60,"rivate static void copy( final InputStream input,"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,61,inal OutputStream output )
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,62,hrows IOException
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,64,inal byte[] buffer = new byte[ 8024 ];
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,65,nt n = 0;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,66,hile( -1 != ( n = input.read( buffer ) ) )
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Compress.java,68,"utput.write( buffer, 0, n );"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,17, under the License.
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,20,ackage org.apache.commons.compress.bzip2.example;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,21,mport java.io.File;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,22,mport java.io.FileInputStream;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,23,mport java.io.FileOutputStream;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,24,mport java.io.IOException;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,25,mport java.io.InputStream;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,26,mport java.io.OutputStream;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,28,mport org.apache.commons.compress.bzip2.CBZip2InputStream;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,31, This simple example shows how to use the Bzip2 classes to uncompress a file.
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,33," @author <a href=""mailto:peter@apache.org"">Peter Donald</a>"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,34," @author <a href=""mailto:nicolaken@apache.org"">Nicola Ken Barozzi</a>"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,35, @version $Revision$ $Date$
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,37,ublic class Bzip2Uncompress
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,39,ublic static void main( final String[] args )
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,41,ry
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,43,f( 2 != args.length )
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,45,"ystem.out.println( ""java Bzip2Uncompress <input> <output>"" );"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,46,ystem.exit( 1 );
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,48,inal File source = new File( args[ 0 ] );
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,49,inal File destination = new File( args[ 1 ] );
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,50,inal FileOutputStream output =
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,51,ew FileOutputStream( destination );
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,52,inal CBZip2InputStream input = new CBZip2InputStream( new FileInputStream( source ) );
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,53,"opy( input, output );"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,54,nput.close();
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,55,utput.close();
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,56,catch(Exception e){
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,57,.printStackTrace();
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,58,ystem.exit(1);
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,64, Copy bytes from an <code>InputStream</code> to an <code>OutputStream</code>.
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,66,"rivate static void copy( final InputStream input,"
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,67,inal OutputStream output )
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,68,hrows IOException
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,70,inal byte[] buffer = new byte[ 8024 ];
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,71,nt n = 0;
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,72,hile( -1 != ( n = input.read( buffer ) ) )
False,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,src/test/org/apache/commons/compress/bzip2/example/Bzip2Uncompress.java,74,"utput.write( buffer, 0, n );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,17, under the License.
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,20,ackage org.apache.commons.compress.bzip2.test;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,22,mport java.io.BufferedInputStream;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,23,mport java.io.File;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,24,mport java.io.FileInputStream;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,25,mport java.io.FileOutputStream;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,26,mport java.io.IOException;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,27,mport java.io.InputStream;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,28,mport java.io.OutputStream;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,29,mport junit.framework.TestCase;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,30,mport org.apache.commons.compress.bzip2.CBZip2InputStream;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,31,mport org.apache.commons.compress.bzip2.CBZip2OutputStream;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,34, A test the stress tested the BZip implementation to verify
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,35, that it behaves correctly.
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,37," @author <a href=""mailto:peter@apache.org"">Peter Donald</a>"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,38, @version $Revision$ $Date$
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,40,ublic class BzipTestCase
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,41,xtends TestCase
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,43,"rivate static final byte[] HEADER = new byte[]{(byte)'B', (byte)'Z'};"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,45,ublic BzipTestCase( final String name )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,47,uper( name );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,50,ublic void testBzipOutputStream()
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,51,hrows Exception
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,53,"inal InputStream input = getInputStream( ""asf-logo-huge.tar"" );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,54,"inal File outputFile = getOutputFile( "".tar.bz2"" );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,55,inal OutputStream output = new FileOutputStream( outputFile );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,56,inal CBZip2OutputStream packedOutput = getPackedOutput( output );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,57,"opy( input, packedOutput );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,58,hutdownStream( input );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,59,hutdownStream( packedOutput );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,60,hutdownStream( output );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,61,"ompareContents( ""asf-logo-huge.tar.bz2"", outputFile );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,62,orceDelete( outputFile );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,65,rivate void forceDelete( final File outputFile ) throws IOException
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,67,f( !outputFile.delete() )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,69,"inal String message = ""File "" + outputFile + "" unable to be deleted."";"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,70,hrow new IOException( message );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,74,ublic void testBzipInputStream()
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,75,hrows Exception
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,77,"inal InputStream input = getInputStream( ""asf-logo-huge.tar.bz2"" );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,78,"inal File outputFile = getOutputFile( "".tar"" );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,79,inal OutputStream output = new FileOutputStream( outputFile );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,80,inal CBZip2InputStream packedInput = getPackedInput( input );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,81,"opy( packedInput, output );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,82,hutdownStream( input );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,83,hutdownStream( packedInput );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,84,hutdownStream( output );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,85,"ompareContents( ""asf-logo-huge.tar"", outputFile );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,86,orceDelete( outputFile );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,89,ublic void testCBZip2InputStreamClose()
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,90,hrows Exception
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,92,"inal InputStream input = getInputStream( ""asf-logo-huge.tar.bz2"" );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,93,"inal File outputFile = getOutputFile( "".tar.bz2"" );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,94,inal OutputStream output = new FileOutputStream( outputFile );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,95,"opy( input, output );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,96,hutdownStream( input );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,97,hutdownStream( output );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,98,"ssertTrue( ""Check output file exists."" , outputFile.exists() );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,99,inal InputStream input2 = new FileInputStream( outputFile );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,100,inal InputStream packedInput = getPackedInput( input2 );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,101,hutdownStream( packedInput );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,102,ry
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,104,nput2.read();
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,105,"ssertTrue(""Source input stream is still opened."", false);"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,106, catch ( Exception e )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,108,/ Read closed stream.
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,110,orceDelete( outputFile );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,114, Copy bytes from an <code>InputStream</code> to an <code>OutputStream</code>.
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,116,"rivate void copy( final InputStream input,"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,117,inal OutputStream output )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,118,hrows IOException
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,120,inal byte[] buffer = new byte[ 8024 ];
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,121,nt n = 0;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,122,hile( -1 != ( n = input.read( buffer ) ) )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,124,"utput.write( buffer, 0, n );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,128,"rivate void compareContents( final String initial, final File generated )"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,129,hrows Exception
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,131,inal InputStream input1 = getInputStream( initial );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,132,inal InputStream input2 = new FileInputStream( generated );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,133,"inal boolean test = contentEquals( input1, input2 );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,134,hutdownStream( input1 );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,135,hutdownStream( input2 );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,136,"ssertTrue( ""Contents of "" + initial + "" matches generated version "" + generated, test );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,139,rivate CBZip2InputStream getPackedInput( final InputStream input )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,140,hrows IOException
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,142,inal int b1 = input.read();
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,143,inal int b2 = input.read();
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,144,"ssertEquals( ""Equal header byte1"", b1, 'B' );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,145,"ssertEquals( ""Equal header byte2"", b2, 'Z' );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,146,eturn new CBZip2InputStream( input );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,149,rivate CBZip2OutputStream getPackedOutput( final OutputStream output )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,150,hrows IOException
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,152,utput.write( HEADER );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,153,eturn new CBZip2OutputStream( output );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,156,rivate File getOutputFile( final String postfix )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,157,hrows IOException
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,159,"inal File cwd = new File( ""."" );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,160,"eturn File.createTempFile( ""ant-test"", postfix, cwd );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,163,rivate InputStream getInputStream( final String resource )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,164,hrows Exception
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,166,inal String filename =
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,167,"src"" + File.separator + ""test"" + File.separator +"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,168,"etClass().getName().replace( '.', File.separatorChar );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,169,inal String path = getPath( filename );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,170,"inal File input = new File( path, resource );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,171,eturn new FileInputStream( input );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,172,/        final ClassLoader loader = getClass().getClassLoader();
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,173,/        return loader.getResourceAsStream( resource );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,177, Compare the contents of two Streams to determine if they are equal or not.
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,179, @param input1 the first stream
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,180, @param input2 the second stream
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,181," @return true if the content of the streams are equal or they both don't exist, false otherwise"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,183,"rivate boolean contentEquals( final InputStream input1,"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,184,inal InputStream input2 )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,185,hrows IOException
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,187,inal InputStream bufferedInput1 = new BufferedInputStream( input1 );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,188,inal InputStream bufferedInput2 = new BufferedInputStream( input2 );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,190,nt ch = bufferedInput1.read();
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,191,hile( -1 != ch )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,193,inal int ch2 = bufferedInput2.read();
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,194,f( ch != ch2 )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,196,eturn false;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,198,h = bufferedInput1.read();
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,201,inal int ch2 = bufferedInput2.read();
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,202,f( -1 != ch2 )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,204,eturn false;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,206,lse
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,208,eturn true;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,212,rivate String getPath( final String filepath )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,214,inal int index = filepath.lastIndexOf( File.separatorChar );
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,215,f( -1 == index )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,217,"eturn """";"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,219,lse
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,221,"eturn filepath.substring( 0, index );"
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,226, Unconditionally close an <code>OutputStream</code>.
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,227," Equivalent to {@link java.io.OutputStream#close()}, except any exceptions will be ignored."
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,228, @param output A (possibly null) OutputStream
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,230,rivate static void shutdownStream( final OutputStream output )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,232,f( null == output )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,234,eturn;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,237,ry
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,239,utput.close();
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,241,atch( final IOException ioe )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,247, Unconditionally close an <code>InputStream</code>.
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,248," Equivalent to {@link InputStream#close()}, except any exceptions will be ignored."
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,249, @param input A (possibly null) InputStream
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,251,rivate static void shutdownStream( final InputStream input )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,253,f( null == input )
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,255,eturn;
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,258,ry
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,260,nput.close();
False,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,src/test/org/apache/commons/compress/bzip2/test/BzipTestCase.java,262,atch( final IOException ioe )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,17, under the License.
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,20,ackage org.apache.commons.compress.tar;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,22,mport java.io.BufferedInputStream;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,23,mport java.io.File;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,24,mport java.io.FileInputStream;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,25,mport java.io.FileOutputStream;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,26,mport java.io.IOException;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,27,mport java.io.InputStream;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,28,mport java.io.OutputStream;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,29,mport junit.framework.TestCase;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,32, Test case for all tar resources.
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,34, @todo Find V7 tar and do tests against it
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,35," @author <a href=""mailto:peter@apache.org"">Peter Donald</a>"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,36, @version $Revision$ $Date$
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,38,ublic final class TarTestCase
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,39,xtends TestCase
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,41,rivate static final char SP = File.separatorChar;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,42,"rivate static final String BASE_DATA_NAME = ""data.txt"";"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,43,"rivate static final String LFN_PART = ""a-b-c-d-e-f-g-h-i-j/"";"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,44,rivate static final String LONG_FILE_NAME =
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,45,"FN_PART + LFN_PART + LFN_PART + LFN_PART + LFN_PART + ""a"";"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,47,rivate static final String BASEDIR = calcBaseDir();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,49,rivate static final File BASEDIR_FILE = new File( BASEDIR );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,50,rivate static final File POSIX_TAR_FILE =
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,51,"ew File( BASEDIR_FILE, ""posix.tar"" );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,52,/    private static final File V7_TAR_FILE =
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,53,"/        new File( BASEDIR_FILE, ""v7.tar"" );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,54,rivate static final File GNU_TAR_FILE =
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,55,"ew File( BASEDIR_FILE, ""gnu.tar"" );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,56,rivate static final File DATA_FILE1 =
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,57,"ew File( BASEDIR_FILE, BASE_DATA_NAME );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,58,"rivate static final String USER_NAME = ""avalon"";"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,59,"rivate static final String GROUP_NAME = ""excalibur"";"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,60,rivate static final long SIZE = DATA_FILE1.length();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,61,rivate static final int GROUP_ID = 0;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,62,rivate static final int USER_ID = 0;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,63,rivate static final int MODE = 0100000;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,64,rivate static final int MOD_TIME = 0;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,66,ublic TarTestCase()
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,68,"his( ""Tar Test Case"" );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,71,ublic TarTestCase( String name )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,73,uper( name );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,76,rivate static String calcBaseDir()
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,78,inal String name = TarTestCase.class.getName();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,79,inal int size = name.length();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,80,inal String filename =
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,81,"ame.substring( 0, size - 11 ).replace( '.', SP );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,82,"eturn ""src"" + SP + ""test"" + SP +"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,83,P + filename + SP;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,86,ublic void testReadPosixTar()
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,87,hrows Exception
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,89,"ompareTar( BASE_DATA_NAME, POSIX_TAR_FILE );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,92,ublic void testReadGnuTar()
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,93,hrows Exception
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,95,"ompareTar( LONG_FILE_NAME, GNU_TAR_FILE );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,98,ublic void testWritePosixTar()
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,99,hrows Exception
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,101,"/final File temp = new File( BASEDIR_FILE, ""posix2.tar"" );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,102,"inal File temp = File.createTempFile( ""delete-me"", ""tar"" );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,103,inal FileOutputStream fileOutput = new FileOutputStream( temp );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,104,inal TarOutputStream output = new TarOutputStream( fileOutput );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,105,/output.setBufferDebug( true );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,106,inal TarEntry entry = new TarEntry( BASE_DATA_NAME );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,107,etupEntry( entry );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,108,utput.putNextEntry( entry );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,110,inal FileInputStream fileInput = new FileInputStream( DATA_FILE1 );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,111,utput.copyEntryContents( fileInput );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,112,utput.closeEntry();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,113,hutdownStream( fileInput );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,114,hutdownStream( output );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,115,hutdownStream( fileOutput );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,117,"ssertTrue( ""Tar files Equal"", contentEquals( temp, POSIX_TAR_FILE ) );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,118,emp.delete();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,121,ublic void testWriteGnuTar()
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,122,hrows Exception
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,124,"/final File temp = new File( BASEDIR_FILE, ""gnu2.tar"" );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,125,"inal File temp = File.createTempFile( ""delete-me"", ""tar"" );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,126,inal FileOutputStream fileOutput = new FileOutputStream( temp );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,127,inal TarOutputStream output = new TarOutputStream( fileOutput );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,128,/output.setBufferDebug( true );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,129,utput.setLongFileMode( TarOutputStream.LONGFILE_GNU );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,130,inal TarEntry entry = new TarEntry( LONG_FILE_NAME );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,131,etupEntry( entry );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,132,utput.putNextEntry( entry );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,134,inal FileInputStream fileInput = new FileInputStream( DATA_FILE1 );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,135,utput.copyEntryContents( fileInput );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,136,utput.closeEntry();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,137,hutdownStream( fileInput );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,138,hutdownStream( output );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,139,hutdownStream( fileOutput );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,141,/Have to compare it this way as the contents will differ
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,142,/due to entry created for second part of name
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,143,"ompareTar( LONG_FILE_NAME, temp );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,144,emp.delete();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,147,rivate void setupEntry( final TarEntry entry )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,149,ntry.setModTime( MOD_TIME );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,150,ntry.setSize( SIZE );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,151,ntry.setUserID( USER_ID );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,152,ntry.setGroupID( GROUP_ID );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,153,ntry.setUserName( USER_NAME );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,154,ntry.setGroupName( GROUP_NAME );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,155,ntry.setMode( MODE );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,158,rivate void checkEntry( final TarEntry entry )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,160,"ssertEquals( ""Entry size"", SIZE, entry.getSize() );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,161,"ssertEquals( ""Entry User ID"", USER_ID, entry.getUserID() );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,162,"ssertEquals( ""Entry Group ID"", GROUP_ID, entry.getGroupID() );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,163,"ssertEquals( ""Entry User name"", USER_NAME, entry.getUserName() );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,164,"ssertEquals( ""Entry group name"", GROUP_NAME, entry.getGroupName() );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,165,"ssertEquals( ""Entry mode"", MODE, entry.getMode() );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,166,"ssertEquals( ""Entry mode"", MOD_TIME, entry.getModTime().getTime() / 1000 );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,170, Read tar entry with specified name from tar file1 and compare
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,171, against data file DATA_FILE1.
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,173, @param entryName the expected name of entry
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,174, @param file1 the tar file comparing
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,175, @throws IOException if an error occurs
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,177,"rivate void compareTar( final String entryName,"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,178,inal File file1 )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,179,hrows IOException
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,181,inal FileInputStream fileInput = new FileInputStream( file1 );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,182,inal TarInputStream input = new TarInputStream( fileInput );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,183,/input.setDebug( true );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,184,inal TarEntry entry = input.getNextEntry();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,186,"ssertEquals( ""Entry name"", entryName, entry.getName() );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,187,heckEntry( entry );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,189,"inal File temp = new File( BASEDIR_FILE, entryName.length() + ""data.txt"" );//File.createTempFile( ""delete-me"", ""tar"" );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,190,inal FileOutputStream output = new FileOutputStream( temp );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,191,nput.copyEntryContents( output );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,192,hutdownStream( output );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,194,"ssertNull( ""Next Entry"", input.getNextEntry() );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,196,hutdownStream( input );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,198,"ssertTrue( ""Data Equals"", contentEquals( temp, DATA_FILE1 ) );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,199,emp.delete();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,203, Compare the contents of two files to determine if they are equal or not.
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,205, @param file1 the first file
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,206, @param file2 the second file
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,207," @return true if the content of the files are equal or they both don't exist, false otherwise"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,209,"rivate boolean contentEquals( final File file1, final File file2 )"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,210,hrows IOException
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,212,inal boolean file1Exists = file1.exists();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,213,f( file1Exists != file2.exists() )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,215,eturn false;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,218,f( !file1Exists )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,220,/ two not existing files are equal
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,221,eturn true;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,224,f( file1.isDirectory() || file2.isDirectory() )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,226,/ don't want to compare directory contents
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,227,eturn false;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,230,nputStream input1 = null;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,231,nputStream input2 = null;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,232,ry
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,234,nput1 = new FileInputStream( file1 );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,235,nput2 = new FileInputStream( file2 );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,236,"eturn contentEquals( input1, input2 );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,239,inally
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,241,hutdownStream( input1 );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,242,hutdownStream( input2 );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,247, Compare the contents of two Streams to determine if they are equal or not.
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,249, @param input1 the first stream
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,250, @param input2 the second stream
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,251," @return true if the content of the streams are equal or they both don't exist, false otherwise"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,253,"rivate boolean contentEquals( final InputStream input1,"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,254,inal InputStream input2 )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,255,hrows IOException
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,257,inal InputStream bufferedInput1 = new BufferedInputStream( input1 );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,258,inal InputStream bufferedInput2 = new BufferedInputStream( input2 );
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,260,nt count = 0;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,261,nt ch = bufferedInput1.read();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,262,hile( -1 != ch )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,264,inal int ch2 = bufferedInput2.read();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,265,ount++;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,266,f( ch != ch2 )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,268,"ystem.out.println( ""count = "" + count );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,269,"ystem.out.println( ""ch2 = "" + ch2 );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,270,"ystem.out.println( ""ch = "" + ch );"
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,271,eturn false;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,273,h = bufferedInput1.read();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,276,inal int ch2 = bufferedInput2.read();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,277,f( -1 != ch2 )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,279,eturn false;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,281,lse
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,283,eturn true;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,287,rivate void shutdownStream( final InputStream input )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,289,f( null == input )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,291,eturn;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,294,ry
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,296,nput.close();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,298,atch( final IOException ioe )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,303,rivate void shutdownStream( final OutputStream output )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,305,f( null == output )
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,307,eturn;
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,310,ry
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,312,utput.close();
False,src/test/org/apache/commons/compress/tar/TarTestCase.java,src/test/org/apache/commons/compress/tar/TarTestCase.java,314,atch( final IOException ioe )
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,17, under the License.
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,20,ackage org.apache.commons.compress.tar;
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,22,mport junit.framework.Test;
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,23,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,26, A basic test suite that tests all the tar package.
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,28,ublic class TarTestSuite
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,30,ublic static Test suite()
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,32,"inal TestSuite suite = new TestSuite( ""Tar Utilities"" );"
False,src/test/org/apache/commons/compress/tar/TarTestSuite.java,src/test/org/apache/commons/compress/tar/TarTestSuite.java,33,eturn suite;
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,17, under the License.
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,20,ackage org.apache.commons.compress.zip;
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,22,mport java.util.zip.ZipException;
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,23,mport junit.framework.TestCase;
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,26, JUnit testcases AsiExtraField.
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,28," @author <a href=""mailto:stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,30,ublic class AsiExtraFieldTestCase
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,31,xtends TestCase
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,32,mplements UnixStat
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,34,ublic AsiExtraFieldTestCase( final String name )
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,36,uper( name );
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,40, Test file mode magic.
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,42,ublic void testModes()
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,44,inal AsiExtraField field = new AsiExtraField();
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,45,ield.setMode( 0123 );
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,46,"ssertEquals( ""plain file"", 0100123, field.getMode() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,47,ield.setDirectory( true );
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,48,"ssertEquals( ""directory"", 040123, field.getMode() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,49,"ield.setLinkedFile( ""test"" );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,50,"ssertEquals( ""symbolic link"", 0120123, field.getMode() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,53,rivate AsiExtraField createField()
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,55,inal AsiExtraField field = new AsiExtraField();
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,56,ield.setMode( 0123 );
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,57,ield.setUserID( 5 );
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,58,ield.setGroupId( 6 );
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,59,eturn field;
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,62,ublic void testContent1()
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,64,inal AsiExtraField field = createField();
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,65,inal byte[] data = field.getLocalFileDataData();
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,67,"/ CRC manually calculated, sorry"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,68,"inal byte[] expect = {(byte)0xC6, 0x02, 0x78, (byte)0xB6, // CRC"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,69,"123, (byte)0x80, // mode"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,70,", 0, 0, 0, // link length"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,71,", 0, 6, 0};                        // uid, gid"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,72,"ssertEquals( ""no link"", expect.length, data.length );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,73,or( int i = 0; i < expect.length; i++ )
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,75,"ssertEquals( ""no link, byte "" + i, expect[ i ], data[ i ] );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,78,"ield.setLinkedFile( ""test"" );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,81,ublic void testContent2()
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,83,inal AsiExtraField field = createField();
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,84,"ield.setLinkedFile( ""test"" );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,86,inal byte[] data = field.getLocalFileDataData();
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,87,"inal byte[] expect = new byte[]{0x75, (byte)0x8E, 0x41, (byte)0xFD, // CRC"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,88,"123, (byte)0xA0, // mode"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,89,", 0, 0, 0, // link length"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,90,", 0, 6, 0, // uid, gid"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,91,"byte)'t', (byte)'e', (byte)'s', (byte)'t'};"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,92,"ssertEquals( ""no link"", expect.length, data.length );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,93,or( int i = 0; i < expect.length; i++ )
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,95,"ssertEquals( ""no link, byte "" + i, expect[ i ], data[ i ] );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,100,ublic void testReparse1()
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,101,hrows ZipException
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,103,"/ CRC manually calculated, sorry"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,104,"inal byte[] data = {(byte)0xC6, 0x02, 0x78, (byte)0xB6, // CRC"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,105,"123, (byte)0x80, // mode"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,106,", 0, 0, 0, // link length"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,107,", 0, 6, 0};                        // uid, gid"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,108,inal AsiExtraField field = new AsiExtraField();
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,109,"ield.parseFromLocalFileData( data, 0, data.length );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,111,"ssertEquals( ""length plain file"", data.length,"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,112,ield.getLocalFileDataLength().getValue() );
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,113,"ssertTrue( ""plain file, no link"", !field.isLink() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,114,"ssertTrue( ""plain file, no dir"", !field.isDirectory() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,115,"ssertEquals( ""mode plain file"", FILE_FLAG | 0123, field.getMode() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,116,"ssertEquals( ""uid plain file"", 5, field.getUserID() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,117,"ssertEquals( ""gid plain file"", 6, field.getGroupID() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,120,ublic void testReparse2()
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,121,hrows ZipException
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,123,"inal byte[] data = new byte[]{0x75, (byte)0x8E, 0x41, (byte)0xFD, // CRC"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,124,"123, (byte)0xA0, // mode"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,125,", 0, 0, 0, // link length"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,126,", 0, 6, 0, // uid, gid"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,127,"byte)'t', (byte)'e', (byte)'s', (byte)'t'};"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,128,inal AsiExtraField field = new AsiExtraField();
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,129,"ield.parseFromLocalFileData( data, 0, data.length );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,130,"ssertEquals( ""length link"", data.length,"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,131,ield.getLocalFileDataLength().getValue() );
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,132,"ssertTrue( ""link, is link"", field.isLink() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,133,"ssertTrue( ""link, no dir"", !field.isDirectory() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,134,"ssertEquals( ""mode link"", LINK_FLAG | 0123, field.getMode() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,135,"ssertEquals( ""uid link"", 5, field.getUserID() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,136,"ssertEquals( ""gid link"", 6, field.getGroupID() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,137,"ssertEquals( ""test"", field.getLinkedFile() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,140,ublic void testReparse3()
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,141,hrows ZipException
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,143,"inal byte[] data = new byte[]{(byte)0x8E, 0x01, (byte)0xBF, (byte)0x0E, // CRC"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,144,"123, (byte)0x40, // mode"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,145,", 0, 0, 0, // link"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,146,", 0, 6, 0};                          // uid, gid"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,147,inal AsiExtraField field = new AsiExtraField();
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,148,"ield.parseFromLocalFileData( data, 0, data.length );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,149,"ssertEquals( ""length dir"", data.length,"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,150,ield.getLocalFileDataLength().getValue() );
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,151,"ssertTrue( ""dir, no link"", !field.isLink() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,152,"ssertTrue( ""dir, is dir"", field.isDirectory() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,153,"ssertEquals( ""mode dir"", DIR_FLAG | 0123, field.getMode() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,154,"ssertEquals( ""uid dir"", 5, field.getUserID() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,155,"ssertEquals( ""gid dir"", 6, field.getGroupID() );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,158,ublic void testReparse4()
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,159,hrows Exception
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,161,"inal byte[] data = new byte[]{0, 0, 0, 0, // bad CRC"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,162,"123, (byte)0x40, // mode"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,163,", 0, 0, 0, // link"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,164,", 0, 6, 0};                          // uid, gid"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,165,inal AsiExtraField field = new AsiExtraField();
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,166,ry
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,168,"ield.parseFromLocalFileData( data, 0, data.length );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,169,"ail( ""should raise bad CRC exception"" );"
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,171,atch( Exception e )
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,173,"ssertEquals( ""bad CRC checksum 0 instead of ebf018e"","
False,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,src/test/org/apache/commons/compress/zip/AsiExtraFieldTestCase.java,174,.getMessage() );
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,17, under the License.
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,20,ackage org.apache.commons.compress.zip;
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,22,mport junit.framework.TestCase;
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,25, JUnit testcases ExtraFieldUtils.
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,27," @author <a href=""mailto:stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,29,ublic class ExtraFieldUtilsTestCase
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,30,xtends TestCase
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,31,mplements UnixStat
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,33,rivate AsiExtraField m_field;
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,34,rivate UnrecognizedExtraField m_dummy;
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,35,rivate byte[] m_data;
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,36,rivate byte[] m_local;
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,38,ublic ExtraFieldUtilsTestCase( final String name )
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,40,uper( name );
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,43,ublic void setUp()
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,45,_field = new AsiExtraField();
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,46,_field.setMode( 0755 );
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,47,_field.setDirectory( true );
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,48,_dummy = new UnrecognizedExtraField();
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,49,_dummy.setHeaderID( new ZipShort( 1 ) );
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,50,_dummy.setLocalFileDataData( new byte[ 0 ] );
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,51,_dummy.setCentralDirectoryData( new byte[]{0} );
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,53,_local = m_field.getLocalFileDataData();
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,54,inal byte[] dummyLocal = m_dummy.getLocalFileDataData();
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,55,_data = new byte[ 4 + m_local.length + 4 + dummyLocal.length ];
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,56,"ystem.arraycopy( m_field.getHeaderID().getBytes(), 0, m_data, 0, 2 );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,57,"ystem.arraycopy( m_field.getLocalFileDataLength().getBytes(), 0, m_data, 2, 2 );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,58,"ystem.arraycopy( m_local, 0, m_data, 4, m_local.length );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,59,"ystem.arraycopy( m_dummy.getHeaderID().getBytes(), 0, m_data,"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,60," + m_local.length, 2 );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,61,"ystem.arraycopy( m_dummy.getLocalFileDataLength().getBytes(), 0, m_data,"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,62," + m_local.length + 2, 2 );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,63,"ystem.arraycopy( dummyLocal, 0, m_data,"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,64," + m_local.length + 4, dummyLocal.length );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,69, test parser.
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,71,ublic void testParse() throws Exception
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,73,inal ZipExtraField[] extraField = ExtraFieldUtils.parse( m_data );
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,74,"ssertEquals( ""number of fields"", 2, extraField.length );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,75,"ssertTrue( ""type field 1"", extraField[ 0 ] instanceof AsiExtraField );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,76,"ssertEquals( ""mode field 1"", 040755,"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,77, (AsiExtraField)extraField[ 0 ] ).getMode() );
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,78,"ssertTrue( ""type field 2"", extraField[ 1 ] instanceof UnrecognizedExtraField );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,79,"ssertEquals( ""data length field 2"", 0,"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,80,xtraField[ 1 ].getLocalFileDataLength().getValue() );
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,82,inal byte[] data2 = new byte[ m_data.length - 1 ];
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,83,"ystem.arraycopy( m_data, 0, data2, 0, data2.length );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,84,ry
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,86,xtraFieldUtils.parse( data2 );
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,87,"ail( ""data should be invalid"" );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,89,atch( Exception e )
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,91,"ssertEquals( ""message"","
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,92,"data starting at "" + ( 4 + m_local.length ) + "" is in unknown format"","
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,93,.getMessage() );
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,98, Test merge methods
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,100,ublic void testMerge()
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,102,inal byte[] local =
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,103,"xtraFieldUtils.mergeLocalFileDataData( new ZipExtraField[]{m_field, m_dummy} );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,104,"ssertEquals( ""local length"", m_data.length, local.length );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,105,or( int i = 0; i < local.length; i++ )
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,107,"ssertEquals( ""local byte "" + i, m_data[ i ], local[ i ] );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,110,inal byte[] dummyCentral = m_dummy.getCentralDirectoryData();
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,111,inal byte[] data2 = new byte[ 4 + m_local.length + 4 + dummyCentral.length ];
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,112,"ystem.arraycopy( m_data, 0, data2, 0, 4 + m_local.length + 2 );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,113,"ystem.arraycopy( m_dummy.getCentralDirectoryLength().getBytes(), 0,"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,114,"ata2, 4 + m_local.length + 2, 2 );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,115,"ystem.arraycopy( dummyCentral, 0, data2,"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,116," + m_local.length + 4, dummyCentral.length );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,118,inal byte[] central =
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,119,"xtraFieldUtils.mergeCentralDirectoryData( new ZipExtraField[]{m_field, m_dummy} );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,120,"ssertEquals( ""central length"", data2.length, central.length );"
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,121,or( int i = 0; i < central.length; i++ )
False,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,src/test/org/apache/commons/compress/zip/ExtraFieldUtilsTestCase.java,123,"ssertEquals( ""central byte "" + i, data2[ i ], central[ i ] );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,17, under the License.
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,20,ackage org.apache.commons.compress.zip;
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,22,mport java.util.NoSuchElementException;
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,23,mport junit.framework.TestCase;
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,26, JUnit testcases ZipEntry.
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,28," @author <a href=""mailto:stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,30,ublic class ZipEntryTestCase
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,31,xtends TestCase
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,33,ublic ZipEntryTestCase( final String name )
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,35,uper( name );
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,39, test handling of extra fields
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,41,ublic void testExtraFields()
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,43,inal AsiExtraField field = createField();
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,44,inal UnrecognizedExtraField extraField = createExtraField();
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,46,"inal ZipEntry entry = new ZipEntry( ""test/"" );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,47,"ntry.setExtraFields( new ZipExtraField[]{field, extraField} );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,48,inal byte[] data1 = entry.getExtra();
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,49,ipExtraField[] result = entry.getExtraFields();
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,50,"ssertEquals( ""first pass"", 2, result.length );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,51,"ssertSame( field, result[ 0 ] );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,52,"ssertSame( extraField, result[ 1 ] );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,54,nrecognizedExtraField u2 = new UnrecognizedExtraField();
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,55,2.setHeaderID( new ZipShort( 1 ) );
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,56,2.setLocalFileDataData( new byte[]{1} );
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,58,ntry.addExtraField( u2 );
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,59,yte[] data2 = entry.getExtra();
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,60,esult = entry.getExtraFields();
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,61,"ssertEquals( ""second pass"", 2, result.length );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,62,"ssertSame( field, result[ 0 ] );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,63,"ssertSame( u2, result[ 1 ] );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,64,"ssertEquals( ""length second pass"", data1.length + 1, data2.length );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,66,nrecognizedExtraField u3 = new UnrecognizedExtraField();
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,67,3.setHeaderID( new ZipShort( 2 ) );
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,68,3.setLocalFileDataData( new byte[]{1} );
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,69,ntry.addExtraField( u3 );
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,70,esult = entry.getExtraFields();
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,71,"ssertEquals( ""third pass"", 3, result.length );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,73,ntry.removeExtraField( new ZipShort( 1 ) );
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,74,yte[] data3 = entry.getExtra();
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,75,esult = entry.getExtraFields();
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,76,"ssertEquals( ""fourth pass"", 2, result.length );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,77,"ssertSame( field, result[ 0 ] );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,78,"ssertSame( u3, result[ 1 ] );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,79,"ssertEquals( ""length fourth pass"", data2.length, data3.length );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,81,ry
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,83,ntry.removeExtraField( new ZipShort( 1 ) );
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,84,"ail( ""should be no such element"" );"
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,86,atch( final NoSuchElementException nse )
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,91,rivate UnrecognizedExtraField createExtraField()
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,93,nrecognizedExtraField extraField = new UnrecognizedExtraField();
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,94,xtraField.setHeaderID( new ZipShort( 1 ) );
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,95,xtraField.setLocalFileDataData( new byte[ 0 ] );
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,96,eturn extraField;
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,99,rivate AsiExtraField createField()
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,101,inal AsiExtraField field = new AsiExtraField();
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,102,ield.setDirectory( true );
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,103,ield.setMode( 0755 );
False,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,src/test/org/apache/commons/compress/zip/ZipEntryTestCase.java,104,eturn field;
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,17, under the License.
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,20,ackage org.apache.commons.compress.zip;
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,22,mport junit.framework.TestCase;
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,25, JUnit 3 testcases for org.apache.tools.zip.ZipLong.
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,27," @author <a href=""mailto:stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,29,ublic class ZipLongTestCase
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,30,xtends TestCase
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,33,ublic ZipLongTestCase( final String name )
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,35,uper( name );
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,39, Test conversion to bytes.
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,41,ublic void testToBytes()
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,43,inal ZipLong zipLong = new ZipLong( 0x12345678 );
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,44,inal byte[] result = zipLong.getBytes();
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,45,"ssertEquals( ""length getBytes"", 4, result.length );"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,46,"ssertEquals( ""first byte getBytes"", 0x78, result[ 0 ] );"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,47,"ssertEquals( ""second byte getBytes"", 0x56, result[ 1 ] );"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,48,"ssertEquals( ""third byte getBytes"", 0x34, result[ 2 ] );"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,49,"ssertEquals( ""fourth byte getBytes"", 0x12, result[ 3 ] );"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,53, Test conversion from bytes.
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,55,ublic void testFromBytes()
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,57,"inal byte[] value = new byte[]{0x78, 0x56, 0x34, 0x12};"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,58,inal ZipLong zipLong = new ZipLong( value );
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,59,"ssertEquals( ""value from bytes"", 0x12345678, zipLong.getValue() );"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,63, Test the contract of the equals method.
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,65,ublic void testEquals()
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,67,inal ZipLong zipLong1 = new ZipLong( 0x12345678 );
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,68,inal ZipLong zipLong2 = new ZipLong( 0x12345678 );
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,69,inal ZipLong zipLong3 = new ZipLong( 0x87654321 );
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,71,"ssertTrue( ""reflexive"", zipLong1.equals( zipLong1 ) );"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,73,"ssertTrue( ""works"", zipLong1.equals( zipLong2 ) );"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,74,"ssertTrue( ""works, part two"", !zipLong1.equals( zipLong3 ) );"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,76,"ssertTrue( ""symmetric"", zipLong2.equals( zipLong1 ) );"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,78,"ssertTrue( ""null handling"", !zipLong1.equals( null ) );"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,79,"ssertTrue( ""non ZipLong handling"", !zipLong1.equals( new Integer( 0x1234 ) ) );"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,83, Test sign handling.
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,85,ublic void testSign()
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,87,inal ZipLong zipLong =
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,88,"ew ZipLong( new byte[]{(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF} );"
False,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,src/test/org/apache/commons/compress/zip/ZipLongTestCase.java,89,"ssertEquals( 0x00000000FFFFFFFFl, zipLong.getValue() );"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,4, distributed with this work for additional information
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,7," ""License""); you may not use this file except in compliance"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,8, with the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,13, software distributed under the License is distributed on an
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,15," KIND, either express or implied.  See the License for the"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,16, specific language governing permissions and limitations
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,17, under the License.
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,20,ackage org.apache.commons.compress.zip;
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,22,mport junit.framework.TestCase;
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,25, JUnit 3 testcases for org.apache.tools.zip.ZipShort.
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,27," @author <a href=""mailto:stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,29,ublic class ZipShortTestCase
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,30,xtends TestCase
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,32,ublic ZipShortTestCase( String name )
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,34,uper( name );
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,38, Test conversion to bytes.
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,40,ublic void testToBytes()
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,42,inal ZipShort zipShort = new ZipShort( 0x1234 );
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,43,yte[] result = zipShort.getBytes();
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,44,"ssertEquals( ""length getBytes"", 2, result.length );"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,45,"ssertEquals( ""first byte getBytes"", 0x34, result[ 0 ] );"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,46,"ssertEquals( ""second byte getBytes"", 0x12, result[ 1 ] );"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,50, Test conversion from bytes.
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,52,ublic void testFromBytes()
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,54,"yte[] val = new byte[]{0x34, 0x12};"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,55,inal ZipShort zipShort = new ZipShort( val );
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,56,"ssertEquals( ""value from bytes"", 0x1234, zipShort.getValue() );"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,60, Test the contract of the equals method.
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,62,ublic void testEquals()
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,64,inal ZipShort zipShort = new ZipShort( 0x1234 );
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,65,inal ZipShort zipShort2 = new ZipShort( 0x1234 );
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,66,inal ZipShort zipShort3 = new ZipShort( 0x5678 );
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,68,"ssertTrue( ""reflexive"", zipShort.equals( zipShort ) );"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,70,"ssertTrue( ""works"", zipShort.equals( zipShort2 ) );"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,71,"ssertTrue( ""works, part two"", !zipShort.equals( zipShort3 ) );"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,73,"ssertTrue( ""symmetric"", zipShort2.equals( zipShort ) );"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,75,"ssertTrue( ""null handling"", !zipShort.equals( null ) );"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,76,"ssertTrue( ""non ZipShort handling"", !zipShort.equals( new Integer( 0x1234 ) ) );"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,80, Test sign handling.
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,82,ublic void testSign()
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,84,"inal ZipShort zipShort = new ZipShort( new byte[]{(byte)0xFF, (byte)0xFF} );"
False,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,src/test/org/apache/commons/compress/zip/ZipShortTestCase.java,85,"ssertEquals( 0x0000FFFF, zipShort.getValue() );"
