is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,397,final boolean lazy = params.getLazyMatching();
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,398,final int lazyThreshold = params.getLazyMatchingThreshold();
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,408,if (lazy && matchLength <= lazyThreshold && lookahead > minMatch) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,409,// try to find a longer match using the next position
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,410,matchLength = longestMatchForNextPosition(matchLength);
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,451,private int longestMatchForNextPosition(final int prevMatchLength) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,452,// save a bunch of values to restore them if the next match isn't better than the current one
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,453,final int prevMatchStart = matchStart;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,454,final int prevInsertHash = insertHash;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,456,lookahead--;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,457,currentPosition++;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,458,int hashHead = insertString(currentPosition);
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,459,final int prevHashHead = prev[currentPosition & wMask];
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,460,int matchLength = longestMatch(hashHead);
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,462,if (matchLength <= prevMatchLength) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,463,"// use the first match, as the next one isn't any better"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,464,matchLength = prevMatchLength;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,465,matchStart = prevMatchStart;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,467,// restore modified values
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,468,head[insertHash] = prevHashHead;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,469,insertHash = prevInsertHash;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,470,currentPosition--;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,471,lookahead++;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,473,return matchLength;
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,55,"rivate Integer niceBackReferenceLength, maxCandidates;"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,55,"private Integer niceBackReferenceLength, maxCandidates, lazyThreshold;"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,56,private Boolean lazyMatches;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,177,* Sets whether lazy matching should be performed.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,179,* <p>Lazy matching means that after a back-reference for a certain position has been found the compressor will
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,180,* try to find a longer match for the next position.</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,182,* <p>Lazy matching is enabled by default and disabled when tuning for speed.</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,184,public Builder withLazyMatching(boolean lazy) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,185,lazyMatches = lazy;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,186,return this;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,190,* Sets the threshold for lazy matching.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,192,* <p>Even if lazy matching is enabled it will not be performed if the length of the back-reference found for
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,193,* the current position is longer than this value.</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,195,public Builder withLazyThreshold(int threshold) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,196,lazyThreshold = threshold;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,197,return this;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,209,lazyMatches = false;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,210,lazyThreshold = minBackReferenceLength;
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,194,iceBackReferenceLength = maxBackReferenceLength;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,221,niceBackReferenceLength = lazyThreshold = maxBackReferenceLength;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,223,lazyMatches = true;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,236,boolean lazy = lazyMatches != null ? lazyMatches : true;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,237,int threshold = lazy ? (lazyThreshold != null ? lazyThreshold : niceLen) : minBackReferenceLength;
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,210,"axOffset, maxLiteralLength, niceLen, candidates);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,240,"maxOffset, maxLiteralLength, niceLen, candidates, lazy, threshold);"
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,215,"iceBackReferenceLength, maxCandidates;"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,245,"niceBackReferenceLength, maxCandidates, lazyThreshold;"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,246,private final boolean lazyMatching;
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,218,"nt maxLiteralLength, int niceBackReferenceLength, int maxCandidates) {"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,249,"int maxLiteralLength, int niceBackReferenceLength, int maxCandidates, boolean lazyMatching,"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,250,int lazyThreshold) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,258,this.lazyMatching = lazyMatching;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,259,this.lazyThreshold = lazyThreshold;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,314,* Gets whether to perform lazy matching.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,316,public boolean getLazyMatching() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,317,return lazyMatching;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,321,* Gets the threshold for lazy matching.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,323,public int getLazyMatchingThreshold() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,324,return lazyThreshold;
