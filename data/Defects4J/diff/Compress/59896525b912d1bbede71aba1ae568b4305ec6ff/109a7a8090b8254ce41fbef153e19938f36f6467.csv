is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,24,import java.io.FilterInputStream;
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,42, (which always uses the unsupported LZMA
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,43,* (when it uses the unsupported LZMA
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,46, 7z a -mhc=off -mx=0 [-ppassword] archive.7z files
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,47, 7z a -mhc=off -m0=LZMA2 [-ppassword] archive.7z files
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,48, 7z a -mhc=off -m0=BZIP2 [-ppassword] archive.7z files
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,47,* 7z a -mhc=off [-mhe=on] -mx=0 [-ppassword] archive.7z files
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,48,* 7z a -mhc=off [-mhe=on] -m0=LZMA2 [-ppassword] archive.7z files
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,49,* 7z a -mhc=off [-mhe=on] -m0=BZIP2 [-ppassword] archive.7z files
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,84,ublic SevenZFile(final File filename) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,85,"public SevenZFile(final File filename, final String password) throws IOException {"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,87,this.password = password;
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,97,"ublic SevenZFile(final File filename, final String password) throws IOException {"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,98,his(filename);
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,99,his.password = password;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,99,public SevenZFile(final File filename) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,100,"this(filename, null);"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,168,inal Archive archive = new Archive();
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,170,inal DataInputStream nextHeaderInputStream = new DataInputStream(
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,170,DataInputStream nextHeaderInputStream = new DataInputStream(
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,172,Archive archive = new Archive();
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,174,"eadEncodedHeader(nextHeaderInputStream, archive);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,175,"nextHeaderInputStream = readEncodedHeader(nextHeaderInputStream, archive);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,176,// Archive gets rebuilt with the new header
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,177,archive = new Archive();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,182,} else {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,183,"throw new IOException(""Broken or unsupported archive: no Header"");"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,243,"rivate void readEncodedHeader(final DataInputStream header, final Archive archive) throws IOException {"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,248,"private DataInputStream readEncodedHeader(final DataInputStream header, final Archive archive) throws IOException {"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,248,/ FIXME: and decompress it etc.
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,253,// FIXME: merge with buildDecodingStream()/buildDecoderStack() at some stage?
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,254,final Folder folder = archive.folders[0];
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,255,final int firstPackStreamIndex = 0;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,256,final long folderOffset = SIGNATURE_HEADER_SIZE + archive.packPos +
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,257,0;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,259,file.seek(folderOffset);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,260,"InputStream inputStreamStack = new BoundedRandomAccessFileInputStream(file,"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,261,archive.packSizes[firstPackStreamIndex]);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,262,for (final Coder coder : folder.coders) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,263,if (coder.numInStreams != 1 || coder.numOutStreams != 1) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,264,"throw new IOException(""Multi input/output stream coders are not yet supported"");"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,266,"inputStreamStack = Coders.addDecoder(inputStreamStack, coder, password);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,268,if (folder.hasCrc) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,269,"inputStreamStack = new CRC32VerifyingInputStream(inputStreamStack,"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,270,"folder.getUnpackSize(), folder.crc);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,272,final byte[] nextHeader = new byte[(int)folder.getUnpackSize()];
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,273,final DataInputStream nextHeaderInputStream = new DataInputStream(inputStreamStack);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,274,try {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,275,nextHeaderInputStream.readFully(nextHeader);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,276,} finally {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,277,nextHeaderInputStream.close();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,279,return new DataInputStream(new ByteArrayInputStream(nextHeader));
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,250,"hrow new IOException(""LZMA compression unsupported, so files with compressed header cannot be read"");"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,282,"//throw new IOException(""LZMA compression unsupported, so files with compressed header cannot be read"");"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,898,rivate static class BoundedInputStream extends InputStream {
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,899,rivate InputStream is;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,930,private static class BoundedInputStream extends FilterInputStream {
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,902,"ublic BoundedInputStream(final InputStream is, final long size) {"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,903,his.is = is;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,933,"public BoundedInputStream(final InputStream in, final long size) {"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,934,super(in);
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,911,eturn is.read();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,942,return in.read();
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,926,"inal int bytesRead = is.read(b, off, bytesToRead);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,957,"final int bytesRead = in.read(b, off, bytesToRead);"
True,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,20,import java.io.FilterInputStream;
False,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,24,ublic class CRC32VerifyingInputStream extends InputStream {
False,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,25,rivate final InputStream is;
True,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,25,public class CRC32VerifyingInputStream extends FilterInputStream {
False,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,30,"ublic CRC32VerifyingInputStream(final InputStream is, final long size, final int expectedCrc32) {"
False,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,31,his.is = is;
True,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,30,"public CRC32VerifyingInputStream(final InputStream in, final long size, final int expectedCrc32) {"
True,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,31,super(in);
False,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,41,nt ret = is.read();
True,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,41,int ret = in.read();
False,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,59,"nt ret = is.read(b, off, len);"
True,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,59,"int ret = in.read(b, off, len);"
False,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,82,s.close();
True,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,src/main/java/org/apache/commons/compress/utils/CRC32VerifyingInputStream.java,82,in.close();
