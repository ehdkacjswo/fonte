is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,24,import java.io.FileNotFoundException;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,25,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,26,import java.net.URL;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,27,import java.util.ArrayList;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,28,import java.util.List;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,30,import org.apache.commons.compress.archivers.ArchiveEntry;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,31,import org.apache.commons.compress.archivers.ArchiveException;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,40,final ArchiveStreamFactory factory = new ArchiveStreamFactory();
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,41,final ClassLoader classLoader = getClass().getClassLoader();
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,34,inal ArchiveStreamFactory factory = new ArchiveStreamFactory();
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,36,inal ArchiveInputStream ar = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,37,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,38,"ew File(getClass().getClassLoader().getResource(""bla.ar"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,45,"final ArchiveInputStream ar = getStreamFor(""bla.ar"");"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,42,inal ArchiveInputStream tar = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,43,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,44,"ew File(getClass().getClassLoader().getResource(""bla.tar"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,49,"final ArchiveInputStream tar = getStreamFor(""bla.tar"");"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,48,inal ArchiveInputStream zip = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,49,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,50,"ew File(getClass().getClassLoader().getResource(""bla.zip"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,53,"final ArchiveInputStream zip = getStreamFor(""bla.zip"");"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,54,inal ArchiveInputStream jar = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,55,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,56,"ew File(getClass().getClassLoader().getResource(""bla.jar"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,57,"final ArchiveInputStream jar = getStreamFor(""bla.jar"");"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,60,inal ArchiveInputStream cpio = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,61,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,62,"ew File(getClass().getClassLoader().getResource(""bla.cpio"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,61,"final ArchiveInputStream cpio = getStreamFor(""bla.cpio"");"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,66,/              final ArchiveInputStream tgz = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,67,/                              new BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,68,"/                                              new File(getClass().getClassLoader().getResource(""bla.tgz"").getFile()))));"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,69,/              assertTrue(tgz instanceof TarArchiveInputStream);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,65,// Not yet implemented
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,66,"//        final ArchiveInputStream tgz = getStreamFor(""bla.tgz"");"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,67,//        assertNotNull(tgz);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,68,//        assertTrue(tgz instanceof TarArchiveInputStream);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,72,private ArchiveInputStream getStreamFor(String resource)
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,73,"throws ArchiveException, FileNotFoundException {"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,74,final URL rsc = classLoader.getResource(resource);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,75,"assertNotNull(""Could not find resource ""+resource,rsc);"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,76,return factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,77,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,78,new File(rsc.getFile()))));
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,81,// Scan list of archives in resources/archives directory
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,82,public void notyettestArchives() throws Exception{
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,83,"File arcdir =new File(classLoader.getResource(""archives"").getFile());"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,84,assertTrue(arcdir.exists());
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,85,File[]files=arcdir.listFiles();
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,86,for (int i=0; i<files.length; i++){
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,87,final File file = files[i];
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,88,"if (file.getName().endsWith("".txt"")){"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,89,continue;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,91,try {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,92,// TODO - how to determine expected file contents
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,93,final ArrayList expected = new ArrayList();
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,94,"checkArchiveContent(file, expected);"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,95,} catch (ArchiveException e) {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,96,"fail(""Problem checking ""+file);"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,101,// Check that the empty archives created by the code are readable
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,103,"// Not possible to detect empty ""ar"" archive as it is completely empty"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,104,//    public void testEmptyArArchive() throws Exception {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,105,"//        emptyArchive(""ar"");"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,108,public void testEmptyCpioArchive() throws Exception {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,109,"checkEmptyArchive(""cpio"");"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,112,public void testEmptyJarArchive() throws Exception {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,113,"checkEmptyArchive(""jar"");"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,116,// empty tar archives just have 512 null bytes
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,117,//    public void testEmptyTarArchive() throws Exception {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,118,"//        checkEmptyArchive(""tar"");"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,120,public void testEmptyZipArchive() throws Exception {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,121,"checkEmptyArchive(""zip"");"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,124,private void checkEmptyArchive(String type) throws Exception{
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,125,File ar = createEmptyArchive(type); // will be deleted by tearDown()
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,126,ar.deleteOnExit(); // Just in case file cannot be deleted
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,127,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,128,BufferedInputStream in = null;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,129,try {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,130,in = new BufferedInputStream(new FileInputStream(ar));
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,131,ais = factory.createArchiveInputStream(in);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,132,} catch (ArchiveException ae) {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,133,"fail(""Should have recognised empty archive for ""+type);"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,134,} finally {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,135,if (ais != null) {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,136,ais.close(); // will close input as well
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,137,} else if (in != null){
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,138,in.close();
