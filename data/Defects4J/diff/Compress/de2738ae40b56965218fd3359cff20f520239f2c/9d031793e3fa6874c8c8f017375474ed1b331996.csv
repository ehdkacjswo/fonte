is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,34, block must be a literal block for the scheme to work.</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,34,* block must be a literal block for the scheme to work - unless the
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,35,* {@link #prefill prefill} method has been used to provide initial
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,36,* data that is never returned by {@link #read read} but only used for
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,37,* back-references.</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,39,* <p>Subclasses must override the three-arg {@link #read read} method
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,40,* as the no-arg version delegates to it and the default
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,41,"* implementation delegates to the no-arg version, leading to infinite"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java,42,* mutual recursion and a {@code StackOverflowError} otherwise.</p>
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,19,package org.apache.commons.compress.compressors.lz77support;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,21,import java.io.ByteArrayInputStream;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,22,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,23,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,25,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,27,import static org.junit.Assert.assertArrayEquals;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,28,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,30,public class AbstractLZ77CompressorInputStreamTest {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,32,private static class TestStream extends AbstractLZ77CompressorInputStream {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,33,private boolean literal;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,34,TestStream(InputStream in) throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,35,"super(in, 1024);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,37,@Override
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,38,"public int read(final byte[] b, final int off, final int len) throws IOException {"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,39,if (literal) {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,40,"return readLiteral(b, off, len);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,42,"return readBackReference(b, off, len);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,44,void literal(int len) {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,45,startLiteral(len);
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,46,literal = true;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,50,@Test(expected = IllegalStateException.class)
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,51,public void cantPrefillAfterDataHasBeenRead() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,52,"byte[] data = new byte[] { 1, 2, 3, 4 };"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,53,try (TestStream s = new TestStream(new ByteArrayInputStream(data))) {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,54,s.literal(3);
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,55,"assertEquals(1, s.read());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,56,"s.prefill(new byte[] { 1, 2, 3 });"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,60,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,61,public void prefillCanBeUsedForBackReferences() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,62,"byte[] data = new byte[] { 1, 2, 3, 4 };"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,63,try (TestStream s = new TestStream(new ByteArrayInputStream(new byte[0]))) {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,64,s.prefill(data);
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,65,"s.startBackReference(2, 4);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,66,byte[] r = new byte[4];
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,67,"assertEquals(4, s.read(r));"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,68,"assertArrayEquals(new byte[] { 3, 4, 3, 4 }, r);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,72,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,73,public void ifPrefillExceedsWindowSizeTheLastBytesAreUsed() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,74,byte[] data = new byte[2048];
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,75,data[2046] = 3;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,76,data[2047] = 4;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,77,try (TestStream s = new TestStream(new ByteArrayInputStream(new byte[0]))) {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,78,s.prefill(data);
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,79,"s.startBackReference(2, 4);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,80,byte[] r = new byte[4];
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,81,"assertEquals(4, s.read(r));"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStreamTest.java,82,"assertArrayEquals(new byte[] { 3, 4, 3, 4 }, r);"
