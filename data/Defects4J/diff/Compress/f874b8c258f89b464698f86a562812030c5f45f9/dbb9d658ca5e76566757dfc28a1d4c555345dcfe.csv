is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,31, equal to <code>windowSize</code>.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,31,* equal to <code>windowSize - 1</code>.
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,39,"his(windowSize, TRUE_MIN_MATCH_LENGTH, windowSize, windowSize, windowSize);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,39,"this(windowSize, TRUE_MIN_MATCH_LENGTH, windowSize - 1, windowSize - 1, windowSize);"
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,51, @param maxMatchLength maximal site of a match found. A value
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,52, smaller than <code>minMatchLength</code> is interpreted as
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,53, infinite (actually {@link Integer.MAX_VALUE}).
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,51,* @param maxMatchLength maximal length of a match found. A value
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,52,* smaller than <code>minMatchLength</code> as well as values
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,53,* bigger than <code>windowSize - 1</code> are interpreted as
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,54,* <code>windowSize - 1</code>.
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,55, non-positive value is interpreted as <code>windowSize</code>.
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,56, @param maxLiteralLength maximal length of a literal block. Negative
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,57, numbers and 0 as well as values bigger than <code>2 *
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,58, windowSize</code> are interpreted as <code>windowSize</code>.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,56,* non-positive value as well as values bigger than
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,57,* <code>windowSize - 1</code> are interpreted as <code>windowSize
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,58,* - 1</code>.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,59,* @param maxLiteralLength maximal length of a literal
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,60,* block. Negative numbers and 0 as well as values bigger than
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,61,* <code>windowSize</code> are interpreted as
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,62,* <code>windowSize</code>.
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,72,his.maxOffset = maxOffset < 1 ? this.windowSize
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,73," Math.min(maxOffset, this.windowSize);"
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,74,his.maxMatchLength = maxMatchLength < this.minMatchLength ? Integer.MAX_VALUE
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,75, maxMatchLength;
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,76,his.maxLiteralLength = maxLiteralLength < 1 || maxLiteralLength > 2 * windowSize
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,77, windowSize : maxLiteralLength;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,76,int limit = windowSize - 1;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,77,"this.maxOffset = maxOffset < 1 ? limit : Math.min(maxOffset, limit);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,78,this.maxMatchLength = maxMatchLength < this.minMatchLength ? limit
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,79,": Math.min(maxMatchLength, limit);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,80,this.maxLiteralLength = maxLiteralLength < 1 ? windowSize
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,81,": Math.min(maxLiteralLength, windowSize);"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,150,"ssertSize(5, blocks);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,150,"assertSize(6, blocks);"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,153,"ssertBackReference(5, 8, blocks.get(1));"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,154,"ssertBackReference(5, 8, blocks.get(2));"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,155,"ssertLiteralBlock(""ah!"", blocks.get(3));"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,153,"assertBackReference(5, 7, blocks.get(1));"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,154,"assertBackReference(5, 3, blocks.get(2));"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,155,"assertBackReference(5, 7, blocks.get(3));"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java,156,"assertLiteralBlock(""h!"", blocks.get(4));"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,32,"ssertEquals(128, p.getMaxMatchLength());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,33,"ssertEquals(128, p.getMaxOffset());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,32,"assertEquals(127, p.getMaxMatchLength());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,33,"assertEquals(127, p.getMaxOffset());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,44,ublic void maxMatchLengthIsInfiniteWhenSmallerThanMinMatchLength() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,44,public void maxMatchLengthIsWinsizeMinus1WhenSmallerThanMinMatchLength() {
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,46,"ssertEquals(Integer.MAX_VALUE, p.getMaxMatchLength());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,46,"assertEquals(127, p.getMaxMatchLength());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,56,ublic void maxOffsetIsWindowSizeIfSetTo0() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,56,public void maxOffsetIsWindowSizeMinus1IfSetTo0() {
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,58,"ssertEquals(128, p.getMaxOffset());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,58,"assertEquals(127, p.getMaxOffset());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,62,ublic void maxOffsetIsWindowSizeIfSetToANegativeValue() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,62,public void maxOffsetIsWindowSizeMinus1IfSetToANegativeValue() {
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,64,"ssertEquals(128, p.getMaxOffset());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,64,"assertEquals(127, p.getMaxOffset());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,68,ublic void maxOffsetIsWindowSizeIfBiggerThanWindowSize() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,68,public void maxOffsetIsWindowSizeMinus1IfBiggerThanWindowSize() {
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,70,"ssertEquals(128, p.getMaxOffset());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,70,"assertEquals(127, p.getMaxOffset());"
