is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,33,private static final int COPY_BUF_SIZE = 8024;
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,34,private static final int SKIP_BUF_SIZE = 4096;
False,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,49,"eturn copy(input, output, 8024);"
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,52,"return copy(input, output, COPY_BUF_SIZE);"
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,82,* <p>In a case where the stream's skip() method returns 0 before
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,83,* the requested number of bytes has been skip this implementation
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,84,* will fall back to using the read() method.</p>
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,104,if (numToSkip > 0) {
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,105,byte[] skipBuf = new byte[SKIP_BUF_SIZE];
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,106,while (numToSkip > 0) {
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,107,"int read = readFully(input, skipBuf, 0,"
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,108,"(int) Math.min(numToSkip, SKIP_BUF_SIZE));"
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,109,if (read < 1) {
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,110,break;
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,112,numToSkip -= read;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,18,package org.apache.commons.compress.utils;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,20,import java.io.ByteArrayInputStream;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,21,import java.io.FilterInputStream;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,22,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,23,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,25,import org.junit.Assert;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,26,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,28,public class IOUtilsTest {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,30,private interface StreamWrapper {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,31,InputStream wrap(InputStream toWrap);
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,34,@Test
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,35,public void skipUsingSkip() throws Exception {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,36,skip(new StreamWrapper() {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,37,public InputStream wrap(InputStream toWrap) {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,38,return toWrap;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,43,@Test
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,44,public void skipUsingRead() throws Exception {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,45,skip(new StreamWrapper() {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,46,public InputStream wrap(InputStream toWrap) {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,47,return new FilterInputStream(toWrap) {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,48,public long skip(long s) {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,49,return 0;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,56,@Test
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,57,public void skipUsingSkipAndRead() throws Exception {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,58,skip(new StreamWrapper() {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,59,public InputStream wrap(final InputStream toWrap) {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,60,return new FilterInputStream(toWrap) {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,61,boolean skipped;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,62,public long skip(long s) throws IOException {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,63,if (!skipped) {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,64,toWrap.skip(5);
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,65,skipped = true;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,66,return 5;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,68,return 0;
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,75,private void skip(StreamWrapper wrapper) throws Exception {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,76,ByteArrayInputStream in = new ByteArrayInputStream(new byte[] {
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,77,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11"
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,79,InputStream sut = wrapper.wrap(in);
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,80,"Assert.assertEquals(10, IOUtils.skip(sut, 10));"
True,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java,81,"Assert.assertEquals(11, sut.read());"
