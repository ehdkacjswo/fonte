is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,297,Inflater inflator = new Inflater();
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,298,nflater inflator = new Inflater();
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,306,nflator.end();
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,307,} finally {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,308,inflator.end();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,522,n.close();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,523,nf.end();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,522,try {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,523,in.close();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,524,} finally {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,525,inf.end();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,423,uper.close();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,424,nflater.end();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,423,try {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,424,super.close();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,425,} finally {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,426,inflater.end();
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,40,private final Inflater inflater;
False,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,61,"n = new InflaterInputStream(inputStream, new Inflater(!parameters.withZlibHeader()));"
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,62,inflater = new Inflater(!parameters.withZlibHeader());
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,63,"in = new InflaterInputStream(inputStream, inflater);"
False,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,95,n.close();
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,97,try {
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,98,in.close();
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,99,} finally {
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java,100,inflater.end();
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,34,private final Deflater deflater;
False,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,52,"his.out = new DeflaterOutputStream(outputStream, new Deflater(parameters.getCompressionLevel(), !parameters.withZlibHeader()));"
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,53,"this.deflater = new Deflater(parameters.getCompressionLevel(), !parameters.withZlibHeader());"
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,54,"this.out = new DeflaterOutputStream(outputStream, deflater);"
False,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,86,ut.close();
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,88,try {
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,89,out.close();
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,90,} finally {
True,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java,91,deflater.end();
