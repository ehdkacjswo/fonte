is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,29,import org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,88,* Constant used to identify the LZMA compression method.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,89,* @since 1.6
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,91,"public static final String LZMA = ""lzma"";"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,159," @param name of the compressor, i.e. ""gz"", ""bzip2"", ""xz"", or ""pack200"""
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,166,"* @param name of the compressor, i.e. ""gz"", ""bzip2"", ""xz"", ""lzma"", or ""pack200"""
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,193,if (LZMA.equalsIgnoreCase(name)) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,194,return new LZMACompressorInputStream(in);
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,19,package org.apache.commons.compress.compressors.lzma;
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,21,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,22,import java.io.InputStream;
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,23,import org.tukaani.xz.LZMAInputStream;
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,25,import org.apache.commons.compress.compressors.CompressorInputStream;
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,28,* LZMA decompressor.
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,29,* @since 1.6
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,31,public class LZMACompressorInputStream extends CompressorInputStream {
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,32,private final InputStream in;
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,35,* Creates a new input stream that decompresses LZMA-compressed data
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,36,* from the specified input stream.
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,38,* @param       inputStream where to read the compressed data
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,40,"* @throws      IOException if the input is not in the .lzma format,"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,41,"*                          the input is corrupt or truncated, the .lzma"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,42,*                          headers specify sizes that are not supported
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,43,"*                          by this implementation, or the underlying"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,44,*                          <code>inputStream</code> throws an exception
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,46,public LZMACompressorInputStream(InputStream inputStream)
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,47,throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,48,in = new LZMAInputStream(inputStream);
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,51,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,52,@Override
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,53,public int read() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,54,int ret = in.read();
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,55,count(ret == -1 ? -1 : 1);
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,56,return ret;
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,59,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,60,@Override
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,61,"public int read(byte[] buf, int off, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,62,"int ret = in.read(buf, off, len);"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,63,count(ret);
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,64,return ret;
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,67,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,68,@Override
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,69,public long skip(long n) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,70,return in.skip(n);
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,73,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,74,@Override
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,75,public int available() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,76,return in.available();
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,79,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,80,@Override
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,81,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,82,in.close();
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,19,package org.apache.commons.compress.compressors;
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,23,import java.io.FileOutputStream;
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,24,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,26,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,27,import org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream;
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,28,import org.apache.commons.compress.utils.IOUtils;
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,30,public final class LZMATestCase extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,32,public void testLZMAUnarchive() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,33,"final File input = getFile(""bla.tar.lzma"");"
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,34,"final File output = new File(dir, ""bla.tar"");"
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,35,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,36,try {
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,37,final CompressorInputStream in = new LZMACompressorInputStream(is);
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,38,FileOutputStream out = null;
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,39,try {
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,40,out = new FileOutputStream(output);
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,41,"IOUtils.copy(in, out);"
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,42,} finally {
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,43,if (out != null) {
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,44,out.close();
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,46,in.close();
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,48,} finally {
True,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,src/test/java/org/apache/commons/compress/compressors/LZMATestCase.java,49,is.close();
