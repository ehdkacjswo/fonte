is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,272,hile(true){ // get length
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,273,nt ch;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,274,nt len=0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,275,nt read=0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,276,hile((ch = br.read()) != -1){
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,277,ead++;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,278,f (ch == ' '){ // End of length string
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,279,/ Get keyword
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,280,tringBuffer sb = new StringBuffer();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,281,hile((ch = br.read()) != -1){
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,282,ead++;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,283,f (ch == '='){ // end of keyword
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,284,tring keyword = sb.toString();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,285,/ Get rest of entry
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,286,har[] cbuf = new char[len-read];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,287,nt got = br.read(cbuf);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,288,f (got != len-read){
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,289,"hrow new IOException(""Failed to read Paxheader. Expected ""+(len-read)+"" chars, read ""+got);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,272,while(true){ // get length
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,273,int ch;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,274,int len = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,275,int read = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,276,while((ch = br.read()) != -1){
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,277,read++;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,278,if (ch == ' '){ // End of length string
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,279,// Get keyword
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,280,StringBuffer sb = new StringBuffer();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,281,while((ch = br.read()) != -1){
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,282,read++;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,283,if (ch == '='){ // end of keyword
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,284,String keyword = sb.toString();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,285,// Get rest of entry
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,286,char[] cbuf = new char[len-read];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,287,int got = br.read(cbuf);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,288,if (got != len - read){
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,289,"throw new IOException(""Failed to read """
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,290,"+ ""Paxheader. Expected """
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,291,+ (len - read)
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,292,"+ "" chars, read """
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,293,+ got);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,295,// Drop trailing NL
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,296,"String value = new String(cbuf, 0,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,297,len - read - 1);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,298,"headers.put(keyword, value);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,299,break;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,291,"tring value = new String(cbuf, 0 , len-read-1); // Drop trailing NL"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,292,"eaders.put(keyword, value);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,293,reak;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,301,sb.append((char) ch);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,295,b.append((char)ch);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,303,break; // Processed single header
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,297,reak; // Processed single header
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,305,len *= 10;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,306,len += ch - '0';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,308,if (ch == -1){ // EOF
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,309,break;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,299,en *= 10;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,300,en += ch - '0';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,302,f (ch == -1){ // EOF
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,303,reak;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,1203,"/ actually ""will use"""
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,1204,asUsedZip64 = true;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,1203,"// actually ""will use"""
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,1204,hasUsedZip64 = true;
