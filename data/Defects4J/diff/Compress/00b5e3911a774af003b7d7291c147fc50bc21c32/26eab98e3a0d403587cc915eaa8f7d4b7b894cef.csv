is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,3, or more contributor license agreements.  See the NOTICE file
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,4, distributed with this work for additional information
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,6," to you under the Apache License, Version 2.0 (the"
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,7," ""License""); you may not use this file except in compliance"
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,8, with the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,12," Unless required by applicable law or agreed to in writing,"
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,13, software distributed under the License is distributed on an
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,15," KIND, either express or implied.  See the License for the"
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,16, specific language governing permissions and limitations
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,17, under the License.
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,19,ackage org.apache.commons.compress;
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,23," During initialization, some streams compute expected memory use."
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,24, They should check this value and throw a MemoryLimitException if the
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,25, estimated memory use is greater that {@link MemoryLimit#MEMORY_LIMIT_IN_KB}.
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,26, <p/>
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,27," During compression/archiving, streams can allocate byte arrays based"
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,28, on a value read in from the stream.  Corrupt files can cause compressors/archivers
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,29, to cause {@link OutOfMemoryError}s.  Compressors/archivers should check
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,30, this maximum threshold before allocating memory and throw a {@link MemoryLimitException}
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,31, if the allocation would exceed this limit.
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,32, <p/>
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,33," To avoid changes in legacy behavior, {@link MemoryLimit#MEMORY_LIMIT_IN_KB}"
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,34," is set to {@link MemoryLimit#NO_LIMIT}.  However, in applications that might"
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,35," encounter untrusted/corrupt files, we encourage setting the limit to something"
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,36, reasonable for the application.
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,37, <p/>
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,38," As of 1.14, this limit should be observed when instantiating CompressorStreams."
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,39, Work remains to propagate memory limit checks throughout the codebase.
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,41, @since 1.14
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,43,ublic class MemoryLimit {
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,45,ublic static final int NO_LIMIT = -1;
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,46,ublic static volatile int MEMORY_LIMIT_IN_KB = NO_LIMIT;
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,49, Sets {@link MemoryLimit#MEMORY_LIMIT_IN_KB}.
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,50, @param memoryLimitInKb limit in kilobytes
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,52, @throws IllegalArgumentException if value is &lt; -1
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,54,ublic static void setMemoryLimitInKb(int memoryLimitInKb) {
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,55,f (memoryLimitInKb < -1) {
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,56,"hrow new IllegalArgumentException(""MemoryLimit must be > -2"");"
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,58,/TODO: do we want to set an absolute upper limit?!
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,59,EMORY_LIMIT_IN_KB = memoryLimitInKb;
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,62,ublic static int getMemoryLimitInKb() {
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,63,eturn MEMORY_LIMIT_IN_KB;
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,66,ublic static void checkLimitInKb(long memoryNeeded) throws MemoryLimitException {
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,67,f (memoryNeeded < 0) {
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,68,"hrow new IllegalArgumentException(""MemoryLimit must be > -1"");"
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,71,f (memoryNeeded >> 10 > Integer.MAX_VALUE) {
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,72,"hrow new MemoryLimitException(memoryNeeded,"
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,73,MEMORY_LIMIT_IN_KB < 0) ? Integer.MAX_VALUE : MEMORY_LIMIT_IN_KB);
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,76,f (MEMORY_LIMIT_IN_KB > -1 && memoryNeeded > MEMORY_LIMIT_IN_KB) {
False,src/main/java/org/apache/commons/compress/MemoryLimit.java,src/main/java/org/apache/commons/compress/MemoryLimit.java,77,"hrow new MemoryLimitException(memoryNeeded, MEMORY_LIMIT_IN_KB);"
False,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,29, <p/>
False,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,30, Set the global memory limit via {@link MemoryLimit#setMemoryLimitInKb(int)}.
False,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,38, @param memoryNeeded estimated memory needed
False,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,39, @param memoryLimit memory limit applied
False,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,41,"ublic MemoryLimitException(long memoryNeeded, int memoryLimit) {"
False,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,42,"uper("""" + memoryNeeded + "" KiB of memory would be needed; limit was """
False,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,43," memoryLimit + "" KiB.  If the file is not corrupt, consider "" +"
False,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,44,"increasing MemoryLimit.MEMORY_LIMIT_IN_KB."");"
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,33,//long instead of int to account for overflow for corrupt files
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,34,private final long memoryNeededInKb;
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,35,private final int memoryLimitInKb;
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,37,"public MemoryLimitException(long memoryNeededInKb, int memoryLimitInKb) {"
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,38,"super(buildMessage(memoryNeededInKb, memoryLimitInKb));"
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,39,this.memoryNeededInKb = memoryNeededInKb;
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,40,this.memoryLimitInKb = memoryLimitInKb;
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,43,"public MemoryLimitException(long memoryNeededInKb, int memoryLimitInKb, Exception e) {"
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,44,"super(buildMessage(memoryNeededInKb, memoryLimitInKb), e);"
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,45,this.memoryNeededInKb = memoryNeededInKb;
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,46,this.memoryLimitInKb = memoryLimitInKb;
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,49,public long getMemoryNeededInKb() {
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,50,return memoryNeededInKb;
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,53,public int getMemoryLimitInKb() {
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,54,return memoryLimitInKb;
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,57,"private static String buildMessage(long memoryNeededInKb, int memoryLimitInKb) {"
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,58,"return """" + memoryNeededInKb + "" kb of memory would be needed; limit was """
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,59,"+ memoryLimitInKb + "" kb. "" +"
True,src/main/java/org/apache/commons/compress/MemoryLimitException.java,src/main/java/org/apache/commons/compress/MemoryLimitException.java,60,"""If the file is not corrupt, consider increasing the memory limit."";"
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,24,mport org.apache.commons.compress.MemoryLimit;
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,36,public LZMACompressorInputStream(final InputStream inputStream)
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,37,throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,38,"in = new LZMAInputStream(inputStream, -1);"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,47,* @param       memoryLimitInKb calculated memory use threshold.  Throws MemoryLimitException
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,48,*                            if calculate memory use is above this threshold
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,46,"                          by this implementation, the underlying"
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,47,                          <code>inputStream</code> throws an exception or
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,48,                          if the calculated memory usage
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,49,                          is &gt; {@link MemoryLimit#MEMORY_LIMIT_IN_KB}.
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,53,"*                          by this implementation, or the underlying"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,54,*                          <code>inputStream</code> throws an exception
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,53,ublic LZMACompressorInputStream(final InputStream inputStream)
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,58,"public LZMACompressorInputStream(final InputStream inputStream, int memoryLimitInKb)"
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,56,"n = new LZMAInputStream(inputStream, MemoryLimit.getMemoryLimitInKb());"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,61,"in = new LZMAInputStream(inputStream, memoryLimitInKb);"
False,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,59,"hrow new MemoryLimitException(e.getMemoryNeeded(), e.getMemoryLimit());"
True,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java,64,"throw new MemoryLimitException(e.getMemoryNeeded(), e.getMemoryLimit(), e);"
False,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,25,mport org.apache.commons.compress.MemoryLimit;
False,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,118, @param maxCodeSize maximum code size
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,117,* First checks that the estimated memory usage is below memoryLimitInKb
False,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,120, @throws MemoryLimitException
False,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,121,"      if the calculated memory usage, based on the maxTableSize,"
False,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,122,      is &gt; {@link MemoryLimit#MEMORY_LIMIT_IN_KB}
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,119,* @param maxCodeSize maximum code size
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,120,* @param memoryLimitInKb maximum allowed estimated memory usage in Kb
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,121,* @throws MemoryLimitException if estimated memory usage is greater than memoryLimitInKb
False,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,124,rotected void initializeTables(final int maxCodeSize) throws MemoryLimitException {
False,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,125,inal int maxTableSize = 1 << maxCodeSize;
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,123,"protected void initializeTables(final int maxCodeSize, final int memoryLimitInKb)"
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,124,throws MemoryLimitException {
False,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,127,/account for potential overflow
False,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,128,ong memoryUsageInBytes = (long)maxTableSize * 6;//(4 (prefixes) + 1 (characters) +1 (outputStack))
False,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,129,emoryLimit.checkLimitInKb(memoryUsageInBytes >> 10);
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,126,if (memoryLimitInKb > -1) {
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,127,final int maxTableSize = 1 << maxCodeSize;
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,128,//account for potential overflow
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,129,long memoryUsageInBytes = (long) maxTableSize * 6;//(4 (prefixes) + 1 (characters) +1 (outputStack))
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,130,long memoryUsageInKb = memoryUsageInBytes >> 10;
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,132,if (memoryUsageInKb > (long)memoryLimitInKb) {
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,133,"throw new MemoryLimitException(memoryUsageInKb, memoryLimitInKb);"
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,136,initializeTables(maxCodeSize);
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,140,* Initializes the arrays based on the maximum code size.
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,141,* @param maxCodeSize maximum code size
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,143,protected void initializeTables(final int maxCodeSize) {
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,144,final int maxTableSize = 1 << maxCodeSize;
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,24,mport org.apache.commons.compress.MemoryLimit;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,97,"this(inputStream, decompressConcatenated, -1);"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,101,* Creates a new input stream that decompresses XZ-compressed data
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,102,* from the specified input stream.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,104,* @param       inputStream where to read the compressed data
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,105,* @param       decompressConcatenated
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,106,"*                          if true, decompress until the end of the"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,107,"*                          input; if false, stop after the first .xz"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,108,*                          stream and leave the input position to point
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,109,*                          to the next byte after the .xz stream
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,110,* @param       memoryLimitInKb memory limit used when reading blocks.  If
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,111,"*                          the estimated memory limit is exceeded on {@link #read()},"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,112,*                          a {@link MemoryLimitException} is thrown.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,114,"* @throws      IOException if the input is not in the .xz format,"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,115,"*                          the input is corrupt or truncated, the .xz"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,116,*                          headers specify options that are not supported
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,117,"*                          by this implementation,"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,118,*                          or the underlying <code>inputStream</code> throws an exception
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,120,* @since 1.14
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,122,"public XZCompressorInputStream(InputStream inputStream,"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,123,"boolean decompressConcatenated, final int memoryLimitInKb)"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,124,throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,100,"n = new XZInputStream(inputStream, MemoryLimit.getMemoryLimitInKb());"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,126,"in = new XZInputStream(inputStream, memoryLimitInKb);"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,102,"n = new SingleXZInputStream(inputStream, MemoryLimit.getMemoryLimitInKb());"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,128,"in = new SingleXZInputStream(inputStream, memoryLimitInKb);"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,113,"hrow new MemoryLimitException(e.getMemoryNeeded(), e.getMemoryLimit());"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,139,"throw new MemoryLimitException(e.getMemoryNeeded(), e.getMemoryLimit(), e);"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,125,"hrow new MemoryLimitException(e.getMemoryNeeded(), e.getMemoryLimit());"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,151,"throw new MemoryLimitException(e.getMemoryNeeded(), e.getMemoryLimit(), e);"
False,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,135,"hrow new MemoryLimitException(e.getMemoryNeeded(), e.getMemoryLimit());"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,161,"throw new MemoryLimitException(e.getMemoryNeeded(), e.getMemoryLimit(), e);"
False,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,41,ublic ZCompressorInputStream(final InputStream inputStream) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,41,"public ZCompressorInputStream(final InputStream inputStream, final int memoryLimitInKb)"
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,42,throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,54,nitializeTables(maxCodeSize);
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,55,"initializeTables(maxCodeSize, memoryLimitInKb);"
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,59,public ZCompressorInputStream(final InputStream inputStream) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,60,"this(inputStream, -1);"
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,9,   http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,15, limitations under the License.
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,19,ackage org.apache.commons.compress;
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,21,mport org.junit.Test;
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,23,ublic class MemoryLimitTest {
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,25,Test(expected = IllegalArgumentException.class)
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,26,ublic void testRangeCheck() throws Exception {
False,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,src/test/java/org/apache/commons/compress/MemoryLimitTest.java,27,emoryLimit.setMemoryLimitInKb(-2);
False,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,228,/unwrap cause to reveal MemoryLimiteException
True,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java,228,//unwrap cause to reveal MemoryLimitException
