is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,29,import java.nio.ByteOrder;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,30,import java.util.Arrays;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,33,import org.apache.commons.compress.utils.BitInputStream;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,34,import org.apache.commons.compress.utils.CloseShieldFilterInputStream;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,58,rivate int bsBuff;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,59,rivate int bsLive;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,64,rivate InputStream in;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,66,private BitInputStream bin;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,128,his.in = in;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,130,"this.bin = new BitInputStream(in == System.in ? new CloseShieldFilterInputStream(in) : in,"
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,131,ByteOrder.BIG_ENDIAN);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,137,f (this.in != null) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,140,if (this.bin != null) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,163,f (this.in == null) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,166,if (this.bin == null) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,231,private int readNextByte(BitInputStream in) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,232,long b = in.readBits(8);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,233,return (int) b;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,229,f (null == in) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,237,if (null == bin) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,233,inal int magic0 = this.in.read();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,241,if (!isFirstStream) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,242,bin.clearBitCache();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,245,final int magic0 = readNextByte(this.bin);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,237,inal int magic1 = this.in.read();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,238,inal int magic2 = this.in.read();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,249,final int magic1 = readNextByte(this.bin);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,250,final int magic2 = readNextByte(this.bin);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,246,inal int blockSize = this.in.read();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,258,final int blockSize = readNextByte(this.bin);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,253,his.bsLive = 0;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,271,BitInputStream bin = this.bin;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,269,agic0 = bsGetUByte();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,270,agic1 = bsGetUByte();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,271,agic2 = bsGetUByte();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,272,agic3 = bsGetUByte();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,273,agic4 = bsGetUByte();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,274,agic5 = bsGetUByte();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,281,magic0 = bsGetUByte(bin);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,282,magic1 = bsGetUByte(bin);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,283,magic2 = bsGetUByte(bin);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,284,magic3 = bsGetUByte(bin);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,285,magic4 = bsGetUByte(bin);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,286,magic5 = bsGetUByte(bin);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,300,his.storedBlockCRC = bsGetInt();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,301,his.blockRandomised = bsR(1) == 1;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,312,this.storedBlockCRC = bsGetInt(bin);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,313,"this.blockRandomised = bsR(bin, 1) == 1;"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,338,his.storedCombinedCRC = bsGetInt();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,350,this.storedCombinedCRC = bsGetInt(bin);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,353,inal InputStream inShadow = this.in;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,365,final BitInputStream inShadow = this.bin;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,356,f (inShadow != System.in) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,357,nShadow.close();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,368,inShadow.close();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,361,his.in = null;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,371,this.bin = null;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,366,rivate int bsR(final int n) throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,367,nt bsLiveShadow = this.bsLive;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,368,nt bsBuffShadow = this.bsBuff;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,370,f (bsLiveShadow < n) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,371,inal InputStream inShadow = this.in;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,372,o {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,373,inal int thech = inShadow.read();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,375,f (thech < 0) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,376,"hrow new IOException(""unexpected end of stream"");"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,379,sBuffShadow = (bsBuffShadow << 8) | thech;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,380,sLiveShadow += 8;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,381, while (bsLiveShadow < n);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,383,his.bsBuff = bsBuffShadow;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,377,* read bits from the input stream
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,378,"* @param n the number of bits to read, must not exceed 32?"
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,379,* @return
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,380,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,382,"private static int bsR(BitInputStream bin, final int n) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,383,long thech = bin.readBits(n);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,384,if (thech < 0) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,385,"throw new IOException(""unexpected end of stream"");"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,386,his.bsLive = bsLiveShadow - n;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,387,eturn (bsBuffShadow >> (bsLiveShadow - n)) & ((1 << n) - 1);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,387,return (int) thech;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,390,rivate boolean bsGetBit() throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,391,eturn bsR(1) != 0;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,390,private static boolean bsGetBit(BitInputStream bin) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,391,"return bsR(bin, 1) != 0;"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,394,rivate char bsGetUByte() throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,395,eturn (char) bsR(8);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,394,private static char bsGetUByte(BitInputStream bin) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,395,"return (char) bsR(bin, 8);"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,398,rivate int bsGetInt() throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,399,eturn (((((bsR(8) << 8) | bsR(8)) << 8) | bsR(8)) << 8) | bsR(8);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,398,private static int bsGetInt(BitInputStream bin) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,399,"return (int) bsR(bin, 32);"
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,444,final BitInputStream bin = this.bin;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,454,f (bsGetBit()) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,455,if (bsGetBit(bin)) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,459,or (int i = 256; --i >= 0;) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,460,nUse[i] = false;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,460,"Arrays.fill(inUse, false);"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,467,f (bsGetBit()) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,465,if (bsGetBit(bin)) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,478,inal int nGroups = bsR(3);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,479,inal int nSelectors = bsR(15);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,475,"final int nGroups = bsR(bin, 3);"
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,476,"final int nSelectors = bsR(bin, 15);"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,483,hile (bsGetBit()) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,480,while (bsGetBit(bin)) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,510,nt curr = bsR(5);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,507,"int curr = bsR(bin, 5);"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,513,hile (bsGetBit()) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,514,urr += bsGetBit() ? -1 : 1;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,510,while (bsGetBit(bin)) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,511,curr += bsGetBit(bin) ? -1 : 1;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,556,his.origPtr = bsR(24);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,553,final BitInputStream bin = this.bin;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,554,"this.origPtr = bsR(bin, 24);"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,559,inal InputStream inShadow = this.in;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,586,nt bsBuffShadow = this.bsBuff;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,587,nt bsLiveShadow = this.bsLive;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,621,/ Inlined:
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,622,/ int zvec = bsR(zn);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,623,hile (bsLiveShadow < zn) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,624,inal int thech = inShadow.read();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,625,f (thech >= 0) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,626,sBuffShadow = (bsBuffShadow << 8) | thech;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,627,sLiveShadow += 8;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,628,ontinue;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,630,"hrow new IOException(""unexpected end of stream"");"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,632,nt zvec = (bsBuffShadow >> (bsLiveShadow - zn))
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,633, ((1 << zn) - 1);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,634,sLiveShadow -= zn;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,636,hile (zvec > limit_zt[zn]) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,615,"int zvec = (int) bsR(bin, zn);"
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,616,while(zvec > limit_zt[zn]) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,638,hile (bsLiveShadow < 1) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,639,inal int thech = inShadow.read();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,640,f (thech >= 0) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,641,sBuffShadow = (bsBuffShadow << 8) | thech;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,642,sLiveShadow += 8;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,643,ontinue;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,645,hrow new IOException(
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,646,"unexpected end of stream"");"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,648,sLiveShadow--;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,649,vec = (zvec << 1)
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,650, ((bsBuffShadow >> bsLiveShadow) & 1);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,618,"zvec = (zvec << 1) | bsR(bin, 1);"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,702,/ Inlined:
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,703,/ int zvec = bsR(zn);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,704,hile (bsLiveShadow < zn) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,705,inal int thech = inShadow.read();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,706,f (thech >= 0) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,707,sBuffShadow = (bsBuffShadow << 8) | thech;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,708,sLiveShadow += 8;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,709,ontinue;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,711,"hrow new IOException(""unexpected end of stream"");"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,713,nt zvec = (bsBuffShadow >> (bsLiveShadow - zn))
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,714, ((1 << zn) - 1);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,715,sLiveShadow -= zn;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,717,hile (zvec > limit_zt[zn]) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,669,"int zvec = (int) bsR(bin, zn);"
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,670,while(zvec > limit_zt[zn]) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,719,hile (bsLiveShadow < 1) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,720,inal int thech = inShadow.read();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,721,f (thech >= 0) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,722,sBuffShadow = (bsBuffShadow << 8) | thech;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,723,sLiveShadow += 8;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,724,ontinue;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,726,"hrow new IOException(""unexpected end of stream"");"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,728,sLiveShadow--;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,729,vec = (zvec << 1) | ((bsBuffShadow >> bsLiveShadow) & 1);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,672,"zvec = (zvec << 1) | (int) bsR(bin, 1);"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,736,his.bsLive = bsLiveShadow;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,737,his.bsBuff = bsBuffShadow;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,741,inal InputStream inShadow = this.in;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,746,nt zvec = bsR(zn);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,747,nt bsLiveShadow = this.bsLive;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,748,nt bsBuffShadow = this.bsBuff;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,686,"int zvec = bsR(bin, zn);"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,752,hile (bsLiveShadow < 1) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,753,inal int thech = inShadow.read();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,755,f (thech >= 0) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,756,sBuffShadow = (bsBuffShadow << 8) | thech;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,757,sLiveShadow += 8;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,758,ontinue;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,760,"hrow new IOException(""unexpected end of stream"");"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,762,sLiveShadow--;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,763,vec = (zvec << 1) | ((bsBuffShadow >> bsLiveShadow) & 1);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,689,"zvec = (zvec << 1) | (int) bsR(bin, 1);"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,766,his.bsLive = bsLiveShadow;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,767,his.bsBuff = bsBuffShadow;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,85,hile (bitsCachedSize < count && bitsCachedSize < 57) {
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,86,inal long nextByte = in.read();
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,87,f (nextByte < 0) {
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,88,eturn nextByte;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,85,if (ensureCache(count)) {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,86,return -1;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,89,if (bitsCachedSize < count) {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,90,return processBitsGreater57(count);
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,91,} else {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,92,final long bitsOut;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,91,itsCached |= (nextByte << bitsCachedSize);
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,94,bitsOut = (bitsCached & MASKS[count]);
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,95,bitsCached >>>= count;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,93,itsCached <<= 8;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,94,itsCached |= nextByte;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,97,bitsOut = (bitsCached >> (bitsCachedSize - count)) & MASKS[count];
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,96,itsCachedSize += 8;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,99,bitsCachedSize -= count;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,100,return bitsOut;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,104,private long processBitsGreater57(final int count) throws IOException {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,105,final long bitsOut;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,100,f (bitsCachedSize < count) {
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,101,/ bitsCachedSize >= 57 and left-shifting it 8 bits would cause an overflow
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,102,nt bitsToAddCount = count - bitsCachedSize;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,103,verflowBits = 8 - bitsToAddCount;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,109,// bitsCachedSize >= 57 and left-shifting it 8 bits would cause an overflow
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,110,int bitsToAddCount = count - bitsCachedSize;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,111,overflowBits = 8 - bitsToAddCount;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,112,final long nextByte = in.read();
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,113,if (nextByte < 0) {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,114,return nextByte;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,116,if (byteOrder == ByteOrder.LITTLE_ENDIAN) {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,117,long bitsToAdd = nextByte & MASKS[bitsToAddCount];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,118,bitsCached |= (bitsToAdd << bitsCachedSize);
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,119,overflow = (nextByte >>> bitsToAddCount) & MASKS[overflowBits];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,120,} else {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,121,bitsCached <<= bitsToAddCount;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,122,long bitsToAdd = (nextByte >>> (overflowBits)) & MASKS[bitsToAddCount];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,123,bitsCached |= bitsToAdd;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,124,overflow = nextByte & MASKS[overflowBits];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,126,bitsOut = bitsCached & MASKS[count];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,127,bitsCached = overflow;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,128,bitsCachedSize = overflowBits;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,129,return bitsOut;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,133,* Fills the cache up to 56 bits
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,134,* @param count
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,135,"* @return return true, when EOF"
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,136,* @throws IOException
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,138,private boolean ensureCache(final int count) throws IOException {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,139,while (bitsCachedSize < count && bitsCachedSize < 57) {
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,106,eturn nextByte;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,108,f (byteOrder == ByteOrder.LITTLE_ENDIAN) {
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,109,ong bitsToAdd = nextByte & MASKS[bitsToAddCount];
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,110,itsCached |= (bitsToAdd << bitsCachedSize);
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,111,verflow = (nextByte >>> bitsToAddCount) & MASKS[overflowBits];
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,112, else {
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,113,itsCached <<= bitsToAddCount;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,114,ong bitsToAdd = (nextByte >>> (overflowBits)) & MASKS[bitsToAddCount];
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,115,itsCached |= bitsToAdd;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,116,verflow = nextByte & MASKS[overflowBits];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,142,return true;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,118,itsCachedSize = count;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,121,inal long bitsOut;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,122,f (overflowBits == 0) {
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,124,itsOut = (bitsCached & MASKS[count]);
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,125,itsCached >>>= count;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,145,bitsCached |= (nextByte << bitsCachedSize);
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,127,itsOut = (bitsCached >> (bitsCachedSize - count)) & MASKS[count];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,147,bitsCached <<= 8;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,148,bitsCached |= nextByte;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,129,itsCachedSize -= count;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,130, else {
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,131,itsOut = bitsCached & MASKS[count];
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,132,itsCached = overflow;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,133,itsCachedSize = overflowBits;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,150,bitsCachedSize += 8;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,135,eturn bitsOut;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,152,return false;
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,20,package org.apache.commons.compress.utils;
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,22,import java.io.FilterInputStream;
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,23,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,24,import java.io.InputStream;
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,27,* Re-implements {@link FilterInputStream#close()} to do nothing.
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,28,* @since 1.14
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,30,public class CloseShieldFilterInputStream extends FilterInputStream {
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,32,public CloseShieldFilterInputStream(InputStream in) {
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,33,super(in);
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,36,@Override
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,37,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java,38,// NO IMPLEMENTATION.
