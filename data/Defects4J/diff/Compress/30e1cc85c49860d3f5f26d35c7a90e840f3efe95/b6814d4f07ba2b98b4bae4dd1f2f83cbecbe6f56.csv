is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,4,*  this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,7,*  the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,14,*  See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,15,*  limitations under the License.
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,19,package org.apache.commons.compress.archivers.zip;
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,21,import java.util.zip.ZipException;
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,24,* Exception thrown when attempting to read or write data for a zip
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,25,* entry that uses ZIP features not supported by this library.
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,26,* @since Commons Compress 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,28,public class UnsupportedZipFeatureException extends ZipException {
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,30,private final Feature reason;
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,31,private final ZipArchiveEntry entry;
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,34,* Creates an exception.
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,35,* @param the feature that is not supported
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,36,* @param the entry using the feature
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,38,"public UnsupportedZipFeatureException(Feature reason,"
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,39,ZipArchiveEntry entry) {
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,40,"super(""unsupported feature "" + reason +  "" used in entry """
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,41,+ entry.getName());
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,42,this.reason = reason;
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,43,this.entry = entry;
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,47,* The unsupported feature that has been used.
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,49,public Feature getFeature() {
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,50,return reason;
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,54,* The entry using the unsupported feature.
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,56,public ZipArchiveEntry getEntry() {
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,57,return entry;
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,61,* ZIP Features that may or may not be supported.
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,62,* @since Commons Compress 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,64,public static class Feature {
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,66,* The entry is encrypted.
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,68,"public static Feature ENCRYPTION = new Feature(""encryption"");"
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,70,* The entry used an unsupported compression method.
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,72,"public static Feature METHOD = new Feature(""compression method"");"
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,74,private final String name;
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,76,private Feature(String name) {
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,77,this.name = name;
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,80,public String toString() {
True,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java,81,return name;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,215,tatic void checkRequestedFeatures(ZipArchiveEntry ze) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,215,static void checkRequestedFeatures(ZipArchiveEntry ze)
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,216,throws UnsupportedZipFeatureException {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,217,"hrow new IOException(""Encryption is not supported, used in """
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,218," ""entry "" + ze.getName());"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,218,throw
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,219,new UnsupportedZipFeatureException(UnsupportedZipFeatureException
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,220,".Feature.ENCRYPTION, ze);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,221,"hrow new IOException(""Unsupported compression method """
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,222," ze.getMethod() + "" in ZIP archive entry """
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,223, ze.getName());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,223,throw
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,224,new UnsupportedZipFeatureException(UnsupportedZipFeatureException
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java,225,".Feature.METHOD, ze);"
False,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,45, catch (IOException ex) {
False,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,46,"ssertTrue(ex.getMessage().indexOf(""Encryption"") >= 0);"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,45,} catch (UnsupportedZipFeatureException ex) {
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,46,"assertSame(UnsupportedZipFeatureException.Feature.ENCRYPTION,"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,47,ex.getFeature());
False,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,69, catch (IOException ex) {
False,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,70,"ssertTrue(ex.getMessage().indexOf(""Encryption"") >= 0);"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,70,} catch (UnsupportedZipFeatureException ex) {
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,71,"assertSame(UnsupportedZipFeatureException.Feature.ENCRYPTION,"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,72,ex.getFeature());
