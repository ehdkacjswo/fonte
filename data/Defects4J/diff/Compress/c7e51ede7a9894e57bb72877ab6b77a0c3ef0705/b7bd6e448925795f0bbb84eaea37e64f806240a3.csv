is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,77,private boolean encrypted;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,78,private boolean stronglyEncrypted;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,496,* Whether the entry is encrypted.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,497,* @since Apache Commons Compress 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,499,public boolean isEncrypted() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,500,return encrypted;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,504,* Whether the entry is encrypted using strong encryption.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,505,* @since Apache Commons Compress 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,507,public boolean isStronglyEncrypted() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,508,return stronglyEncrypted && encrypted;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,512,* Whether the entry is encrypted.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,513,* @since Apache Commons Compress 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,515,public void setEncrypted(boolean b) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,516,encrypted = b;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,520,* Whether the entry is encrypted using strong encryption.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,521,* @since Apache Commons Compress 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,523,public void setStronglyEncrypted(boolean b) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,524,stronglyEncrypted = b;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,525,if (b) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,526,setEncrypted(true);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,142,current.setEncrypted(gpFlag.usesEncryption());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,143,current.setStronglyEncrypted(gpFlag.usesStrongEncryption());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,193,* Whether this class is able to read the given entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,195,* <p>May return false if it is set up to use encryption or a
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,196,* compression method that hasn't been implemented yet.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,197,* @since Apache Commons Compress 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,199,public boolean canRead(ZipArchiveEntry ze) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,200,return !ze.isEncrypted() &&
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,201,(ze.getMethod() == ZipArchiveEntry.STORED
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,202,|| ze.getMethod() == ZipArchiveEntry.DEFLATED);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,201,f (!current.isSupportedCompressionMethod()) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,216,if (current.isEncrypted()) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,217,"throw new IOException(""Encryption is not supported, used in """
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,218,"+ ""entry "" + current.getName());"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,220,if (current.getMethod() != ZipArchiveEntry.STORED
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,221,&& current.getMethod() != ZipArchiveEntry.DEFLATED) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,508,* Whether this stream is able to write the given entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,510,* <p>May return false if it is set up to use encryption or a
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,511,* compression method that hasn't been implemented yet.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,512,* @since Apache Commons Compress 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,514,public boolean canWrite(ZipArchiveEntry ze) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,515,return !ze.isEncrypted() &&
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,516,(ze.getMethod() == STORED || ze.getMethod() == DEFLATED);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,515,f (!entry.isSupportedCompressionMethod()) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,527,if (entry.isEncrypted()) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,528,"throw new IOException(""Encryption is not supported, used in entry """
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,529,+ entry.getName());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,531,if (entry.getMethod() != STORED && entry.getMethod() != DEFLATED) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,519, else if (entry.getMethod() == DEFLATED) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,536,if (entry.getMethod() == DEFLATED) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,247,* Whether this class is able to read the given entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,249,* <p>May return false if it is set up to use encryption or a
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,250,* compression method that hasn't been implemented yet.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,251,* @since Apache Commons Compress 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,253,public boolean canRead(ZipArchiveEntry ze) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,254,return !ze.isEncrypted() &&
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,255,(ze.getMethod() == ZipArchiveEntry.STORED
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,256,|| ze.getMethod() == ZipArchiveEntry.DEFLATED);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,273,if (ze.isEncrypted()) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,274,"throw new IOException(""Encryption is not supported, used in """
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,275,"+ ""entry "" + ze.getName());"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,277,if (ze.getMethod() != ZipArchiveEntry.STORED
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,278,&& ze.getMethod() != ZipArchiveEntry.DEFLATED) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,279,"throw new IOException(""Unsupported compression method """
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,280,"+ ze.getMethod() + "" in ZIP archive entry """
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,281,+ ze.getName());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,359,ze.setEncrypted(gpFlag.usesEncryption());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,360,ze.setStronglyEncrypted(gpFlag.usesStrongEncryption());
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,4,*  this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,7,*  the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,14,*  See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,15,*  limitations under the License.
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,19,package org.apache.commons.compress.archivers.zip;
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,23,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,24,import java.net.URI;
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,25,import java.net.URISyntaxException;
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,26,import java.net.URL;
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,27,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,29,public class EncryptedArchiveTest extends TestCase {
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,31,public void testReadPasswordEncryptedEntryViaZipFile()
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,32,"throws IOException, URISyntaxException {"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,33,"URL zip = getClass().getResource(""/password-encrypted.zip"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,34,File file = new File(new URI(zip.toString()));
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,35,ZipFile zf = null;
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,36,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,37,zf = new ZipFile(file);
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,38,"ZipArchiveEntry zae = zf.getEntry(""LICENSE.txt"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,39,assertTrue(zae.isEncrypted());
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,40,assertFalse(zae.isStronglyEncrypted());
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,41,assertFalse(zf.canRead(zae));
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,42,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,43,zf.getInputStream(zae);
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,44,"fail(""expected an exception"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,45,} catch (IOException ex) {
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,46,"assertTrue(ex.getMessage().indexOf(""Encryption"") >= 0);"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,48,} finally {
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,49,ZipFile.closeQuietly(zf);
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,53,public void testReadPasswordEncryptedEntryViaStream()
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,54,"throws IOException, URISyntaxException {"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,55,"URL zip = getClass().getResource(""/password-encrypted.zip"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,56,File file = new File(new URI(zip.toString()));
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,57,ZipArchiveInputStream zin = null;
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,58,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,59,zin = new ZipArchiveInputStream(new FileInputStream(file));
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,60,ZipArchiveEntry zae = zin.getNextZipEntry();
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,61,"assertEquals(""LICENSE.txt"", zae.getName());"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,62,assertTrue(zae.isEncrypted());
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,63,assertFalse(zae.isStronglyEncrypted());
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,64,assertFalse(zin.canRead(zae));
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,65,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,66,byte[] buf = new byte[1024];
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,67,"zin.read(buf, 0, buf.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,68,"fail(""expected an exception"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,69,} catch (IOException ex) {
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,70,"assertTrue(ex.getMessage().indexOf(""Encryption"") >= 0);"
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,72,} finally {
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,73,if (zin != null) {
True,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java,74,zin.close();
