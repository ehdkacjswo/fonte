is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,85,hile (bitsCachedSize < count) {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,85,while (bitsCachedSize < count && bitsCachedSize < 57) {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,98,int overflowBits = 0;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,99,long overflow = 0l;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,100,if (bitsCachedSize < count) {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,101,// bitsCachedSize >= 57 and left-shifting it 8 bits would cause an overflow
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,102,int bitsToAddCount = count - bitsCachedSize;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,103,overflowBits = 8 - bitsToAddCount;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,104,final long nextByte = in.read();
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,105,if (nextByte < 0) {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,106,return nextByte;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,108,if (byteOrder == ByteOrder.LITTLE_ENDIAN) {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,109,long bitsToAdd = nextByte & MASKS[bitsToAddCount];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,110,bitsCached |= (bitsToAdd << bitsCachedSize);
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,111,overflow = (nextByte >>> bitsToAddCount) & MASKS[overflowBits];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,112,} else {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,113,bitsCached <<= bitsToAddCount;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,114,long bitsToAdd = (nextByte >>> (overflowBits)) & MASKS[bitsToAddCount];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,115,bitsCached |= bitsToAdd;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,116,overflow = nextByte & MASKS[overflowBits];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,118,bitsCachedSize = count;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,100,f (byteOrder == ByteOrder.LITTLE_ENDIAN) {
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,101,itsOut = (bitsCached & MASKS[count]);
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,102,itsCached >>>= count;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,122,if (overflowBits == 0) {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,123,if (byteOrder == ByteOrder.LITTLE_ENDIAN) {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,124,bitsOut = (bitsCached & MASKS[count]);
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,125,bitsCached >>>= count;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,126,} else {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,127,bitsOut = (bitsCached >> (bitsCachedSize - count)) & MASKS[count];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,129,bitsCachedSize -= count;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,104,itsOut = (bitsCached >> (bitsCachedSize - count)) & MASKS[count];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,131,bitsOut = bitsCached & MASKS[count];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,132,bitsCached = overflow;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,133,bitsCachedSize = overflowBits;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,106,itsCachedSize -= count;
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,122,"* @see ""https://issues.apache.org/jira/browse/COMPRESS-363"""
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,124,@Test
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,125,public void littleEndianWithOverflow() throws Exception {
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,126,ByteArrayInputStream in = new ByteArrayInputStream(new byte[] {
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,127,"87, // 01010111"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,128,"45, // 00101101"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,129,"66, // 01000010"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,130,"15, // 00001111"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,131,"90, // 01011010"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,132,"29, // 00011101"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,133,"88, // 01011000"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,134,"61, // 00111101"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,135,"33, // 00100001"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,136,74  // 01001010
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,138,"BitInputStream bin = new BitInputStream(in, ByteOrder.LITTLE_ENDIAN);"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,139,"assertEquals(23, // 10111"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,140,bin.readBits(5));
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,141,"assertEquals(714595605644185962l, // 0001-00111101-01011000-00011101-01011010-00001111-01000010-00101101-010"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,142,bin.readBits(63));
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,143,"assertEquals(1186, // 01001010-0010"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,144,bin.readBits(12));
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,145,"assertEquals(-1 , bin.readBits(1));"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,148,@Test
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,149,public void bigEndianWithOverflow() throws Exception {
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,150,ByteArrayInputStream in = new ByteArrayInputStream(new byte[] {
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,151,"87, // 01010111"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,152,"45, // 00101101"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,153,"66, // 01000010"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,154,"15, // 00001111"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,155,"90, // 01011010"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,156,"29, // 00011101"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,157,"88, // 01011000"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,158,"61, // 00111101"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,159,"33, // 00100001"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,160,74  // 01001010
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,162,"BitInputStream bin = new BitInputStream(in, ByteOrder.BIG_ENDIAN);"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,163,"assertEquals(10, // 01010"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,164,bin.readBits(5));
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,165,"assertEquals(8274274654740644818l, //111-00101101-01000010-00001111-01011010-00011101-01011000-00111101-0010"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,166,bin.readBits(63));
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,167,"assertEquals(330, // 0001-01001010"
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,168,bin.readBits(12));
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,169,"assertEquals(-1 , bin.readBits(1));"
