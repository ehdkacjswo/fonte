is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,63,  <dt><code>minMatchSize</code></dt>
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,64,  <dd>Minimal size of a match found. A true minimum of 3 is
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,65,  hard-coded inside of this implemention but bigger sizes can be
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,63,*  <dt><code>minMatchLength</code></dt>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,64,*  <dd>Minimal length of a match found. A true minimum of 3 is
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,65,*  hard-coded inside of this implemention but bigger lengths can be
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,68,  <dt><code>maxMatchSize</code></dt>
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,69,  <dd>Maximal size of a match found.</dd>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,68,*  <dt><code>maxMatchLength</code></dt>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,69,*  <dd>Maximal length of a match found.</dd>
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,74,  <dt><code>maxLiteralSize</code></dt>
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,75,  <dd>Maximal size of a literal block.</dd>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,74,*  <dt><code>maxLiteralLength</code></dt>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,75,*  <dd>Maximal length of a literal block.</dd>
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,311,f (!initialized && lookahead >= params.getMinMatchSize()) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,311,if (!initialized && lookahead >= params.getMinMatchLength()) {
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,343,inal int minMatch = params.getMinMatchSize();
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,343,final int minMatch = params.getMinMatchLength();
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,368,f (currentPosition - blockStart >= params.getMaxLiteralSize()) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,368,if (currentPosition - blockStart >= params.getMaxLiteralLength()) {
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,425,inal int minLength = params.getMinMatchSize();
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,425,final int minLength = params.getMinMatchLength();
False,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,427,"inal int maxPossibleLength = Math.min(params.getMaxMatchSize(), lookahead);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,427,"final int maxPossibleLength = Math.min(params.getMaxMatchLength(), lookahead);"
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,25,ublic static final int TRUE_MIN_MATCH_SIZE = LZ77Compressor.NUMBER_OF_BYTES_IN_HASH;
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,26,"rivate final int windowSize, minMatchSize, maxMatchSize, maxOffset, maxLiteralSize;"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,25,public static final int TRUE_MIN_MATCH_LENGTH = LZ77Compressor.NUMBER_OF_BYTES_IN_HASH;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,26,"private final int windowSize, minMatchLength, maxMatchLength, maxOffset, maxLiteralLength;"
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,30, <code>minMatchSize</code> of 3 and <code>max*Size</code>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,30,* <code>minMatchLength</code> of 3 and <code>max*Length</code>
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,36, is smaller than <code>minMatchSize</code>.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,36,* is smaller than <code>minMatchLength</code>.
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,39,"his(windowSize, TRUE_MIN_MATCH_SIZE, windowSize, windowSize, windowSize);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,39,"this(windowSize, TRUE_MIN_MATCH_LENGTH, windowSize, windowSize, windowSize);"
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,48, @param minMatchSize the minimal size of a match found. A
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,48,* @param minMatchLength the minimal length of a match found. A
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,50, but bigger sizes can be configured.
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,51, @param maxMatchSize maximal site of a match found. A value
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,52, smaller than <code>minMatchSize</code> is interpreted as
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,50,* but bigger lengths can be configured.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,51,* @param maxMatchLength maximal site of a match found. A value
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,52,* smaller than <code>minMatchLength</code> is interpreted as
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,56, @param maxLiteralSize maximal size of a literal block. Negative
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,56,* @param maxLiteralLength maximal length of a literal block. Negative
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,60, smaller than <code>minMatchSize</code> or not a power of two.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,60,* smaller than <code>minMatchLength</code> or not a power of two.
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,62,"ublic Parameters(int windowSize, int minMatchSize, int maxMatchSize,"
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,63,"nt maxOffset, int maxLiteralSize) {"
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,64,"his.minMatchSize = Math.max(TRUE_MIN_MATCH_SIZE, minMatchSize);"
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,65,f (windowSize < this.minMatchSize) {
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,66,"hrow new IllegalArgumentException(""windowSize must be at least as big as minMatchSize"");"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,62,"public Parameters(int windowSize, int minMatchLength, int maxMatchLength,"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,63,"int maxOffset, int maxLiteralLength) {"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,64,"this.minMatchLength = Math.max(TRUE_MIN_MATCH_LENGTH, minMatchLength);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,65,if (windowSize < this.minMatchLength) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,66,"throw new IllegalArgumentException(""windowSize must be at least as big as minMatchLength"");"
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,74,his.maxMatchSize = maxMatchSize < this.minMatchSize ? Integer.MAX_VALUE
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,75, maxMatchSize;
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,76,his.maxLiteralSize = maxLiteralSize < 1 || maxLiteralSize > 2 * windowSize
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,77, windowSize : maxLiteralSize;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,74,this.maxMatchLength = maxMatchLength < this.minMatchLength ? Integer.MAX_VALUE
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,75,: maxMatchLength;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,76,this.maxLiteralLength = maxLiteralLength < 1 || maxLiteralLength > 2 * windowSize
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,77,? windowSize : maxLiteralLength;
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,88, Gets the minimal size of a match found.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,88,* Gets the minimal length of a match found.
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,90,ublic int getMinMatchSize() {
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,91,eturn minMatchSize;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,90,public int getMinMatchLength() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,91,return minMatchLength;
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,94, Gets the maximal size of a match found.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,94,* Gets the maximal length of a match found.
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,96,ublic int getMaxMatchSize() {
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,97,eturn maxMatchSize;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,96,public int getMaxMatchLength() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,97,return maxMatchLength;
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,106, Gets the maximal size of a literal block.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,106,* Gets the maximal length of a literal block.
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,108,ublic int getMaxLiteralSize() {
False,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,109,eturn maxLiteralSize;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,108,public int getMaxLiteralLength() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,109,return maxLiteralLength;
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,31,"ssertEquals(3, p.getMinMatchSize());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,32,"ssertEquals(128, p.getMaxMatchSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,31,"assertEquals(3, p.getMinMatchLength());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,32,"assertEquals(128, p.getMaxMatchLength());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,34,"ssertEquals(128, p.getMaxLiteralSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,34,"assertEquals(128, p.getMaxLiteralLength());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,38,ublic void minMatchSizeIsAtLeastThree() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,38,public void minMatchLengthIsAtLeastThree() {
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,40,"ssertEquals(3, p.getMinMatchSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,40,"assertEquals(3, p.getMinMatchLength());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,44,ublic void maxMatchSizeIsInfiniteWhenSmallerThanMinMatchSize() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,44,public void maxMatchLengthIsInfiniteWhenSmallerThanMinMatchLength() {
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,46,"ssertEquals(Integer.MAX_VALUE, p.getMaxMatchSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,46,"assertEquals(Integer.MAX_VALUE, p.getMaxMatchLength());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,50,ublic void maxMatchSizeIsMinMatchSizeIfBothAreEqual() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,50,public void maxMatchLengthIsMinMatchLengthIfBothAreEqual() {
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,52,"ssertEquals(3, p.getMaxMatchSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,52,"assertEquals(3, p.getMaxMatchLength());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,74,ublic void maxLiteralSizeIsWindowSizeIfSetTo0() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,74,public void maxLiteralLengthIsWindowSizeIfSetTo0() {
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,76,"ssertEquals(128, p.getMaxLiteralSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,76,"assertEquals(128, p.getMaxLiteralLength());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,80,ublic void maxLiteralSizeIsWindowSizeIfSetToANegativeValue() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,80,public void maxLiteralLengthIsWindowSizeIfSetToANegativeValue() {
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,82,"ssertEquals(128, p.getMaxLiteralSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,82,"assertEquals(128, p.getMaxLiteralLength());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,86,ublic void maxLiteralSizeIsWindowSizeIfSetToAValueTooBigToHoldInSlidingWindow() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,86,public void maxLiteralLengthIsWindowSizeIfSetToAValueTooBigToHoldInSlidingWindow() {
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,88,"ssertEquals(128, p.getMaxLiteralSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,88,"assertEquals(128, p.getMaxLiteralLength());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,95,"ssertEquals(4, p.getMinMatchSize());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,96,"ssertEquals(5, p.getMaxMatchSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,95,"assertEquals(4, p.getMinMatchLength());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,96,"assertEquals(5, p.getMaxMatchLength());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,98,"ssertEquals(7, p.getMaxLiteralSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,98,"assertEquals(7, p.getMaxLiteralLength());"
False,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,102,ublic void windowSizeMustNotBeSmallerThanMinMatchSize() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,102,public void windowSizeMustNotBeSmallerThanMinMatchLength() {
